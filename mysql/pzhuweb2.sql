/*
 Navicat Premium Data Transfer

 Source Server         : zhangfan
 Source Server Type    : MySQL
 Source Server Version : 80023
 Source Host           : localhost:3306
 Source Schema         : pzhuweb2

 Target Server Type    : MySQL
 Target Server Version : 80023
 File Encoding         : 65001

 Date: 20/01/2023 16:36:36
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for achievement
-- ----------------------------
DROP TABLE IF EXISTS `achievement`;
CREATE TABLE `achievement`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `userid` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `title` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `typeid` int(0) NULL DEFAULT NULL,
  `introduction` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `posterlink` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `achievementlink` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL,
  `attachment` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `status` tinyint(1) NULL DEFAULT 0,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  `show` int(0) NULL DEFAULT 0,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `userid`(`userid`) USING BTREE,
  INDEX `typeid`(`typeid`) USING BTREE,
  CONSTRAINT `achievement_ibfk_1` FOREIGN KEY (`userid`) REFERENCES `user_info` (`id`) ON DELETE SET NULL ON UPDATE CASCADE,
  CONSTRAINT `achievement_ibfk_2` FOREIGN KEY (`typeid`) REFERENCES `achievement_type` (`id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE = InnoDB AUTO_INCREMENT = 195 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of achievement
-- ----------------------------
INSERT INTO `achievement` VALUES (21, '201610804032', '转角咖啡店', 3, '一个咖啡店的网站', 'http://img.pzhuweb.cn/2016108040321561778585944.png', 'http://www.pzhuweb.cn/program/coff/', NULL, 1, '2019-06-26 00:00:00', '2019-06-26 00:00:00', 0);
INSERT INTO `achievement` VALUES (22, '0002250', '地方应用型本科院校C语言课程改革探讨', 1, '结合国内教育趋势、工程认证要求以及人才培养规划,阐述了目前地方应用型本科院校的C语言程序设计在课程设置与教学方式上存在的问题。针对这些问题进行了探讨并提出了一些解决思路。 ', 'http://img.pzhuweb.cn/00022501561558237048.png', '', 'http://img.pzhuweb.cn/00022501561558123650.pdf', 0, '2018-01-15 00:00:00', '2019-06-26 00:00:00', 0);
INSERT INTO `achievement` VALUES (23, '201610804032', '基于React和Egg的创新团队管理系统的研究与设计', 6, '罗文负责的2019年大学生创新创业项目。', 'http://img.pzhuweb.cn/00022501561719648334.png', '', 'http://img.pzhuweb.cn/00022501561719421844.pdf', 1, '2019-06-28 00:00:00', '2019-06-28 00:00:00', 0);
INSERT INTO `achievement` VALUES (24, '201610804025', '基于JS的NP完全问题自动求解算法研究及其对比分析', 6, '任云宏负责的2019年度攀枝花学院大学生创新创业项目。', 'http://img.pzhuweb.cn/00022501561719724125.png', '', 'http://img.pzhuweb.cn/00022501561719731056.pdf', 1, '2019-06-28 00:00:00', '2019-06-28 00:00:00', 0);
INSERT INTO `achievement` VALUES (25, '201610804032', '2019年中国大学生计算机设计大赛四川省级赛', 4, '获奖者：刘星，罗文', 'http://img.pzhuweb.cn/00022501561719872080.png', '', 'http://img.pzhuweb.cn/00022501561719959968.pdf', 1, '2019-05-10 00:00:00', '2019-06-28 00:00:00', 0);
INSERT INTO `achievement` VALUES (26, '0002250', '《WEB应用开发与实践》混合式课程建设', 8, '攀枝花学院混合式教学课程建设项目', 'http://img.pzhuweb.cn/00022501561720261707.png', '', 'http://img.pzhuweb.cn/00022501561720264533.pdf', 1, '2017-12-28 00:00:00', '2019-06-28 00:00:00', 0);
INSERT INTO `achievement` VALUES (27, '201610804032', '基于Node.js的创新团队管理系统的设计与实现', 1, '此论文由罗文、刘星完成。', 'http://img.pzhuweb.cn/2016108040321561778280771.png', '', 'http://img.pzhuweb.cn/2016108040321561778274676.pdf', 1, '2018-10-25 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (28, '201610804025', '2019中国大学生计算机设计大赛四川省省赛三等奖', 4, '获奖者：许伟，任云宏', 'http://img.pzhuweb.cn/2016108040251561779740630.jpg', '', 'http://img.pzhuweb.cn/2016108040251561779750460.pdf', 1, '2019-05-10 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (29, '201610804032', '攀枝花学院WEB应用专业团队管理系统V1.0', 3, '该软件由刘星、罗文、任云宏等人开发完成。', 'http://img.pzhuweb.cn/00022501561795073983.png', '', 'http://img.pzhuweb.cn/00022501561795023934.pdf', 0, '2018-05-20 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (30, '201710804035', '基于北斗卫星导航的城市停车优化系统设计研究', 1, '此论文由徐岸完成', 'http://img.pzhuweb.cn/2017108040351561795307228.png', 'http://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2018&filename=CFXB201808039&uid=WEEvREcwSlJHSldRa1FhdkJkVG1BKy9aNTQ1L0IrTUtpSU5ER3h1bHRaOD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&v=MDM1NjNMdXhZUzdEaDFUM3FUcldNMUZyQ1VSTE9mWWVSbUZ5emhWTHpOSml2VGJMRzRIOW5NcDQ5R2JZUjhlWDE=', 'http://img.pzhuweb.cn/2017108040351561795329479.pdf', 1, '2018-08-15 00:00:00', NULL, 1);
INSERT INTO `achievement` VALUES (31, '201610804118', 'Java EE中Filter技术的研究与应用', 1, '此论文由姚添译、杨廷发、兰全祥完成', 'http://img.pzhuweb.cn/2017108041721561796200678.png', 'http://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2018&filename=DNZS201818021', 'http://img.pzhuweb.cn/2017108041721561795763095.pdf', 1, '2018-06-25 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (32, '201510803075', '基于Shiro框架的政协提案系统安全性研究与设计', 1, '此论文由陈波、刘星、兰全祥完成', 'http://img.pzhuweb.cn/2017108040351561795808320.png', 'http://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2018&filename=XCNY201803022&uid=WEEvREcwSlJHSldRa1FhdkJkVG1BKy9aNTQ1L0IrTUtpSU5ER3h1bHRaOD0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&v=MjY2NzkxRnJDVVJMT2ZZZVJtRnkva1Vick5QUzdGZDdHNEg5bk1ySTlIWm9SOGVYMUx1eFlTN0RoMVQzcVRyV00=', NULL, 1, '2018-03-15 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (33, '201610804025', '基于Servlet的验证码设计与实现', 1, '此论文由丁乙诗、任云宏、兰全祥完成', 'http://img.pzhuweb.cn/2017108041051561795851508.jpg', 'http://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2018&filename=DNZS201820012', NULL, 1, '2018-07-15 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (34, '201610804024', '基于SSH的二维码点餐系统的设计与实现', 1, '此论文由杨廷发、丁川芸和兰全祥完成', 'http://img.pzhuweb.cn/2017108040991561795882363.png', 'https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2018&filename=DNZS201830036', NULL, 1, '2018-10-25 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (35, '201610801039', '基于MVC的网站登录模块安全性研究与设计', 1, '此论文由雷虹、兰全祥老师完成。', 'http://img.pzhuweb.cn/2017108030751561796262902.png', 'https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2019&filename=CFXB201902016', 'http://img.pzhuweb.cn/2017108030751561795909671.pdf', 1, '2019-02-25 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (36, '201510804002', 'Swiper技术在网页设计中的应用浅析', 1, '此论文由刘星、陈波完成。', 'http://img.pzhuweb.cn/00022501561796034975.png', 'https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2018&filename=PZHD201802012', NULL, 1, '2018-03-15 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (37, '201610804094', '基于AC自动机和贝叶斯方法的垃圾内容识别', 1, '此论文由丁川芸、兰全祥完成。', 'http://img.pzhuweb.cn/2017108030721561796298385.png', 'https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2019&filename=XBJX201902008&', NULL, 1, '2019-02-20 00:00:00', NULL, 1);
INSERT INTO `achievement` VALUES (38, '201710804105', '基于Java的拼图游戏设计与实现', 1, '此论文由苟雨晴、兰全祥完成', 'http://img.pzhuweb.cn/2017108041051561796342070.jpg', 'http://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2019&filename=DNZS201902020&uid=WEEvREdxOWJmbC9oM1NjYkZCbDdrdXQxTVVxaUlTaWZINDNaNVVBK0xDak0=$R1yZ0H6jyaa0en3RxVUd8df-oHi7XMMDo7mtKT6mSmEvTuk11l2gFA!!&v=MjE0NDFYMUx1eFlTN0RoMVQzcVRyV00xRnJDVVJMT2ZZZVJtRnkvbFVicktJU1BSZmJHNEg5ak1yWTlIWklSOGU=', NULL, 1, '2019-01-15 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (39, '201710803075', '计算机设计大赛省赛三等奖', 4, '此作品由曹林、苟雨晴、赵修俊完成并获奖', 'http://img.pzhuweb.cn/2017108030751561796631733.png', '', 'http://img.pzhuweb.cn/2017108030751561796823899.pdf', 1, '2019-05-15 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (40, '201610804024', '基于问题解决的JDBC教学方法改革和探讨', 1, '此论文由杨廷发，兰全祥完成并发表', 'http://img.pzhuweb.cn/2017108030171561796666486.jpg', 'https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2019&filename=CFXB201812054', NULL, 1, '2018-12-25 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (41, '201510804002', '基于响应式布局的创新团队管理系统的设计与实现', 6, '该项目由刘星主持完成。', 'http://img.pzhuweb.cn/00022501561796850618.png', '', 'http://img.pzhuweb.cn/00022501561796906872.pdf', 1, '2018-03-29 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (42, '201710804172', '2019年大学生计算机设计大赛攀枝花学院校赛二等奖', 4, '此证书由伍涛、徐岸获得', 'http://img.pzhuweb.cn/2017108041721561796993400.png', '', 'http://img.pzhuweb.cn/2017108041721561797232559.pdf', 1, '2019-04-14 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (43, '201610804034', 'JFreeChart在Java Web开发中的研究与应用', 1, '此论文由寇国钊编写', 'http://img.pzhuweb.cn/2017108041691561797180534.PNG', 'http://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2019&filename=GJZB201901007', NULL, 1, '2019-03-15 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (44, '201710804105', '第十届蓝桥杯全国软件和信息技术专业人才大赛四川赛区C/C++程序设计大学B组三等奖', 4, '获奖者：苟雨晴', 'http://img.pzhuweb.cn/2017108041051561797408658.jpg', '', 'http://img.pzhuweb.cn/2017108041051561797419580.pdf', 1, '2019-03-24 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (45, '201710804099', 'ACM铜奖', 4, '2019年第十一届大学生程序设计竞赛铜奖', 'http://img.pzhuweb.cn/2017108040991561797579851.jpg', '', 'http://img.pzhuweb.cn/2017108040991561797433625.pdf', 1, '2019-06-09 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (46, '201510804013', '基于Node.js和Vue的三端全响应式IT技术交流平台', 6, '此项目由许伟主持完成。', 'http://img.pzhuweb.cn/00022501561797446272.png', '', 'http://img.pzhuweb.cn/00022501561797455831.pdf', 1, '2018-03-29 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (47, '201510804002', 'Web应用专业团队官网V1.0', 3, '此网站由刘星、罗文、任云宏等人完成。', 'http://img.pzhuweb.cn/00022501561797597533.png', 'http://old.pzhuweb.cn', NULL, 1, '2018-06-29 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (48, '201710803075', '蓝桥杯省赛三等奖', 4, '此证书由赵修俊获得', 'http://img.pzhuweb.cn/2017108030751561798421180.png', '', 'http://img.pzhuweb.cn/2017108030751561798424200.pdf', 1, '2019-03-24 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (49, '201710804105', '网页设计-建国70周年', 11, '作者：苟雨晴', 'http://img.pzhuweb.cn/2017108041051561799362863.png', 'http://www.pzhuweb.cn/program/wdc2019-2/', NULL, 0, '2019-05-15 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (50, '201710804172', '建国70周年', 11, '此作品由伍涛完成', 'http://img.pzhuweb.cn/2017108041721561800262056.png', 'http://www.pzhuweb.cn/program/wdc2019-1/', NULL, 1, '2019-05-01 00:00:00', NULL, 1);
INSERT INTO `achievement` VALUES (51, '201510803075', '第三届创青春省级铜奖', 4, '陈波所在团队获得', 'http://img.pzhuweb.cn/00022501561803206174.png', '', 'http://img.pzhuweb.cn/00022501561803246800.pdf', 1, '2016-05-29 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (52, '201510803075', '2017年四川省大学生程序设计ACM大赛铜奖', 4, '陈波所在团队获ACM铜奖', 'http://img.pzhuweb.cn/00022501561803363067.png', '', 'http://img.pzhuweb.cn/00022501561803365524.pdf', 1, '2017-06-29 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (53, '201710803072', '计算机设计大赛省赛二等奖', 4, '此证书由赵泽忠获得', 'http://img.pzhuweb.cn/2017108030721561806251313.jpg', '', 'http://img.pzhuweb.cn/2017108030721561806395590.pdf', 1, '2019-05-10 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (54, '201710803072', '第十届蓝桥杯省赛三等奖', 4, '此证书由赵泽忠获得', 'http://img.pzhuweb.cn/2017108030721561806624217.JPG', '', 'http://img.pzhuweb.cn/2017108030721561806919520.pdf', 1, '2019-03-24 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (55, '201710803072', '网页设计大赛校内三等奖', 4, '此证书由曹林、赵泽忠、赵修俊获得', 'http://img.pzhuweb.cn/2017108030721561807140961.jpg', '', 'http://img.pzhuweb.cn/2017108030721561807214839.pdf', 1, '2019-04-25 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (60, '0002250', '简易音乐播放器', 3, '该成果为前端开发技术综合实训教学案例。', 'http://img.pzhuweb.cn/00022501561969269553.png', 'http://www.pzhuweb.cn/program/music/index.html', NULL, 1, '2017-07-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (61, '201610803025', '百度创意换肤', 3, '此作品有朱贤鑫完成。', 'http://img.pzhuweb.cn/00022501561969406791.png', 'http://www.pzhuweb.cn/program/changeimage/index.html', NULL, 1, '2018-07-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (62, '201510804021', '仿写京东', 3, '此作品由于宸镔完成。', 'http://img.pzhuweb.cn/00022501561969446287.png', 'http://www.pzhuweb.cn/program/jd/index.html', NULL, 1, '2018-07-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (63, '201610804118', 'SecondWorld', 3, '姚添译参加网页设计大赛作品', 'http://img.pzhuweb.cn/00022501561969668796.png', 'http://www.pzhuweb.cn/program/SecondWorld/index.html', NULL, 1, '2018-07-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (64, '201610804034', '小红帽雨伞', 3, '寇国钊网页设计大赛作品', 'http://img.pzhuweb.cn/00022501561969774632.png', 'http://www.pzhuweb.cn/program/mine/', NULL, 1, '2018-07-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (65, '201710804105', '模仿淘宝首页', 3, '作者：苟雨晴', 'http://img.pzhuweb.cn/2017108041051561970249596.png', 'http://www.pzhuweb.cn/program/tb', NULL, 1, '2019-07-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (66, '201510804013', '宫崎骏的动漫人生', 3, '许伟参加万彩动画大师设计作品。', 'http://img.pzhuweb.cn/00022501561970339774.png', 'http://www.animiz.cn/v-00005279.html', NULL, 1, '2017-12-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (67, '201710804035', '模仿京东首页', 3, '作者：徐岸', 'http://img.pzhuweb.cn/2017108040351561970498681.png', 'http://www.pzhuweb.cn/program/jdsc/', NULL, 1, '2019-07-01 00:00:00', NULL, 1);
INSERT INTO `achievement` VALUES (68, '201610804032', '第十五届挑战杯省赛入围', 4, '参赛人：罗文', 'http://img.pzhuweb.cn/2016108040321561971839498.png', '', 'http://img.pzhuweb.cn/2016108040321561971834114.pdf', 1, '2019-04-30 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (69, '201710804035', '模仿百度图库', 3, '作者：徐岸', 'http://img.pzhuweb.cn/2017108040351561972248817.jpg', 'http://www.pzhuweb.cn/program/baidu/baiduImg.html', NULL, 1, '2019-07-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (70, '0002250', '《Java应用开发实训》课程建设', 8, '教育部高等教育司2017年第一批产学合作协同育人项目', 'http://img.pzhuweb.cn/00022501561973142949.png', 'http://www.moe.gov.cn/s78/A08/A08_gggs/A08_sjhj/201708/t20170816_311258.html', NULL, 1, '2017-08-11 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (71, '0002250', '《WEB前端开发技术》教学内容与课程体系改革', 8, '教育部高等教育司2017年第二批产学合作协同育人项目', 'http://img.pzhuweb.cn/00022501561973502172.png', 'http://www.moe.gov.cn/s78/A08/A08_gggs/A08_sjhj/201801/t20180131_326117.html', NULL, 1, '2018-01-02 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (72, '0002250', '《Java应用开发实训》教学与课程考核改革', 8, '攀枝花学院2017年教育教学研究与改革项目', 'http://img.pzhuweb.cn/00022501561973906095.png', '', 'http://img.pzhuweb.cn/00022501561974250755.pdf', 1, '2017-12-22 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (73, '201710804105', 'JS扫雷小游戏', 3, '作者：苟雨晴', 'http://img.pzhuweb.cn/2017108041051561974994769.png', 'http://www.pzhuweb.cn/program/sweep', NULL, 1, '2019-07-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (74, '201610801039', '第十五届挑战杯省赛入围', 4, '参赛人：雷虹', 'http://img.pzhuweb.cn/2016108010391561976241475.png', '', 'http://img.pzhuweb.cn/2016108010391561976248660.pdf', 1, '2019-04-30 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (75, '201610801039', 'B/S系统安全性问题及其解决方案研究', 6, '雷虹负责的2019年大学生创新创业项目', 'http://img.pzhuweb.cn/2016108010391561976871750.png', '', 'http://img.pzhuweb.cn/2016108010391561977067905.pdf', 1, '2019-06-28 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (76, '201610804094', 'ACM银奖', 4, '2019年第十一届四川省大学生程序设计竞赛', 'http://img.pzhuweb.cn/2016108040941561981525970.jpg', '', 'http://img.pzhuweb.cn/2016108040941561981616566.pdf', 1, '2019-06-09 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (77, '201610804094', '蓝桥杯三等奖', 4, '第九届蓝桥杯四川赛区c/c++B组', 'http://img.pzhuweb.cn/2016108040941561982252012.JPEG', '', 'http://img.pzhuweb.cn/2016108040941561982064450.pdf', 1, '2018-04-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (78, '201710803072', '2019-全国大学生计算机设计大赛-国家级二等奖', 4, '此证书由赵泽忠获得', 'http://img.pzhuweb.cn/2017108030721566727381225.jpg', 'www.pzhuweb.cn', NULL, 0, '2019-08-12 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (79, '201710803072', '2019-全国大学生计算机设计大赛-国家二等奖', 4, '此证书由赵泽忠获得', 'http://img.pzhuweb.cn/2017108030721567597718661.jpg', 'www.pzhuweb.cn', 'http://img.pzhuweb.cn/2017108030721567597829848.pdf', 0, '2019-08-12 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (80, '201710803072', '2019-全国大学生计算机设计大赛-国家二等奖', 4, '此证书由赵泽忠获得', 'http://img.pzhuweb.cn/2017108030721567597972102.jpg', '', 'http://img.pzhuweb.cn/2017108030721567597980232.pdf', 1, '2019-08-12 00:00:00', NULL, 1);
INSERT INTO `achievement` VALUES (81, '201710803017', '个人博客', 3, '仅仅只有博客的博客', 'http://img.pzhuweb.cn/2017108030171568183863834.png', 'http://120.27.247.42/#/', NULL, 1, '2019-09-11 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (82, '201510804002', '攀枝花学院WEB应用专业团队管理系统', 9, '此软件著作权由刘星带领完成。', 'http://img.pzhuweb.cn/00022501569167296259.png', '', 'http://img.pzhuweb.cn/00022501569167251949.pdf', 1, '2018-09-05 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (83, '201610804025', '基于Node.js的IT技术交流社区平台', 9, '此软件著作权由许伟、任云宏等完成。', 'http://img.pzhuweb.cn/00022501569167526919.jpg', '', 'http://img.pzhuweb.cn/00022501569167536950.pdf', 1, '2019-07-18 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (84, '201610804024', '攀枝花学院后勤处信息管理系统', 9, '此软件著作权由杨廷发、罗文、雷虹、姚添译等完成。', 'http://img.pzhuweb.cn/00022501569167768036.jpg', '', 'http://img.pzhuweb.cn/00022501569167775465.pdf', 1, '2019-07-22 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (85, '201610804118', '基于JavaWeb的软件开发的安全性研究与设计', 10, '姚添译等人获得2018年创新奖学金（二等）', 'http://img.pzhuweb.cn/00022501569168620807.jpg', '', 'http://img.pzhuweb.cn/00022501569168640268.pdf', 1, '2018-11-23 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (86, '201510804002', '基于响应式布局的创新团队管理系统的设计与实现', 10, '刘星等人获得2018年创新奖学金（三等）', 'http://img.pzhuweb.cn/00022501569168737305.jpg', '', 'http://img.pzhuweb.cn/00022501569168779471.pdf', 1, '2018-11-23 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (87, '201710804172', '基于Java的打字母游戏设计与实现', 1, '此论文由伍涛编写', 'http://img.pzhuweb.cn/2017108041721569242974700.jpg', 'https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDTEMP&filename=DNZS201920035', NULL, 1, '2019-09-23 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (88, '201610804032', '阿斯达所', 3, '是否', '', 'http://www.pzhuweb.cn/#/achievementIssue', NULL, 0, '2020-05-07 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (89, '201710804035', '基于Web应用的会话跟踪技术的分析与应用', 1, '此论文由徐岸编写', 'http://img.pzhuweb.cn/2017108040351589947747529.png', 'https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2020&filename=CFXB202002015&v=MjQ5MjFYMUx1eFlTN0RoMVQzcVRyV00xRnJDVVI3cWZZdVJ2Rnl2a1Y3L0JKaXZUYkxHNEhOSE1yWTlFWVlSOGU=', NULL, 1, '2020-05-20 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (90, '201810804099', '”同心战疫，命运与共“网页', 11, '基于js的静态网页，对抗疫新闻和音乐进行展现，让用户体验到共同抗疫的精神。', 'http://img.pzhuweb.cn/2018108040991590936270263.png', 'http://www.pzhuweb.cn/program/wdc2020-1/', NULL, 1, '2020-05-31 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (99, '201810804034', '“同心抗疫，命运与共”网页设计大赛', 11, '基于bootstrap框架的交互式网页，同时镶嵌了jQuery插件。此网页对新冠病毒的本身、传播途径、个人如何防护和抗议精神进行展现，让用户了解疫情、防护病毒和学习共同抗疫的精神。', 'http://img.pzhuweb.cn/2018108040341591700020242.png', 'http://www.pzhuweb.cn/program/wdc2020-2/', '', 1, '2020-06-09 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (100, '201810804115', '在线音乐播放器', 3, '一个简单的在线音乐播放器。', 'http://img.pzhuweb.cn/2018108041151591701329123.jpg', 'http://www.pzhuweb.cn/program/mymusic/mymusic.html', NULL, 1, '2020-06-09 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (101, '201610804118', 'Java EE关键技术研究与实践', 10, '姚添译等人获得2019年创新奖学金二等奖', 'http://img.pzhuweb.cn/00022501591705498686.png', '', 'http://img.pzhuweb.cn/00022501591705507692.pdf', 1, '2019-12-04 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (102, '0002250', '《Web前端开发技术》课程思政示范课程项目', 8, '攀枝花学院2019年度“课程思政”示范课程项目', 'http://img.pzhuweb.cn/00022501591705894455.png', '', 'http://img.pzhuweb.cn/00022501591706066153.pdf', 1, '2019-07-05 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (103, '0002250', '《Web前端开发技术》省级应用型示范课程建设项目', 8, '四川省首批地方普通本科高校应用型示范课程建设项目', 'http://img.pzhuweb.cn/00022501591706156857.png', '', 'http://img.pzhuweb.cn/00022501591706344222.PDF', 1, '2019-01-18 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (104, '201710804105', '基于Java的趣味小游戏设计与实现', 10, '苟雨晴等人获得2019年创新创业二等奖学金', 'http://img.pzhuweb.cn/2017108041051591716248735.png', '', 'http://img.pzhuweb.cn/2017108041051591716304593.pdf', 1, '2019-12-04 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (105, '201710804105', '基于工程教育认证的培养目标及培养过程管理系统', 6, '由苟雨晴负责的大学生创新创业项目', 'http://img.pzhuweb.cn/2017108041051591716535580.png', '', 'http://img.pzhuweb.cn/2017108041051591716547622.pdf', 1, '2020-06-03 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (106, '201710803072', '大创项目（软件工程专业学生毕业要求达成评价及分析系统）', 6, '由赵泽忠负责的大学生创新创业项目', 'http://img.pzhuweb.cn/2017108030721591764357128.png', '', 'http://img.pzhuweb.cn/2017108030721591764315268.pdf', 1, '2020-06-03 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (113, '201810801070', '2020华为软件挑战赛', 4, '2020华为软件挑战赛', 'http://img.pzhuweb.cn/00022501591803436955.png', '', 'http://img.pzhuweb.cn/00022501591803445470.pdf', 1, '2020-06-10 00:00:00', NULL, 1);
INSERT INTO `achievement` VALUES (114, '201710804035', '建国70周年', 11, '作者：徐岸', 'http://img.pzhuweb.cn/00022501592412926399.jpg', 'http://www.pzhuweb.cn/program/wdc2019-3/', NULL, 1, '2019-05-15 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (115, '0002250', '“同心抗疫，命运与共”网页设计大赛', 11, NULL, 'http://img.pzhuweb.cn/00022501592412211369.png', 'http://www.pzhuweb.cn/program/wdc2020-4/', NULL, 1, '2020-06-09 00:00:00', NULL, 1);
INSERT INTO `achievement` VALUES (116, '0002250', '“同心抗疫，命运与共”网页设计大赛', 11, NULL, 'http://img.pzhuweb.cn/00022501592412337098.png', 'http://www.pzhuweb.cn/program/wdc2020-5/', NULL, 1, '2020-06-09 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (117, '201810804059', '“同心抗疫，命运与共”网页设计大赛', 11, '一个简简单单的网页', 'http://img.pzhuweb.cn/2018108040591595409275820.png', 'http://www.pzhuweb.cn/program/wdc2020-3/index.html ', NULL, 1, '2020-06-09 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (118, '201810804085', '基于SSM的攀枝花学院图书管理系统', 9, '张俊老师带领下完成的计算机著作权', 'http://img.pzhuweb.cn/2018108040851595501493593.jpg', '', 'http://img.pzhuweb.cn/2018108040851603718207679.pdf', 1, '2020-07-23 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (119, '201810804085', '攀枝花学院社团管理系统', 9, '由张俊老师带领完成的计算机软件著作权', 'http://img.pzhuweb.cn/2018108040851595501524060.jpg', '', 'http://img.pzhuweb.cn/2018108040851603718270591.pdf', 1, '2020-07-23 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (120, '201810804085', '基于Dubbo的攀枝花康养旅游网站的设计与实现', 6, '由吴涛负责的大学生创新创业项目', 'http://img.pzhuweb.cn/2018108040851595501556717.jpg', '#', NULL, 1, '2020-07-23 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (121, '201810804085', '基于分布式架构的学生云笔记系统的设计与实现', 6, '由林荣杭负责的大学生创新创业项目', 'http://img.pzhuweb.cn/2018108040851595501598361.jpg', '#', NULL, 1, '2020-07-23 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (122, '201810804085', '基于B/S系统的SQL注入防御技术研究', 1, '在张俊老师带领下完成的学术论文', 'http://img.pzhuweb.cn/2018108040851595501677853.jpg', 'https://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CJFQ&dbname=CJFDLAST2020&filename=DNZS202002004&v=MzAyNjR1eFlTN0RoMVQzcVRyV00xRnJDVVI3cWZZT1pzRnl6bFU3M0tJU1BSZmJHNEhOSE1yWTlGWUlSOGVYMUw=', NULL, 1, '2020-07-23 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (123, '201610804032', '基于React和Egg的创新团队管理系统', 9, '此软件著作权由罗文带领完成', 'http://img.pzhuweb.cn/2016108040321595570230368.png', '', 'http://img.pzhuweb.cn/2016108040321595569452589.pdf', 1, '2020-07-24 00:00:00', NULL, 1);
INSERT INTO `achievement` VALUES (124, '201610804025', '基于Flutter的创新团队管理APPV1.0', 9, '任云宏开发完成', 'http://img.pzhuweb.cn/00022501601994804693.jpg', '', 'http://img.pzhuweb.cn/00022501601994828442.pdf', 1, '2020-05-20 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (125, '201810801070', 'C语言中递归的分析及应用', 1, '杨新宇论文', 'http://img.pzhuweb.cn/00022501601996125688.jpg', '', 'http://img.pzhuweb.cn/00022501601996067513.pdf', 1, '2020-08-06 00:00:00', NULL, 1);
INSERT INTO `achievement` VALUES (126, '201710804105', '综合素质A级证书', 4, '此证书由苟雨晴获得', 'http://img.pzhuweb.cn/2017108041051606975014379.png', '', 'http://img.pzhuweb.cn/2017108041051606975531070.pdf', 1, '2020-06-04 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (127, '201810804085', '攀枝花学院心理咨询系统 V1.0 （软件著作权）', 9, '攀枝花学院心理咨询系统 V1.0 （软件著作权）', 'http://img.pzhuweb.cn/2018108040851608449180612.png', '', 'http://img.pzhuweb.cn/2018108040851608449097076.pdf', 1, '2020-12-20 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (128, '201810804085', '基于Dubbo的攀枝花旅游网站 V1.0 （软件著作权）', 9, '基于Dubbo的攀枝花旅游网站 V1.0 （软件著作权）', 'http://img.pzhuweb.cn/2018108040851608449276975.png', '', 'http://img.pzhuweb.cn/2018108040851608449249845.pdf', 1, '2020-12-20 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (129, '201810804099', '网页设计与制作大赛一等奖', 4, '陈治霖、黄蒙源、黄铮、李佳辕获得此证书', 'http://img.pzhuweb.cn/2018108040991608866261812.jpg', 'http://www.pzhuweb.cn/program/wdc2020-1/', NULL, 1, '2020-12-25 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (130, '201810804034', '省级综合素质A级证书', 4, '本人在大二学年获得的四川省大学生A级综合素质认证考察科研项目、论文、成绩、德育等综合素质', 'http://img.pzhuweb.cn/2018108040341608938294514.png', '附件', NULL, 1, '2020-06-10 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (131, '201710803017', NULL, NULL, NULL, NULL, NULL, '', 2, NULL, NULL, 0);
INSERT INTO `achievement` VALUES (132, '201810804072', '基于Dubbo的校园综合服务平台的设计与实现', 6, '刘世雄2021年省级大学生创新训练计划', 'http://img.pzhuweb.cn/00022501621225973992.jpg', '', 'http://img.pzhuweb.cn/00022501621225873662.pdf', 1, '2021-04-29 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (133, '201710803072', '基于移动终端的智能点餐系统', 10, '赵泽忠2020年创新奖学金一等奖', 'http://img.pzhuweb.cn/00022501621226546964.jpg', '', 'http://img.pzhuweb.cn/00022501621226550278.pdf', 1, '2020-12-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (134, '201810801070', '基于JS的NP完全问题自动求解算法研究及其对比分析', 10, '杨新宇2020年创新奖学金二等奖', 'http://img.pzhuweb.cn/00022501621226623391.jpg', 'http://img.pzhuweb.cn/00022501621226550278.pdf', NULL, 1, '2020-12-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (135, '201810804034', '基于React和Egg的创新团队管理系统的研究与设计', 10, '朱守平、罗文等2020年创新奖学金二等奖', 'http://img.pzhuweb.cn/00022501621226698304.jpg', 'http://img.pzhuweb.cn/00022501621226550278.pdf', NULL, 1, '2020-12-01 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (136, '201810804115', '基于 OBE 的学生能力达成 间接评价及分析系统', 6, '苗海阳2021年校级大学生创新训练计划', 'http://img.pzhuweb.cn/2018108041151621227941890.jpg', 'http://img.pzhuweb.cn/00022501621225873662.pdf', NULL, 1, '2021-04-29 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (137, '201810804099', '辉煌百年，青春赞党', 11, '陈治霖、胡森宇、邹如月、李煜川、杨航等一等奖作品\n', 'http://img.pzhuweb.cn/00022501622035625219.jpg', 'http://www.pzhuweb.cn/program/wdc2021_1/index.html', NULL, 1, '2021-05-26 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (138, '202010804013', '百年初心，历久弥坚', 11, '王凯琪、匡玉蘅二等奖作品\n', 'http://img.pzhuweb.cn/00022501622035671656.jpg', 'http://www.pzhuweb.cn/program/wdc2021_2_1/index.html', NULL, 1, '2021-05-26 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (139, '0002250', '建党百年，波澜壮阔', 11, '周子涵作品', 'http://img.pzhuweb.cn/00022501622035719811.jpg', 'http://www.pzhuweb.cn/program/wdc2021_2_2/index.html', NULL, 1, '2021-05-26 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (140, '0002250', '传承红色基因 喜迎建党百年', 11, '张紫淇、彭小倩作品\n', 'http://img.pzhuweb.cn/00022501622035747855.jpg', 'http://www.pzhuweb.cn/program/wdc2021_3_1/main.html', NULL, 1, '2021-05-26 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (141, '201910803046', '光辉百年', 11, '许佳、王佳琳、范瑜等作品\n', 'http://img.pzhuweb.cn/00022501622035804447.jpg', 'http://www.pzhuweb.cn/program/wdc2021_3_2/main.html', NULL, 1, '2021-05-26 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (142, '202010804027', '红浪', 11, '张凡作品', 'webimg/http://img.pzhuweb.cn/00022501622035828655.jpg', 'http://www.pzhuweb.cn/program/wdc2021_3_3/html/child.html', 'webimg/null', -1, '2021-05-27 00:00:00', '2021-05-27 00:00:00', 1);
INSERT INTO `achievement` VALUES (143, '201810804099', '基于 Vue 的数据结构算法可 视化辅助教学平台 ', 6, '陈治霖2021级校级大学生创新训练计划', 'http://img.pzhuweb.cn/2018108040991623143974615.png', 'http://img.pzhuweb.cn/00022501621225873662.pdf', NULL, 1, '2021-04-29 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (144, '0002250', '基于Spring Cloud的西安旅游网站的设计与实现', 1, '胡涛撰写论文', 'http://img.pzhuweb.cn/00022501623251648701.jpg', '', 'http://img.pzhuweb.cn/00022501623251656833.pdf', 1, '2020-09-30 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (145, '201610804032', '基于Node_js的创新团队管理系统的优化与改进', 1, '罗文撰写论文', 'http://img.pzhuweb.cn/00022501623251791874.jpg', '', 'http://img.pzhuweb.cn/00022501623251741924.pdf', 1, '2020-09-30 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (146, '201810801070', '基于A*的拼图智能还原算法的设计与分析', 1, '杨新宇论文', 'http://img.pzhuweb.cn/00022501623251842532.jpg', '', 'http://img.pzhuweb.cn/00022501623251880151.pdf', 1, '2020-11-30 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (147, '0002250', '计算机设计大赛优秀指导教师奖', 4, '荣誉名称:计算机设计大赛优秀指导教师奖\n获奖名次:优秀指导教师奖\n级别 :省级', 'http://img.pzhuweb.cn/00022501631317022284.jpg', '', 'http://img.pzhuweb.cn/00022501634546172316.pdf', 1, '2021-09-10 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (148, '202010804013', '《Java中单例设计模式的分析及应用》', 1, '在Java程序开发中常采用单例设计模式来减少某个类的频繁创建销毁,从而节省系统资源,提高运行效率。', 'http://img.pzhuweb.cn/2020108040131631872253560.png', 'https://kns.cnki.net/kcms/detail/detail.aspx?dbcode=CJFD&dbname=CJFDLAST2021&filename=SDDZ202105042&uniplatform=NZKPT&v=QBOzD%25mmd2FSHPKje0mKx27ogVBdPsrjU2KvwYuavelWzIiRDFQdlH%25mmd2BIPYswOFzHnzGIw', NULL, 1, '2021-05-05 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (149, '202010804027', '2021中国大学生计算机设计大赛三等奖', 4, '荣誉名称：中国大学生计算机设计大赛三等奖 。指导老师：兰全祥，证书由：陈治霖、胡森宇、张凡获得。', 'webimg/http://img.pzhuweb.cn/2020108040271631939640889.jpg', '', 'webimg/http://img.pzhuweb.cn/2020108040271631938510612.pdf', -1, '2021-09-18 00:00:00', '2021-09-18 00:00:00', 0);
INSERT INTO `achievement` VALUES (150, '0002250', '攀枝花学院教学任务分配管理系统V1.0', 9, '赵修俊开发并获得。', 'http://img.pzhuweb.cn/00022501636623724770.jpg', '', 'http://img.pzhuweb.cn/00022501636623744361.pdf', 1, '2021-07-12 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (151, '0002250', '基于Vue的个人博客管理系统V1.0', 9, '阮茂琪开发并获得。', 'http://img.pzhuweb.cn/00022501636623859835.jpg', '', 'http://img.pzhuweb.cn/00022501636623827102.pdf', 1, '2021-07-11 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (152, '0002250', '基于Vue和Express的小型电商购物系统V1.0', 9, '夏冬开发并获得。', 'http://img.pzhuweb.cn/00022501636624657750.jpg', '', 'http://img.pzhuweb.cn/00022501636624703652.pdf', 1, '2021-07-11 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (153, '0002250', '基于工程教育认证的培养目标及培养过程管理系统V1.0', 9, '苟雨晴和伍涛合作开发完成并获得。', 'http://img.pzhuweb.cn/00022501636624763974.jpg', '', 'http://img.pzhuweb.cn/00022501636624782890.pdf', 1, '2021-07-11 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (154, '0002250', '攀枝花学院学生毕业要求达成评价及分析系统V2.0', 9, '赵泽忠开发完成并获得。', 'http://img.pzhuweb.cn/00022501636624897758.jpg', '', 'http://img.pzhuweb.cn/00022501636624907862.pdf', 1, '2021-11-11 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (155, '0002250', '基于Vue的综合办公系统V1.0', 9, '曹林开发完成并获得。', 'http://img.pzhuweb.cn/00022501636624972277.jpg', '', 'http://img.pzhuweb.cn/00022501636624983334.pdf', 1, '2021-11-11 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (156, '0002250', '攀枝花学院考务安排系统V1.0', 9, '徐岸完成并获得。', 'http://img.pzhuweb.cn/00022501636625040675.jpg', '', 'http://img.pzhuweb.cn/00022501636625045812.pdf', 1, '2021-11-11 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (157, '0002250', '基于Vue的数据结构算法可视化辅助教学平台V1.0', 9, '陈治霖、张凡、胡森宇合作开发并获得。', 'http://img.pzhuweb.cn/00022501636625084103.jpg', '', 'http://img.pzhuweb.cn/00022501636625095573.pdf', 1, '2021-11-11 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (158, '202010804013', '知轩藏书小说爬取及分析软件', 3, '实现对网络小说的爬取与分析，软件可以爬取该网站上的每一部小说，并获取对应的小说名等一系列关于该小说的相关信息，例如小说名、作者名、各种评价数目。该系统还可以根据小说的实时点赞数给出一个综合推荐度供用户参考。', 'http://img.pzhuweb.cn/2020108040131636633445839.png', 'https://gitee.com/pzhuweb/fiction', NULL, 1, '2021-05-15 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (159, '202010804013', '基于JAVA的飞机大战小游戏', 3, '飞机大战游戏', 'http://img.pzhuweb.cn/2020108040131636633748433.png', 'https://gitee.com/WQ-BY/PlaneWars', NULL, 1, '2021-01-20 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (160, '202010804013', 'JAVA中Robot类的运用，实现‘别踩白块’游戏辅助', 3, 'http://www.4399.com/flash/135255_3.htm 别踩白块游戏，运用Java Robot类完成游戏脚本，自动完成踩黑块。', 'http://img.pzhuweb.cn/2020108040131636633813365.png', 'https://blog.csdn.net/qq_28618027/article/details/120909742?spm=1001.2014.3001.5501', NULL, 1, '2021-01-14 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (161, '202010804013', '基于JAVA的网络图标爬取软件', 3, 'Logo神器网，logo爬取软件', 'http://img.pzhuweb.cn/2020108040131636633949401.png', 'https://gitee.com/WQ-BY/ico', NULL, 1, '2021-03-31 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (162, '202010804013', '基于JAVA的网络图片爬取软件', 3, '爬取彼岸网图片，pic.netbian.com', 'http://img.pzhuweb.cn/2020108040131636634177614.png', 'https://gitee.com/WQ-BY/pic', NULL, 1, '2021-03-25 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (163, '202010804013', '攀枝花学院2021年高等教育教学成果奖申报网', 3, '攀枝花学院2021年高等教育教学成果奖申报网', 'http://img.pzhuweb.cn/2020108040131636637176709.png', 'http://jxcgj.pzhu.cn/', NULL, 1, '2021-10-07 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (164, '202010804013', '攀枝花学院 “趣味学党史”党史学习平台', 3, '数计学院-解锁党史学习新方式', 'http://img.pzhuweb.cn/2020108040131636637306016.png', 'http://llk.pzhuweb.cn', NULL, 1, '2021-11-04 00:00:00', NULL, 0);
INSERT INTO `achievement` VALUES (194, '202010804027', NULL, NULL, NULL, 'http://img.pzhuweb.cn/test/2020108040271673579863937.png', NULL, NULL, 2, NULL, NULL, 0);

-- ----------------------------
-- Table structure for achievement_type
-- ----------------------------
DROP TABLE IF EXISTS `achievement_type`;
CREATE TABLE `achievement_type`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `name` varchar(16) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `status` int(0) NULL DEFAULT 1,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 14 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of achievement_type
-- ----------------------------
INSERT INTO `achievement_type` VALUES (0, '全部资源', 1);
INSERT INTO `achievement_type` VALUES (1, '学术论文', 1);
INSERT INTO `achievement_type` VALUES (3, '软件成果', 1);
INSERT INTO `achievement_type` VALUES (4, '竞赛获奖', 1);
INSERT INTO `achievement_type` VALUES (6, '大学生创新训练项目', 1);
INSERT INTO `achievement_type` VALUES (8, '教研科研项目', 1);
INSERT INTO `achievement_type` VALUES (9, '软件著作权', 1);
INSERT INTO `achievement_type` VALUES (10, '创新奖学金', 1);
INSERT INTO `achievement_type` VALUES (11, '网页设计大赛', 1);

-- ----------------------------
-- Table structure for album
-- ----------------------------
DROP TABLE IF EXISTS `album`;
CREATE TABLE `album`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `user_id` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `type` int(0) NULL DEFAULT NULL,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `description` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `cover` int(0) NULL DEFAULT 1,
  `status` int(0) NULL DEFAULT 1,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 36 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of album
-- ----------------------------
INSERT INTO `album` VALUES (0, '0002250', 1, '回收站', '其它相册删除之后收集到这里', 1, 2, '2023-01-15 11:53:28', '2023-01-18 11:13:16');
INSERT INTO `album` VALUES (1, '0002250', 6, '2017团队合影', '2017年5月合影（14级、15级、16级）', 8, 1, '2021-03-02 00:00:00', '2021-04-20 00:00:00');
INSERT INTO `album` VALUES (13, '0002250', 6, '2018团队合影', '2018年5月合影（15级、16级、17级）', 21, 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `album` VALUES (15, '0002250', 6, '2019团队合影', '2019年5月合影（15级、16级、17级）', 33, 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `album` VALUES (16, '0002250', 6, '2020团队合影', '2020年12月合影（18级、19级、20级）', 41, 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `album` VALUES (17, '0002250', 7, '2021届毕业合影', '2021届毕业啦！', 56, 1, '2021-05-21 00:00:00', '2023-01-15 02:41:19');
INSERT INTO `album` VALUES (19, '0002250', 6, '2021届毕业合影', '2021届毕业啦！1912', 56, 1, '2023-01-15 00:00:00', '2023-01-16 03:53:51');
INSERT INTO `album` VALUES (21, '0002250', 7, '2021届毕业合影', '2021届毕业啦！21', 56, 1, '2023-01-14 00:00:00', '2023-01-15 02:57:49');
INSERT INTO `album` VALUES (22, '0002250', 7, '2021届毕业合影', '2021届毕业啦！22', 56, 1, '2023-01-14 00:00:00', '2023-01-15 02:41:19');
INSERT INTO `album` VALUES (23, '0002250', 7, '2021届毕业合影', '2021届毕业啦！23', 56, 1, '2023-01-14 00:00:00', '2023-01-15 02:41:19');
INSERT INTO `album` VALUES (24, '0002250', 7, '2021届毕业合影', '2021届毕业啦！24', 56, 1, '2023-01-14 00:00:00', '2023-01-15 02:41:19');
INSERT INTO `album` VALUES (25, '0002250', 7, '2021届毕业合影', '2021届毕业啦！25', 56, 1, '2023-01-14 00:00:00', '2023-01-15 02:41:19');
INSERT INTO `album` VALUES (26, '0002250', 7, '2021届毕业合影', '2021届毕业啦！26', 56, 1, '2023-01-14 00:00:00', '2023-01-15 02:41:19');
INSERT INTO `album` VALUES (27, '0002250', 7, '2021届毕业合影', '2021届毕业啦！27', 56, 1, '2023-01-14 00:00:00', '2023-01-15 02:41:19');
INSERT INTO `album` VALUES (28, '0002250', 7, '2021届毕业合影', '2021届毕业啦！28', 56, 1, '2023-01-14 00:00:00', '2023-01-15 02:41:19');
INSERT INTO `album` VALUES (29, '0002250', 7, '2021届毕业合影', '2021届毕业啦！29', 56, 1, '2023-01-14 00:00:00', '2023-01-15 02:41:19');
INSERT INTO `album` VALUES (30, '0002250', 7, '2021届毕业合影', '2021届毕业啦！30', 56, 1, '2023-01-14 00:00:00', '2023-01-15 02:41:19');
INSERT INTO `album` VALUES (33, 'admin', 6, '奥术大师多', '奥术大师多', 1, 1, '2023-01-16 12:28:43', '2023-01-16 12:28:43');
INSERT INTO `album` VALUES (34, 'admin', 6, 'move', 'move', 1, 1, '2023-01-18 08:28:00', '2023-01-18 11:31:28');
INSERT INTO `album` VALUES (35, 'admin', 6, 'test', 'test', 1, 2, '2023-01-18 11:31:44', '2023-01-18 11:31:44');

-- ----------------------------
-- Table structure for album_type
-- ----------------------------
DROP TABLE IF EXISTS `album_type`;
CREATE TABLE `album_type`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `status` int(0) NULL DEFAULT 1,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 12 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of album_type
-- ----------------------------
INSERT INTO `album_type` VALUES (0, '全部分类', 1, '2023-01-14 20:43:05', NULL);
INSERT INTO `album_type` VALUES (1, '默认相册', 1, '2021-03-01 00:00:00', '2021-03-18 00:00:00');
INSERT INTO `album_type` VALUES (6, '团队合影', 1, '2021-04-20 00:00:00', '2021-04-20 00:00:00');
INSERT INTO `album_type` VALUES (7, '毕业留影', 1, '2021-05-21 00:00:00', '2023-01-15 02:41:19');

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `userid` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `title` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `menuid` int(0) NULL DEFAULT NULL,
  `technologyid` int(0) NULL DEFAULT NULL,
  `introduction` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `keywords` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `postlink` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `raws` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL,
  `context` text CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL,
  `readnumber` int(0) NULL DEFAULT NULL,
  `status` int(0) NULL DEFAULT NULL,
  `tops` int(0) NULL DEFAULT NULL,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `userid`(`userid`) USING BTREE,
  INDEX `menuid`(`menuid`) USING BTREE,
  INDEX `article_ibfk_3`(`technologyid`) USING BTREE,
  CONSTRAINT `article_ibfk_1` FOREIGN KEY (`userid`) REFERENCES `users` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `article_ibfk_2` FOREIGN KEY (`menuid`) REFERENCES `menu` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `article_ibfk_3` FOREIGN KEY (`technologyid`) REFERENCES `technology` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 311 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES (105, '201610804032', '防抖与节流', 1, 1, '防抖的概念：所谓防抖，就是指触发事件后在 n 秒内函数只能执行一次，如果在 n 秒内又触发了事件，则会重新计算函数执行时间。（坐公交车，最后一个人上车，司机才会发车）1. 非立即执行版function debounce(func, wait', '防抖与节流', 'http://img.pzhuweb.cn/2016108040321561519277283.jpg', '{\"blocks\":[{\"key\":\"1fir4\",\"text\":\"防抖的概念：所谓防抖，就是指触发事件后在 n 秒内函数只能执行一次，如果在 n 秒内又触发了事件，则会重新计算函数执行时间。（坐公交车，最后一个人上车，司机才会发车）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":83,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":83,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":83,\"style\":\"FONTSIZE-18\"},{\"offset\":6,\"length\":56,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"textAlign\":\"start\"}},{\"key\":\"5d7u1\",\"text\":\"1. 非立即执行版\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":9,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4v66s\",\"text\":\"function debounce(func, wait) {\\n    let timeout;\\n    return function () {\\n        let context = this;\\n        let args = arguments;\\n\\n        if (timeout) clearTimeout(timeout);\\n        \\n        timeout = setTimeout(() => {\\n            func.apply(context, args)\\n        }, wait);\\n    }\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"LINEHEIGHT-2\"},{\"offset\":32,\"length\":16,\"style\":\"LINEHEIGHT-2\"},{\"offset\":49,\"length\":24,\"style\":\"LINEHEIGHT-2\"},{\"offset\":74,\"length\":27,\"style\":\"LINEHEIGHT-2\"},{\"offset\":102,\"length\":29,\"style\":\"LINEHEIGHT-2\"},{\"offset\":133,\"length\":43,\"style\":\"LINEHEIGHT-2\"},{\"offset\":177,\"length\":8,\"style\":\"LINEHEIGHT-2\"},{\"offset\":186,\"length\":36,\"style\":\"LINEHEIGHT-2\"},{\"offset\":223,\"length\":37,\"style\":\"LINEHEIGHT-2\"},{\"offset\":261,\"length\":17,\"style\":\"LINEHEIGHT-2\"},{\"offset\":279,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":285,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":31,\"style\":\"LETTERSPACING-2\"},{\"offset\":32,\"length\":16,\"style\":\"LETTERSPACING-2\"},{\"offset\":49,\"length\":24,\"style\":\"LETTERSPACING-2\"},{\"offset\":74,\"length\":27,\"style\":\"LETTERSPACING-2\"},{\"offset\":102,\"length\":29,\"style\":\"LETTERSPACING-2\"},{\"offset\":133,\"length\":43,\"style\":\"LETTERSPACING-2\"},{\"offset\":177,\"length\":8,\"style\":\"LETTERSPACING-2\"},{\"offset\":186,\"length\":36,\"style\":\"LETTERSPACING-2\"},{\"offset\":223,\"length\":37,\"style\":\"LETTERSPACING-2\"},{\"offset\":261,\"length\":17,\"style\":\"LETTERSPACING-2\"},{\"offset\":279,\"length\":5,\"style\":\"LETTERSPACING-2\"},{\"offset\":285,\"length\":1,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":31,\"style\":\"FONTSIZE-18\"},{\"offset\":32,\"length\":16,\"style\":\"FONTSIZE-18\"},{\"offset\":49,\"length\":24,\"style\":\"FONTSIZE-18\"},{\"offset\":74,\"length\":27,\"style\":\"FONTSIZE-18\"},{\"offset\":102,\"length\":29,\"style\":\"FONTSIZE-18\"},{\"offset\":133,\"length\":43,\"style\":\"FONTSIZE-18\"},{\"offset\":177,\"length\":8,\"style\":\"FONTSIZE-18\"},{\"offset\":186,\"length\":36,\"style\":\"FONTSIZE-18\"},{\"offset\":223,\"length\":37,\"style\":\"FONTSIZE-18\"},{\"offset\":261,\"length\":17,\"style\":\"FONTSIZE-18\"},{\"offset\":279,\"length\":5,\"style\":\"FONTSIZE-18\"},{\"offset\":285,\"length\":1,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":36,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":53,\"length\":6,\"style\":\"COLOR-D73A49\"},{\"offset\":60,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":82,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":94,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":96,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":110,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":119,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":141,\"length\":2,\"style\":\"COLOR-D73A49\"},{\"offset\":202,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":218,\"length\":2,\"style\":\"COLOR-D73A49\"},{\"offset\":9,\"length\":8,\"style\":\"COLOR-005CC5\"},{\"offset\":18,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":24,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":40,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":86,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":114,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":121,\"length\":9,\"style\":\"COLOR-005CC5\"},{\"offset\":145,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":167,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":194,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":235,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":240,\"length\":5,\"style\":\"COLOR-005CC5\"},{\"offset\":246,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":255,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":272,\"length\":4,\"style\":\"COLOR-005CC5\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a58p3\",\"text\":\"效果图：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":4,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":4,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3j59h\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6mth1\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"float\":\"\",\"alignment\":\"center\"}},{\"key\":\"e1a5j\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"g6r1\",\"text\":\"2. 立即执行版\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":8,\"style\":\"BGCOLOR-FBFBFB\"},{\"offset\":0,\"length\":8,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":8,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f9spo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2l77l\",\"text\":\"function debounce(func,wait) {\\n    let timeout;\\n    return function () {\\n        let context = this;\\n        let args = arguments;\\n\\n        if (timeout) clearTimeout(timeout);\\n\\n        let callNow = !timeout;\\n        timeout = setTimeout(() => {\\n            timeout = null;\\n        }, wait)\\n\\n        if (callNow) func.apply(context, args)\\n    }\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"LINEHEIGHT-2\"},{\"offset\":31,\"length\":16,\"style\":\"LINEHEIGHT-2\"},{\"offset\":48,\"length\":24,\"style\":\"LINEHEIGHT-2\"},{\"offset\":73,\"length\":27,\"style\":\"LINEHEIGHT-2\"},{\"offset\":101,\"length\":29,\"style\":\"LINEHEIGHT-2\"},{\"offset\":132,\"length\":43,\"style\":\"LINEHEIGHT-2\"},{\"offset\":177,\"length\":31,\"style\":\"LINEHEIGHT-2\"},{\"offset\":209,\"length\":36,\"style\":\"LINEHEIGHT-2\"},{\"offset\":246,\"length\":27,\"style\":\"LINEHEIGHT-2\"},{\"offset\":274,\"length\":16,\"style\":\"LINEHEIGHT-2\"},{\"offset\":292,\"length\":46,\"style\":\"LINEHEIGHT-2\"},{\"offset\":339,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":345,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":30,\"style\":\"LETTERSPACING-2\"},{\"offset\":31,\"length\":16,\"style\":\"LETTERSPACING-2\"},{\"offset\":48,\"length\":24,\"style\":\"LETTERSPACING-2\"},{\"offset\":73,\"length\":27,\"style\":\"LETTERSPACING-2\"},{\"offset\":101,\"length\":29,\"style\":\"LETTERSPACING-2\"},{\"offset\":132,\"length\":43,\"style\":\"LETTERSPACING-2\"},{\"offset\":177,\"length\":31,\"style\":\"LETTERSPACING-2\"},{\"offset\":209,\"length\":36,\"style\":\"LETTERSPACING-2\"},{\"offset\":246,\"length\":27,\"style\":\"LETTERSPACING-2\"},{\"offset\":274,\"length\":16,\"style\":\"LETTERSPACING-2\"},{\"offset\":292,\"length\":46,\"style\":\"LETTERSPACING-2\"},{\"offset\":339,\"length\":5,\"style\":\"LETTERSPACING-2\"},{\"offset\":345,\"length\":1,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":30,\"style\":\"FONTSIZE-18\"},{\"offset\":31,\"length\":16,\"style\":\"FONTSIZE-18\"},{\"offset\":48,\"length\":24,\"style\":\"FONTSIZE-18\"},{\"offset\":73,\"length\":27,\"style\":\"FONTSIZE-18\"},{\"offset\":101,\"length\":29,\"style\":\"FONTSIZE-18\"},{\"offset\":132,\"length\":43,\"style\":\"FONTSIZE-18\"},{\"offset\":177,\"length\":31,\"style\":\"FONTSIZE-18\"},{\"offset\":209,\"length\":36,\"style\":\"FONTSIZE-18\"},{\"offset\":246,\"length\":27,\"style\":\"FONTSIZE-18\"},{\"offset\":274,\"length\":16,\"style\":\"FONTSIZE-18\"},{\"offset\":292,\"length\":46,\"style\":\"FONTSIZE-18\"},{\"offset\":339,\"length\":5,\"style\":\"FONTSIZE-18\"},{\"offset\":345,\"length\":1,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":35,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":52,\"length\":6,\"style\":\"COLOR-D73A49\"},{\"offset\":59,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":81,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":93,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":95,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":109,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":118,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":140,\"length\":2,\"style\":\"COLOR-D73A49\"},{\"offset\":185,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":197,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":199,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":225,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":241,\"length\":2,\"style\":\"COLOR-D73A49\"},{\"offset\":266,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":300,\"length\":2,\"style\":\"COLOR-D73A49\"},{\"offset\":9,\"length\":8,\"style\":\"COLOR-005CC5\"},{\"offset\":18,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":23,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":39,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":85,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":113,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":120,\"length\":9,\"style\":\"COLOR-005CC5\"},{\"offset\":144,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":166,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":189,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":200,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":217,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":258,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":285,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":304,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":313,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":318,\"length\":5,\"style\":\"COLOR-005CC5\"},{\"offset\":324,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":333,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":268,\"length\":4,\"style\":\"COLOR-990055\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9tciq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5migj\",\"text\":\"效果图：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":4,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":4,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"e35gq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ek9vg\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"21j26\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"asdrk\",\"text\":\"节流的概念：在指定的事件还未执行完时，无法再一次执行这个事件。（上厕所，不是喝一口水就立刻上厕所，每过一段时间才回去上厕所）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":62,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":62,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":62,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":6,\"style\":\"COLOR-262626\"},{\"offset\":31,\"length\":31,\"style\":\"COLOR-262626\"},{\"offset\":0,\"length\":6,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":31,\"length\":31,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":6,\"length\":25,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"e7h7\",\"text\":\"1. 时间戳版：持续触发事件的过程中，函数会立即执行，并在指定时间只执行一次。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":39,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":39,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":3,\"style\":\"COLOR-262626\"},{\"offset\":0,\"length\":3,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":3,\"length\":36,\"style\":\"COLOR-333333\"},{\"offset\":3,\"length\":36,\"style\":\"BGCOLOR-FBFBFB\"},{\"offset\":8,\"length\":31,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5b7n5\",\"text\":\"function throttle(fn,wait) {\\n        let timeout;\\n        let previous = 0;\\n        return  function(){\\n            let now = Date.now();\\n            let content = this;\\n            if(now-previous>wait){\\n                fn.call(content)\\n                previous = now\\n            }\\n        }\\n    }\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":28,\"style\":\"LINEHEIGHT-2\"},{\"offset\":29,\"length\":20,\"style\":\"LINEHEIGHT-2\"},{\"offset\":50,\"length\":25,\"style\":\"LINEHEIGHT-2\"},{\"offset\":76,\"length\":27,\"style\":\"LINEHEIGHT-2\"},{\"offset\":104,\"length\":33,\"style\":\"LINEHEIGHT-2\"},{\"offset\":138,\"length\":31,\"style\":\"LINEHEIGHT-2\"},{\"offset\":170,\"length\":34,\"style\":\"LINEHEIGHT-2\"},{\"offset\":205,\"length\":32,\"style\":\"LINEHEIGHT-2\"},{\"offset\":238,\"length\":30,\"style\":\"LINEHEIGHT-2\"},{\"offset\":269,\"length\":13,\"style\":\"LINEHEIGHT-2\"},{\"offset\":283,\"length\":9,\"style\":\"LINEHEIGHT-2\"},{\"offset\":293,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":28,\"style\":\"LETTERSPACING-2\"},{\"offset\":29,\"length\":20,\"style\":\"LETTERSPACING-2\"},{\"offset\":50,\"length\":25,\"style\":\"LETTERSPACING-2\"},{\"offset\":76,\"length\":27,\"style\":\"LETTERSPACING-2\"},{\"offset\":104,\"length\":33,\"style\":\"LETTERSPACING-2\"},{\"offset\":138,\"length\":31,\"style\":\"LETTERSPACING-2\"},{\"offset\":170,\"length\":34,\"style\":\"LETTERSPACING-2\"},{\"offset\":205,\"length\":32,\"style\":\"LETTERSPACING-2\"},{\"offset\":238,\"length\":30,\"style\":\"LETTERSPACING-2\"},{\"offset\":269,\"length\":13,\"style\":\"LETTERSPACING-2\"},{\"offset\":283,\"length\":9,\"style\":\"LETTERSPACING-2\"},{\"offset\":293,\"length\":5,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":28,\"style\":\"FONTSIZE-18\"},{\"offset\":29,\"length\":20,\"style\":\"FONTSIZE-18\"},{\"offset\":50,\"length\":25,\"style\":\"FONTSIZE-18\"},{\"offset\":76,\"length\":27,\"style\":\"FONTSIZE-18\"},{\"offset\":104,\"length\":33,\"style\":\"FONTSIZE-18\"},{\"offset\":138,\"length\":31,\"style\":\"FONTSIZE-18\"},{\"offset\":170,\"length\":34,\"style\":\"FONTSIZE-18\"},{\"offset\":205,\"length\":32,\"style\":\"FONTSIZE-18\"},{\"offset\":238,\"length\":30,\"style\":\"FONTSIZE-18\"},{\"offset\":269,\"length\":13,\"style\":\"FONTSIZE-18\"},{\"offset\":283,\"length\":9,\"style\":\"FONTSIZE-18\"},{\"offset\":293,\"length\":5,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":37,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":58,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":71,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":84,\"length\":6,\"style\":\"COLOR-D73A49\"},{\"offset\":92,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":116,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":124,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":150,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":162,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":164,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":182,\"length\":2,\"style\":\"COLOR-D73A49\"},{\"offset\":188,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":197,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":263,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":9,\"length\":8,\"style\":\"COLOR-005CC5\"},{\"offset\":18,\"length\":2,\"style\":\"COLOR-005CC5\"},{\"offset\":21,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":41,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":62,\"length\":8,\"style\":\"COLOR-005CC5\"},{\"offset\":73,\"length\":1,\"style\":\"COLOR-005CC5\"},{\"offset\":120,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":131,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":154,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":185,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":189,\"length\":8,\"style\":\"COLOR-005CC5\"},{\"offset\":198,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":221,\"length\":2,\"style\":\"COLOR-005CC5\"},{\"offset\":224,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":229,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":254,\"length\":8,\"style\":\"COLOR-005CC5\"},{\"offset\":265,\"length\":3,\"style\":\"COLOR-005CC5\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"14nl8\",\"text\":\"2. 效果图\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":6,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":6,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cnfrt\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9dbug\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{\"float\":\"\",\"alignment\":\"center\"}},{\"key\":\"917u9\",\"text\":\"2. 定时器版：持续触发事件的过程中，函数不会立即执行，而是在指定的时间后才会执行\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":41,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":41,\"style\":\"FONTSIZE-18\"},{\"offset\":3,\"length\":38,\"style\":\"COLOR-333333\"},{\"offset\":3,\"length\":38,\"style\":\"BGCOLOR-FBFBFB\"},{\"offset\":8,\"length\":33,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"pv8e\",\"text\":\"function throttle(fn, wait) {\\n        let timeout;\\n        return function(){\\n            let content = this;\\n            if(!timeout){\\n                timeout = setTimeout(()=>{           \\n                    timeout=null;\\n                     fn.call(content);\\n                },wait)\\n            }\\n        }\\n    }\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"LETTERSPACING-2\"},{\"offset\":30,\"length\":20,\"style\":\"LETTERSPACING-2\"},{\"offset\":51,\"length\":26,\"style\":\"LETTERSPACING-2\"},{\"offset\":78,\"length\":31,\"style\":\"LETTERSPACING-2\"},{\"offset\":110,\"length\":25,\"style\":\"LETTERSPACING-2\"},{\"offset\":136,\"length\":53,\"style\":\"LETTERSPACING-2\"},{\"offset\":190,\"length\":33,\"style\":\"LETTERSPACING-2\"},{\"offset\":224,\"length\":38,\"style\":\"LETTERSPACING-2\"},{\"offset\":263,\"length\":23,\"style\":\"LETTERSPACING-2\"},{\"offset\":287,\"length\":13,\"style\":\"LETTERSPACING-2\"},{\"offset\":301,\"length\":9,\"style\":\"LETTERSPACING-2\"},{\"offset\":311,\"length\":5,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-2\"},{\"offset\":30,\"length\":20,\"style\":\"LINEHEIGHT-2\"},{\"offset\":51,\"length\":26,\"style\":\"LINEHEIGHT-2\"},{\"offset\":78,\"length\":31,\"style\":\"LINEHEIGHT-2\"},{\"offset\":110,\"length\":25,\"style\":\"LINEHEIGHT-2\"},{\"offset\":136,\"length\":53,\"style\":\"LINEHEIGHT-2\"},{\"offset\":190,\"length\":33,\"style\":\"LINEHEIGHT-2\"},{\"offset\":224,\"length\":38,\"style\":\"LINEHEIGHT-2\"},{\"offset\":263,\"length\":23,\"style\":\"LINEHEIGHT-2\"},{\"offset\":287,\"length\":13,\"style\":\"LINEHEIGHT-2\"},{\"offset\":301,\"length\":9,\"style\":\"LINEHEIGHT-2\"},{\"offset\":311,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":29,\"style\":\"FONTSIZE-18\"},{\"offset\":30,\"length\":20,\"style\":\"FONTSIZE-18\"},{\"offset\":51,\"length\":26,\"style\":\"FONTSIZE-18\"},{\"offset\":78,\"length\":31,\"style\":\"FONTSIZE-18\"},{\"offset\":110,\"length\":25,\"style\":\"FONTSIZE-18\"},{\"offset\":136,\"length\":53,\"style\":\"FONTSIZE-18\"},{\"offset\":190,\"length\":33,\"style\":\"FONTSIZE-18\"},{\"offset\":224,\"length\":38,\"style\":\"FONTSIZE-18\"},{\"offset\":263,\"length\":23,\"style\":\"FONTSIZE-18\"},{\"offset\":287,\"length\":13,\"style\":\"FONTSIZE-18\"},{\"offset\":301,\"length\":9,\"style\":\"FONTSIZE-18\"},{\"offset\":311,\"length\":5,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":38,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":59,\"length\":6,\"style\":\"COLOR-D73A49\"},{\"offset\":66,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":90,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":102,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":104,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":122,\"length\":2,\"style\":\"COLOR-D73A49\"},{\"offset\":125,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":160,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":175,\"length\":2,\"style\":\"COLOR-D73A49\"},{\"offset\":217,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":9,\"length\":8,\"style\":\"COLOR-005CC5\"},{\"offset\":18,\"length\":2,\"style\":\"COLOR-005CC5\"},{\"offset\":22,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":42,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":94,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":126,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":152,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":210,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":245,\"length\":2,\"style\":\"COLOR-005CC5\"},{\"offset\":248,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":253,\"length\":7,\"style\":\"COLOR-005CC5\"},{\"offset\":281,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":218,\"length\":4,\"style\":\"COLOR-990055\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"75smp\",\"text\":\"效果图：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":4,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"d5643\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9e3a0\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{\"float\":\"\",\"alignment\":\"center\"}},{\"key\":\"bc4u\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5v9ot\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f2tjp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4ocq7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://cdn.nlark.com/yuque/0/2019/gif/305273/1560613672625-77d27c06-a16e-4ff3-adc6-da46de200089.gif\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://cdn.nlark.com/yuque/0/2019/gif/305273/1560613768292-dbc174ee-ff99-4bcf-a106-c53e33770d4f.gif\"}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://cdn.nlark.com/yuque/0/2019/webp/305273/1560613903548-a54dcad5-a82d-4efb-9c55-f32b863a10cc.webp\"}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://cdn.nlark.com/yuque/0/2019/webp/305273/1560613974804-d1b01243-60af-46e3-9bce-4848f4c24aab.webp\"}}}}', '<p style=\"text-align:start;\"><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">防抖的概念：<strong>所谓防抖，就是指触发事件后在 n 秒内函数只能执行一次，如果在 n 秒内又触发了事件，则会重新计算函数执行时间。</strong>（坐公交车，最后一个人上车，司机才会发车）</span></span></span></p><p><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">1. 非立即执行版</span></span></span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\"><span style=\"color:#d73a49\">function</span> <span style=\"color:#005cc5\">debounce</span>(<span style=\"color:#005cc5\">func</span>, <span style=\"color:#005cc5\">wait</span>) {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">    <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">timeout</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">    <span style=\"color:#d73a49\">return</span> <span style=\"color:#d73a49\">function</span> () {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">context</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#d73a49\">this</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">args</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#005cc5\">arguments</span>;</span></span></span><br/><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">if</span> (<span style=\"color:#005cc5\">timeout</span>) clearTimeout(<span style=\"color:#005cc5\">timeout</span>);</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        </span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#005cc5\">timeout</span> <span style=\"color:#d73a49\">=</span> setTimeout(() <span style=\"color:#d73a49\">=&gt;</span> {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">            <span style=\"color:#005cc5\">func</span>.<span style=\"color:#005cc5\">apply</span>(<span style=\"color:#005cc5\">context</span>, <span style=\"color:#005cc5\">args</span>)</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        }, <span style=\"color:#005cc5\">wait</span>);</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">    }</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">}</span></span></span></code></pre><p><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">效果图：</span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"https://cdn.nlark.com/yuque/0/2019/gif/305273/1560613672625-77d27c06-a16e-4ff3-adc6-da46de200089.gif\"/></div><p></p><p><span style=\"color:#333333\"><span style=\"background-color:#fbfbfb\"><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">2. 立即执行版</span></span></span></span></span></p><p></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\"><span style=\"color:#d73a49\">function</span> <span style=\"color:#005cc5\">debounce</span>(<span style=\"color:#005cc5\">func</span>,<span style=\"color:#005cc5\">wait</span>) {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">    <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">timeout</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">    <span style=\"color:#d73a49\">return</span> <span style=\"color:#d73a49\">function</span> () {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">context</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#d73a49\">this</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">args</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#005cc5\">arguments</span>;</span></span></span><br/><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">if</span> (<span style=\"color:#005cc5\">timeout</span>) clearTimeout(<span style=\"color:#005cc5\">timeout</span>);</span></span></span><br/><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">callNow</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#d73a49\">!</span><span style=\"color:#005cc5\">timeout</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#005cc5\">timeout</span> <span style=\"color:#d73a49\">=</span> setTimeout(() <span style=\"color:#d73a49\">=&gt;</span> {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">            <span style=\"color:#005cc5\">timeout</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#990055\">null</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        }, <span style=\"color:#005cc5\">wait</span>)</span></span></span><br/><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">if</span> (<span style=\"color:#005cc5\">callNow</span>) <span style=\"color:#005cc5\">func</span>.<span style=\"color:#005cc5\">apply</span>(<span style=\"color:#005cc5\">context</span>, <span style=\"color:#005cc5\">args</span>)</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">    }</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">}</span></span></span></code></pre><p></p><p><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">效果图：</span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"https://cdn.nlark.com/yuque/0/2019/gif/305273/1560613768292-dbc174ee-ff99-4bcf-a106-c53e33770d4f.gif\"/></div><p></p><p><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\"><span style=\"color:#262626\"><span style=\"background-color:#ffffff\">节流的概念：</span></span><strong>在指定的事件还未执行完时，无法再一次执行这个事件。</strong><span style=\"color:#262626\"><span style=\"background-color:#ffffff\">（上厕所，不是喝一口水就立刻上厕所，每过一段时间才回去上厕所）</span></span></span></span></span></p><p><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\"><span style=\"color:#262626\"><span style=\"background-color:#ffffff\">1. </span></span><span style=\"color:#333333\"><span style=\"background-color:#fbfbfb\">时间戳版：<strong>持续触发事件的过程中，函数会立即执行，并在指定时间只执行一次。</strong></span></span></span></span></span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\"><span style=\"color:#d73a49\">function</span> <span style=\"color:#005cc5\">throttle</span>(<span style=\"color:#005cc5\">fn</span>,<span style=\"color:#005cc5\">wait</span>) {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">timeout</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">previous</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#005cc5\">0</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">return</span>  <span style=\"color:#d73a49\">function</span>(){</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">            <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">now</span> <span style=\"color:#d73a49\">=</span> Date.<span style=\"color:#005cc5\">now</span>();</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">            <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">content</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#d73a49\">this</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">            <span style=\"color:#d73a49\">if</span>(<span style=\"color:#005cc5\">now</span><span style=\"color:#d73a49\">-</span><span style=\"color:#005cc5\">previous</span><span style=\"color:#d73a49\">&gt;</span><span style=\"color:#005cc5\">wait</span>){</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">                <span style=\"color:#005cc5\">fn</span>.<span style=\"color:#005cc5\">call</span>(<span style=\"color:#005cc5\">content</span>)</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">                <span style=\"color:#005cc5\">previous</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#005cc5\">now</span></span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">            }</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">        }</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">    }</span></span></span></code></pre><p><span style=\"line-height:2\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\">2. 效果图</span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"https://cdn.nlark.com/yuque/0/2019/webp/305273/1560613903548-a54dcad5-a82d-4efb-9c55-f32b863a10cc.webp\"/></div><p><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">2. <span style=\"color:#333333\"><span style=\"background-color:#fbfbfb\">定时器版：<strong>持续触发事件的过程中，函数不会立即执行，而是在指定的时间后才会执行</strong></span></span></span></span></span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\"><span style=\"color:#d73a49\">function</span> <span style=\"color:#005cc5\">throttle</span>(<span style=\"color:#005cc5\">fn</span>, <span style=\"color:#005cc5\">wait</span>) {</span></span></span><br/><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">timeout</span>;</span></span></span><br/><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">        <span style=\"color:#d73a49\">return</span> <span style=\"color:#d73a49\">function</span>(){</span></span></span><br/><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">            <span style=\"color:#d73a49\">let</span> <span style=\"color:#005cc5\">content</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#d73a49\">this</span>;</span></span></span><br/><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">            <span style=\"color:#d73a49\">if</span>(<span style=\"color:#d73a49\">!</span><span style=\"color:#005cc5\">timeout</span>){</span></span></span><br/><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">                <span style=\"color:#005cc5\">timeout</span> <span style=\"color:#d73a49\">=</span> setTimeout(()<span style=\"color:#d73a49\">=&gt;</span>{           </span></span></span><br/><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">                    <span style=\"color:#005cc5\">timeout</span><span style=\"color:#d73a49\">=</span><span style=\"color:#990055\">null</span>;</span></span></span><br/><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">                     <span style=\"color:#005cc5\">fn</span>.<span style=\"color:#005cc5\">call</span>(<span style=\"color:#005cc5\">content</span>);</span></span></span><br/><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">                },<span style=\"color:#005cc5\">wait</span>)</span></span></span><br/><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">            }</span></span></span><br/><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">        }</span></span></span><br/><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">    }</span></span></span></code></pre><p><span style=\"letter-spacing:2px\"><span style=\"line-height:2\"><span style=\"font-size:18px\">效果图：</span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"https://cdn.nlark.com/yuque/0/2019/webp/305273/1560613974804-d1b01243-60af-46e3-9bce-4848f4c24aab.webp\"/></div><p></p><p></p><p></p><p></p>', 82, 1, 0, '2019-06-26 00:00:00', '2019-06-28 00:00:00');
INSERT INTO `article` VALUES (106, '201610804032', 'this的学习分析', 1, 1, 'this永远指向最后调用它的那个对象(记住这句话，this了解一半默认绑定默认绑定旨在，函数独立调用时默认绑定this。浏览器环境下为window（注意非严格模式），严格模式下为undefined。优先级是最低的一种绑定方式。var nam', 'this', 'http://img.pzhuweb.cn/2016108040321561959835556.jpg', '{\"blocks\":[{\"key\":\"308hu\",\"text\":\"this永远指向最后调用它的那个对象(记住这句话，this了解一半\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":33,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":33,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\"}},{\"key\":\"5tr2r\",\"text\":\"默认绑定\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":4,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":4,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"8iso9\",\"text\":\"默认绑定旨在，函数独立调用时默认绑定this。浏览器环境下为window（注意非严格模式），严格模式下为undefined。优先级是最低的一种绑定方式。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":76,\"style\":\"COLOR-262626\"},{\"offset\":0,\"length\":76,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":76,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":76,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":76,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"87sh2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"d96rb\",\"text\":\"var name = \\\"windowsName\\\";\\nfunction a() {\\n    var name = \\\"Cherry\\\";\\n    console.log(this.name);          // windowsName\\n    console.log(\\\"inner:\\\" + this);    // inner: Window\\n}\\na();\\nconsole.log(\\\"outer:\\\" + this)         // outer: Window\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-2\"},{\"offset\":26,\"length\":14,\"style\":\"LINEHEIGHT-2\"},{\"offset\":41,\"length\":24,\"style\":\"LINEHEIGHT-2\"},{\"offset\":66,\"length\":51,\"style\":\"LINEHEIGHT-2\"},{\"offset\":118,\"length\":53,\"style\":\"LINEHEIGHT-2\"},{\"offset\":172,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":174,\"length\":4,\"style\":\"LINEHEIGHT-2\"},{\"offset\":179,\"length\":53,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":25,\"style\":\"LETTERSPACING-0\"},{\"offset\":26,\"length\":14,\"style\":\"LETTERSPACING-0\"},{\"offset\":41,\"length\":24,\"style\":\"LETTERSPACING-0\"},{\"offset\":66,\"length\":51,\"style\":\"LETTERSPACING-0\"},{\"offset\":118,\"length\":53,\"style\":\"LETTERSPACING-0\"},{\"offset\":172,\"length\":1,\"style\":\"LETTERSPACING-0\"},{\"offset\":174,\"length\":4,\"style\":\"LETTERSPACING-0\"},{\"offset\":179,\"length\":53,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":25,\"style\":\"FONTSIZE-16\"},{\"offset\":26,\"length\":14,\"style\":\"FONTSIZE-16\"},{\"offset\":41,\"length\":24,\"style\":\"FONTSIZE-16\"},{\"offset\":66,\"length\":51,\"style\":\"FONTSIZE-16\"},{\"offset\":118,\"length\":53,\"style\":\"FONTSIZE-16\"},{\"offset\":172,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":174,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":179,\"length\":53,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":9,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":26,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":45,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":54,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":82,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":143,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":145,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":200,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":202,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":4,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":35,\"length\":1,\"style\":\"COLOR-005CC5\"},{\"offset\":49,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":78,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":87,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":130,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":187,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":11,\"length\":13,\"style\":\"COLOR-669900\"},{\"offset\":56,\"length\":8,\"style\":\"COLOR-669900\"},{\"offset\":134,\"length\":8,\"style\":\"COLOR-669900\"},{\"offset\":191,\"length\":8,\"style\":\"COLOR-669900\"},{\"offset\":103,\"length\":14,\"style\":\"COLOR-6A737D\"},{\"offset\":155,\"length\":16,\"style\":\"COLOR-6A737D\"},{\"offset\":216,\"length\":16,\"style\":\"COLOR-6A737D\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"1i2bk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4dup7\",\"text\":\"注意：这里我们没有使用严格模式，如果使用严格模式的话，全局对象就是 undefined\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":43,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":43,\"style\":\"FONTSIZE-16\"},{\"offset\":34,\"length\":9,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"elj9r\",\"text\":\"\\n隐式绑定\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":4,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1,\"length\":4,\"style\":\"LETTERSPACING-0\"},{\"offset\":1,\"length\":4,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"8dplm\",\"text\":\"规则：调用位置是否有上下文对象，（函数调用时被某些对象拥有）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":30,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":30,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"940qv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"8bq7f\",\"text\":\"var name = \\\"windowsName\\\";\\nvar a = {\\n    name: \\\"Cherry\\\",\\n    fn : function () {\\n        console.log(this.name);  // Cherry\\n    }\\n}\\na.fn();\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-2\"},{\"offset\":26,\"length\":9,\"style\":\"LINEHEIGHT-2\"},{\"offset\":36,\"length\":19,\"style\":\"LINEHEIGHT-2\"},{\"offset\":56,\"length\":22,\"style\":\"LINEHEIGHT-2\"},{\"offset\":79,\"length\":42,\"style\":\"LINEHEIGHT-2\"},{\"offset\":122,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":128,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":130,\"length\":7,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":25,\"style\":\"LETTERSPACING-0\"},{\"offset\":26,\"length\":9,\"style\":\"LETTERSPACING-0\"},{\"offset\":36,\"length\":19,\"style\":\"LETTERSPACING-0\"},{\"offset\":56,\"length\":22,\"style\":\"LETTERSPACING-0\"},{\"offset\":79,\"length\":42,\"style\":\"LETTERSPACING-0\"},{\"offset\":122,\"length\":5,\"style\":\"LETTERSPACING-0\"},{\"offset\":128,\"length\":1,\"style\":\"LETTERSPACING-0\"},{\"offset\":130,\"length\":7,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":25,\"style\":\"FONTSIZE-16\"},{\"offset\":26,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":36,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":56,\"length\":22,\"style\":\"FONTSIZE-16\"},{\"offset\":79,\"length\":42,\"style\":\"FONTSIZE-16\"},{\"offset\":122,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":128,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":130,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":9,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":26,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":32,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":65,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":99,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":4,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":30,\"length\":1,\"style\":\"COLOR-005CC5\"},{\"offset\":40,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":60,\"length\":2,\"style\":\"COLOR-005CC5\"},{\"offset\":95,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":104,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":132,\"length\":2,\"style\":\"COLOR-005CC5\"},{\"offset\":11,\"length\":13,\"style\":\"COLOR-669900\"},{\"offset\":46,\"length\":8,\"style\":\"COLOR-669900\"},{\"offset\":112,\"length\":9,\"style\":\"COLOR-6A737D\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"50i2c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"21cr1\",\"text\":\"隐式丢失：当一个对象上的函数被一个无任何修饰的变量保存引用后，隐式绑定规则失效（进而只能使用默认的绑定规则）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":54,\"style\":\"COLOR-262626\"},{\"offset\":0,\"length\":54,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":54,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":54,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":54,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"7rd12\",\"text\":\"var name = \\\"windowsName\\\";\\nvar a = {\\n    name : null,\\n    fn : function () {\\n        console.log(this.name);\\n    }\\n}\\na.fn() //null\\nvar f = a.fn;\\nf(); // windowsName\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-2\"},{\"offset\":26,\"length\":9,\"style\":\"LINEHEIGHT-2\"},{\"offset\":36,\"length\":16,\"style\":\"LINEHEIGHT-2\"},{\"offset\":53,\"length\":22,\"style\":\"LINEHEIGHT-2\"},{\"offset\":76,\"length\":31,\"style\":\"LINEHEIGHT-2\"},{\"offset\":108,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":114,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":116,\"length\":13,\"style\":\"LINEHEIGHT-2\"},{\"offset\":130,\"length\":13,\"style\":\"LINEHEIGHT-2\"},{\"offset\":144,\"length\":19,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":25,\"style\":\"LETTERSPACING-0\"},{\"offset\":26,\"length\":9,\"style\":\"LETTERSPACING-0\"},{\"offset\":36,\"length\":16,\"style\":\"LETTERSPACING-0\"},{\"offset\":53,\"length\":22,\"style\":\"LETTERSPACING-0\"},{\"offset\":76,\"length\":31,\"style\":\"LETTERSPACING-0\"},{\"offset\":108,\"length\":5,\"style\":\"LETTERSPACING-0\"},{\"offset\":114,\"length\":1,\"style\":\"LETTERSPACING-0\"},{\"offset\":116,\"length\":13,\"style\":\"LETTERSPACING-0\"},{\"offset\":130,\"length\":13,\"style\":\"LETTERSPACING-0\"},{\"offset\":144,\"length\":19,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":25,\"style\":\"FONTSIZE-16\"},{\"offset\":26,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":36,\"length\":16,\"style\":\"FONTSIZE-16\"},{\"offset\":53,\"length\":22,\"style\":\"FONTSIZE-16\"},{\"offset\":76,\"length\":31,\"style\":\"FONTSIZE-16\"},{\"offset\":108,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":114,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":116,\"length\":13,\"style\":\"FONTSIZE-16\"},{\"offset\":130,\"length\":13,\"style\":\"FONTSIZE-16\"},{\"offset\":144,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":9,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":26,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":32,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":62,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":96,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":130,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":136,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":4,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":30,\"length\":1,\"style\":\"COLOR-005CC5\"},{\"offset\":40,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":57,\"length\":2,\"style\":\"COLOR-005CC5\"},{\"offset\":92,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":101,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":118,\"length\":2,\"style\":\"COLOR-005CC5\"},{\"offset\":134,\"length\":1,\"style\":\"COLOR-005CC5\"},{\"offset\":140,\"length\":2,\"style\":\"COLOR-005CC5\"},{\"offset\":11,\"length\":13,\"style\":\"COLOR-669900\"},{\"offset\":47,\"length\":4,\"style\":\"COLOR-990055\"},{\"offset\":123,\"length\":6,\"style\":\"COLOR-6A737D\"},{\"offset\":149,\"length\":14,\"style\":\"COLOR-6A737D\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"84pdd\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"7i2b9\",\"text\":\"总结：this 的指向不是在创建的时候就可以确定的，永远是指向最后调用的那个对象\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"BOLD\"},{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":40,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":40,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"55m2b\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"8butt\",\"text\":\"显示绑定（call apply bind）\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":21,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":21,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"7fqbt\",\"text\":\"1. apply() 方法调用一个函数, 其具有一个指定的this值，以及作为一个数组（或类似数组的对象）提供的参数 \\nfun.apply(thisArg, [argsArray])\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":59,\"style\":\"FONTSIZE-16\"},{\"offset\":60,\"length\":31,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":59,\"style\":\"LINEHEIGHT-2\"},{\"offset\":60,\"length\":31,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":59,\"style\":\"LETTERSPACING-0\"},{\"offset\":60,\"length\":31,\"style\":\"LETTERSPACING-0\"},{\"offset\":60,\"length\":31,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\"}},{\"key\":\"8s9du\",\"text\":\"thisArg：在 fun 函数运行时指定的 this 值，如果这个函数处于非严格模式下，则指定为 null 或 undefined 时会自动指向全局对象（浏览器中就是window对象）\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"offset\":0,\"length\":93,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":93,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":93,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":7,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"akttg\",\"text\":\"argsArray : 一个数组或者类数组对象，其中的数组元素将作为单独的参数传给 fun 函数。如果该参数的值为null 或 undefined，则表示不需要传入任何参数\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"offset\":0,\"length\":86,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":86,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":86,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":9,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"88crl\",\"text\":\"2. 和 call 的区别 \\nfun.call(thisArg,a,b,c...) \\napply 和 call 的区别是 call 方法接受的是若干个参数列表，而 apply 接收的是一个包含多个参数的数组\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-2\"},{\"offset\":15,\"length\":26,\"style\":\"LINEHEIGHT-2\"},{\"offset\":43,\"length\":60,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":14,\"style\":\"LETTERSPACING-0\"},{\"offset\":15,\"length\":26,\"style\":\"LETTERSPACING-0\"},{\"offset\":43,\"length\":60,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":14,\"style\":\"FONTSIZE-16\"},{\"offset\":15,\"length\":26,\"style\":\"FONTSIZE-16\"},{\"offset\":43,\"length\":60,\"style\":\"FONTSIZE-16\"},{\"offset\":15,\"length\":26,\"style\":\"CODE\"},{\"offset\":43,\"length\":60,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"f3193\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"661gm\",\"text\":\"var Person = function (name, age) {\\n  this.name = name;\\n  this.age = age;\\n};\\nvar Girl = function (name) {\\n  Person.call(this, name);\\n};\\nvar Boy = function (name, age) {\\n  Person.apply(this, arguments);\\n}\\nvar g1 = new Girl (\'qing\');\\nvar b1 = new Boy(\'qianlong\', 100);\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":35,\"style\":\"LINEHEIGHT-2\"},{\"offset\":36,\"length\":19,\"style\":\"LINEHEIGHT-2\"},{\"offset\":56,\"length\":17,\"style\":\"LINEHEIGHT-2\"},{\"offset\":74,\"length\":2,\"style\":\"LINEHEIGHT-2\"},{\"offset\":77,\"length\":28,\"style\":\"LINEHEIGHT-2\"},{\"offset\":106,\"length\":26,\"style\":\"LINEHEIGHT-2\"},{\"offset\":133,\"length\":2,\"style\":\"LINEHEIGHT-2\"},{\"offset\":136,\"length\":32,\"style\":\"LINEHEIGHT-2\"},{\"offset\":169,\"length\":32,\"style\":\"LINEHEIGHT-2\"},{\"offset\":202,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":204,\"length\":27,\"style\":\"LINEHEIGHT-2\"},{\"offset\":232,\"length\":34,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":35,\"style\":\"LETTERSPACING-0\"},{\"offset\":36,\"length\":19,\"style\":\"LETTERSPACING-0\"},{\"offset\":56,\"length\":17,\"style\":\"LETTERSPACING-0\"},{\"offset\":74,\"length\":2,\"style\":\"LETTERSPACING-0\"},{\"offset\":77,\"length\":28,\"style\":\"LETTERSPACING-0\"},{\"offset\":106,\"length\":26,\"style\":\"LETTERSPACING-0\"},{\"offset\":133,\"length\":2,\"style\":\"LETTERSPACING-0\"},{\"offset\":136,\"length\":32,\"style\":\"LETTERSPACING-0\"},{\"offset\":169,\"length\":32,\"style\":\"LETTERSPACING-0\"},{\"offset\":202,\"length\":1,\"style\":\"LETTERSPACING-0\"},{\"offset\":204,\"length\":27,\"style\":\"LETTERSPACING-0\"},{\"offset\":232,\"length\":34,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":35,\"style\":\"FONTSIZE-16\"},{\"offset\":36,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":56,\"length\":17,\"style\":\"FONTSIZE-16\"},{\"offset\":74,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":77,\"length\":28,\"style\":\"FONTSIZE-16\"},{\"offset\":106,\"length\":26,\"style\":\"FONTSIZE-16\"},{\"offset\":133,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":136,\"length\":32,\"style\":\"FONTSIZE-16\"},{\"offset\":169,\"length\":32,\"style\":\"FONTSIZE-16\"},{\"offset\":202,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":204,\"length\":27,\"style\":\"FONTSIZE-16\"},{\"offset\":232,\"length\":34,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":11,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":13,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":38,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":48,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":58,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":67,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":77,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":86,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":88,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":120,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":136,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":144,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":146,\"length\":8,\"style\":\"COLOR-D73A49\"},{\"offset\":184,\"length\":4,\"style\":\"COLOR-D73A49\"},{\"offset\":204,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":211,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":213,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":232,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":239,\"length\":1,\"style\":\"COLOR-D73A49\"},{\"offset\":241,\"length\":3,\"style\":\"COLOR-D73A49\"},{\"offset\":4,\"length\":6,\"style\":\"COLOR-005CC5\"},{\"offset\":23,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":29,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":43,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":50,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":63,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":69,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":81,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":98,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":115,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":126,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":140,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":156,\"length\":4,\"style\":\"COLOR-005CC5\"},{\"offset\":162,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":178,\"length\":5,\"style\":\"COLOR-005CC5\"},{\"offset\":190,\"length\":9,\"style\":\"COLOR-005CC5\"},{\"offset\":208,\"length\":2,\"style\":\"COLOR-005CC5\"},{\"offset\":236,\"length\":2,\"style\":\"COLOR-005CC5\"},{\"offset\":261,\"length\":3,\"style\":\"COLOR-005CC5\"},{\"offset\":223,\"length\":6,\"style\":\"COLOR-669900\"},{\"offset\":249,\"length\":10,\"style\":\"COLOR-669900\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"525u7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"71sus\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"3l5b4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{}}', '<h2 style=\"text-align:start;\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">this永远指向最后调用它的那个对象(记住这句话，this了解一半</span></span></span></h2><h3><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">默认绑定</span></span></span></h3><p><span style=\"color:#262626\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">默认绑定旨在，函数独立调用时默认绑定this。浏览器环境下为window（注意非严格模式），严格模式下为undefined。优先级是最低的一种绑定方式。</span></span></span></span></span></p><p></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">name</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#669900\">&quot;windowsName&quot;</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">function</span> <span style=\"color:#005cc5\">a</span>() {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">    <span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">name</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#669900\">&quot;Cherry&quot;</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">    console.<span style=\"color:#005cc5\">log</span>(<span style=\"color:#d73a49\">this</span>.<span style=\"color:#005cc5\">name</span>);          <span style=\"color:#6a737d\">// windowsName</span></span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">    console.<span style=\"color:#005cc5\">log</span>(<span style=\"color:#669900\">&quot;inner:&quot;</span> <span style=\"color:#d73a49\">+</span> <span style=\"color:#d73a49\">this</span>);    <span style=\"color:#6a737d\">// inner: Window</span></span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">}</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">a();</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">console.<span style=\"color:#005cc5\">log</span>(<span style=\"color:#669900\">&quot;outer:&quot;</span> <span style=\"color:#d73a49\">+</span> <span style=\"color:#d73a49\">this</span>)         <span style=\"color:#6a737d\">// outer: Window</span></span></span></span></code></pre><p style=\"text-align:start;text-indent:2em;\"></p><p><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">注意：这里我们没有使用严格模式，如果使用严格模式的话，全局对象就是 <code>undefined</code></span></span></span></p><h3><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">隐式绑定</span></span></span></h3><p><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">规则：调用位置是否有上下文对象，（函数调用时被某些对象拥有）</span></span></span></p><p></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">name</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#669900\">&quot;windowsName&quot;</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">a</span> <span style=\"color:#d73a49\">=</span> {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">    <span style=\"color:#005cc5\">name</span>: <span style=\"color:#669900\">&quot;Cherry&quot;</span>,</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">    <span style=\"color:#005cc5\">fn</span> : <span style=\"color:#d73a49\">function</span> () {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">        console.<span style=\"color:#005cc5\">log</span>(<span style=\"color:#d73a49\">this</span>.<span style=\"color:#005cc5\">name</span>);  <span style=\"color:#6a737d\">// Cherry</span></span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">    }</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">}</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">a.<span style=\"color:#005cc5\">fn</span>();</span></span></span></code></pre><p></p><p><span style=\"color:#262626\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">隐式丢失：当一个对象上的函数被一个无任何修饰的变量保存引用后，隐式绑定规则失效（进而只能使用默认的绑定规则）</span></span></span></span></span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">name</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#669900\">&quot;windowsName&quot;</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">a</span> <span style=\"color:#d73a49\">=</span> {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">    <span style=\"color:#005cc5\">name</span> : <span style=\"color:#990055\">null</span>,</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">    <span style=\"color:#005cc5\">fn</span> : <span style=\"color:#d73a49\">function</span> () {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">        console.<span style=\"color:#005cc5\">log</span>(<span style=\"color:#d73a49\">this</span>.<span style=\"color:#005cc5\">name</span>);</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">    }</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">}</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">a.<span style=\"color:#005cc5\">fn</span>() <span style=\"color:#6a737d\">//null</span></span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">f</span> <span style=\"color:#d73a49\">=</span> a.<span style=\"color:#005cc5\">fn</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">f(); <span style=\"color:#6a737d\">// windowsName</span></span></span></span></code></pre><p></p><p><strong><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">总结：this 的指向不是在创建的时候就可以确定的，永远是指向最后调用的那个对象</span></span></span></strong></p><p></p><h3><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">显示绑定（call apply bind）</span></span></span></h3><p style=\"text-align:left;\"><span style=\"font-size:16px\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\">1. apply() 方法调用一个函数, 其具有一个指定的this值，以及作为一个数组（或类似数组的对象）提供的参数 </span></span></span><br/><span style=\"font-size:16px\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><code>fun.apply(thisArg, [argsArray])</code></span></span></span></p><ul><ul><li><span style=\"font-size:16px\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><code>thisArg</code>：在 fun 函数运行时指定的 this 值，如果这个函数处于非严格模式下，则指定为 null 或 undefined 时会自动指向全局对象（浏览器中就是window对象）</span></span></span></li><li><span style=\"font-size:16px\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><code>argsArray</code> : 一个数组或者类数组对象，其中的数组元素将作为单独的参数传给 fun 函数。如果该参数的值为null 或 undefined，则表示不需要传入任何参数</span></span></span></li></ul></ul><p><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">2. 和 call 的区别 </span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><code>fun.call(thisArg,a,b,c...)</code></span></span></span> <br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><strong>apply 和 call 的区别是 call 方法接受的是若干个参数列表，而 apply 接收的是一个包含多个参数的数组</strong></span></span></span></p><p></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">Person</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#d73a49\">function</span> (<span style=\"color:#005cc5\">name</span>, <span style=\"color:#005cc5\">age</span>) {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">  <span style=\"color:#d73a49\">this</span>.<span style=\"color:#005cc5\">name</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#005cc5\">name</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">  <span style=\"color:#d73a49\">this</span>.<span style=\"color:#005cc5\">age</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#005cc5\">age</span>;</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">};</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">Girl</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#d73a49\">function</span> (<span style=\"color:#005cc5\">name</span>) {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">  Person.<span style=\"color:#005cc5\">call</span>(<span style=\"color:#d73a49\">this</span>, <span style=\"color:#005cc5\">name</span>);</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">};</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">Boy</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#d73a49\">function</span> (<span style=\"color:#005cc5\">name</span>, <span style=\"color:#005cc5\">age</span>) {</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">  Person.<span style=\"color:#005cc5\">apply</span>(<span style=\"color:#d73a49\">this</span>, <span style=\"color:#005cc5\">arguments</span>);</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">}</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">g1</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#d73a49\">new</span> Girl (<span style=\"color:#669900\">&#x27;qing&#x27;</span>);</span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#d73a49\">var</span> <span style=\"color:#005cc5\">b1</span> <span style=\"color:#d73a49\">=</span> <span style=\"color:#d73a49\">new</span> Boy(<span style=\"color:#669900\">&#x27;qianlong&#x27;</span>, <span style=\"color:#005cc5\">100</span>);</span></span></span></code></pre><p></p><p></p><p></p>', 47, 1, 0, '2019-06-26 00:00:00', '2019-06-28 00:00:00');
INSERT INTO `article` VALUES (107, '201610804032', 'ES6中Class类的静态属性方法和Super', 1, 1, '静态方法表示该方法不会被实例继承，而是直接通过类名来调用。静态方法中的this 指的是这个类，而不是类的实例。静态方法可以和非静态方法重名。父类的静态方法可以被子类继承调用。静态属性静态属性指的是类本身的属性，而不是定义在实例上的属性。Su', 'ES6 ', 'http://img.pzhuweb.cn/2016108040321562066432322.jpg', '{\"blocks\":[{\"key\":\"etqck\",\"text\":\"静态方法\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"BOLD\"},{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"md-end-block md-heading md-focus\",\"mdtype\":\"heading\",\"cid\":\"n0\"}}},{\"key\":\"acrv\",\"text\":\"表示该方法不会被实例继承，而是直接通过类名来调用。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"83bjs\",\"text\":\"静态方法中的this 指的是这个类，而不是类的实例。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"LINEHEIGHT-2\"},{\"offset\":6,\"length\":4,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8p7m4\",\"text\":\"静态方法可以和非静态方法重名。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"63f6u\",\"text\":\"父类的静态方法可以被子类继承调用。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dms6j\",\"text\":\"静态属性\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"BOLD\"},{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"md-end-block md-heading\",\"mdtype\":\"heading\",\"cid\":\"n15\"}}},{\"key\":\"c1j39\",\"text\":\"静态属性指的是类本身的属性，而不是定义在实例上的属性。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n17\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"}}},{\"key\":\"eu3tp\",\"text\":\"Super关键字\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"BOLD\"},{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"md-end-block md-heading\",\"mdtype\":\"heading\",\"cid\":\"n21\"}}},{\"key\":\"8f40j\",\"text\":\"super关键字既可以当做函数使用，也可以当做对象使用。\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":28,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n23\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"}}},{\"key\":\"dr4fj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"f13q9\",\"text\":\"super当做函数使用时，代表父类的构造函数，子类的构造函数必须执行一次父类的构造函数。\",\"type\":\"header-four\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":44,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"8456f\",\"text\":\"super虽然代表了父类的构造函数，但是它返回的还是子类的实例。\\n\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"offset\":0,\"length\":32,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3m64o\",\"text\":\"class A {\\n    constructor() {\\n     console.log(new.target.name);\\n    }\\n}\\nclass B extends A {\\n     constructor() {\\n     super();\\n    }\\n}\\nnew A() // A\\nnew B() // B\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-2\"},{\"offset\":10,\"length\":19,\"style\":\"LINEHEIGHT-2\"},{\"offset\":34,\"length\":30,\"style\":\"LINEHEIGHT-2\"},{\"offset\":65,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":71,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":73,\"length\":19,\"style\":\"LINEHEIGHT-2\"},{\"offset\":97,\"length\":16,\"style\":\"LINEHEIGHT-2\"},{\"offset\":114,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":119,\"length\":8,\"style\":\"LINEHEIGHT-2\"},{\"offset\":128,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":134,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":136,\"length\":12,\"style\":\"LINEHEIGHT-2\"},{\"offset\":149,\"length\":12,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":10,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":34,\"length\":30,\"style\":\"FONTSIZE-16\"},{\"offset\":65,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":71,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":73,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":97,\"length\":16,\"style\":\"FONTSIZE-16\"},{\"offset\":114,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":119,\"length\":8,\"style\":\"FONTSIZE-16\"},{\"offset\":128,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":134,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":136,\"length\":12,\"style\":\"FONTSIZE-16\"},{\"offset\":149,\"length\":12,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":14,\"length\":11,\"style\":\"COLOR-569CD6\"},{\"offset\":47,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":73,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":81,\"length\":7,\"style\":\"COLOR-569CD6\"},{\"offset\":98,\"length\":11,\"style\":\"COLOR-569CD6\"},{\"offset\":119,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":136,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":149,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":6,\"length\":1,\"style\":\"COLOR-4EC9B0\"},{\"offset\":35,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":79,\"length\":1,\"style\":\"COLOR-4EC9B0\"},{\"offset\":89,\"length\":1,\"style\":\"COLOR-4EC9B0\"},{\"offset\":140,\"length\":1,\"style\":\"COLOR-4EC9B0\"},{\"offset\":153,\"length\":1,\"style\":\"COLOR-4EC9B0\"},{\"offset\":7,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":25,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":42,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":46,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":50,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":57,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":62,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":65,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":71,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":90,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":109,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":124,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":128,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":134,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":141,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":154,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":43,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":51,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":58,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":144,\"length\":4,\"style\":\"COLOR-6A9955\"},{\"offset\":157,\"length\":4,\"style\":\"COLOR-6A9955\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"3mrsd\",\"text\":\"super作为函数只能在子类的构造函数中使用，其他方法中会报错。  \",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"offset\":0,\"length\":34,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8in7d\",\"text\":\"super作为对象时，在普通方法中指向父类的原型对象，在静态方法中指向父类。\",\"type\":\"header-four\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":38,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":38,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":38,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2ce8h\",\"text\":\"在子类的普通方法中通过super调用父类的方法时，方法内部的this指向当前子类的实例。\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"offset\":0,\"length\":44,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9a1p\",\"text\":\"使用super进行属性赋值的时候，super就相当于this，赋值的属性会变成子类的实例属性，而通过super调用这个赋值属性时，相当于调用父类原型对象的属性。\\n\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"offset\":0,\"length\":80,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"84bi9\",\"text\":\"class A {\\n     constructor() {\\n     this.x = 1;\\n    }\\n  }\\nclass B extends A {\\n     constructor() {\\n     super();\\n     this.x = 2;\\n     super.x = 3;\\n     console.log(super.x); // undefined\\n     console.log(this.x); // 3\\n    }\\n  }\\nlet b = new B();\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":7,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":26,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":40,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":43,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":46,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":48,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":54,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":75,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":94,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":109,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":122,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":125,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":128,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":140,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":143,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":146,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":160,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":164,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":170,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":172,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":200,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":204,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":209,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":211,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":219,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":225,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":235,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":242,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-2\"},{\"offset\":10,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":15,\"length\":15,\"style\":\"LINEHEIGHT-2\"},{\"offset\":31,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":36,\"length\":11,\"style\":\"LINEHEIGHT-2\"},{\"offset\":48,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":54,\"length\":3,\"style\":\"LINEHEIGHT-2\"},{\"offset\":58,\"length\":19,\"style\":\"LINEHEIGHT-2\"},{\"offset\":82,\"length\":16,\"style\":\"LINEHEIGHT-2\"},{\"offset\":99,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":104,\"length\":8,\"style\":\"LINEHEIGHT-2\"},{\"offset\":113,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":118,\"length\":11,\"style\":\"LINEHEIGHT-2\"},{\"offset\":130,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":135,\"length\":12,\"style\":\"LINEHEIGHT-2\"},{\"offset\":148,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":153,\"length\":34,\"style\":\"LINEHEIGHT-2\"},{\"offset\":192,\"length\":26,\"style\":\"LINEHEIGHT-2\"},{\"offset\":219,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":225,\"length\":3,\"style\":\"LINEHEIGHT-2\"},{\"offset\":229,\"length\":16,\"style\":\"LINEHEIGHT-2\"},{\"offset\":82,\"length\":16,\"style\":\"LETTERSPACING-0\"},{\"offset\":99,\"length\":1,\"style\":\"LETTERSPACING-0\"},{\"offset\":104,\"length\":8,\"style\":\"LETTERSPACING-0\"},{\"offset\":113,\"length\":1,\"style\":\"LETTERSPACING-0\"},{\"offset\":118,\"length\":11,\"style\":\"LETTERSPACING-0\"},{\"offset\":130,\"length\":1,\"style\":\"LETTERSPACING-0\"},{\"offset\":135,\"length\":12,\"style\":\"LETTERSPACING-0\"},{\"offset\":148,\"length\":1,\"style\":\"LETTERSPACING-0\"},{\"offset\":153,\"length\":34,\"style\":\"LETTERSPACING-0\"},{\"offset\":192,\"length\":26,\"style\":\"LETTERSPACING-0\"},{\"offset\":219,\"length\":5,\"style\":\"LETTERSPACING-0\"},{\"offset\":225,\"length\":3,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":10,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":15,\"length\":15,\"style\":\"FONTSIZE-16\"},{\"offset\":31,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":36,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":48,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":54,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":58,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":82,\"length\":16,\"style\":\"FONTSIZE-16\"},{\"offset\":99,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":104,\"length\":8,\"style\":\"FONTSIZE-16\"},{\"offset\":113,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":118,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":130,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":135,\"length\":12,\"style\":\"FONTSIZE-16\"},{\"offset\":148,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":153,\"length\":34,\"style\":\"FONTSIZE-16\"},{\"offset\":192,\"length\":26,\"style\":\"FONTSIZE-16\"},{\"offset\":219,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":225,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":229,\"length\":16,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":15,\"length\":11,\"style\":\"COLOR-569CD6\"},{\"offset\":36,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":58,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":66,\"length\":7,\"style\":\"COLOR-569CD6\"},{\"offset\":83,\"length\":11,\"style\":\"COLOR-569CD6\"},{\"offset\":104,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":118,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":135,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":165,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":205,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":229,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":237,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":161,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":201,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":41,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":123,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":141,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":171,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":210,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":233,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":175,\"length\":12,\"style\":\"COLOR-6A9955\"},{\"offset\":214,\"length\":4,\"style\":\"COLOR-6A9955\"},{\"offset\":45,\"length\":1,\"style\":\"COLOR-B5CEA8\"},{\"offset\":127,\"length\":1,\"style\":\"COLOR-B5CEA8\"},{\"offset\":145,\"length\":1,\"style\":\"COLOR-B5CEA8\"},{\"offset\":6,\"length\":1,\"style\":\"COLOR-4EC9B0\"},{\"offset\":64,\"length\":1,\"style\":\"COLOR-4EC9B0\"},{\"offset\":74,\"length\":1,\"style\":\"COLOR-4EC9B0\"},{\"offset\":153,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":193,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":241,\"length\":1,\"style\":\"COLOR-4EC9B0\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"5cdc5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"amtve\",\"text\":\"super作为对象，在静态方法中指向父类，而不是父类的原型对象，同时super的this指向当前子类，而不是子类的实例。\\n\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"offset\":0,\"length\":60,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1pgd3\",\"text\":\"class A {\\n     constructor() {\\n     this.x = 1;\\n    }\\n     static print() {\\n      console.log(this.x);\\n    }\\n  }\\n class B extends A {\\n     constructor() {\\n     super();\\n     this.x = 2;\\n      }\\n     static m() {\\n     super.print();\\n    }\\n  }\\n B.x = 3;\\n B.m() // 3\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":6,\"length\":1,\"style\":\"COLOR-4EC9B0\"},{\"offset\":82,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":120,\"length\":1,\"style\":\"COLOR-4EC9B0\"},{\"offset\":130,\"length\":1,\"style\":\"COLOR-4EC9B0\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-2\"},{\"offset\":10,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":15,\"length\":15,\"style\":\"LINEHEIGHT-2\"},{\"offset\":31,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":36,\"length\":11,\"style\":\"LINEHEIGHT-2\"},{\"offset\":48,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":58,\"length\":17,\"style\":\"LINEHEIGHT-2\"},{\"offset\":82,\"length\":20,\"style\":\"LINEHEIGHT-2\"},{\"offset\":103,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":109,\"length\":3,\"style\":\"LINEHEIGHT-2\"},{\"offset\":113,\"length\":20,\"style\":\"LINEHEIGHT-2\"},{\"offset\":134,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":139,\"length\":15,\"style\":\"LINEHEIGHT-2\"},{\"offset\":155,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":160,\"length\":8,\"style\":\"LINEHEIGHT-2\"},{\"offset\":169,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":174,\"length\":11,\"style\":\"LINEHEIGHT-2\"},{\"offset\":186,\"length\":2,\"style\":\"LINEHEIGHT-2\"},{\"offset\":190,\"length\":3,\"style\":\"LINEHEIGHT-2\"},{\"offset\":194,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":199,\"length\":12,\"style\":\"LINEHEIGHT-2\"},{\"offset\":216,\"length\":15,\"style\":\"LINEHEIGHT-2\"},{\"offset\":232,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":238,\"length\":3,\"style\":\"LINEHEIGHT-2\"},{\"offset\":242,\"length\":9,\"style\":\"LINEHEIGHT-2\"},{\"offset\":252,\"length\":11,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":10,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":15,\"length\":15,\"style\":\"FONTSIZE-16\"},{\"offset\":31,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":36,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":48,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":58,\"length\":17,\"style\":\"FONTSIZE-16\"},{\"offset\":82,\"length\":20,\"style\":\"FONTSIZE-16\"},{\"offset\":103,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":109,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":113,\"length\":20,\"style\":\"FONTSIZE-16\"},{\"offset\":134,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":139,\"length\":15,\"style\":\"FONTSIZE-16\"},{\"offset\":155,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":160,\"length\":8,\"style\":\"FONTSIZE-16\"},{\"offset\":169,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":174,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":186,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":190,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":194,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":199,\"length\":12,\"style\":\"FONTSIZE-16\"},{\"offset\":216,\"length\":15,\"style\":\"FONTSIZE-16\"},{\"offset\":232,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":238,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":242,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":252,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":15,\"length\":11,\"style\":\"COLOR-569CD6\"},{\"offset\":36,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":59,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":94,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":114,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":122,\"length\":7,\"style\":\"COLOR-569CD6\"},{\"offset\":139,\"length\":11,\"style\":\"COLOR-569CD6\"},{\"offset\":160,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":174,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":199,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":217,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":66,\"length\":5,\"style\":\"COLOR-DCDCAA\"},{\"offset\":90,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":206,\"length\":1,\"style\":\"COLOR-DCDCAA\"},{\"offset\":223,\"length\":5,\"style\":\"COLOR-DCDCAA\"},{\"offset\":255,\"length\":1,\"style\":\"COLOR-DCDCAA\"},{\"offset\":41,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":99,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":179,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":243,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":245,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":253,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":259,\"length\":4,\"style\":\"COLOR-6A9955\"},{\"offset\":45,\"length\":1,\"style\":\"COLOR-B5CEA8\"},{\"offset\":183,\"length\":1,\"style\":\"COLOR-B5CEA8\"},{\"offset\":249,\"length\":1,\"style\":\"COLOR-B5CEA8\"},{\"offset\":7,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":26,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":40,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":43,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":46,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":48,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":71,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":89,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":93,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":98,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":100,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":103,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":109,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":131,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":150,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":165,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":178,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":181,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":184,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":186,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":190,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":207,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":222,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":228,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":232,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":238,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":244,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":247,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":250,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":254,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":256,\"length\":3,\"style\":\"COLOR-D4D4D4\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}}],\"entityMap\":{}}', '<h2 class=\"md-end-block md-heading md-focus\" mdtype=\"heading\" cid=\"n0\"><strong><span style=\"line-height:2\">静态方法</span></strong></h2><ul><li><span style=\"line-height:2\">表示该方法不会被实例继承，而是直接通过类名来调用。</span></li><li><span style=\"line-height:2\">静态方法中的<code>this</code> 指的是这个类，而不是类的实例。</span></li><li><span style=\"line-height:2\">静态方法可以和非静态方法重名。</span></li><li><span style=\"line-height:2\">父类的静态方法可以被子类继承调用。</span></li></ul><h2 class=\"md-end-block md-heading\" mdtype=\"heading\" cid=\"n15\"><strong><span style=\"line-height:2\">静态属性</span></strong></h2><p cid=\"n17\" mdtype=\"paragraph\" class=\"md-end-block md-p\"><span style=\"line-height:2\">静态属性指的是类本身的属性，而不是定义在实例上的属性。</span></p><h2 class=\"md-end-block md-heading\" mdtype=\"heading\" cid=\"n21\"><strong><span style=\"line-height:2\">Super关键字</span></strong></h2><h3 cid=\"n23\" mdtype=\"paragraph\" class=\"md-end-block md-p\"><span style=\"line-height:2\">super关键字既可以当做函数使用，也可以当做对象使用。</span></h3><p></p><h4><span style=\"line-height:2\">super当做函数使用时，代表父类的构造函数，子类的构造函数必须执行一次父类的构造函数。</span></h4><ul><ul><li><span style=\"line-height:2\">super虽然代表了父类的构造函数，但是它返回的还是子类的实例。</span><br/></li></ul></ul><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">class</span> <span style=\"color:#4ec9b0\">A</span><span style=\"color:#d4d4d4\"> {</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\">    <span style=\"color:#569cd6\">constructor</span><span style=\"color:#d4d4d4\">() {</span></span></span><br/>    <span style=\"line-height:2\"><span style=\"font-size:16px\"> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#569cd6\">new</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">target</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">name</span><span style=\"color:#d4d4d4\">);</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#d4d4d4\">    }</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#d4d4d4\">}</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">class</span> <span style=\"color:#4ec9b0\">B</span> <span style=\"color:#569cd6\">extends</span> <span style=\"color:#4ec9b0\">A</span><span style=\"color:#d4d4d4\"> {</span></span></span><br/>    <span style=\"line-height:2\"><span style=\"font-size:16px\"> <span style=\"color:#569cd6\">constructor</span><span style=\"color:#d4d4d4\">() {</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> </span></span>    <span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">super</span><span style=\"color:#d4d4d4\">();</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#d4d4d4\">    }</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#d4d4d4\">}</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">new</span> <span style=\"color:#4ec9b0\">A</span><span style=\"color:#d4d4d4\">() </span><span style=\"color:#6a9955\">// A</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">new</span> <span style=\"color:#4ec9b0\">B</span><span style=\"color:#d4d4d4\">() </span><span style=\"color:#6a9955\">// B</span></span></span></code></pre><ul><ul><li><span style=\"line-height:2\">super作为函数只能在子类的构造函数中使用，其他方法中会报错。  </span></li></ul></ul><h4><span style=\"color:#000000\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">super作为对象时，在普通方法中指向父类的原型对象，在静态方法中指向父类。</span></span></span></h4><ul><ul><li><span style=\"line-height:2\">在子类的普通方法中通过super调用父类的方法时，方法内部的this指向当前子类的实例。</span></li><li><span style=\"line-height:2\">使用super进行属性赋值的时候，super就相当于this，赋值的属性会变成子类的实例属性，而通过super调用这个赋值属性时，相当于调用父类原型对象的属性。</span><br/></li></ul></ul><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">class</span> <span style=\"color:#4ec9b0\">A</span><span style=\"color:#d4d4d4\"> {</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> </span></span>    <span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">constructor</span><span style=\"color:#d4d4d4\">() {</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> </span></span>    <span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">this</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">x</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#b5cea8\">1</span><span style=\"color:#d4d4d4\">;</span></span></span><br/><span style=\"color:#d4d4d4\"><span style=\"line-height:2\"><span style=\"font-size:16px\">    }</span></span></span><br/><span style=\"color:#d4d4d4\"><span style=\"line-height:2\"><span style=\"font-size:16px\">  }</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">class</span> <span style=\"color:#4ec9b0\">B</span> <span style=\"color:#569cd6\">extends</span> <span style=\"color:#4ec9b0\">A</span><span style=\"color:#d4d4d4\"> {</span></span></span><br/>    <span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"> <span style=\"color:#569cd6\">constructor</span><span style=\"color:#d4d4d4\">() {</span></span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"> </span></span></span>    <span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">super</span><span style=\"color:#d4d4d4\">();</span></span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"> </span></span></span>    <span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">this</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">x</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#b5cea8\">2</span><span style=\"color:#d4d4d4\">;</span></span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"> </span></span></span>    <span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">super</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">x</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#b5cea8\">3</span><span style=\"color:#d4d4d4\">;</span></span></span></span><br/><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"> </span></span></span>    <span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"><span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#569cd6\">super</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">x</span><span style=\"color:#d4d4d4\">); </span><span style=\"color:#6a9955\">// undefined</span></span></span></span><br/>    <span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\"> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#569cd6\">this</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">x</span><span style=\"color:#d4d4d4\">); </span><span style=\"color:#6a9955\">// 3</span></span></span></span><br/><span style=\"color:#d4d4d4\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">    }</span></span></span></span><br/><span style=\"color:#d4d4d4\"><span style=\"line-height:2\"><span style=\"letter-spacing:0px\"><span style=\"font-size:16px\">  }</span></span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">let</span> <span style=\"color:#9cdcfe\">b</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#569cd6\">new</span> <span style=\"color:#4ec9b0\">B</span><span style=\"color:#d4d4d4\">();</span></span></span></code></pre><p></p><ul><ul><li><span style=\"line-height:2\">super作为对象，在静态方法中指向父类，而不是父类的原型对象，同时super的this指向当前子类，而不是子类的实例。</span><br/></li></ul></ul><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">class</span> <span style=\"color:#4ec9b0\">A</span><span style=\"color:#d4d4d4\"> {</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> </span></span>    <span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">constructor</span><span style=\"color:#d4d4d4\">() {</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> </span></span>    <span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">this</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">x</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#b5cea8\">1</span><span style=\"color:#d4d4d4\">;</span></span></span><br/><span style=\"color:#d4d4d4\"><span style=\"line-height:2\"><span style=\"font-size:16px\">    }</span></span></span><br/>    <span style=\"line-height:2\"><span style=\"font-size:16px\"> <span style=\"color:#569cd6\">static</span> <span style=\"color:#dcdcaa\">print</span><span style=\"color:#d4d4d4\">() {</span></span></span><br/>      <span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#569cd6\">this</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">x</span><span style=\"color:#d4d4d4\">);</span></span></span><br/><span style=\"color:#d4d4d4\"><span style=\"line-height:2\"><span style=\"font-size:16px\">    }</span></span></span><br/><span style=\"color:#d4d4d4\"><span style=\"line-height:2\"><span style=\"font-size:16px\">  }</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> <span style=\"color:#569cd6\">class</span> <span style=\"color:#4ec9b0\">B</span> <span style=\"color:#569cd6\">extends</span> <span style=\"color:#4ec9b0\">A</span><span style=\"color:#d4d4d4\"> {</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> </span></span>    <span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">constructor</span><span style=\"color:#d4d4d4\">() {</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> </span></span>    <span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">super</span><span style=\"color:#d4d4d4\">();</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> </span></span>    <span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">this</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">x</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#b5cea8\">2</span><span style=\"color:#d4d4d4\">;</span></span></span><br/><span style=\"color:#d4d4d4\"><span style=\"line-height:2\"><span style=\"font-size:16px\">  </span></span></span>  <span style=\"color:#d4d4d4\"><span style=\"line-height:2\"><span style=\"font-size:16px\">  }</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> </span></span>    <span style=\"line-height:2\"><span style=\"font-size:16px\"><span style=\"color:#569cd6\">static</span> <span style=\"color:#dcdcaa\">m</span><span style=\"color:#d4d4d4\">() {</span></span></span><br/>    <span style=\"line-height:2\"><span style=\"font-size:16px\"> <span style=\"color:#569cd6\">super</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">print</span><span style=\"color:#d4d4d4\">();</span></span></span><br/><span style=\"color:#d4d4d4\"><span style=\"line-height:2\"><span style=\"font-size:16px\">    }</span></span></span><br/><span style=\"color:#d4d4d4\"><span style=\"line-height:2\"><span style=\"font-size:16px\">  }</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> <span style=\"color:#9cdcfe\">B</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">x</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#b5cea8\">3</span><span style=\"color:#d4d4d4\">;</span></span></span><br/><span style=\"line-height:2\"><span style=\"font-size:16px\"> <span style=\"color:#9cdcfe\">B</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">m</span><span style=\"color:#d4d4d4\">() </span><span style=\"color:#6a9955\">// 3</span></span></span></code></pre>', 21, 1, 0, '2019-07-02 00:00:00', '2019-06-26 00:00:00');
INSERT INTO `article` VALUES (108, '0002250', '为什么阿里巴巴要求谨慎使用ArrayList中的subList方法', 2, 2, '转自微信公众号：Hollis1 subListsubList是List接口中定义的一个方法，该方法主要用于返回一个集合中的一段、可以理解为截取一个集合中的部分元素，他的返回值也是一个List。如以下代码：public static void', 'List', 'http://img.pzhuweb.cn/test1561560000046.jpg', '{\"blocks\":[{\"key\":\"4c6p9\",\"text\":\"转自微信公众号：Hollis\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"BOLD\"},{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"9hcgr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"3qggd\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"1b56q\",\"text\":\"1 subList\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"center\"}},{\"key\":\"533sv\",\"text\":\"subList是List接口中定义的一个方法，该方法主要用于返回一个集合中的一段、可以理解为截取一个集合中的部分元素，他的返回值也是一个List。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":73,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"695g0\",\"text\":\"如以下代码：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"fkr3m\",\"text\":\"public static void main(String[] args) {\\n    List<String> names = new ArrayList<String>() {{\\n        add(\\\"Hollis\\\");\\n        add(\\\"hollischuang\\\");\\n        add(\\\"H\\\");\\n    }};\\n\\n    List subList = names.subList(0, 1);\\n    System.out.println(subList);\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":246,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"34n7i\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"4ctfg\",\"text\":\"以上代码输出结果为：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"63a5a\",\"text\":\"[Hollis]\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"cjfml\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"9m294\",\"text\":\"如果我们改动下代码，将subList的返回值强转成ArrayList试一下：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"8rofs\",\"text\":\"public static void main(String[] args) {\\n    List<String> names = new ArrayList<String>() {{\\n        add(\\\"Hollis\\\");\\n        add(\\\"hollischuang\\\");\\n        add(\\\"H\\\");\\n    }};\\n\\n    ArrayList subList = names.subList(0, 1);\\n    System.out.println(subList);\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":251,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"3k693\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"80nur\",\"text\":\"以上代码将抛出异常：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"6o203\",\"text\":\"java.lang.ClassCastException: \\njava.util.ArrayList$SubList cannot be cast to java.util.ArrayList\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":96,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"2ir2l\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"6anjn\",\"text\":\"不只是强转成ArrayList会报错，强转成LinkedList、Vector等List的实现类同样也都会报错。那么，为什么会发生这样的报错呢？我们接下来深入分析一下。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":84,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"48ug2\",\"text\":\"2 底层原理\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"center\"}},{\"key\":\"9o979\",\"text\":\"首先，我们看下subList方法给我们返回的List到底是个什么东西，这一点在JDK源码中注释是这样说的：Returns a view of the portion of this list between the specifiedfromIndex, inclusive, and toIndex, exclusive.也就是说subList 返回是一个视图，那么什么叫做视图呢？我们看下subList的源码：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":207,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"8pcnv\",\"text\":\"public List<E> subList(int fromIndex, int toIndex) {\\n    subListRangeCheck(fromIndex, toIndex, size);\\n    return new SubList(this, 0, fromIndex, toIndex);\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":156,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"8dkfn\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"3eiqp\",\"text\":\"这个方法返回了一个SubList，这个类是ArrayList中的一个内部类。SubList这个类中单独定义了set、get、size、add、remove等方法。当我们调用subList方法的时候，会通过调用SubList的构造函数创建一个SubList，那么看下这个构造函数做了哪些事情：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":145,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"6ervt\",\"text\":\"SubList(AbstractList<E> parent,\\n            int offset, int fromIndex, int toIndex) {\\n    this.parent = parent;\\n    this.parentOffset = fromIndex;\\n    this.offset = offset + fromIndex;\\n    this.size = toIndex - fromIndex;\\n    this.modCount = ArrayList.this.modCount;\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":268,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"e2ig6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"eqips\",\"text\":\"可以看到，这个构造函数中把原来的List以及该List中的部分属性直接赋值给自己的一些属性了。也就是说，SubList并没有重新创建一个List，而是直接引用了原有的List（返回了父类的视图），只是指定了一下他要使用的元素的范围而已（从fromIndex（包含），到toIndex（不包含））。所以，为什么不能讲subList方法得到的集合直接转换成ArrayList呢？因为SubList只是ArrayList的内部类，他们之间并没有继承关系，故无法直接进行强制类型转换。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":238,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"105bi\",\"text\":\"3 视图有什么问题\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"center\"}},{\"key\":\"8c427\",\"text\":\"前面通过查看源码，我们知道，subList()方法并没有重新创建一个ArrayList，而是返回了一个ArrayList的内部类——SubList。这个SubList是ArrayList的一个视图。那么，这个视图又会带来什么问题呢？我们需要简单写几段代码看一下。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":131,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"8e1fp\",\"text\":\"1、非结构性改变SubList\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"3bspn\",\"text\":\"public static void main(String[] args) {\\n    List<String> sourceList = new ArrayList<String>() {{\\n        add(\\\"H\\\");\\n        add(\\\"O\\\");\\n        add(\\\"L\\\");\\n        add(\\\"L\\\");\\n        add(\\\"I\\\");\\n        add(\\\"S\\\");\\n    }};\\n\\n    List subList = sourceList.subList(2, 5);\\n\\n    System.out.println(\\\"sourceList ： \\\" + sourceList);\\n    System.out.println(\\\"sourceList.subList(2, 5) 得到List ：\\\");\\n    System.out.println(\\\"subList ： \\\" + subList);\\n\\n    subList.set(1, \\\"666\\\");\\n\\n    System.out.println(\\\"subList.set(3,666) 得到List ：\\\");\\n    System.out.println(\\\"subList ： \\\" + subList);\\n    System.out.println(\\\"sourceList ： \\\" + sourceList);\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":611,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"79u20\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"36nuf\",\"text\":\"得到结果：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"6j4a4\",\"text\":\"sourceList ： [H, O, L, L, I, S]\\nsourceList.subList(2, 5) 得到List ：\\nsubList ： [L, L, I]\\nsubList.set(3,666) 得到List ：\\nsubList ： [L, 666, I]\\nsourceList ： [H, O, L, 666, I, S]\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":169,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"9dnf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"7em5a\",\"text\":\"当我们尝试通过set方法，改变subList中某个元素的值得时候，我们发现，原来的那个List中对应元素的值也发生了改变。同理，如果我们使用同样的方法，对sourceList中的某个元素进行修改，那么subList中对应的值也会发生改变。读者可以自行尝试一下。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":130,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"5uuut\",\"text\":\"2、结构性改变SubList\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"341tp\",\"text\":\"public static void main(String[] args) {\\n    List<String> sourceList = new ArrayList<String>() {{\\n        add(\\\"H\\\");\\n        add(\\\"O\\\");\\n        add(\\\"L\\\");\\n        add(\\\"L\\\");\\n        add(\\\"I\\\");\\n        add(\\\"S\\\");\\n    }};\\n\\n    List subList = sourceList.subList(2, 5);\\n\\n    System.out.println(\\\"sourceList ： \\\" + sourceList);\\n    System.out.println(\\\"sourceList.subList(2, 5) 得到List ：\\\");\\n    System.out.println(\\\"subList ： \\\" + subList);\\n\\n    subList.add(\\\"666\\\");\\n\\n    System.out.println(\\\"subList.add(666) 得到List ：\\\");\\n    System.out.println(\\\"subList ： \\\" + subList);\\n    System.out.println(\\\"sourceList ： \\\" + sourceList);\\n\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":607,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"85s4n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"4u5bf\",\"text\":\"得到结果：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"21keo\",\"text\":\"sourceList ： [H, O, L, L, I, S]\\nsourceList.subList(2, 5) 得到List ：\\nsubList ： [L, L, I]\\nsubList.add(666) 得到List ：\\nsubList ： [L, L, I, 666]\\nsourceList ： [H, O, L, L, I, 666, S]\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":173,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"6crj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"309fb\",\"text\":\"我们尝试对subList的结构进行改变，即向其追加元素，那么得到的结果是sourceList的结构也同样发生了改变。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":58,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"fbee9\",\"text\":\"3、结构性改变原List\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"e5sgr\",\"text\":\"public static void main(String[] args) {\\n    List<String> sourceList = new ArrayList<String>() {{\\n        add(\\\"H\\\");\\n        add(\\\"O\\\");\\n        add(\\\"L\\\");\\n        add(\\\"L\\\");\\n        add(\\\"I\\\");\\n        add(\\\"S\\\");\\n    }};\\n\\n    List subList = sourceList.subList(2, 5);\\n\\n    System.out.println(\\\"sourceList ： \\\" + sourceList);\\n    System.out.println(\\\"sourceList.subList(2, 5) 得到List ：\\\");\\n    System.out.println(\\\"subList ： \\\" + subList);\\n\\n    sourceList.add(\\\"666\\\");\\n\\n    System.out.println(\\\"sourceList.add(666) 得到List ：\\\");\\n    System.out.println(\\\"sourceList ： \\\" + sourceList);\\n    System.out.println(\\\"subList ： \\\" + subList);\\n\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":613,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"4bcks\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"30s2t\",\"text\":\"得到结果：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"9tghq\",\"text\":\"Exception in thread \\\"main\\\" java.util.ConcurrentModificationException\\n    at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1239)\\n    at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099)\\n    at java.util.AbstractList.listIterator(AbstractList.java:299)\\n    at java.util.ArrayList$SubList.iterator(ArrayList.java:1095)\\n    at java.util.AbstractCollection.toString(AbstractCollection.java:454)\\n    at java.lang.String.valueOf(String.java:2994)\\n    at java.lang.StringBuilder.append(StringBuilder.java:131)\\n    at com.hollis.SubListTest.main(SubListTest.java:28)\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":589,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"i10s\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"f1qgb\",\"text\":\"我们尝试对sourceList的结构进行改变，即向其追加元素，结果发现抛出了ConcurrentModificationException。关于这个异常，我们在《一不小心就踩坑的fail-fast是个什么鬼？》中分析过，这里原理相同，就不再赘述了。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":124,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"18c2e\",\"text\":\"4 小结\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"center\"}},{\"key\":\"eblfo\",\"text\":\"我们简单总结一下，List的subList方法并没有创建一个新的List，而是使用了原List的视图，这个视图使用内部类SubList表示。所以，我们不能把subList方法返回的List强制转换成ArrayList等类，因为他们之间没有继承关系。另外，视图和原List的修改还需要注意几点，尤其是他们之间的相互影响：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":159,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2dhec\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"8euor\",\"text\":\"1、对父(sourceList)子(subList)List做的非结构性修改（non-structural changes），都会影响到彼此。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":71,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"amgp5\",\"text\":\"2、对子List做结构性修改，操作同样会反映到父List上。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"ffsmn\",\"text\":\"3、对父List做结构性修改，会抛出异常ConcurrentModificationException。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":52,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"foe14\",\"text\":\"5 如何创建新的List\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"center\"}},{\"key\":\"3qmut\",\"text\":\"如果需要对subList作出修改，又不想动原list。那么可以创建subList的一个拷贝：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":46,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"36sf1\",\"text\":\"subList = Lists.newArrayList(subList)\\nlist.stream().skip(strart).limit(end).collect(Collectors.toList());\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":105,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"4rkjm\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"dmsm1\",\"text\":\"PS：最近，《阿里巴巴Java开发手册》已经正式更名为《Java开发手册》，并发布了新版本，增加了21条新规约，修改描述112处。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":65,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"HR\",\"mutability\":\"IMMUTABLE\",\"data\":{}}}}', '<p><strong><span style=\"line-height:1.75\">转自微信公众号：Hollis</span></strong></p><p></p><hr/><h2 style=\"text-align:center;\"><span style=\"line-height:1.75\">1 subList</span></h2><p><span style=\"line-height:1.75\">subList是List接口中定义的一个方法，该方法主要用于返回一个集合中的一段、可以理解为截取一个集合中的部分元素，他的返回值也是一个List。</span></p><p><span style=\"line-height:1.75\">如以下代码：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">public static void main(String[] args) {<br/>    List&lt;String&gt; names = new ArrayList&lt;String&gt;() {{<br/>        add(&quot;Hollis&quot;);<br/>        add(&quot;hollischuang&quot;);<br/>        add(&quot;H&quot;);<br/>    }};<br/><br/>    List subList = names.subList(0, 1);<br/>    System.out.println(subList);<br/>}</span></code></pre><p></p><p><span style=\"line-height:1.75\">以上代码输出结果为：</span></p><p><span style=\"line-height:1.75\">[Hollis]</span></p><p></p><p><span style=\"line-height:1.75\">如果我们改动下代码，将subList的返回值强转成ArrayList试一下：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">public static void main(String[] args) {<br/>    List&lt;String&gt; names = new ArrayList&lt;String&gt;() {{<br/>        add(&quot;Hollis&quot;);<br/>        add(&quot;hollischuang&quot;);<br/>        add(&quot;H&quot;);<br/>    }};<br/><br/>    ArrayList subList = names.subList(0, 1);<br/>    System.out.println(subList);<br/>}</span></code></pre><p></p><p><span style=\"line-height:1.75\">以上代码将抛出异常：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">java.lang.ClassCastException: <br/>java.util.ArrayList$SubList cannot be cast to java.util.ArrayList</span></code></pre><p></p><p><span style=\"line-height:1.75\">不只是强转成ArrayList会报错，强转成LinkedList、Vector等List的实现类同样也都会报错。那么，为什么会发生这样的报错呢？我们接下来深入分析一下。</span></p><h2 style=\"text-align:center;\"><span style=\"line-height:1.75\">2 底层原理</span></h2><p><span style=\"line-height:1.75\">首先，我们看下subList方法给我们返回的List到底是个什么东西，这一点在JDK源码中注释是这样说的：Returns a view of the portion of this list between the specifiedfromIndex, inclusive, and toIndex, exclusive.也就是说subList 返回是一个视图，那么什么叫做视图呢？我们看下subList的源码：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">public List&lt;E&gt; subList(int fromIndex, int toIndex) {<br/>    subListRangeCheck(fromIndex, toIndex, size);<br/>    return new SubList(this, 0, fromIndex, toIndex);<br/>}</span></code></pre><p></p><p><span style=\"line-height:1.75\">这个方法返回了一个SubList，这个类是ArrayList中的一个内部类。SubList这个类中单独定义了set、get、size、add、remove等方法。当我们调用subList方法的时候，会通过调用SubList的构造函数创建一个SubList，那么看下这个构造函数做了哪些事情：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">SubList(AbstractList&lt;E&gt; parent,<br/>            int offset, int fromIndex, int toIndex) {<br/>    this.parent = parent;<br/>    this.parentOffset = fromIndex;<br/>    this.offset = offset + fromIndex;<br/>    this.size = toIndex - fromIndex;<br/>    this.modCount = ArrayList.this.modCount;<br/>}</span></code></pre><p></p><p><span style=\"line-height:1.75\">可以看到，这个构造函数中把原来的List以及该List中的部分属性直接赋值给自己的一些属性了。也就是说，SubList并没有重新创建一个List，而是直接引用了原有的List（返回了父类的视图），只是指定了一下他要使用的元素的范围而已（从fromIndex（包含），到toIndex（不包含））。所以，为什么不能讲subList方法得到的集合直接转换成ArrayList呢？因为SubList只是ArrayList的内部类，他们之间并没有继承关系，故无法直接进行强制类型转换。</span></p><h2 style=\"text-align:center;\"><span style=\"line-height:1.75\">3 视图有什么问题</span></h2><p><span style=\"line-height:1.75\">前面通过查看源码，我们知道，subList()方法并没有重新创建一个ArrayList，而是返回了一个ArrayList的内部类——SubList。这个SubList是ArrayList的一个视图。那么，这个视图又会带来什么问题呢？我们需要简单写几段代码看一下。</span></p><h3><span style=\"line-height:1.75\">1、非结构性改变SubList</span></h3><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">public static void main(String[] args) {<br/>    List&lt;String&gt; sourceList = new ArrayList&lt;String&gt;() {{<br/>        add(&quot;H&quot;);<br/>        add(&quot;O&quot;);<br/>        add(&quot;L&quot;);<br/>        add(&quot;L&quot;);<br/>        add(&quot;I&quot;);<br/>        add(&quot;S&quot;);<br/>    }};<br/><br/>    List subList = sourceList.subList(2, 5);<br/><br/>    System.out.println(&quot;sourceList ： &quot; + sourceList);<br/>    System.out.println(&quot;sourceList.subList(2, 5) 得到List ：&quot;);<br/>    System.out.println(&quot;subList ： &quot; + subList);<br/><br/>    subList.set(1, &quot;666&quot;);<br/><br/>    System.out.println(&quot;subList.set(3,666) 得到List ：&quot;);<br/>    System.out.println(&quot;subList ： &quot; + subList);<br/>    System.out.println(&quot;sourceList ： &quot; + sourceList);<br/>}</span></code></pre><p></p><p><span style=\"line-height:1.75\">得到结果：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">sourceList ： [H, O, L, L, I, S]<br/>sourceList.subList(2, 5) 得到List ：<br/>subList ： [L, L, I]<br/>subList.set(3,666) 得到List ：<br/>subList ： [L, 666, I]<br/>sourceList ： [H, O, L, 666, I, S]</span></code></pre><p></p><p><span style=\"line-height:1.75\">当我们尝试通过set方法，改变subList中某个元素的值得时候，我们发现，原来的那个List中对应元素的值也发生了改变。同理，如果我们使用同样的方法，对sourceList中的某个元素进行修改，那么subList中对应的值也会发生改变。读者可以自行尝试一下。</span></p><h3><span style=\"line-height:1.75\">2、结构性改变SubList</span></h3><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">public static void main(String[] args) {<br/>    List&lt;String&gt; sourceList = new ArrayList&lt;String&gt;() {{<br/>        add(&quot;H&quot;);<br/>        add(&quot;O&quot;);<br/>        add(&quot;L&quot;);<br/>        add(&quot;L&quot;);<br/>        add(&quot;I&quot;);<br/>        add(&quot;S&quot;);<br/>    }};<br/><br/>    List subList = sourceList.subList(2, 5);<br/><br/>    System.out.println(&quot;sourceList ： &quot; + sourceList);<br/>    System.out.println(&quot;sourceList.subList(2, 5) 得到List ：&quot;);<br/>    System.out.println(&quot;subList ： &quot; + subList);<br/><br/>    subList.add(&quot;666&quot;);<br/><br/>    System.out.println(&quot;subList.add(666) 得到List ：&quot;);<br/>    System.out.println(&quot;subList ： &quot; + subList);<br/>    System.out.println(&quot;sourceList ： &quot; + sourceList);<br/><br/>}</span></code></pre><p></p><p><span style=\"line-height:1.75\">得到结果：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">sourceList ： [H, O, L, L, I, S]<br/>sourceList.subList(2, 5) 得到List ：<br/>subList ： [L, L, I]<br/>subList.add(666) 得到List ：<br/>subList ： [L, L, I, 666]<br/>sourceList ： [H, O, L, L, I, 666, S]</span></code></pre><p></p><p><span style=\"line-height:1.75\">我们尝试对subList的结构进行改变，即向其追加元素，那么得到的结果是sourceList的结构也同样发生了改变。</span></p><h3><span style=\"line-height:1.75\">3、结构性改变原List</span></h3><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">public static void main(String[] args) {<br/>    List&lt;String&gt; sourceList = new ArrayList&lt;String&gt;() {{<br/>        add(&quot;H&quot;);<br/>        add(&quot;O&quot;);<br/>        add(&quot;L&quot;);<br/>        add(&quot;L&quot;);<br/>        add(&quot;I&quot;);<br/>        add(&quot;S&quot;);<br/>    }};<br/><br/>    List subList = sourceList.subList(2, 5);<br/><br/>    System.out.println(&quot;sourceList ： &quot; + sourceList);<br/>    System.out.println(&quot;sourceList.subList(2, 5) 得到List ：&quot;);<br/>    System.out.println(&quot;subList ： &quot; + subList);<br/><br/>    sourceList.add(&quot;666&quot;);<br/><br/>    System.out.println(&quot;sourceList.add(666) 得到List ：&quot;);<br/>    System.out.println(&quot;sourceList ： &quot; + sourceList);<br/>    System.out.println(&quot;subList ： &quot; + subList);<br/><br/>}</span></code></pre><p></p><p><span style=\"line-height:1.75\">得到结果：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">Exception in thread &quot;main&quot; java.util.ConcurrentModificationException<br/>    at java.util.ArrayList$SubList.checkForComodification(ArrayList.java:1239)<br/>    at java.util.ArrayList$SubList.listIterator(ArrayList.java:1099)<br/>    at java.util.AbstractList.listIterator(AbstractList.java:299)<br/>    at java.util.ArrayList$SubList.iterator(ArrayList.java:1095)<br/>    at java.util.AbstractCollection.toString(AbstractCollection.java:454)<br/>    at java.lang.String.valueOf(String.java:2994)<br/>    at java.lang.StringBuilder.append(StringBuilder.java:131)<br/>    at com.hollis.SubListTest.main(SubListTest.java:28)</span></code></pre><p></p><p><span style=\"line-height:1.75\">我们尝试对sourceList的结构进行改变，即向其追加元素，结果发现抛出了ConcurrentModificationException。关于这个异常，我们在《一不小心就踩坑的fail-fast是个什么鬼？》中分析过，这里原理相同，就不再赘述了。</span></p><h2 style=\"text-align:center;\"><span style=\"line-height:1.75\">4 小结</span></h2><p><span style=\"line-height:1.75\">我们简单总结一下，List的subList方法并没有创建一个新的List，而是使用了原List的视图，这个视图使用内部类SubList表示。所以，我们不能把subList方法返回的List强制转换成ArrayList等类，因为他们之间没有继承关系。另外，视图和原List的修改还需要注意几点，尤其是他们之间的相互影响：</span></p><p></p><p><span style=\"line-height:1.75\">1、对父(sourceList)子(subList)List做的非结构性修改（non-structural changes），都会影响到彼此。</span></p><p><span style=\"line-height:1.75\">2、对子List做结构性修改，操作同样会反映到父List上。</span></p><p><span style=\"line-height:1.75\">3、对父List做结构性修改，会抛出异常ConcurrentModificationException。</span></p><h2 style=\"text-align:center;\" size=\"0\" _root=\"undefined\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"line-height:1.75\">5 如何创建新的List</span></h2><p><span style=\"line-height:1.75\">如果需要对subList作出修改，又不想动原list。那么可以创建subList的一个拷贝：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">subList = Lists.newArrayList(subList)<br/>list.stream().skip(strart).limit(end).collect(Collectors.toList());</span></code></pre><p></p><p><span style=\"line-height:1.75\">PS：最近，《阿里巴巴Java开发手册》已经正式更名为《Java开发手册》，并发布了新版本，增加了21条新规约，修改描述112处。</span></p>', 67, 1, 0, '2019-06-26 00:00:00', '2019-06-28 00:00:00');
INSERT INTO `article` VALUES (109, '0002250', '2018年度WEB应用专业团队宣传片', 5, 13, '专业团队名称：WEB应用专业团队 团队研究方向：专业团队主要学习和研究WEB应用开发相关技术，包括前端开发HTML、CSS、JavaScript、Node、Vue、React等，以及后端开发，如JSP、Servlet、Spring、Spri', '宣传片', 'http://img.pzhuweb.cn/00022501561799857381.jpg', '{\"blocks\":[{\"key\":\"fh9hn\",\"text\":\"专业团队名称：WEB应用专业团队\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"BOLD\"},{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"70lk6\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"56iqh\",\"text\":\"团队研究方向：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"BOLD\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"4ibh2\",\"text\":\"专业团队主要学习和研究WEB应用开发相关技术，包括前端开发HTML、CSS、JavaScript、Node、Vue、React等，以及后端开发，如JSP、Servlet、Spring、Spring MVC、Hibernate、MyBatis、MySQL等。除此之外，团队还兼顾部分算法设计、设计模式、软件工程等理论知识的学习和研究。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":166,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"509ek\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"e06ak\",\"text\":\"团队活动内容：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"BOLD\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"dnf45\",\"text\":\"专业团队主要按照学生技能水平以及研究方向分为基础知识和算法研究、WEB前端开发、Java EE后端开发三个方向。平时以小组为单位开展以任务目标为驱动的团队活动，并定期或者不定期开展学习研究讨论会。同时，社团还以学院教师的科研项目、教研项目等作为基础，开展一些综合性项目开发和实践锻炼。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":142,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"814nq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4p3db\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d5d3d\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"2lmqk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"autt2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6tsfb\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"VIDEO\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/00022501640618299159.mp4\",\"name\":\"WEB应用团队2018宣传片.mp4\",\"type\":\"VIDEO\",\"meta\":{\"id\":379,\"title\":\"00022501640618299159.mp4\",\"alt\":\"00022501640618299159.mp4\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p class=\"MsoNormal\"><span style=\"line-height:1.75\"><strong>专业团队名称：</strong>WEB应用专业团队</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p class=\"MsoNormal\"><strong><span style=\"line-height:1.75\">团队研究方向：</span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">专业团队主要学习和研究WEB应用开发相关技术，包括前端开发HTML、CSS、JavaScript、Node、Vue、React等，以及后端开发，如JSP、Servlet、Spring、Spring MVC、Hibernate、MyBatis、MySQL等。除此之外，团队还兼顾部分算法设计、设计模式、软件工程等理论知识的学习和研究。</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p class=\"MsoNormal\"><strong><span style=\"line-height:1.75\">团队活动内容：</span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">专业团队主要按照学生技能水平以及研究方向分为基础知识和算法研究、WEB前端开发、Java EE后端开发三个方向。平时以小组为单位开展以任务目标为驱动的团队活动，并定期或者不定期开展学习研究讨论会。同时，社团还以学院教师的科研项目、教研项目等作为基础，开展一些综合性项目开发和实践锻炼。</span></p><p></p><p></p><div class=\"media-wrap video-wrap\"><video controls=\"\" id=\"379\" title=\"00022501640618299159.mp4\" alt=\"00022501640618299159.mp4\" loop=\"\" autoplay=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://www.pzhuweb.cn/data/00022501640618299159.mp4\"></video></div><p></p><p></p><p></p>', 485, 1, 1, '2019-01-01 00:00:00', '2019-06-28 00:00:00');
INSERT INTO `article` VALUES (110, '201610804025', 'Ajax 轮询技术与 WebSocket （包含Http长连接和短链接）', 1, 1, 'Ajax 技术 重要的对象XMLHttpRequest 对象，步骤如下：实例化 XMLHttpRequest 对象const xml = new XMLHttpRequest()监听状态改变，绑定回调函数获取数据xml.onreadysta', 'Ajax', 'http://img.pzhuweb.cn/2016108040251561949797678.jpg', '{\"blocks\":[{\"key\":\"i65a\",\"text\":\"Ajax 技术\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"BOLD\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n3\",\"mdtype\":\"heading\",\"class\":\"md-end-block md-heading\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"dhvdk\",\"text\":\" 重要的对象XMLHttpRequest 对象，步骤如下：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n4\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"ckuok\",\"text\":\"实例化 XMLHttpRequest 对象const xml = new XMLHttpRequest()\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":53,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":21,\"length\":32,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c1rg2\",\"text\":\"监听状态改变，绑定回调函数获取数据xml.onreadystatechangge = { id(this.readystate= ?){...}}\\n注：\\n \\n存有 XMLHttpRequest 的状态。从 0 到 4 发生变化。\\n0: 请求未初始化\\n1: 服务器连接已建立\\n2: 请求已接收\\n3: 请求处理中\\n4: 请求已完成，且响应已就绪\\n​\\nHTTP状态码列表:略\\n\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":185,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":17,\"length\":56,\"style\":\"CODE\"},{\"offset\":79,\"length\":2,\"style\":\"COLOR-000000\"},{\"offset\":82,\"length\":14,\"style\":\"COLOR-000000\"},{\"offset\":97,\"length\":5,\"style\":\"COLOR-000000\"},{\"offset\":105,\"length\":1,\"style\":\"COLOR-000000\"},{\"offset\":109,\"length\":5,\"style\":\"COLOR-000000\"},{\"offset\":118,\"length\":6,\"style\":\"COLOR-000000\"},{\"offset\":128,\"length\":8,\"style\":\"COLOR-000000\"},{\"offset\":140,\"length\":5,\"style\":\"COLOR-000000\"},{\"offset\":149,\"length\":5,\"style\":\"COLOR-000000\"},{\"offset\":158,\"length\":12,\"style\":\"COLOR-000000\"},{\"offset\":103,\"length\":1,\"style\":\"COLOR-116644\"},{\"offset\":107,\"length\":1,\"style\":\"COLOR-116644\"},{\"offset\":115,\"length\":1,\"style\":\"COLOR-116644\"},{\"offset\":125,\"length\":1,\"style\":\"COLOR-116644\"},{\"offset\":137,\"length\":1,\"style\":\"COLOR-116644\"},{\"offset\":146,\"length\":1,\"style\":\"COLOR-116644\"},{\"offset\":155,\"length\":1,\"style\":\"COLOR-116644\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1l0bu\",\"text\":\"打开 实例化对象 xml.open(method,url,async) \",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":9,\"length\":26,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ec4a8\",\"text\":\"发送请求xml.send(string) \",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":4,\"length\":16,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3sd4v\",\"text\":\"Ajax  轮询\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"BOLD\"},{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n203\",\"mdtype\":\"heading\",\"class\":\"md-end-block md-heading\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"d1riu\",\"text\":\"很多网站为了实现推送技术，所用的技术都是 Ajax 轮询。轮询是在特定的的时间间隔（如每1秒），由浏览器对服务器发出HTTP请求，然后由服务器返回最新的数据给客户端的浏览器。这种传统的模式带来很明显的缺点，即浏览器需要不断的向服务器发出请求，然而HTTP请求可能包含较长的头部，其中真正有效的数据可能只是很小的一部分，显然这样会浪费很多的带宽等资源。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":175,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n204\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"f0qfs\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n205\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2on7m\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n206\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"597dp\",\"text\":\"WebSocket\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"BOLD\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n207\",\"mdtype\":\"heading\",\"class\":\"md-end-block md-heading\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4u162\",\"text\":\"WebSocket 是 HTML5 开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":47,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":29,\"length\":17,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n208\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"45jda\",\"text\":\"WebSocket 使得客户端和服务器之间的数据交换变得更加简单，允许服务端主动向客户端推送数据。在 WebSocket API 中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输。在 WebSocket API 中，浏览器和服务器只需要做一个握手的动作，然后，浏览器和服务器之间就形成了一条快速通道。两者之间就直接可以数据互相传送。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":188,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":33,\"length\":15,\"style\":\"BOLD\"},{\"offset\":67,\"length\":44,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n209\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1cmfs\",\"text\":\"WebSocket 节省服务器资源和带宽，并且能实现实时通信。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n210\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"b0odv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n211\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"6gu65\",\"text\":\"连接过程：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n212\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"fe088\",\"text\":\"客户端实例化 webSocket 对象 const socket = new WebSocket(url,[protocol])\\n客户端向服务端发起一次HTTP 请求，特殊请求包含特殊字段upgrade:WebSocket  服务器端解析这些附加的头信息然后产生应答信息返回给客户端，客户端和服务器端的 WebSocket 连接就建立起来了，双方就可以通过这个连接通道自由的传递信息，并且这个连接会持续存在直到客户端或者服务器端的某一方主动的关闭连接。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":226,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":20,\"length\":44,\"style\":\"CODE\"},{\"offset\":94,\"length\":17,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"el5jo\",\"text\":\"通过socket.send(string) 发送信息，\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":2,\"length\":19,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7abk4\",\"text\":\"通过监听 socket.onmessage = (event)=>{event.data} 接受数据。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":5,\"length\":40,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4cjut\",\"text\":\"通信完毕后双方都可以通过socket.close() 关闭连接\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":12,\"length\":14,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"95d0v\",\"text\":\"web socket中的事件：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"BOLD\"},{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n223\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"bfkvg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n224\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2qge2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n225\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4raa5\",\"text\":\"http 长连接和短连接\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"BOLD\"},{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n226\",\"mdtype\":\"heading\",\"class\":\"md-end-block md-heading\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"6u83c\",\"text\":\" HTTP1.1协议开始，支持根据请求头信息发起长连接请求。 请求头信息中包含字段‘Keep-Alive: true，实现Tcp 连接的复用。避免三次握手以及连接初期窗口限制发送数据大小带来的开销和性能问题。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":104,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":41,\"length\":17,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n227\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"bo4tf\",\"text\":\" 短连接，每次通信完毕就释放连接。通常是，服务器端发送响应结束后就断开连接。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n228\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p md-focus\"},\"textAlign\":\"start\",\"textIndent\":1}}],\"entityMap\":{}}', '<h2 style=\"text-align:start;text-indent:2em;\" cid=\"n3\" mdtype=\"heading\" class=\"md-end-block md-heading\"><strong><span style=\"line-height:1.75\">Ajax 技术</span></strong></h2><p style=\"text-align:start;text-indent:2em;\" cid=\"n4\" mdtype=\"paragraph\" class=\"md-end-block md-p\"><span style=\"line-height:1.75\"> 重要的对象XMLHttpRequest 对象，步骤如下：</span></p><ul><li><span style=\"line-height:1.75\">实例化 XMLHttpRequest 对象<code>const xml = new XMLHttpRequest()</code></span></li><li><span style=\"line-height:1.75\">监听状态改变，绑定回调函数获取数据<code>xml.onreadystatechangge = { id(this.readystate= ?){...}}</code><br/>注：<br/> <br/><span style=\"color:#000000\">存有</span> <span style=\"color:#000000\">XMLHttpRequest</span> <span style=\"color:#000000\">的状态。从</span> <span style=\"color:#116644\">0</span> <span style=\"color:#000000\">到</span> <span style=\"color:#116644\">4</span> <span style=\"color:#000000\">发生变化。</span><br/><span style=\"color:#116644\">0</span>: <span style=\"color:#000000\">请求未初始化</span><br/><span style=\"color:#116644\">1</span>: <span style=\"color:#000000\">服务器连接已建立</span><br/><span style=\"color:#116644\">2</span>: <span style=\"color:#000000\">请求已接收</span><br/><span style=\"color:#116644\">3</span>: <span style=\"color:#000000\">请求处理中</span><br/><span style=\"color:#116644\">4</span>: <span style=\"color:#000000\">请求已完成，且响应已就绪</span><br/>​<br/>HTTP状态码列表:略<br/></span></li><li><span style=\"line-height:1.75\">打开 实例化对象 <code>xml.open(method,url,async)</code> </span></li><li><span style=\"line-height:1.75\">发送请求<code>xml.send(string)</code> </span></li></ul><h2 style=\"text-align:start;text-indent:2em;\" cid=\"n203\" mdtype=\"heading\" class=\"md-end-block md-heading\"><strong><span style=\"line-height:1.75\">Ajax  轮询</span></strong></h2><p style=\"text-align:start;text-indent:2em;\" cid=\"n204\" mdtype=\"paragraph\" class=\"md-end-block md-p\"><span style=\"line-height:1.75\">很多网站为了实现推送技术，所用的技术都是 Ajax 轮询。轮询是在特定的的时间间隔（如每1秒），由浏览器对服务器发出HTTP请求，然后由服务器返回最新的数据给客户端的浏览器。这种传统的模式带来很明显的缺点，即浏览器需要不断的向服务器发出请求，然而HTTP请求可能包含较长的头部，其中真正有效的数据可能只是很小的一部分，显然这样会浪费很多的带宽等资源。</span></p><p style=\"text-align:start;text-indent:2em;\" cid=\"n205\" mdtype=\"paragraph\" class=\"md-end-block md-p\"></p><p style=\"text-align:start;text-indent:2em;\" cid=\"n206\" mdtype=\"paragraph\" class=\"md-end-block md-p\"></p><h2 style=\"text-align:start;text-indent:2em;\" cid=\"n207\" mdtype=\"heading\" class=\"md-end-block md-heading\"><strong><span style=\"line-height:1.75\">WebSocket</span></strong></h2><p style=\"text-align:start;text-indent:2em;\" cid=\"n208\" mdtype=\"paragraph\" class=\"md-end-block md-p\"><span style=\"line-height:1.75\">WebSocket 是 HTML5 开始提供的一种在单个 <strong>TCP 连接上进行全双工通讯的协议</strong>。</span></p><p style=\"text-align:start;text-indent:2em;\" cid=\"n209\" mdtype=\"paragraph\" class=\"md-end-block md-p\"><span style=\"line-height:1.75\">WebSocket 使得客户端和服务器之间的数据交换变得更加简单，<strong>允许服务端主动向客户端推送数据</strong>。在 WebSocket API 中，<strong>浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，并进行双向数据传输</strong>。在 WebSocket API 中，浏览器和服务器只需要做一个握手的动作，然后，浏览器和服务器之间就形成了一条快速通道。两者之间就直接可以数据互相传送。</span></p><p style=\"text-align:start;text-indent:2em;\" cid=\"n210\" mdtype=\"paragraph\" class=\"md-end-block md-p\"><span style=\"line-height:1.75\">WebSocket 节省服务器资源和带宽，并且能实现实时通信。</span></p><p style=\"text-align:start;text-indent:2em;\" cid=\"n211\" mdtype=\"paragraph\" class=\"md-end-block md-p\"></p><p style=\"text-align:start;text-indent:2em;\" cid=\"n212\" mdtype=\"paragraph\" class=\"md-end-block md-p\"><span style=\"line-height:1.75\">连接过程：</span></p><ul><li><span style=\"line-height:1.75\">客户端实例化 webSocket 对象 <code>const socket = new WebSocket(url,[protocol])</code><br/>客户端向服务端发起一次HTTP 请求，特殊请求包含特殊字段<code>upgrade:WebSocket</code>  服务器端解析这些附加的头信息然后产生应答信息返回给客户端，客户端和服务器端的 WebSocket 连接就建立起来了，双方就可以通过这个连接通道自由的传递信息，并且这个连接会持续存在直到客户端或者服务器端的某一方主动的关闭连接。</span></li><li><span style=\"line-height:1.75\">通过<code>socket.send(string)</code> 发送信息，</span></li><li><span style=\"line-height:1.75\">通过监听 <code>socket.onmessage = (event)=&gt;{event.data}</code> 接受数据。</span></li><li><span style=\"line-height:1.75\">通信完毕后双方都可以通过<code>socket.close()</code> 关闭连接</span></li></ul><p style=\"text-align:start;text-indent:2em;\" cid=\"n223\" mdtype=\"paragraph\" class=\"md-end-block md-p\"><span style=\"line-height:1.75\"><strong>web socket中的事件</strong>：</span></p><p style=\"text-align:start;text-indent:2em;\" cid=\"n224\" mdtype=\"paragraph\" class=\"md-end-block md-p\"></p><p style=\"text-align:start;text-indent:2em;\" cid=\"n225\" mdtype=\"paragraph\" class=\"md-end-block md-p\"></p><h2 style=\"text-align:start;text-indent:2em;\" cid=\"n226\" mdtype=\"heading\" class=\"md-end-block md-heading\"><strong><span style=\"line-height:1.75\">http 长连接和短连接</span></strong></h2><p style=\"text-align:start;text-indent:2em;\" cid=\"n227\" mdtype=\"paragraph\" class=\"md-end-block md-p\"><span style=\"line-height:1.75\"> HTTP1.1协议开始，支持根据请求头信息发起长连接请求。 请求头信息中包含字段<code>‘Keep-Alive: true</code>，实现Tcp 连接的复用。避免三次握手以及连接初期窗口限制发送数据大小带来的开销和性能问题。</span></p><p style=\"text-align:start;text-indent:2em;\" cid=\"n228\" mdtype=\"paragraph\" class=\"md-end-block md-p md-focus\"><span style=\"line-height:1.75\"> 短连接，每次通信完毕就释放连接。通常是，服务器端发送响应结束后就断开连接。</span></p>', 17, 1, 0, '2019-07-01 00:00:00', NULL);
INSERT INTO `article` VALUES (111, '201710804172', 'WEB应用专业团队召开新学期指导例会', 5, 13, '为了保证专业团队发展的持续性，从2018年3月开始，WEB开发专应用业团队计划将开展为期12周，共计12次的专业团队活动。团队活动主题主要围绕WEB应用开发知识，包括前端设计基础、编程规范、算法思想、环境搭建、项目部署等。活动形式主要以专题', '例会', 'http://img.pzhuweb.cn/2017108041721561793663471.jpg', '{\"blocks\":[{\"key\":\"a07bt\",\"text\":\"为了保证专业团队发展的持续性，从2018年3月开始，WEB开发专应用业团队计划将开\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"86s9q\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b1q76\",\"text\":\"展为期12周，共计12次的专业团队活动。团队活动主题主要围绕WEB应用开发知识，包括前端设计基础、编程规范、算法思想、环境搭建、项目部署等。活动形式主要以专题报告会和讨论会的形式开展。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":92,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"80jrs\",\"text\":\"2018年3月31日19:40在砺志楼四楼会议室，开展了由社团指导老师兰全祥主讲的第一次团队主题活动——网页设计基础HTML。全体专业团队成员参加了本次主题活动。在报告会之前，兰全祥老师主要介绍了专业团队的本学期活动安排、创新实验室、团队软硬件条件等，专业团队队长刘星详细地介绍了团队官网，让新加入团队的2017级成员进一步了解WEB应用开发专业的情况。之后，兰全祥老师主要介绍了网页开发三大技术HTML、CSS和JavaScript，提供了HTML学习的途径和方法，强调了学习重点和学习目标。最后，团队2015级、2016级成员发表了各自对于前端学习的经验和体会。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":283,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"91l8b\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"akomu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721561794635849.jpg\",\"name\":\"2018-4-e7c01c2740a08c6c74cb2af1fc9bce36.jpg\",\"type\":\"IMAGE\",\"width\":\"1000px\",\"height\":\"\",\"meta\":{\"id\":99,\"title\":\"2017108041721561794635849.jpg\",\"alt\":\"2017108041721561794635849.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">为了保证专业团队发展的持续性，从2018年3月开始，WEB开发专应用业团队计划将开</span></p><p></p><p><span style=\"line-height:2\">展为期12周，共计12次的专业团队活动。团队活动主题主要围绕WEB应用开发知识，包括前端设计基础、编程规范、算法思想、环境搭建、项目部署等。活动形式主要以专题报告会和讨论会的形式开展。</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">2018年3月31日19:40在砺志楼四楼会议室，开展了由社团指导老师兰全祥主讲的第一次团队主题活动——网页设计基础HTML。全体专业团队成员参加了本次主题活动。在报告会之前，兰全祥老师主要介绍了专业团队的本学期活动安排、创新实验室、团队软硬件条件等，专业团队队长刘星详细地介绍了团队官网，让新加入团队的2017级成员进一步了解WEB应用开发专业的情况。之后，兰全祥老师主要介绍了网页开发三大技术HTML、CSS和JavaScript，提供了HTML学习的途径和方法，强调了学习重点和学习目标。最后，团队2015级、2016级成员发表了各自对于前端学习的经验和体会。</span></p><div class=\"media-wrap image-wrap\"><img id=\"99\" title=\"2017108041721561794635849.jpg\" alt=\"2017108041721561794635849.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041721561794635849.jpg\" width=\"1000px\" height=\"\" style=\"width:1000px;height:\"/></div><p></p>', 8, 1, 0, '2018-04-06 00:00:00', NULL);
INSERT INTO `article` VALUES (112, '201710804105', 'web应用专业团队学习总结及规划', 5, 13, '2018年9月7日，数学与计算机学院web应用团队于分测实验楼的创新实验室召开了“创新团队学习总结及规则”的会议。 会议伊始，应用团队的新老成员做了自我介绍，接着兰老师讲述了团队简介及未来的发展路线，最后老成员讲述了前端和后台的技术路线', '新闻', 'http://img.pzhuweb.cn/2017108041051561793806726.jpg', '{\"blocks\":[{\"key\":\"fgsme\",\"text\":\"2018年9月7日，数学与计算机学院web应用团队于分测实验楼的创新实验室召开了“创新团队学习总结及规则”的会议。 会议伊始，应用团队的新老成员做了自我介绍，接着兰老师讲述了团队简介及未来的发展路线，最后老成员讲述了前端和后台的技术路线\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":118,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":118,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":118,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":118,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"18ff4\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"71trc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041051561794518479.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":96,\"title\":\"2017108041051561794518479.jpg\",\"alt\":\"2017108041051561794518479.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">2018年9月7日，数学与计算机学院web应用团队于分测实验楼的创新实验室召开了“创新团队学习总结及规则”的会议。 会议伊始，应用团队的新老成员做了自我介绍，接着兰老师讲述了团队简介及未来的发展路线，最后老成员讲述了前端和后台的技术路线</span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"96\" title=\"2017108041051561794518479.jpg\" alt=\"2017108041051561794518479.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041051561794518479.jpg\"/></div><p></p>', 9, 1, 0, '2018-09-07 00:00:00', NULL);
INSERT INTO `article` VALUES (113, '201710804035', 'response.setHeader常见用法详解', 2, 2, '刷新页面response.setHeader(&quot;refresh&quot;,&quot;1&quot;);跳到其他页面response.setHeader(&quot;refresh&quot;,&quot;2;URL=other', 'response', 'http://img.pzhuweb.cn/2017108040351561793852966.jpg', '{\"blocks\":[{\"key\":\"779u0\",\"text\":\"刷新页面\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"BOLD\"},{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"9v2mj\",\"text\":\"response.setHeader(\\\"refresh\\\",\\\"1\\\");\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"FONTSIZE-16\"},{\"offset\":19,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":29,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-6666EA\"},{\"offset\":0,\"length\":35,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":8,\"length\":10,\"style\":\"COLOR-F22C40\"},{\"offset\":19,\"length\":9,\"style\":\"COLOR-7B9726\"},{\"offset\":29,\"length\":3,\"style\":\"COLOR-7B9726\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"fba2q\",\"text\":\"跳到其他页面\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"a0bbb\",\"text\":\"response.setHeader(\\\"refresh\\\",\\\"2;URL=otherPagename\\\");\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"FONTSIZE-16\"},{\"offset\":19,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":29,\"length\":21,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-6666EA\"},{\"offset\":0,\"length\":53,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":8,\"length\":10,\"style\":\"COLOR-F22C40\"},{\"offset\":19,\"length\":9,\"style\":\"COLOR-7B9726\"},{\"offset\":29,\"length\":21,\"style\":\"COLOR-7B9726\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"c5msd\",\"text\":\"禁止缓存\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"BOLD\"},{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"fjr2r\",\"text\":\"response.setHeader(\\\"Pragma\\\", \\\"No-cache\\\");\\n\\nresponse.setHeader(\\\"Cache-Control\\\", \\\"no-cache\\\");\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":92,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":20,\"length\":12,\"style\":\"FONTSIZE-16\"},{\"offset\":33,\"length\":8,\"style\":\"FONTSIZE-16\"},{\"offset\":43,\"length\":25,\"style\":\"FONTSIZE-16\"},{\"offset\":76,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":83,\"length\":8,\"style\":\"FONTSIZE-16\"},{\"offset\":20,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":30,\"length\":2,\"style\":\"COLOR-6666EA\"},{\"offset\":33,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":63,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":80,\"length\":2,\"style\":\"COLOR-6666EA\"},{\"offset\":83,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":26,\"length\":4,\"style\":\"COLOR-7B9726\"},{\"offset\":38,\"length\":3,\"style\":\"COLOR-7B9726\"},{\"offset\":43,\"length\":20,\"style\":\"COLOR-7B9726\"},{\"offset\":76,\"length\":4,\"style\":\"COLOR-7B9726\"},{\"offset\":88,\"length\":3,\"style\":\"COLOR-7B9726\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"acchl\",\"text\":\"设置过期的时间期限\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"BOLD\"},{\"offset\":0,\"length\":9,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"9mje7\",\"text\":\"response.setDateHeader(\\\"Expires\\\", 0);\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"FONTSIZE-16\"},{\"offset\":23,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":34,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-6666EA\"},{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":8,\"length\":14,\"style\":\"COLOR-F22C40\"},{\"offset\":23,\"length\":9,\"style\":\"COLOR-7B9726\"},{\"offset\":34,\"length\":1,\"style\":\"COLOR-DF5320\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"773t6\",\"text\":\"访问别的页面\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"},{\"offset\":0,\"length\":6,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"6kvdn\",\"text\":\"response.setHeader(\\\"location\\\",\\\"url\\\");\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"FONTSIZE-16\"},{\"offset\":19,\"length\":10,\"style\":\"FONTSIZE-16\"},{\"offset\":30,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-6666EA\"},{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":8,\"length\":10,\"style\":\"COLOR-F22C40\"},{\"offset\":19,\"length\":10,\"style\":\"COLOR-7B9726\"},{\"offset\":30,\"length\":5,\"style\":\"COLOR-7B9726\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"dgfkt\",\"text\":\"设置服务器状态码\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"BOLD\"},{\"offset\":0,\"length\":8,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"c5d76\",\"text\":\"response.setStatus（302）; \",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":19,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":23,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":19,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":23,\"length\":2,\"style\":\"COLOR-9C9491\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}}],\"entityMap\":{}}', '<p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:1.75\">刷新页面</span></strong></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\"><span style=\"font-size:16px\"><span style=\"color:#6666ea\">response</span><span style=\"color:#f22c40\">.setHeader</span></span>(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;refresh&quot;</span></span>,<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;1&quot;</span></span>);<br/></span></code></pre><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:1.75\">跳到其他页面</span></strong></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\"><span style=\"font-size:16px\"><span style=\"color:#6666ea\">response</span><span style=\"color:#f22c40\">.setHeader</span></span>(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;refresh&quot;</span></span>,<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;2;URL=otherPagename&quot;</span></span>);<br/></span></code></pre><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:1.75\">禁止缓存</span></strong></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">response.setHeader(&quot;<span style=\"font-size:16px\"><span style=\"color:#6666ea\">Pragma</span><span style=\"color:#7b9726\">&quot;, &quot;</span><span style=\"color:#6666ea\">No</span></span>-<span style=\"font-size:16px\"><span style=\"color:#6666ea\">cache</span><span style=\"color:#7b9726\">&quot;);</span></span><br/><br/><span style=\"font-size:16px\"><span style=\"color:#7b9726\">response.setHeader(&quot;</span><span style=\"color:#6666ea\">Cache</span></span>-Control<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;, &quot;</span><span style=\"color:#6666ea\">no</span></span>-<span style=\"font-size:16px\"><span style=\"color:#6666ea\">cache</span><span style=\"color:#7b9726\">&quot;);</span></span><br/></span></code></pre><p style=\"text-align:left;text-indent:2em;\"><strong><em><span style=\"line-height:1.75\">设置过期的时间期限</span></em></strong></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\"><span style=\"font-size:16px\"><span style=\"color:#6666ea\">response</span><span style=\"color:#f22c40\">.setDateHeader</span></span>(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;Expires&quot;</span></span>, <span style=\"font-size:16px\"><span style=\"color:#df5320\">0</span></span>);<br/></span></code></pre><p style=\"text-align:left;text-indent:2em;\"><strong><em><span style=\"line-height:1.75\">访问别的页面</span></em></strong></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\"><span style=\"font-size:16px\"><span style=\"color:#6666ea\">response</span><span style=\"color:#f22c40\">.setHeader</span></span>(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;location&quot;</span></span>,<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;url&quot;</span></span>);<br/></span></code></pre><p style=\"text-align:left;text-indent:2em;\"><strong><em><span style=\"line-height:1.75\">设置服务器状态码</span></em></strong></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\">response.setStatus（<span style=\"font-size:16px\"><span style=\"color:#df5320\">302</span></span>）<span style=\"font-size:16px\"><span style=\"color:#9c9491\">; </span></span></span></code></pre>', 10, 1, 0, '2018-05-28 00:00:00', NULL);
INSERT INTO `article` VALUES (114, '201710803017', 'web应用专业团队阶段性学习总结以及近期规划', 5, 13, '2018年9月17日，数学与计算机学院web应用团队在分测实验楼创新实验室召开了“阶段性学习总结以及近期规划”的会议。兰老师询问每个成员最近学习成果，提出相应的知识点进行考察。随后为新成员制定有针对性的学习规划路线。', '学习总结及近期规划', 'http://img.pzhuweb.cn/2017108030171561794673219.jpg', '{\"blocks\":[{\"key\":\"e3h39\",\"text\":\"2018年9月17日，数学与计算机学院web应用团队在分测实验楼创新实验室召开了“阶段性学习总结以及近期规划”的会议。兰老师询问每个成员最近学习成果，提出相应的知识点进行考察。随后为新成员制定有针对性的学习规划路线。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":108,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":108,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":108,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":108,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"cl9v4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"auc3j\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"b65uf\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"24fpc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"http://img.pzhuweb.cn/2017108030171561794318870.jpg\",\"width\":\"1000px\",\"height\":\"750px\"}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">2018年9月17日，数学与计算机学院web应用团队在分测实验楼创新实验室召开了“阶段性学习总结以及近期规划”的会议。兰老师询问每个成员最近学习成果，提出相应的知识点进行考察。随后为新成员制定有针对性的学习规划路线。</span></span></span></span></p><p></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" src=\"http://img.pzhuweb.cn/2017108030171561794318870.jpg\" width=\"1000px\" height=\"750px\" style=\"width:1000px;height:750px\"/></div><p></p>', 10, 1, 0, '2018-09-17 00:00:00', NULL);
INSERT INTO `article` VALUES (115, '201710804099', 'Web应用专业团队前端小组第二次会议', 5, 13, '2018年9月23日，数学与计算机学院web应用团队于分测实验楼的创新实验室召开了“Web前端第二次会议”。会议主要内容是前端小组人员的相互交流学习，讲述自己在近一周的学习总结和学习心得。', '会议', 'http://img.pzhuweb.cn/2017108040991561793922704.jpg', '{\"blocks\":[{\"key\":\"fslkt\",\"text\":\"2018年9月23日，数学与计算机学院web应用团队于分测实验楼的创新实验室召开了“Web前端第二次会议”。会议主要内容是前端小组人员的相互交流学习，讲述自己在近一周的学习总结和学习心得。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":94,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":94,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":94,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">2018年9月23日，数学与计算机学院web应用团队于分测实验楼的创新实验室召开了“Web前端第二次会议”。会议主要内容是前端小组人员的相互交流学习，讲述自己在近一周的学习总结和学习心得。</span></span></span></p>', 9, 1, 0, '2018-09-23 00:00:00', NULL);
INSERT INTO `article` VALUES (116, '201710804169', 'Web应用专业团队2018-2019-1学期总结', 5, 13, '2018年12月21日，数学与计算机学院web应用专业团队在励志楼四楼会议室召开了学期总结会议。本次会议有姚添译考勤点到。会议主要内容由兰全祥老师讲解，兰老师详细的讲解了自己和团队成员在过去一年里所作的事。然后成员们分享了自己在加入团队后的', '总结', 'http://img.pzhuweb.cn/2017108041691561794505204.jpg', '{\"blocks\":[{\"key\":\"3p0oo\",\"text\":\"2018年12月21日，数学与计算机学院web应用专业团队在励志楼四楼会议室召开了学期总结会议。本次会议有姚添译考勤点到。会议主要内容由兰全祥老师讲解，兰老师详细的讲解了自己和团队成员在过去一年里所作的事。然后成员们分享了自己在加入团队后的收获感受和对兰老师的感谢。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":133,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":133,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":133,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":133,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9imef\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"1snbg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041691561794440464.jpg\",\"name\":\"2018-12-7ee756798df6094e094fb3d3cd73ebb6.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":92,\"title\":\"2017108041691561794440464.jpg\",\"alt\":\"2017108041691561794440464.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">2018年12月21日，数学与计算机学院web应用专业团队在励志楼四楼会议室召开了学期总结会议。本次会议有姚添译考勤点到。会议主要内容由兰全祥老师讲解，兰老师详细的讲解了自己和团队成员在过去一年里所作的事。然后成员们分享了自己在加入团队后的收获感受和对兰老师的感谢。</span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"92\" title=\"2017108041691561794440464.jpg\" alt=\"2017108041691561794440464.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041691561794440464.jpg\"/></div><p></p>', 8, 1, 0, '2018-12-22 00:00:00', NULL);
INSERT INTO `article` VALUES (117, '201710803075', 'WEB应用专业团队2018-2019学年第二学期第一次全体会议', 5, 13, '2019年3月10日晚上19点40分，数学与计算机学院WEB应用专业团队在励志楼4楼会议室召开了2018-2019学年第二学期第一次全体会议。会议开始之前，先进行了点到。会议开始，先由兰老师主讲，主要讲解了7个方面： 1、团队管理计划、大一', '会议', 'http://img.pzhuweb.cn/2017108030751561794630511.jpg', '{\"blocks\":[{\"key\":\"e06rt\",\"text\":\"2019年3月10日晚上19点40分，数学与计算机学院WEB应用专业团队在励志楼4楼会议室召开了2018-2019学年第二学期第一次全体会议。会议开始之前，先进行了点到。会议开始，先由兰老师主讲，主要讲解了7个方面： 1、团队管理计划、大一的根据考试分数择优进入创新实验室； 2、团队每周一次的周报取消； 3、本学期的活动内容，以及下一周的活动安排； 4、团队跑步考勤情况，一周两次； 5、写论文的思路：（1）感兴趣的主题；（2）知网上查相关文献；（3）整理提纲；（4）细化提纲每个部分，并找指导老师修改； 6、论文结构讲解：标题、摘要、关键词、前言、提纲 7、论文查重。 最后由张俊老师主讲，讲解了对于团队的思想方面，团队的意义。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":316,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":316,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":316,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":316,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"60bp3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f8u8b\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fvakl\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"3o585\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030751561794659813.jpg\",\"type\":\"IMAGE\"}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">2019年3月10日晚上19点40分，数学与计算机学院WEB应用专业团队在励志楼4楼会议室召开了2018-2019学年第二学期第一次全体会议。会议开始之前，先进行了点到。会议开始，先由兰老师主讲，主要讲解了7个方面： 1、团队管理计划、大一的根据考试分数择优进入创新实验室； 2、团队每周一次的周报取消； 3、本学期的活动内容，以及下一周的活动安排； 4、团队跑步考勤情况，一周两次； 5、写论文的思路：（1）感兴趣的主题；（2）知网上查相关文献；（3）整理提纲；（4）细化提纲每个部分，并找指导老师修改； 6、论文结构讲解：标题、摘要、关键词、前言、提纲 7、论文查重。 最后由张俊老师主讲，讲解了对于团队的思想方面，团队的意义。</span></span></span></span></p><p></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2017108030751561794659813.jpg\"/></div><p></p>', 7, 1, 0, '2019-03-11 00:00:00', NULL);
INSERT INTO `article` VALUES (118, '201710804172', 'WEB应用专业团队开展团队活动CSS讲解', 5, 12, '继HTML讲解之后，WEB应用开发专业团队于2018年4月7日19:40在砺志楼四楼会议室开展了网页设计基础知识CSS的讲解。 本次团队活动由指导老师兰全祥主持，2016级软件工程丁乙诗主讲。报告会首先介绍了CSS常用选择器以及CSS编写语', '例会', 'http://img.pzhuweb.cn/2017108041721561793880406.png', '{\"blocks\":[{\"key\":\"fetub\",\"text\":\"继HTML讲解之后，WEB应用开发专业团队于2018年4月7日19:40在砺志楼四楼会议室开展了网页设计基础知识CSS的讲解。 本次团队活动由指导老师兰全祥主持，2016级软件工程丁乙诗主讲。报告会首先介绍了CSS常用选择器以及CSS编写语法。在讲述的过程中丁乙诗列举了一些常用的CSS样式，并且讲述了如何仿制超链接，如何装饰百度首页。最后报告会简单介绍并举例如何编写一个连续的CSS3动画\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":195,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"868sp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"cr48\",\"text\":\"。 本次报告会是高年级带低年级团队成员一起学习的一个重要起点。报告会不仅可以保障团队的持续性和凝聚力，还能锻炼高年级团队成员“做”、“说”相结合的能力。兰全祥老师总结到：我们应该注重全面发展，提升自身综合素质。不仅要会做，还要会讲。做到学得明白，做得正确，讲得出口，说得清楚。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":138,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"b913g\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"4sur\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"8ol2c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"95\",\"alt\":\"2017108041721561794518269.png\",\"title\":\"2017108041721561794518269.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041721561794518269.png\",\"width\":\"1000px\"}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">继HTML讲解之后，WEB应用开发专业团队于2018年4月7日19:40在砺志楼四楼会议室开展了网页设计基础知识CSS的讲解。 本次团队活动由指导老师兰全祥主持，2016级软件工程丁乙诗主讲。报告会首先介绍了CSS常用选择器以及CSS编写语法。在讲述的过程中丁乙诗列举了一些常用的CSS样式，并且讲述了如何仿制超链接，如何装饰百度首页。最后报告会简单介绍并举例如何编写一个连续的CSS3动画</span></p><p></p><p><span style=\"line-height:2\">。 本次报告会是高年级带低年级团队成员一起学习的一个重要起点。报告会不仅可以保障团队的持续性和凝聚力，还能锻炼高年级团队成员“做”、“说”相结合的能力。兰全祥老师总结到：我们应该注重全面发展，提升自身综合素质。不仅要会做，还要会讲。做到学得明白，做得正确，讲得出口，说得清楚。</span></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"95\" alt=\"2017108041721561794518269.png\" title=\"2017108041721561794518269.png\" src=\"http://img.pzhuweb.cn/2017108041721561794518269.png\" width=\"1000px\" style=\"width:1000px\"/></div><p></p>', 10, 1, 0, '2018-04-27 00:00:00', NULL);
INSERT INTO `article` VALUES (119, '201710803072', 'web应用专业团队于新学期召开第一次开学见面会', 5, 13, '2018年8月31日，web应用团队于分析测试楼的创新实验室召开了2018-2019学年秋季的开学见面会。会议议程包括了指导老师兰全祥对团队项目的指导，团队成员之间的技术交流分享，团队任务的安排以及安排创新实验室座位时需要的注意事项。', '会议', 'http://img.pzhuweb.cn/2017108030721561794139250.jpg', '{\"blocks\":[{\"key\":\"2nlqv\",\"text\":\"2018年8月31日，web应用团队于分析测试楼的创新实验室召开了2018-2019学年秋季的开学见面会。会议议程包括了指导老师兰全祥对团队项目的指导，团队成员之间的技术交流分享，团队任务的安排以及安排创新实验室座位时需要的注意事项。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":117,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":117,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":117,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4sckd\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">2018年8月31日，web应用团队于分析测试楼的创新实验室召开了2018-2019学年秋季的开学见面会。会议议程包括了指导老师兰全祥对团队项目的指导，团队成员之间的技术交流分享，团队任务的安排以及安排创新实验室座位时需要的注意事项。</span></span></span></p><p></p>', 7, 1, 0, '2018-09-04 00:00:00', NULL);
INSERT INTO `article` VALUES (120, '201710804035', '新闻编辑-编辑器的使用学习心得', 1, 11, '在第二周，首先完成了网页引入UEiditor插件，帮助完成新闻内容的插入完成的新闻的插入功能 第三周主要完成新闻的查询，新闻主要信息的显示', '学习心得', 'http://img.pzhuweb.cn/2017108040351561793943256.png', '{\"blocks\":[{\"key\":\"181m6\",\"text\":\"在第二周，首先完成了网页引入UEiditor插件，帮助完成新闻内容的插入\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":36,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":36,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":36,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"5nvic\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap align-left\"},\"float\":\"\",\"alignment\":\"left\"}},{\"key\":\"1rv1u\",\"text\":\"完成的新闻的插入功能 第三周主要完成新闻的查询，新闻主要信息的显示\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":33,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":33,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"1fvjg\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap align-left\"},\"float\":\"\",\"alignment\":\"left\"}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"捕获.PNG\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-9/2018-9-f91a931656367613506a9710d46e1430.PNG\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"捕获.PNG\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-9/2018-9-3666af29c36e6d2a031b09d91fc0a0e0.PNG\"}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">在第二周，首先完成了网页引入UEiditor插件，帮助完成新闻内容的插入</span></span></span></span></p><div class=\"media-wrap image-wrap align-left\" style=\"text-align:left\"><img class=\"media-wrap image-wrap align-left\" alt=\"捕获.PNG\" src=\"http://old.pzhuweb.cn/upload/2018-9/2018-9-f91a931656367613506a9710d46e1430.PNG\"/></div><p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">完成的新闻的插入功能 第三周主要完成新闻的查询，新闻主要信息的显示</span></span></span></span></p><div class=\"media-wrap image-wrap align-left\" style=\"text-align:left\"><img class=\"media-wrap image-wrap align-left\" alt=\"捕获.PNG\" src=\"http://old.pzhuweb.cn/upload/2018-9/2018-9-3666af29c36e6d2a031b09d91fc0a0e0.PNG\"/></div>', 15, 1, 0, '2018-08-18 00:00:00', NULL);
INSERT INTO `article` VALUES (121, '201710804099', 'Java基础学习之多态与内部类', 2, 2, '::: hljs-left# 1、final关键字 # (1)是最终的意思，可以修饰类，方法，变量。 (2)特点： A:它修饰的类，不能被继承。 B:它修饰的方法，不能被重写。 C:它修饰的变量，是一个常量:::::: hljs-left2', '多态', 'http://img.pzhuweb.cn/2017108040991561794199277.png', '{\"blocks\":[{\"key\":\"1ti2c\",\"text\":\"::: hljs-left\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"5ggh0\",\"text\":\"# 1、final关键字 # (1)是最终的意思，可以修饰类，方法，变量。 (2)特点： A:它修饰的类，不能被继承。 B:它修饰的方法，不能被重写。 C:它修饰的变量，是一个常量\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"1hfro\",\"text\":\":::\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"cort5\",\"text\":\"::: hljs-left\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"cr8sm\",\"text\":\"2、多态 (1)同一个对象在不同时刻体现出来的不同状态。 (2)多态的前提： A:有继承或者实现关系。 B:有方法重写。 C:有父类或者父接口引用指向子类对象。 (3)多态的分类：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"4gak2\",\"text\":\":::\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"3dr4b\",\"text\":\"    a:具体类多态\\nclass Fu {}\\n    class Zi extends Fu {}            \\n         Fu f = new Zi();\\n\\n    b:抽象类多态\\n    abstract class Fu {}\\n    class Zi extends Fu {}\\n    Fu f = new Zi();\\n\\n     c:接口多态\\n    interface Fu {}\\n    class Zi implements Fu {}            \\n    Fu f = new Zi();\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":12,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":28,\"length\":20,\"style\":\"FONTSIZE-16\"},{\"offset\":72,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":79,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":83,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":106,\"length\":8,\"style\":\"FONTSIZE-16\"},{\"offset\":115,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":131,\"length\":20,\"style\":\"FONTSIZE-16\"},{\"offset\":158,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":165,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":169,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":191,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":12,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":28,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":37,\"length\":7,\"style\":\"COLOR-6666EA\"},{\"offset\":79,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":106,\"length\":8,\"style\":\"COLOR-6666EA\"},{\"offset\":115,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":131,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":140,\"length\":7,\"style\":\"COLOR-6666EA\"},{\"offset\":165,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":18,\"length\":2,\"style\":\"COLOR-407EE7\"},{\"offset\":34,\"length\":2,\"style\":\"COLOR-407EE7\"},{\"offset\":45,\"length\":2,\"style\":\"COLOR-407EE7\"},{\"offset\":121,\"length\":2,\"style\":\"COLOR-407EE7\"},{\"offset\":137,\"length\":2,\"style\":\"COLOR-407EE7\"},{\"offset\":148,\"length\":2,\"style\":\"COLOR-407EE7\"},{\"offset\":72,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":83,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":158,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":169,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":191,\"length\":11,\"style\":\"COLOR-DF5320\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"cvc3d\",\"text\":\"::: hljs-left\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"2evtn\",\"text\":\"(4)多态中的成员访问特点 A:成员变量 编译看左边，运行看左边 B:构造方法 子类的构造都会默认访问父类构造 C:成员方法 编译看左边，运行看右边 D:静态方法 编译看左边，运行看左边 (5)多态的好处： A:提高代码的维护性(继承体现) B:提高代码的扩展性(多态体现) (6)多态的弊端： 父不能使用子的特有功能。 现象： 子可以当作父使用，父不能当作子使用。 (7)多态中的转型 A:向上转型 从子到父 B:向下转型 从父到子 (8)孔子装爹的案例帮助大家理解多态\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"b2l62\",\"text\":\":::\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"e4eja\",\"text\":\"::: hljs-left\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"e4hu1\",\"text\":\"3、抽象类 (1)抽象类的特点 A:抽象类和抽象方法必须用关键字abstract修饰 B:抽象类中不一定有抽象方法,但是有抽象方法的类一定是抽象类 C:抽象类不能实例化 D:抽象类的子类 a:是一个抽象类。 b:是一个具体类。这个类必须重写抽象类中的所有抽象方法。 (2)抽象类的成员特点： A:成员变量 有变量，有常量 B:构造方法 有构造方法 C:成员方法 有抽象，有非抽象 (3)抽象类的几个小问题 A:抽象类有构造方法，不能实例化，那么构造方法有什么用? 用于子类访问父类数据的初始化 B:一个类如果没有抽象方法,却定义为了抽象类，有什么用? 为了不让创建对象 C:abstract不能和哪些关键字共存 a:final 冲突 b:private 冲突 c:static 无意义\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"65i94\",\"text\":\":::\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"d8ehg\",\"text\":\"::: hljs-left\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"3aour\",\"text\":\"4:接口 (1)接口的特点： A:接口用关键字interface修饰 interface 接口名 {} B:类实现接口用implements修饰 class 类名 implements 接口名 {} C:接口不能实例化 D:接口的实现类 a:是一个抽象类。 b:是一个具体类，这个类必须重写接口中的所有抽象方法。 (2)接口的成员特点： A:成员变量 只能是常量 默认修饰符：public static final B:构造方法 没有构造方法 C:成员方法 只能是抽象的 默认修饰符：public abstract (3)类与类,类与接口,接口与接口 A:类与类 继承关系，只能单继承，可以多层继承 B:类与接口 实现关系，可以单实现，也可以多实现。 还可以在继承一个类的同时，实现多个接口 C:接口与接口 继承关系，可以单继承，也可以多继承\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"9ctj2\",\"text\":\":::\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"8u4mo\",\"text\":\"5:内部类 (1)把类定义在另一个类的内部，该类就被称为内部类。 举例：把类B定义在类A中，类B就被称为内部类。 (2)内部类的访问规则 A:可以直接访问外部类的成员，包括私有 B:外部类要想访问内部类成员，必须创建对象 (3)内部类的分类 A:成员内部类 B:局部内部类 (4)成员内部类 A:private 为了数据的安全性 B:static 为了访问的方便性\\n成员内部类不是静态的： 外部类名.内部类名 对象名 = new 外部类名.new 内部类名(); 成员内部类是静态的： 外部类名.内部类名 对象名 = new 外部类名.内部类名(); (5)成员内部类的举例\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"8i23d\",\"text\":\"  class Outer {\\n        public int num = 10;\\n        class Inner {\\n            public int num = 20;\\n            public viod show() {\\n                int num  = 30;\\n                                System.out.println(num);\\n                System.out.println(this.num);\\n                System.out.println(Outer.this.num);\\n            }\\n        }\\n    }\\n\\n(6)局部内部类\\n  A:局部内部类访问局部变量必须加final修饰。\\n  B:为什么呢?\\n      因为局部变量使用完毕就消失，而堆内存的数据并不会立即消失。\\n      所以，堆内存还是用该变量，而改变量已经没有了。\\n      为了让该值还存在，就加final修饰。\\n      通过反编译工具我们看到了，加入final后，堆内存直接存储的是值，而不是变量名。\\n(7)匿名内部类\\n  A:是局部内部类的简化形式\\n  B:前提\\n    存在一个类或者接口\\n  C:格式:\\n    new 类名或者接口名() {\\n    重写方法;\\n    }\\n  D:本质：\\n    其实是继承该类或者实现接口的子类匿名对象\\n\\n内部类代码：\\n interface Inter{\\n    public abstract void show();\\n    public abstract void show2();\\n}\\n\\nclass Outer{\\n    private int num = 10;\\n    class Inner{\\n        private int num = 20;\\n        public void show() {\\n            int num = 30;\\n            System.out.println(num);\\n            System.out.println(this.num);\\n            System.out.println(Outer.this.num);\\n        }\\n    }\\n    public void method() {\\n        Inter i = new Inter() {\\n            public void show() {\\n                System.out.println(\\\"show\\\");\\n            }\\n            public void show2() {\\n                System.out.println(\\\"show2\\\");\\n            }\\n        };\\n        i.show();\\n        i.show2();\\n    }\\n}\\n\\npublic class DemoInerClass {\\n    public static void main(String[] args) {\\n    Outer.Inner oi = new Outer().new Inner();\\n        oi.show();\\n        Outer o = new Outer();\\n        o.method();\\n    }\\n}\\n\\n输出为：\\n30\\n20\\n10\\nshow\\nshow2\\n\\n接口代码：\\n\\ninterface father {\\n    public abstract void show();\\n}\\n\\ninterface monther {\\n    public abstract void show2();\\n}\\ninterface sister extends monther,father{\\n\\n}\\n\\nclass zis implements father,monther,sister {\\n    public void show() {\\n        System.out.println(\\\"show father\\\");\\n    }\\n    public void show2() {\\n        System.out.println(\\\"show monther\\\");\\n    }\\n}\\n\\npublic class interfaceone {\\n       public static void main(String[] args) {\\n        father f = new zis();\\n        monther m = new zis();\\n        sister s = new zis();\\n        zis z =new zis();\\n        s.show();\\n        s.show2();\\n        System.out.println(\\\"------------\\\");\\n        f.show();\\n        m.show2();\\n        z.show();\\n        z.show2();\\n    }\\n}\\n\\n输出结果为：\\nshow father\\nshow monther\\n------------\\nshow father\\nshow monther\\nshow father\\nshow monther\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":2,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":8,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":24,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":31,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":41,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":53,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":59,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":79,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":86,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":96,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":112,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":149,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":160,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":203,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":244,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":256,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":290,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":308,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":350,\"length\":8,\"style\":\"FONTSIZE-16\"},{\"offset\":361,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":363,\"length\":22,\"style\":\"FONTSIZE-16\"},{\"offset\":388,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":390,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":402,\"length\":29,\"style\":\"FONTSIZE-16\"},{\"offset\":438,\"length\":23,\"style\":\"FONTSIZE-16\"},{\"offset\":468,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":494,\"length\":40,\"style\":\"FONTSIZE-16\"},{\"offset\":535,\"length\":8,\"style\":\"FONTSIZE-16\"},{\"offset\":546,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":548,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":562,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":564,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":571,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":583,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":585,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":593,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":597,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":613,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":623,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":627,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":629,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":637,\"length\":20,\"style\":\"FONTSIZE-16\"},{\"offset\":688,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":704,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":709,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":721,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":737,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":754,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":760,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":779,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":789,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":797,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":803,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":826,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":836,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":848,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":855,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":860,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":881,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":891,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":907,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":914,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":944,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":951,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":986,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":993,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":1005,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":1042,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":1049,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":1054,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":1083,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":1109,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":1116,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":1121,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":1146,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":1153,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":1200,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":1207,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":1238,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":1245,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":1302,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":1338,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":1345,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":1371,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":1385,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":1416,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":1422,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":1433,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":1437,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":1445,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":1449,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":1469,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":1485,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":1495,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":1499,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":1518,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":1542,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":1545,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":1548,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":1551,\"length\":4,\"style\":\"FONTSIZE-16\"},{\"offset\":1570,\"length\":17,\"style\":\"FONTSIZE-16\"},{\"offset\":1593,\"length\":27,\"style\":\"FONTSIZE-16\"},{\"offset\":1625,\"length\":18,\"style\":\"FONTSIZE-16\"},{\"offset\":1649,\"length\":28,\"style\":\"FONTSIZE-16\"},{\"offset\":1681,\"length\":39,\"style\":\"FONTSIZE-16\"},{\"offset\":1726,\"length\":43,\"style\":\"FONTSIZE-16\"},{\"offset\":1775,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":1823,\"length\":13,\"style\":\"FONTSIZE-16\"},{\"offset\":1849,\"length\":20,\"style\":\"FONTSIZE-16\"},{\"offset\":1898,\"length\":14,\"style\":\"FONTSIZE-16\"},{\"offset\":1924,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":1931,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":1959,\"length\":39,\"style\":\"FONTSIZE-16\"},{\"offset\":2019,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":2050,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":2080,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":2106,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":2181,\"length\":14,\"style\":\"FONTSIZE-16\"},{\"offset\":2,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":24,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":53,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":79,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":112,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":203,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":244,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":256,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":290,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":308,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":709,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":754,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":760,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":797,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":803,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":860,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":907,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":914,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":944,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":951,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":986,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":993,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":1005,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":1054,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":1121,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":1146,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":1153,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":1238,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":1245,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":1302,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":1345,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":1416,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":1422,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":1437,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":1449,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":1469,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":1485,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":1499,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":1518,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":1551,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":1570,\"length\":9,\"style\":\"COLOR-6666EA\"},{\"offset\":1593,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":1600,\"length\":8,\"style\":\"COLOR-6666EA\"},{\"offset\":1609,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":1625,\"length\":9,\"style\":\"COLOR-6666EA\"},{\"offset\":1649,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":1656,\"length\":8,\"style\":\"COLOR-6666EA\"},{\"offset\":1665,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":1681,\"length\":9,\"style\":\"COLOR-6666EA\"},{\"offset\":1698,\"length\":7,\"style\":\"COLOR-6666EA\"},{\"offset\":1726,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":1736,\"length\":10,\"style\":\"COLOR-6666EA\"},{\"offset\":1775,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":1782,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":1849,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":1856,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":1924,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":1931,\"length\":5,\"style\":\"COLOR-6666EA\"},{\"offset\":1959,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":1966,\"length\":6,\"style\":\"COLOR-6666EA\"},{\"offset\":1973,\"length\":4,\"style\":\"COLOR-6666EA\"},{\"offset\":2019,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":2050,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":2080,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":2106,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":8,\"length\":5,\"style\":\"COLOR-7B9726\"},{\"offset\":59,\"length\":5,\"style\":\"COLOR-7B9726\"},{\"offset\":363,\"length\":22,\"style\":\"COLOR-7B9726\"},{\"offset\":390,\"length\":5,\"style\":\"COLOR-7B9726\"},{\"offset\":548,\"length\":11,\"style\":\"COLOR-7B9726\"},{\"offset\":564,\"length\":2,\"style\":\"COLOR-7B9726\"},{\"offset\":585,\"length\":3,\"style\":\"COLOR-7B9726\"},{\"offset\":597,\"length\":11,\"style\":\"COLOR-7B9726\"},{\"offset\":629,\"length\":3,\"style\":\"COLOR-7B9726\"},{\"offset\":1823,\"length\":13,\"style\":\"COLOR-7B9726\"},{\"offset\":1898,\"length\":14,\"style\":\"COLOR-7B9726\"},{\"offset\":2181,\"length\":14,\"style\":\"COLOR-7B9726\"},{\"offset\":31,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":41,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":86,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":96,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":149,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":160,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":688,\"length\":6,\"style\":\"COLOR-DF5320\"},{\"offset\":704,\"length\":4,\"style\":\"COLOR-DF5320\"},{\"offset\":721,\"length\":6,\"style\":\"COLOR-DF5320\"},{\"offset\":737,\"length\":4,\"style\":\"COLOR-DF5320\"},{\"offset\":779,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":789,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":826,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":836,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":848,\"length\":6,\"style\":\"COLOR-DF5320\"},{\"offset\":855,\"length\":4,\"style\":\"COLOR-DF5320\"},{\"offset\":881,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":891,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":1042,\"length\":6,\"style\":\"COLOR-DF5320\"},{\"offset\":1049,\"length\":4,\"style\":\"COLOR-DF5320\"},{\"offset\":1083,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":1109,\"length\":6,\"style\":\"COLOR-DF5320\"},{\"offset\":1116,\"length\":4,\"style\":\"COLOR-DF5320\"},{\"offset\":1200,\"length\":6,\"style\":\"COLOR-DF5320\"},{\"offset\":1207,\"length\":4,\"style\":\"COLOR-DF5320\"},{\"offset\":1338,\"length\":6,\"style\":\"COLOR-DF5320\"},{\"offset\":1371,\"length\":6,\"style\":\"COLOR-DF5320\"},{\"offset\":1385,\"length\":4,\"style\":\"COLOR-DF5320\"},{\"offset\":1433,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":1445,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":1495,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":1542,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":1545,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":1548,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":1618,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":1675,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":1791,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":1866,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":1982,\"length\":15,\"style\":\"COLOR-DF5320\"},{\"offset\":1580,\"length\":6,\"style\":\"COLOR-407EE7\"},{\"offset\":1614,\"length\":4,\"style\":\"COLOR-407EE7\"},{\"offset\":1635,\"length\":7,\"style\":\"COLOR-407EE7\"},{\"offset\":1670,\"length\":5,\"style\":\"COLOR-407EE7\"},{\"offset\":1691,\"length\":6,\"style\":\"COLOR-407EE7\"},{\"offset\":1706,\"length\":7,\"style\":\"COLOR-407EE7\"},{\"offset\":1714,\"length\":6,\"style\":\"COLOR-407EE7\"},{\"offset\":1732,\"length\":3,\"style\":\"COLOR-407EE7\"},{\"offset\":1747,\"length\":6,\"style\":\"COLOR-407EE7\"},{\"offset\":1754,\"length\":7,\"style\":\"COLOR-407EE7\"},{\"offset\":1762,\"length\":6,\"style\":\"COLOR-407EE7\"},{\"offset\":1787,\"length\":4,\"style\":\"COLOR-407EE7\"},{\"offset\":1861,\"length\":5,\"style\":\"COLOR-407EE7\"},{\"offset\":1937,\"length\":12,\"style\":\"COLOR-407EE7\"},{\"offset\":1978,\"length\":4,\"style\":\"COLOR-407EE7\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}}],\"entityMap\":{}}', '<p style=\"text-align:left;text-indent:2em;\">::: hljs-left</p><p style=\"text-align:left;text-indent:2em;\"># 1、final关键字 # (1)是最终的意思，可以修饰类，方法，变量。 (2)特点： A:它修饰的类，不能被继承。 B:它修饰的方法，不能被重写。 C:它修饰的变量，是一个常量</p><p style=\"text-align:left;text-indent:2em;\">:::</p><p style=\"text-align:left;text-indent:2em;\">::: hljs-left</p><p style=\"text-align:left;text-indent:2em;\"><strong>2、多态</strong> (1)同一个对象在不同时刻体现出来的不同状态。 (2)多态的前提： A:有继承或者实现关系。 B:有方法重写。 C:有父类或者父接口引用指向子类对象。 (3)多态的分类：</p><p style=\"text-align:left;text-indent:2em;\">:::</p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\">    a:具体类多态<br/><span style=\"font-size:16px\"><span style=\"color:#6666ea\">class</span> <span style=\"color:#407ee7\">Fu</span> </span>{}<br/>    <span style=\"font-size:16px\"><span style=\"color:#6666ea\">class</span> <span style=\"color:#407ee7\">Zi</span> <span style=\"color:#6666ea\">extends</span> <span style=\"color:#407ee7\">Fu</span> </span>{}            <br/>         <span style=\"font-size:16px\"><span style=\"color:#df5320\">Fu</span></span> f = <span style=\"font-size:16px\"><span style=\"color:#6666ea\">new</span></span> <span style=\"font-size:16px\"><span style=\"color:#df5320\">Zi</span></span>();<br/><br/>    b:抽象类多态<br/>    <span style=\"font-size:16px\"><span style=\"color:#6666ea\">abstract</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">class</span> <span style=\"color:#407ee7\">Fu</span> </span>{}<br/>    <span style=\"font-size:16px\"><span style=\"color:#6666ea\">class</span> <span style=\"color:#407ee7\">Zi</span> <span style=\"color:#6666ea\">extends</span> <span style=\"color:#407ee7\">Fu</span> </span>{}<br/>    <span style=\"font-size:16px\"><span style=\"color:#df5320\">Fu</span></span> f = <span style=\"font-size:16px\"><span style=\"color:#6666ea\">new</span></span> <span style=\"font-size:16px\"><span style=\"color:#df5320\">Zi</span></span>();<br/><br/>     c:接口多态<br/>   <span style=\"font-size:16px\"><span style=\"color:#df5320\"> interface </span></span>Fu {}<br/>    class Zi implements Fu {}            <br/>    Fu f = new Zi();<br/></code></pre><p style=\"text-align:left;text-indent:2em;\">::: hljs-left</p><p style=\"text-align:left;text-indent:2em;\">(4)多态中的成员访问特点 A:成员变量 编译看左边，运行看左边 B:构造方法 子类的构造都会默认访问父类构造 C:成员方法 编译看左边，运行看右边 D:静态方法 编译看左边，运行看左边 (5)多态的好处： A:提高代码的维护性(继承体现) B:提高代码的扩展性(多态体现) (6)多态的弊端： 父不能使用子的特有功能。 现象： 子可以当作父使用，父不能当作子使用。 (7)多态中的转型 A:向上转型 从子到父 B:向下转型 从父到子 (8)孔子装爹的案例帮助大家理解多态</p><p style=\"text-align:left;text-indent:2em;\">:::</p><p style=\"text-align:left;text-indent:2em;\">::: hljs-left</p><p style=\"text-align:left;text-indent:2em;\"><strong>3、抽象类</strong> (1)抽象类的特点 A:抽象类和抽象方法必须用关键字abstract修饰 B:抽象类中不一定有抽象方法,但是有抽象方法的类一定是抽象类 C:抽象类不能实例化 D:抽象类的子类 a:是一个抽象类。 b:是一个具体类。这个类必须重写抽象类中的所有抽象方法。 (2)抽象类的成员特点： A:成员变量 有变量，有常量 B:构造方法 有构造方法 C:成员方法 有抽象，有非抽象 (3)抽象类的几个小问题 A:抽象类有构造方法，不能实例化，那么构造方法有什么用? 用于子类访问父类数据的初始化 B:一个类如果没有抽象方法,却定义为了抽象类，有什么用? 为了不让创建对象 C:abstract不能和哪些关键字共存 a:final 冲突 b:private 冲突 c:static 无意义</p><p style=\"text-align:left;text-indent:2em;\">:::</p><p style=\"text-align:left;text-indent:2em;\">::: hljs-left</p><p style=\"text-align:left;text-indent:2em;\"><strong>4:接口</strong> (1)接口的特点： A:接口用关键字interface修饰 interface 接口名 {} B:类实现接口用implements修饰 class 类名 implements 接口名 {} C:接口不能实例化 D:接口的实现类 a:是一个抽象类。 b:是一个具体类，这个类必须重写接口中的所有抽象方法。 (2)接口的成员特点： A:成员变量 只能是常量 默认修饰符：public static final B:构造方法 没有构造方法 C:成员方法 只能是抽象的 默认修饰符：public abstract (3)类与类,类与接口,接口与接口 A:类与类 继承关系，只能单继承，可以多层继承 B:类与接口 实现关系，可以单实现，也可以多实现。 还可以在继承一个类的同时，实现多个接口 C:接口与接口 继承关系，可以单继承，也可以多继承</p><p style=\"text-align:left;text-indent:2em;\">:::</p><p style=\"text-align:left;text-indent:2em;\">5:内部类 (1)把类定义在另一个类的内部，该类就被称为内部类。 举例：把类B定义在类A中，类B就被称为内部类。 (2)内部类的访问规则 A:可以直接访问外部类的成员，包括私有 B:外部类要想访问内部类成员，必须创建对象 (3)内部类的分类 A:成员内部类 B:局部内部类 (4)成员内部类 A:private 为了数据的安全性 B:static 为了访问的方便性<br/>成员内部类不是静态的： 外部类名.内部类名 对象名 = new 外部类名.new 内部类名(); 成员内部类是静态的： 外部类名.内部类名 对象名 = new 外部类名.内部类名(); (5)成员内部类的举例</p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\">  <span style=\"font-size:16px\"><span style=\"color:#6666ea\">class</span></span> <span style=\"font-size:16px\"><span style=\"color:#7b9726\">Outer</span></span> {<br/>        <span style=\"font-size:16px\"><span style=\"color:#6666ea\">public</span></span> <span style=\"font-size:16px\"><span style=\"color:#df5320\">int</span></span> num = <span style=\"font-size:16px\"><span style=\"color:#df5320\">10</span></span>;<br/>        <span style=\"font-size:16px\"><span style=\"color:#6666ea\">class</span></span> <span style=\"font-size:16px\"><span style=\"color:#7b9726\">Inner</span></span> {<br/>            <span style=\"font-size:16px\"><span style=\"color:#6666ea\">public</span></span> <span style=\"font-size:16px\"><span style=\"color:#df5320\">int</span></span> num = <span style=\"font-size:16px\"><span style=\"color:#df5320\">20</span></span>;<br/>            <span style=\"font-size:16px\"><span style=\"color:#6666ea\">public</span></span> viod show() {<br/>                <span style=\"font-size:16px\"><span style=\"color:#df5320\">int</span></span> num  = <span style=\"font-size:16px\"><span style=\"color:#df5320\">30</span></span>;<br/>                                System.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">out</span></span>.println(num);<br/>                System.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">out</span></span>.println(<span style=\"font-size:16px\"><span style=\"color:#6666ea\">this</span></span>.num);<br/>                System.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">out</span></span>.println(Outer.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">this</span></span>.num);<br/>            }<br/>        }<br/>    }<br/><br/><span style=\"font-size:16px\">(6)局部内部类</span><br/>  <span style=\"font-size:16px\">A</span>:<span style=\"font-size:16px\"><span style=\"color:#7b9726\">局部内部类访问局部变量必须加final修饰。</span></span><br/>  <span style=\"font-size:16px\">B</span>:<span style=\"font-size:16px\"><span style=\"color:#7b9726\">为什么呢?</span></span><br/>      <span style=\"font-size:16px\">因为局部变量使用完毕就消失，而堆内存的数据并不会立即消失。</span><br/>      <span style=\"font-size:16px\">所以，堆内存还是用该变量，而改变量已经没有了。</span><br/>      <span style=\"font-size:16px\">为了让该值还存在，就加final修饰。</span><br/>      <span style=\"font-size:16px\">通过反编译工具我们看到了，加入final后，堆内存直接存储的是值，而不是变量名。</span><br/><span style=\"font-size:16px\">(7)匿名内部类</span><br/>  <span style=\"font-size:16px\">A</span>:<span style=\"font-size:16px\"><span style=\"color:#7b9726\">是局部内部类的简化形式</span></span><br/>  <span style=\"font-size:16px\">B</span>:<span style=\"font-size:16px\"><span style=\"color:#7b9726\">前提</span></span><br/>    <span style=\"font-size:16px\">存在一个类或者接口</span><br/>  <span style=\"font-size:16px\">C</span>:<span style=\"font-size:16px\"><span style=\"color:#7b9726\">格式:</span></span><br/>    <span style=\"font-size:16px\">new</span> <span style=\"font-size:16px\"><span style=\"color:#7b9726\">类名或者接口名() {</span></span><br/>    <span style=\"font-size:16px\">重写方法;</span><br/>    <span style=\"font-size:16px\">}</span><br/>  <span style=\"font-size:16px\">D</span>:<span style=\"font-size:16px\"><span style=\"color:#7b9726\">本质：</span></span><br/>    <span style=\"font-size:16px\">其实是继承该类或者实现接口的子类匿名对象</span><br/><br/>内部类代码：<br/> interface Inter{<br/>    <span style=\"font-size:16px\"><span style=\"color:#df5320\">public</span></span> abstract <span style=\"font-size:16px\"><span style=\"color:#df5320\">void</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">show</span></span>();<br/>    <span style=\"font-size:16px\"><span style=\"color:#df5320\">public</span></span> abstract <span style=\"font-size:16px\"><span style=\"color:#df5320\">void</span></span> show2();<br/>}<br/><br/><span style=\"font-size:16px\"><span style=\"color:#6666ea\">class</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">Outer</span></span>{<br/>    private <span style=\"font-size:16px\"><span style=\"color:#df5320\">int</span></span> num = <span style=\"font-size:16px\"><span style=\"color:#df5320\">10</span></span>;<br/>    <span style=\"font-size:16px\"><span style=\"color:#6666ea\">class</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">Inner</span></span>{<br/>        private <span style=\"font-size:16px\"><span style=\"color:#df5320\">int</span></span> num = <span style=\"font-size:16px\"><span style=\"color:#df5320\">20</span></span>;<br/>        <span style=\"font-size:16px\"><span style=\"color:#df5320\">public</span></span> <span style=\"font-size:16px\"><span style=\"color:#df5320\">void</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">show</span></span>() {<br/>            <span style=\"font-size:16px\"><span style=\"color:#df5320\">int</span></span> num = <span style=\"font-size:16px\"><span style=\"color:#df5320\">30</span></span>;<br/>            <span style=\"font-size:16px\"><span style=\"color:#6666ea\">System</span></span>.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">out</span></span>.println(num);<br/>            <span style=\"font-size:16px\"><span style=\"color:#6666ea\">System</span></span>.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">out</span></span>.println(this.num);<br/>            <span style=\"font-size:16px\"><span style=\"color:#6666ea\">System</span></span>.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">out</span></span>.println(<span style=\"font-size:16px\"><span style=\"color:#6666ea\">Outer</span></span>.this.num);<br/>        }<br/>    }<br/>    <span style=\"font-size:16px\"><span style=\"color:#df5320\">public</span></span> <span style=\"font-size:16px\"><span style=\"color:#df5320\">void</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">method</span></span>() {<br/>        Inter i = <span style=\"font-size:16px\"><span style=\"color:#df5320\">new</span></span> Inter() {<br/>            <span style=\"font-size:16px\"><span style=\"color:#df5320\">public</span></span> <span style=\"font-size:16px\"><span style=\"color:#df5320\">void</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">show</span></span>() {<br/>                <span style=\"font-size:16px\"><span style=\"color:#6666ea\">System</span></span>.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">out</span></span>.println(&quot;show&quot;);<br/>            }<br/>            <span style=\"font-size:16px\"><span style=\"color:#df5320\">public</span></span> <span style=\"font-size:16px\"><span style=\"color:#df5320\">void</span></span> show2() {<br/>                <span style=\"font-size:16px\"><span style=\"color:#6666ea\">System</span></span>.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">out</span></span>.println(&quot;show2&quot;);<br/>            }<br/>        };<br/>        i.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">show</span></span>();<br/>        i.show2();<br/>    }<br/>}<br/><br/><span style=\"font-size:16px\"><span style=\"color:#df5320\">public</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">class</span></span> DemoInerClass {<br/>    <span style=\"font-size:16px\"><span style=\"color:#df5320\">public</span></span> static <span style=\"font-size:16px\"><span style=\"color:#df5320\">void</span></span> main(String[] args) {<br/>    <span style=\"font-size:16px\"><span style=\"color:#6666ea\">Outer</span></span>.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">Inner</span></span> oi = <span style=\"font-size:16px\"><span style=\"color:#df5320\">new</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">Outer</span></span>().<span style=\"font-size:16px\"><span style=\"color:#df5320\">new</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">Inner</span></span>();<br/>        oi.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">show</span></span>();<br/>        <span style=\"font-size:16px\"><span style=\"color:#6666ea\">Outer</span></span> o = <span style=\"font-size:16px\"><span style=\"color:#df5320\">new</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">Outer</span></span>();<br/>        o.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">method</span></span>();<br/>    }<br/>}<br/><br/>输出为：<br/><span style=\"font-size:16px\"><span style=\"color:#df5320\">30</span></span><br/><span style=\"font-size:16px\"><span style=\"color:#df5320\">20</span></span><br/><span style=\"font-size:16px\"><span style=\"color:#df5320\">10</span></span><br/><span style=\"font-size:16px\"><span style=\"color:#6666ea\">show</span></span><br/>show2<br/><br/>接口代码：<br/><br/><span style=\"font-size:16px\"><span style=\"color:#6666ea\">interface</span> <span style=\"color:#407ee7\">father</span> </span>{<br/>    <span style=\"font-size:16px\"><span style=\"color:#6666ea\">public</span> <span style=\"color:#6666ea\">abstract</span> <span style=\"color:#6666ea\">void</span> <span style=\"color:#407ee7\">show</span><span style=\"color:#df5320\">()</span></span>;<br/>}<br/><br/><span style=\"font-size:16px\"><span style=\"color:#6666ea\">interface</span> <span style=\"color:#407ee7\">monther</span> </span>{<br/>    <span style=\"font-size:16px\"><span style=\"color:#6666ea\">public</span> <span style=\"color:#6666ea\">abstract</span> <span style=\"color:#6666ea\">void</span> <span style=\"color:#407ee7\">show2</span><span style=\"color:#df5320\">()</span></span>;<br/>}<br/><span style=\"font-size:16px\"><span style=\"color:#6666ea\">interface</span> <span style=\"color:#407ee7\">sister</span> <span style=\"color:#6666ea\">extends</span> <span style=\"color:#407ee7\">monther</span>,<span style=\"color:#407ee7\">father</span></span>{<br/><br/>}<br/><br/><span style=\"font-size:16px\"><span style=\"color:#6666ea\">class</span> <span style=\"color:#407ee7\">zis</span> <span style=\"color:#6666ea\">implements</span> <span style=\"color:#407ee7\">father</span>,<span style=\"color:#407ee7\">monther</span>,<span style=\"color:#407ee7\">sister</span> </span>{<br/>    <span style=\"font-size:16px\"><span style=\"color:#6666ea\">public</span> <span style=\"color:#6666ea\">void</span> <span style=\"color:#407ee7\">show</span><span style=\"color:#df5320\">()</span> </span>{<br/>        System.out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;show father&quot;</span></span>);<br/>    }<br/>    <span style=\"font-size:16px\"><span style=\"color:#6666ea\">public</span> <span style=\"color:#6666ea\">void</span> <span style=\"color:#407ee7\">show2</span><span style=\"color:#df5320\">()</span> </span>{<br/>        System.out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;show monther&quot;</span></span>);<br/>    }<br/>}<br/><br/><span style=\"font-size:16px\"><span style=\"color:#6666ea\">public</span></span> <span style=\"font-size:16px\"><span style=\"color:#6666ea\">class</span> <span style=\"color:#407ee7\">interfaceone</span> </span>{<br/>       <span style=\"font-size:16px\"><span style=\"color:#6666ea\">public</span> <span style=\"color:#6666ea\">static</span> <span style=\"color:#6666ea\">void</span> <span style=\"color:#407ee7\">main</span><span style=\"color:#df5320\">(String[] args)</span> </span>{<br/>        father f = <span style=\"font-size:16px\"><span style=\"color:#6666ea\">new</span></span> zis();<br/>        monther m = <span style=\"font-size:16px\"><span style=\"color:#6666ea\">new</span></span> zis();<br/>        sister s = <span style=\"font-size:16px\"><span style=\"color:#6666ea\">new</span></span> zis();<br/>        zis z =<span style=\"font-size:16px\"><span style=\"color:#6666ea\">new</span></span> zis();<br/>        s.show();<br/>        s.show2();<br/>        System.out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;------------&quot;</span></span>);<br/>        f.show();<br/>        m.show2();<br/>        z.show();<br/>        z.show2();<br/>    }<br/>}<br/><br/>输出结果为：<br/>show father<br/>show monther<br/>------------<br/>show father<br/>show monther<br/>show father<br/>show monther</code></pre>', 12, 1, 0, '2018-09-23 00:00:00', NULL);
INSERT INTO `article` VALUES (122, '201710804035', 'Java中设计模式的讲解与团队管理方案确定会议', 2, 2, '2018年11月30日，数学与计算机学院web应用专业团队在励志楼四楼会议召开了Java设计模式的讲解和团队管理方案的确定会议。 会议伊始，尹迪进行本次会议的考勤，然后进行Java设计模式中的简单工厂模式、工厂模式和单例模式的讲解，接着团队', '设计模式', 'http://img.pzhuweb.cn/2017108040351561794180398.jpg', '{\"blocks\":[{\"key\":\"5njjn\",\"text\":\"2018年11月30日，数学与计算机学院web应用专业团队在励志楼四楼会议召开了Java设计模式的讲解和团队管理方案的确定会议。 会议伊始，尹迪进行本次会议的考勤，然后进行Java设计模式中的简单工厂模式、工厂模式和单例模式的讲解，接着团队指导老师兰全祥和其他团队成员进行了点评和修正。Java的设计模式的几个模式讲解完后，姚添译进行了管理团队方案确定的主持。最终本次会议确定了团队管理的方案。\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":197,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"529gm\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"src\":\"http://old.pzhuweb.cn/upload/2018-12/2018-12-46d563911f462891b74d92f43f15ea33.JPG\",\"alt\":\"尹迪2.JPG\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"leuq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2rjkg\",\"text\":\"\\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"尹迪2.JPG\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-12/2018-12-46d563911f462891b74d92f43f15ea33.JPG\"}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">2018年11月30日，数学与计算机学院web应用专业团队在励志楼四楼会议召开了Java设计模式的讲解和团队管理方案的确定会议。 会议伊始，尹迪进行本次会议的考勤，然后进行Java设计模式中的简单工厂模式、工厂模式和单例模式的讲解，接着团队指导老师兰全祥和其他团队成员进行了点评和修正。Java的设计模式的几个模式讲解完后，姚添译进行了管理团队方案确定的主持。最终本次会议确定了团队管理的方案。</span><br/></p><div class=\"media-wrap image-wrap\"><img src=\"http://old.pzhuweb.cn/upload/2018-12/2018-12-46d563911f462891b74d92f43f15ea33.JPG\" alt=\"尹迪2.JPG\"/></div><p></p><p><br/> </p>', 7, 1, 0, '2018-11-30 00:00:00', NULL);
INSERT INTO `article` VALUES (123, '201710804172', 'WEB应用专业团队完成第一批次项目结题报告会', 5, 13, '为进一步提高学生创新实践能力，推动专业团队成员实践创新，WEB应用专业团队在2017年9月底根据团队成员各自研究内容进行了立项申请和审批。从2017年11月3日至2017年11月13日，第一批次8个研究项目完成了结题报告。本次结题报告会主题', 'MVC 设计模式', 'http://img.pzhuweb.cn/2017108041721561794184609.jpg', '{\"blocks\":[{\"key\":\"1q23s\",\"text\":\"为进一步提高学生创新实践能力，推动专业团队成员实践创新，WEB应用专业团队在2017年9月底根据团队成员各自研究内容进行了立项申请和审批。从2017年11月3日至2017年11月13日，第一批次8个研究项目完成了结题报告。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":111,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"a4cdt\",\"text\":\"本次结题报告会主题包括《flex布局》、《设计模式——MVC》、《设计模式——工厂、单例等》、《递归算法的应用》、《数据结构——链表的应用》、《小知了智能机器人开发》、《数组的应用》、《排序算法的研究》等内容。参与结题报告会的人员有WEB应用专业团队全体成员以及2017级部分学生，专业团队指导教师兰全祥主持结题报告会并对报告进行了点评。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":169,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"aq7qo\",\"text\":\"通过此次结题报告会，团队成员在软件开发基础知识、程序设计思维、软件质量等方面都有一定的收获和提高。最后，兰全祥老师对本次结题报告会进行了总结，他认为所有成员的结题报告会都存在一定的瑕疵，包括演讲能力欠缺、知识掌握不够透彻、研究深度不够等，但能够顺利完成此次项目结题报告会都是值得肯定的，不过仍然希望团队成员能够主动学习、积极交流，不要始终只做无知的接受者，而要成为学习的参与者。 \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":190,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"fg40j\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"210i8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"98\",\"alt\":\"2017108041721561794591167.jpg\",\"title\":\"2017108041721561794591167.jpg\"},\"url\":\"http://img.pzhuweb.cn/2017108041721561794591167.jpg\",\"width\":\"1000px\"}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">为进一步提高学生创新实践能力，推动专业团队成员实践创新，WEB应用专业团队在2017年9月底根据团队成员各自研究内容进行了立项申请和审批。从2017年11月3日至2017年11月13日，第一批次8个研究项目完成了结题报告。</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">本次结题报告会主题包括《flex布局》、《设计模式——MVC》、《设计模式——工厂、单例等》、《递归算法的应用》、《数据结构——链表的应用》、《小知了智能机器人开发》、《数组的应用》、《排序算法的研究》等内容。参与结题报告会的人员有WEB应用专业团队全体成员以及2017级部分学生，专业团队指导教师兰全祥主持结题报告会并对报告进行了点评。</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">通过此次结题报告会，团队成员在软件开发基础知识、程序设计思维、软件质量等方面都有一定的收获和提高。最后，兰全祥老师对本次结题报告会进行了总结，他认为所有成员的结题报告会都存在一定的瑕疵，包括演讲能力欠缺、知识掌握不够透彻、研究深度不够等，但能够顺利完成此次项目结题报告会都是值得肯定的，不过仍然希望团队成员能够主动学习、积极交流，不要始终只做无知的接受者，而要成为学习的参与者。 </span></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"98\" alt=\"2017108041721561794591167.jpg\" title=\"2017108041721561794591167.jpg\" src=\"http://img.pzhuweb.cn/2017108041721561794591167.jpg\" width=\"1000px\" style=\"width:1000px\"/></div><p></p>', 7, 1, 0, '2018-04-26 00:00:00', NULL);
INSERT INTO `article` VALUES (124, '201710804105', 'WEB应用专业团队开展团队活动MVC讲解', 5, 13, '2018年9月16日，数学与计算机学院web应用团队于励志楼四楼会议室召开了关于“设计模型--MVC”的讲解会议。主讲人是2016级计算机科学与技术的雷红，主讲内容是MVC结构模型、SQL注入、防暴力破解以及防网络监听的方法。', 'MVC', 'http://img.pzhuweb.cn/2017108041051561794172058.jpg', '{\"blocks\":[{\"key\":\"7j1m\",\"text\":\"2018年9月16日，数学与计算机学院web应用团队于励志楼四楼会议室召开了关于“设计模型--MVC”的讲解会议。主讲人是2016级计算机科学与技术的雷红，主讲内容是MVC结构模型、SQL注入、防暴力破解以及防网络监听的方法。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":113,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":113,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":113,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":113,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2hsm2\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"7fe7f\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041051561794431250.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":91,\"title\":\"2017108041051561794431250.jpg\",\"alt\":\"2017108041051561794431250.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">2018年9月16日，数学与计算机学院web应用团队于励志楼四楼会议室召开了关于“设计模型--MVC”的讲解会议。主讲人是2016级计算机科学与技术的雷红，主讲内容是MVC结构模型、SQL注入、防暴力破解以及防网络监听的方法。</span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"91\" title=\"2017108041051561794431250.jpg\" alt=\"2017108041051561794431250.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041051561794431250.jpg\"/></div><p></p>', 11, 1, 0, '2018-09-16 00:00:00', NULL);
INSERT INTO `article` VALUES (125, '201710804099', '团队学术报告会-QRcode二维码和node.js的CRUD', 5, 13, '2018年10月13日，数学与计算机学院Web应用团队与励志楼四楼召开了关于“基于QRcode的二维码制作”和“基于nodejs的学生信息的CRUD操作”的讲解会议。前者主讲人是2016级软件工程杨廷发，讲解了BufferImage、Gra', 'QRcode node.js', 'http://img.pzhuweb.cn/2017108040991561794328727.jpg', '{\"blocks\":[{\"key\":\"2h997\",\"text\":\"2018年10月13日，数学与计算机学院Web应用团队与励志楼四楼召开了关于“基于QRcode的二维码制作”和“基于nodejs的学生信息的CRUD操作”的讲解会议。前者主讲人是2016级软件工程杨廷发，讲解了BufferImage、Graphic2D、和QRcode相关知识。后者主讲人是2016级软件工程罗文，讲解了node与API、模块、异步和回调函数。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":180,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":180,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":180,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"crkog\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"src\":\"http://old.pzhuweb.cn/upload/2018-10/2018-10-586bd0dd8e88f95fc68519178acdfd87.jpg\",\"alt\":\"TIM图片20181014163713.jpg\"},\"float\":\"\",\"alignment\":\"left\"}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"TIM图片20181014163713.jpg\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-10/2018-10-586bd0dd8e88f95fc68519178acdfd87.jpg\"}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">2018年10月13日，数学与计算机学院Web应用团队与励志楼四楼召开了关于“基于QRcode的二维码制作”和“基于nodejs的学生信息的CRUD操作”的讲解会议。前者主讲人是2016级软件工程杨廷发，讲解了BufferImage、Graphic2D、和QRcode相关知识。后者主讲人是2016级软件工程罗文，讲解了node与API、模块、异步和回调函数。</span></span></span></p><div class=\"media-wrap image-wrap align-left\" style=\"text-align:left\"><img src=\"http://old.pzhuweb.cn/upload/2018-10/2018-10-586bd0dd8e88f95fc68519178acdfd87.jpg\" alt=\"TIM图片20181014163713.jpg\"/></div>', 6, 1, 0, '2018-10-14 00:00:00', NULL);
INSERT INTO `article` VALUES (126, '201710804035', 'WEB应用专业团队期末活动暨工作总结报告会', 5, 13, 'WEB应用开发专业团队于2018年6月10日19:40在砺志楼四楼会议室开展了主题为“编程规范及论文写作”的团队活动。本次团队活动由指导老师兰全祥主持，2016级软件工程任云宏、姚添译主讲。首先由任云宏介绍编程规范，讲解了《阿里巴巴Java', '工作总结报告会', 'http://img.pzhuweb.cn/2017108040351561794327280.jpg', '{\"blocks\":[{\"key\":\"dqd50\",\"text\":\"WEB应用开发专业团队于2018年6月10日19:40在砺志楼四楼会议室开展了主题为“编程规范及论文写作”的团队活动。本次团队活动由指导老师兰全祥主持，2016级软件工程任云宏、姚添译主讲。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":95,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"cdc9r\",\"text\":\"首先由任云宏介绍编程规范，讲解了《阿里巴巴Java编程规范》中关于包名、类名、文件名、变量名、方法名以及常量名等命名规则，强调了阿里在对Java编程上的各种编写规范要求。最后介绍了华为在C语言编程规范上的要求，讲解了现今常用的变量命名风格，如unix like、Windows风格。姚添译讲解了论文写作，首先介绍了写作论文的几个步骤，然后介绍了中国知网并推荐了画图工具及网站，详细地讲解了中图分类号和如何引用论文。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":207,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"cgm91\",\"text\":\"活动最后，由兰全祥老师对团队本期所有活动做归纳总结，总体而言本学期团队活动多样，成果丰富！对团队成员的发展提出方向上的指导和建议，对任云宏、姚添译所作报告做出评价。最后希望团队成员在今后的学习中再接再厉，加强交流和沟通，争取取得更好的成绩。 \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":121,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"4bhvi\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"src\":\"http://old.pzhuweb.cn/upload/2018-6/2018-6-19a12015c79170fb34ccd20502141ab0.jpg\",\"alt\":\"7F54A006CB142ECC6EE5BBC3408D67E6.jpg\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"3jk0d\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"7F54A006CB142ECC6EE5BBC3408D67E6.jpg\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-6/2018-6-19a12015c79170fb34ccd20502141ab0.jpg\"}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">WEB应用开发专业团队于2018年6月10日19:40在砺志楼四楼会议室开展了主题为“编程规范及论文写作”的团队活动。本次团队活动由指导老师兰全祥主持，2016级软件工程任云宏、姚添译主讲。</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">首先由任云宏介绍编程规范，讲解了《阿里巴巴Java编程规范》中关于包名、类名、文件名、变量名、方法名以及常量名等命名规则，强调了阿里在对Java编程上的各种编写规范要求。最后介绍了华为在C语言编程规范上的要求，讲解了现今常用的变量命名风格，如unix like、Windows风格。姚添译讲解了论文写作，首先介绍了写作论文的几个步骤，然后介绍了中国知网并推荐了画图工具及网站，详细地讲解了中图分类号和如何引用论文。</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">活动最后，由兰全祥老师对团队本期所有活动做归纳总结，总体而言本学期团队活动多样，成果丰富！对团队成员的发展提出方向上的指导和建议，对任云宏、姚添译所作报告做出评价。最后希望团队成员在今后的学习中再接再厉，加强交流和沟通，争取取得更好的成绩。 </span></p><div class=\"media-wrap image-wrap\"><img src=\"http://old.pzhuweb.cn/upload/2018-6/2018-6-19a12015c79170fb34ccd20502141ab0.jpg\" alt=\"7F54A006CB142ECC6EE5BBC3408D67E6.jpg\"/></div><p></p>', 26, 1, 0, '2018-06-14 00:00:00', NULL);
INSERT INTO `article` VALUES (127, '201710803072', 'WEB应用专业团队开展团队活动JavaScript讲解', 5, 13, '继HTML和CSS讲解之后，WEB应用开发专业团队于2018年4月14日19:40在砺志楼四楼会议室举办了第三次专题报告会，本次报告会主讲网页设计三大技术的最后一个——JavaScript。 本次报告会由WEB应用专业团队的队长、2015级', 'JavaScript', 'http://img.pzhuweb.cn/2017108030721561794484538.jpg', '{\"blocks\":[{\"key\":\"50j3p\",\"text\":\"继HTML和CSS讲解之后，WEB应用开发专业团队于2018年4月14日19:40在砺志楼四楼会议室举办了第三次专题报告会，本次报告会主讲网页设计三大技术的最后一个——JavaScript。 本次报告会由WEB应用专业团队的队长、2015级软件工程刘星主讲。本次报告会主要介绍了前端框架中事件绑定的实现原理，详细展示了事件绑定的整个过程。通过JavaScript事件绑定的讲解和实现，使团队成员进一步了解到了DOM文档树的操作、JavaScript事件监听以及属性处理等技术。 报告会最后由团队指导教师兰全祥老师进行了简单的总结。本次报告会的内容较难，对于2017级的成员听起来比较吃力，但是知识之间都是互通的，问题的解决思路也是类似的。事件绑定中运用到的模块化思想、递归的算法设计以及数据结构的知识都是大家平时遇见过的、学习过的，我们所欠缺的是知识的灵活掌握以及综合运用。希望大家在平时学习中不要局限于课堂、局限于考试，应该多见、多学、多练，将理论运用到实践中。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":432,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":432,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":432,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">继HTML和CSS讲解之后，WEB应用开发专业团队于2018年4月14日19:40在砺志楼四楼会议室举办了第三次专题报告会，本次报告会主讲网页设计三大技术的最后一个——JavaScript。 本次报告会由WEB应用专业团队的队长、2015级软件工程刘星主讲。本次报告会主要介绍了前端框架中事件绑定的实现原理，详细展示了事件绑定的整个过程。通过JavaScript事件绑定的讲解和实现，使团队成员进一步了解到了DOM文档树的操作、JavaScript事件监听以及属性处理等技术。 报告会最后由团队指导教师兰全祥老师进行了简单的总结。本次报告会的内容较难，对于2017级的成员听起来比较吃力，但是知识之间都是互通的，问题的解决思路也是类似的。事件绑定中运用到的模块化思想、递归的算法设计以及数据结构的知识都是大家平时遇见过的、学习过的，我们所欠缺的是知识的灵活掌握以及综合运用。希望大家在平时学习中不要局限于课堂、局限于考试，应该多见、多学、多练，将理论运用到实践中。</span></span></span></p>', 9, 1, 0, '2018-04-26 00:00:00', NULL);
INSERT INTO `article` VALUES (128, '201710804035', '团队学术报告会-Java API源码分析之sort和list', 5, 2, 'WEB应用开发专业团队于2018年11月9日19:40在砺志楼四楼会议室开展了sort。list的讲解。 本次团队活动由段发钰，全科举主讲，报告会首先段发钰介绍了sort相关功能，探讨了不同范围使用不同的排序算法。并且举例说明了compar', 'sort，list', 'http://img.pzhuweb.cn/2017108040351561794505069.jpg', '{\"blocks\":[{\"key\":\"e96p2\",\"text\":\"WEB应用开发专业团队于2018年11月9日19:40在砺志楼四楼会议室开展了sort。list的讲解。 本次团队活动由段发钰，全科举主讲，报告会首先段发钰介绍了sort相关功能，探讨了不同范围使用不同的排序算法。并且举例说明了comparator与comparable的区别。然后由全科举讲解了list中常见的三个集合：ArrayList、Vector、LinkedList。团队成员在此次团队活动中积极参与，共同探讨相关问题。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":215,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"4pspu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"8kh0g\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"src\":\"http://old.pzhuweb.cn/upload/2018-11/2018-11-180f6c2ad0275dbaf96609dfd2adc13e.jpg\",\"alt\":\"团队.jpg\"},\"float\":null,\"alignment\":\"center\"}},{\"key\":\"r5m7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"团队.jpg\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-11/2018-11-180f6c2ad0275dbaf96609dfd2adc13e.jpg\",\"width\":960.2000732421875,\"height\":690.7999877929688}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">WEB应用开发专业团队于2018年11月9日19:40在砺志楼四楼会议室开展了sort。list的讲解。 本次团队活动由段发钰，全科举主讲，报告会首先段发钰介绍了sort相关功能，探讨了不同范围使用不同的排序算法。并且举例说明了comparator与comparable的区别。然后由全科举讲解了list中常见的三个集合：ArrayList、Vector、LinkedList。团队成员在此次团队活动中积极参与，共同探讨相关问题。</span></p><p style=\"text-align:left;text-indent:2em;\"></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img size=\"2\" _root=\"[object Object]\" alt=\"团队.jpg\" src=\"http://old.pzhuweb.cn/upload/2018-11/2018-11-180f6c2ad0275dbaf96609dfd2adc13e.jpg\" width=\"960.2000732421875\" height=\"690.7999877929688\" style=\"width:960.2000732421875px;height:690.7999877929688px\"/></div><p></p>', 7, 1, 0, '2018-11-09 00:00:00', NULL);
INSERT INTO `article` VALUES (129, '201710804099', 'web应用专业团队团日活动系列之讲解Java异常与设计原则', 5, 13, '不知不觉，一周又过去了，于2018年11月18日19：00点，web应用开发专业团队全体成员和大一的新成员在励志楼四楼会议室再次开展了技术讲解的团日活动。本次活动由曹林和黄金树主讲。其中曹林为我们讲解“Java的异常”，提到了异常的分类、常', 'java异常', 'http://img.pzhuweb.cn/2017108040991561794493037.jpg', '{\"blocks\":[{\"key\":\"60p29\",\"text\":\"不知不觉，一周又过去了，于2018年11月18日19：00点，web应用开发专业团队全体成员和大一的新成员在励志楼四楼会议室再次开展了技术讲解的团日活动。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"15hg5\",\"text\":\"本次活动由曹林和黄金树主讲。其中曹林为我们讲解“Java的异常”，提到了异常的分类、常见的异常类和常用的异常方法，并仔细阐述了捕获异常过程和注意事项。最后还由兰总带领大家一起讨论catch语句块里的return执行情况并通过问问题对这部分讲解做出总结。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"2sbgr\",\"text\":\"另外黄金树为我们带来了编程中必不可少的”六大设计原则“。其中包括”单一原则“、”接口隔离原则“、”开闭原则“、”里氏代换原则“、”依赖倒置原则“和”迪米特法则“。并为我们逐一对六大原则进行了深入浅出的讲解。最后兰总也对每条原则做出了补充，强调了这些原则对编程的好处。 \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"dfjl5\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"src\":\"http://old.pzhuweb.cn/upload/2018-12/2018-12-5c865de9bef86c96154457a0a1f677fe.jpg\",\"alt\":\"Cache_3a85169427516a0..jpg\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"df87o\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"Cache_3a85169427516a0..jpg\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-12/2018-12-5c865de9bef86c96154457a0a1f677fe.jpg\"}}}}', '<p style=\"text-align:left;text-indent:2em;\">不知不觉，一周又过去了，于2018年11月18日19：00点，web应用开发专业团队全体成员和大一的新成员在励志楼四楼会议室再次开展了技术讲解的团日活动。</p><p style=\"text-align:left;text-indent:2em;\">本次活动由曹林和黄金树主讲。其中曹林为我们讲解“Java的异常”，提到了异常的分类、常见的异常类和常用的异常方法，并仔细阐述了捕获异常过程和注意事项。最后还由兰总带领大家一起讨论catch语句块里的return执行情况并通过问问题对这部分讲解做出总结。</p><p style=\"text-align:left;text-indent:2em;\">另外黄金树为我们带来了编程中必不可少的”六大设计原则“。其中包括”单一原则“、”接口隔离原则“、”开闭原则“、”里氏代换原则“、”依赖倒置原则“和”迪米特法则“。并为我们逐一对六大原则进行了深入浅出的讲解。最后兰总也对每条原则做出了补充，强调了这些原则对编程的好处。 </p><div class=\"media-wrap image-wrap\"><img src=\"http://old.pzhuweb.cn/upload/2018-12/2018-12-5c865de9bef86c96154457a0a1f677fe.jpg\" alt=\"Cache_3a85169427516a0..jpg\"/></div><p></p>', 7, 1, 0, '2018-11-19 00:00:00', NULL);
INSERT INTO `article` VALUES (130, '201710804172', 'Web应用专业团队活动——技术路线讲解及成员分组', 5, 13, 'WEB应用开发专业团队于2018年5月1日19:40在二教101开展了技术路线讲解的团队活动，并对团队所有成员进行了简单分组。本次团队活动由指导老师兰全祥主持，2015级网络工程陈波、2015级软件工程刘星和2015级网络工程罗俊主讲。兰全', '技术路线', 'http://img.pzhuweb.cn/2017108041721561794824615.png', '{\"blocks\":[{\"key\":\"43v3d\",\"text\":\"WEB应用开发专业团队于2018年5月1日19:40在二教101开展了技术路线讲解的团队活动，并对团队所有成员进行了简单分组。本次团队活动由指导老师兰全祥主持，2015级网络工程陈波、2015级软件工程刘星和2015级网络工程罗俊主讲。兰全祥老师首先按照人才培养方案讲解了知识模块和学习路线，让所有团队成员对大学三年所学知识有大概的了解。然后，陈波讲解了后台有关的知识，其中介绍了集合、线程、接口、继承、数据库等基础知识，并拓展了NIO、Netty、Java Mail、Junit、Spring、Struts2、Hibernate、MyBaties等框架和技术。接着，刘星向大家讲解了前端相关知识，其中包括HTML、CSS、JavaScript、Ajax、jQuery等基础部分以及vue、react、angulax等框架技术，并向团队成员推荐了一些学习视频和大神博客。之后，罗俊对刘星讲解的内容进行了补充，并推荐了一些程序员必备的使用App和工具。最后兰全祥老师对本次讲解做了总结，希望大家在专业方向上的学习要多主动一些，明确自己的学习目标。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":472,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"10k2d\",\"text\":\"本次团队活动最后对所有团队成员进行了分组，由2016级成员担任组长、2017级成员作为组员，高年级带领着大家共同学习。通过分组学习有利于团队成员的共同进步，尽可能地制定有针对性的带领学习和引导，保证专业团队发展的持续性。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":110,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"99nqk\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"b91re\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"101\",\"alt\":\"2017108041721561794801166.png\",\"title\":\"2017108041721561794801166.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041721561794801166.png\",\"width\":\"1000px\"}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">WEB应用开发专业团队于2018年5月1日19:40在二教101开展了技术路线讲解的团队活动，并对团队所有成员进行了简单分组。本次团队活动由指导老师兰全祥主持，2015级网络工程陈波、2015级软件工程刘星和2015级网络工程罗俊主讲。兰全祥老师首先按照人才培养方案讲解了知识模块和学习路线，让所有团队成员对大学三年所学知识有大概的了解。然后，陈波讲解了后台有关的知识，其中介绍了集合、线程、接口、继承、数据库等基础知识，并拓展了NIO、Netty、Java Mail、Junit、Spring、Struts2、Hibernate、MyBaties等框架和技术。接着，刘星向大家讲解了前端相关知识，其中包括HTML、CSS、JavaScript、Ajax、jQuery等基础部分以及vue、react、angulax等框架技术，并向团队成员推荐了一些学习视频和大神博客。之后，罗俊对刘星讲解的内容进行了补充，并推荐了一些程序员必备的使用App和工具。最后兰全祥老师对本次讲解做了总结，希望大家在专业方向上的学习要多主动一些，明确自己的学习目标。</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">本次团队活动最后对所有团队成员进行了分组，由2016级成员担任组长、2017级成员作为组员，高年级带领着大家共同学习。通过分组学习有利于团队成员的共同进步，尽可能地制定有针对性的带领学习和引导，保证专业团队发展的持续性。</span></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"101\" alt=\"2017108041721561794801166.png\" title=\"2017108041721561794801166.png\" src=\"http://img.pzhuweb.cn/2017108041721561794801166.png\" width=\"1000px\" style=\"width:1000px\"/></div><p></p>', 4, 1, 0, '2018-05-02 00:00:00', NULL);
INSERT INTO `article` VALUES (131, '201610804025', 'javaScript缓存', 1, 1, '由于打字比较麻烦，复制上来格式会乱，直接上图！ 使用斐波拉契数列来操作一波，效果更明显！', 'JavaScript', 'http://img.pzhuweb.cn/2017108040991561794681706.png', '{\"blocks\":[{\"key\":\"1e3m7\",\"text\":\"由于打字比较麻烦，复制上来格式会乱，直接上图！ \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"bcueu\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"src\":\"http://old.pzhuweb.cn/upload/2018-11/2018-11-534b88cf55b9294fef02c15c1674c1ef.png\",\"alt\":\"11.png\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"7mk00\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6req9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"84la5\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"nodeAttributes\":{\"src\":\"http://old.pzhuweb.cn/upload/2018-11/2018-11-63157ba553fa655441dc2b2bc32f2890.png\",\"alt\":\"2.png\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"dmkia\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"csoh1\",\"text\":\"使用斐波拉契数列来操作一波，效果更明显！\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"f84vd\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"48b2o\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{\"nodeAttributes\":{\"src\":\"http://old.pzhuweb.cn/upload/2018-11/2018-11-67a65e816ba0ab280581723705bceb81.png\",\"alt\":\"无标题.png\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"3k1tf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"11.png\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-11/2018-11-534b88cf55b9294fef02c15c1674c1ef.png\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"2.png\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-11/2018-11-63157ba553fa655441dc2b2bc32f2890.png\"}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"无标题.png\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-11/2018-11-67a65e816ba0ab280581723705bceb81.png\"}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">由于打字比较麻烦，复制上来格式会乱，直接上图！</span> </p><div class=\"media-wrap image-wrap\"><img src=\"http://old.pzhuweb.cn/upload/2018-11/2018-11-534b88cf55b9294fef02c15c1674c1ef.png\" alt=\"11.png\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img src=\"http://old.pzhuweb.cn/upload/2018-11/2018-11-63157ba553fa655441dc2b2bc32f2890.png\" alt=\"2.png\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\">使用斐波拉契数列来操作一波，效果更明显！</p><p style=\"text-align:left;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img src=\"http://old.pzhuweb.cn/upload/2018-11/2018-11-67a65e816ba0ab280581723705bceb81.png\" alt=\"无标题.png\"/></div><p></p>', 13, 1, 0, '2018-11-17 00:00:00', NULL);
INSERT INTO `article` VALUES (132, '0002250', 'Node.js学习心得', 1, 11, 'NodeJs 的学习过程中，首页一定需要掌握基础的Js，对于 Ajax 的异步请求和同步请求有一定的了解。在开始学习　Node 时候一定不要直接学习他的框架　Express 。应该使用原声的 Js 集合 Node 自身的 Module 模块', 'NodeJs', 'http://img.pzhuweb.cn/2017108040351561794611043.jpg', '{\"blocks\":[{\"key\":\"7au1\",\"text\":\"NodeJs 的学习过程中，首页一定需要掌握基础的Js，对于 Ajax 的异步请求和同步请求有一定的了解。在开始学习　Node 时候一定不要直接学习他的框架　Express 。应该使用原声的 Js 集合 Node 自身的 Module 模块。实现一个简单的 CRUD（增删查改） 留言板。然后就可以开始了解 Express 框架的使用，这时候你就会明白他的 API 是如何实现这些功能的。同时你自己需要掌握一门模板渲染的技术，这里推荐 art-template ,他与 NodeJs 结合比较方便。然后可以开始学习一门数据库，MySQL 或者 Mongodb 都可以。因为两者在 NodeJs 中使用的非常简单，没有什么复杂的操作。检验对于 NodeJs 的学习，最终能够结合所有的技术实现一个个人博客的设计。那么 NodeJs 的基础学习就算完成了。如何想要深入学习，可以去看下《深入浅出NodeJs》 朴灵著作，里面没有实战项目，但是对于API的使用以及他的设计思想和实现的原理，都有很深入的讲解。同时你也可以去学习 Koa2 他是基于 NodeJs 平台的前端框架。如果有兴趣可以去了解下。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":498,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":498,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":498,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":496,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">NodeJs 的学习过程中，首页一定需要掌握基础的Js，对于 Ajax 的异步请求和同步请求有一定的了解。在开始学习　Node 时候一定不要直接学习他的框架　Express 。应该使用原声的 Js 集合 Node 自身的 Module 模块。实现一个简单的 CRUD（增删查改） 留言板。然后就可以开始了解 Express 框架的使用，这时候你就会明白他的 API 是如何实现这些功能的。同时你自己需要掌握一门模板渲染的技术，这里推荐 art-template ,他与 NodeJs 结合比较方便。然后可以开始学习一门数据库，MySQL 或者 Mongodb 都可以。因为两者在 NodeJs 中使用的非常简单，没有什么复杂的操作。检验对于 NodeJs 的学习，最终能够结合所有的技术实现一个个人博客的设计。那么 NodeJs 的基础学习就算完成了。如何想要深入学习，可以去看下《深入浅出NodeJs》 朴灵著作，里面没有实战项目，但是对于API的使用以及他的设计思想和实现的原理，都有很深入的讲解。同时你也可以去学习 Koa2 他是基于 NodeJs 平台的前端框架。如果有兴趣可以去了解</span>下。</span></span></span></p>', 28, 1, 0, '2018-09-15 00:00:00', NULL);
INSERT INTO `article` VALUES (133, '201710803072', 'web应用开发团队开展团队活动SSH框架整合讲解', 5, 13, '2018年9月21日晚8:00，数学与计算学院web应用开发团队于励志楼四楼会议室开展了“SSH框架整合”的讲解会议，主持人是2016级软件工程姚添译，首先回顾了上周雷虹所讲的“设计模式-MVC”，然后讲解了三大框架struct2、spri', 'SSH', 'http://img.pzhuweb.cn/2017108030721561794684714.jpg', '{\"blocks\":[{\"key\":\"db15q\",\"text\":\"2018年9月21日晚8:00，数学与计算学院web应用开发团队于励志楼四楼会议室开展了“SSH框架整合”的讲解会议，主持人是2016级软件工程姚添译，首先回顾了上周雷虹所讲的“设计模式-MVC”，然后讲解了三大框架struct2、spring、hibernate。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":133,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":133,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":133,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">2018年9月21日晚8:00，数学与计算学院web应用开发团队于励志楼四楼会议室开展了“SSH框架整合”的讲解会议，主持人是2016级软件工程姚添译，首先回顾了上周雷虹所讲的“设计模式-MVC”，然后讲解了三大框架struct2、spring、hibernate。</span></span></span></p>', 7, 1, 0, '2018-09-22 00:00:00', NULL);
INSERT INTO `article` VALUES (134, '201710804105', 'callback-hell', 1, 1, 'callback-hell的产生比如说有两个异步请求，而第二个异步请求需要第一个请求完成的前提下才能处理，因为我们无法控制异步请求的结果得先后，所以就必须要对函数进行嵌套，即控制在第一个请求处理完成后才开始处理第二个请求。但是如果用原始的函', 'callback-hell', 'http://img.pzhuweb.cn/2017108041051561794725124.jpg', '{\"blocks\":[{\"key\":\"5sk36\",\"text\":\"callback-hell的产生\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"callback-hell-\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"5k6ve\",\"text\":\"比如说有两个异步请求，而第二个异步请求需要第一个请求完成的前提下才能处理，因为我们无法控制异步请求的结果得先后，所以就必须要对函数进行嵌套，即控制在第一个请求处理完成后才开始处理第二个请求。但是如果用原始的函数嵌套的方式，请求不多的时候弊端不是很明显，请求多了之后就会出现图中那种情况（callback-hell）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":158,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"62i2g\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"f67sr\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"co900\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"281qu\",\"text\":\"callback-hell的解决\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"callback-hell-\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"23ndt\",\"text\":\"ES6中的promise就能解决这个问题，promise是一个构造函数，promise本身不是异步的，但是其封装的操作是异步的。 所以我们在使用promise的时候需要先new一个对象出来，它需要用一个函数来作为参数，而这个函数需要有两个参数，这两个参数都是处理完成（pengding）的结果状态，一个为resolve，代表处理请求成功，另一个为reject代表处理结果失败，该函数的作用就是对请求进行了封装。代码如下：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":210,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"bckqb\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"fimne\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"5agj6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"4pmsp\",\"text\":\"then方法接收一个函数作为参数，而只有上一个then方法的处理状态为resolve时，后面的then方法才会被调用，这就实现了异步请求在需要在一个异步请求完成的前提下才能处理的问题。 通过promise对象的then方法的链式调用，可以很轻松的解决callback-hell问题。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":141,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"timg.jpg\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-9/2018-9-720706f0cbc24a13ddb9981e26235a38.jpg\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"alt\":\"QQ图片20180926075438.png\"},\"url\":\"http://old.pzhuweb.cn/upload/2018-9/2018-9-d2160e34ea75e25433da8e4ca7cd88b4.png\"}}}}', '<h1 style=\"text-align:left;text-indent:2em;\" id=\"callback-hell-\"><span style=\"line-height:2\">callback-hell的产生</span></h1><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">比如说有两个异步请求，而第二个异步请求需要第一个请求完成的前提下才能处理，因为我们无法控制异步请求的结果得先后，所以就必须要对函数进行嵌套，即控制在第一个请求处理完成后才开始处理第二个请求。但是如果用原始的函数嵌套的方式，请求不多的时候弊端不是很明显，请求多了之后就会出现图中那种情况（callback-hell）。</span></p><p style=\"text-align:left;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" alt=\"timg.jpg\" src=\"http://old.pzhuweb.cn/upload/2018-9/2018-9-720706f0cbc24a13ddb9981e26235a38.jpg\"/></div><p></p><h1 style=\"text-align:left;text-indent:2em;\" id=\"callback-hell-\"><span style=\"line-height:2\">callback-hell的解决</span></h1><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">ES6中的promise就能解决这个问题，promise是一个构造函数，promise本身不是异步的，但是其封装的操作是异步的。 所以我们在使用promise的时候需要先new一个对象出来，它需要用一个函数来作为参数，而这个函数需要有两个参数，这两个参数都是处理完成（pengding）的结果状态，一个为resolve，代表处理请求成功，另一个为reject代表处理结果失败，该函数的作用就是对请求进行了封装。代码如下：</span></p><p style=\"text-align:left;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" alt=\"QQ图片20180926075438.png\" src=\"http://old.pzhuweb.cn/upload/2018-9/2018-9-d2160e34ea75e25433da8e4ca7cd88b4.png\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">then方法接收一个函数作为参数，而只有上一个then方法的处理状态为resolve时，后面的then方法才会被调用，这就实现了异步请求在需要在一个异步请求完成的前提下才能处理的问题。 通过promise对象的then方法的链式调用，可以很轻松的解决callback-hell问题。</span></p>', 10, 1, 0, '2018-09-25 00:00:00', NULL);
INSERT INTO `article` VALUES (135, '201710804169', 'java中的sort排序算法', 2, 2, '在C语言中学习了冒泡排序，快速排序就是对冒泡排序的优化，快速排序是先找一个分界值，然后在将剩下的数与分界值比较，将小的放在分界值的左边大的放在右边。再将分界值的左右两边分别进行上述步骤。选择排序就是在序列中找到最小的数据然后与数组第一位进行', '排序', 'http://img.pzhuweb.cn/2017108041691561794900993.jpg', '{\"blocks\":[{\"key\":\"seo4\",\"text\":\"在C语言中学习了冒泡排序，快速排序就是对冒泡排序的优化，快速排序是先找一个分界值，然后在将剩下的数与分界值比较，将小的放在分界值的左边大的放在右边。再将分界值的左右两边分别进行上述步骤。选择排序就是在序列中找到最小的数据然后与数组第一位进行交换，再找到第二小的数据放在序列第二位，以此重复。插入排序是先对序列前两个数据进行比较排序然后让第三个数在与之前排好序的进行比较，然后找到适合的位子存放第三个数，后面的数同第三个数重复。Shell排序是先数组分成n/2个数字序列然后是将第一个数据与n/2+1个数据为一对...然后一对一对的比较交换数据，再将数组分为n/4个序列重复上述。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":289,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":289,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":289,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":289,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"brn5\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"bb6gc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041691561794919465.jpg\",\"name\":\"20181008040428391609.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":102,\"title\":\"2017108041691561794919465.jpg\",\"alt\":\"2017108041691561794919465.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">在C语言中学习了冒泡排序，快速排序就是对冒泡排序的优化，快速排序是先找一个分界值，然后在将剩下的数与分界值比较，将小的放在分界值的左边大的放在右边。再将分界值的左右两边分别进行上述步骤。选择排序就是在序列中找到最小的数据然后与数组第一位进行交换，再找到第二小的数据放在序列第二位，以此重复。插入排序是先对序列前两个数据进行比较排序然后让第三个数在与之前排好序的进行比较，然后找到适合的位子存放第三个数，后面的数同第三个数重复。Shell排序是先数组分成n/2个数字序列然后是将第一个数据与n/2+1个数据为一对...然后一对一对的比较交换数据，再将数组分为n/4个序列重复上述。</span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"102\" title=\"2017108041691561794919465.jpg\" alt=\"2017108041691561794919465.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041691561794919465.jpg\"/></div><p></p>', 6, 1, 0, '2018-09-23 00:00:00', NULL);
INSERT INTO `article` VALUES (136, '201710803075', 'HTML', 1, 14, '&lt;DOCTYPE html&gt; html5版本 不用担心兼容性问题 lang=“en” charset 字符集 gb2312 （国标） BIG5 繁体 GBK GB2312的拓展&lt;div&gt;没有语义 盒子 HTML 语义', 'HTML', 'http://img.pzhuweb.cn/2017108030751561794983321.jpg', '{\"blocks\":[{\"key\":\"9fudb\",\"text\":\"<DOCTYPE html> html5版本 不用担心兼容性问题 lang=“en” charset 字符集 gb2312 （国标） BIG5 繁体 GBK GB2312的拓展\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":88,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"54dbi\",\"text\":\"<div>没有语义 盒子 HTML 语义化标签 HTML结构 CSS 样式 标签 排版标签 一.标题H 6 二.段落标签paragrap<P> 一行只能放一个 单标签：换行标签 break <br/> 水平线标签 horizontal<hr> div 布局：一个占一行 span 布局 一行几个 盒子 09 文本格式化标签 <b></b><strong></strong>粗体 HTML推荐strong <i></i><em></em>斜体 <s></s><del></del>加删除线 <u></u><ins></ins>加下划线\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":266,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"32e7c\",\"text\":\"表格 显示数据 <table></table>行<tr></tr>单元格 border align left center right align=\\\"center\\\" cellspacing 设置单元格之间的空白间隙 cellpadding 内容距离单元格边框的位置 三参为0 border cellpacing cellpadding 表头标签 <th></th>\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":182,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"9fj2r\",\"text\":\"<caption></caption>表格标题\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"eo6j8\",\"text\":\"类名选择器<div.class=\\\"nav\\\" 这个div的名字就nav input name div() ,nav()设置颜色 id 选择器 #last{color:pink}<div id=\\\"last\\\">id选择器</div> 通配符选择器*（很少使用） 合并单元格 从上往下 从左往右 删除的个数就是合并的个数减一 表格是由行和单元格组成\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":170,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"6798p\",\"text\":\"表单 表单域 表单控件（input） 提示文本 </input>单标签 type： text单行文本框 password 密码 rsdio 单选按钮 r如果是一组 我们必须给他们命名相同的名字 name 这样就可以多选一了 男<input type=\\\"radio\\\" name=\\\"sex\\\"/> 女<input type=\\\"radio\\\" name=\\\"sex\\\"/> checkbox 复选框 button 普通按钮 submit 提交按钮 reset重置按钮 image 图像形式的提交按钮 file 文件域\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":251,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"eagmk\",\"text\":\"value 默认文本值 size 正整数 显示宽度 cheched=cheched maxlength textarea 文本域 <textarea></textarea>\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":86,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"dmmmh\",\"text\":\"<select><option></option></select>下拉菜单 表单域\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":42,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"8lc7j\",\"text\":\"<from action=\\\"\\\"></from>action 提交到数据库 action 送到数据库 method gte post 提交方式 查文档 W3school\\nMDN\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":83,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":84,\"length\":3,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"a6fuv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"ac21k\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap align-center\"},\"float\":\"\",\"alignment\":\"center\"}},{\"key\":\"7fcpp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">&lt;DOCTYPE html&gt; html5版本 不用担心兼容性问题 lang=“en” charset 字符集 gb2312 （国标） BIG5 繁体 GBK GB2312的拓展</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">&lt;div&gt;没有语义 盒子 HTML 语义化标签 HTML结构 CSS 样式 标签 排版标签 一.标题H 6 二.段落标签paragrap&lt;P&gt; 一行只能放一个 单标签：换行标签 break &lt;br/&gt; 水平线标签 horizontal&lt;hr&gt; div 布局：一个占一行 span 布局 一行几个 盒子 09 文本格式化标签 &lt;b&gt;&lt;/b&gt;&lt;strong&gt;&lt;/strong&gt;粗体 HTML推荐strong &lt;i&gt;&lt;/i&gt;&lt;em&gt;&lt;/em&gt;斜体 &lt;s&gt;&lt;/s&gt;&lt;del&gt;&lt;/del&gt;加删除线 &lt;u&gt;&lt;/u&gt;&lt;ins&gt;&lt;/ins&gt;加下划线</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">表格 显示数据 &lt;table&gt;&lt;/table&gt;行&lt;tr&gt;&lt;/tr&gt;单元格 border align left center right align=&quot;center&quot; cellspacing 设置单元格之间的空白间隙 cellpadding 内容距离单元格边框的位置 三参为0 border cellpacing cellpadding 表头标签 &lt;th&gt;&lt;/th&gt;</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">&lt;caption&gt;&lt;/caption&gt;表格标题</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">类名选择器&lt;div.class=&quot;nav&quot; 这个div的名字就nav input name div() ,nav()设置颜色 id 选择器 #last{color:pink}&lt;div id=&quot;last&quot;&gt;id选择器&lt;/div&gt; 通配符选择器*（很少使用） 合并单元格 从上往下 从左往右 删除的个数就是合并的个数减一 表格是由行和单元格组成</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">表单 表单域 表单控件（input） 提示文本 &lt;/input&gt;单标签 type： text单行文本框 password 密码 rsdio 单选按钮 r如果是一组 我们必须给他们命名相同的名字 name 这样就可以多选一了 男&lt;input type=&quot;radio&quot; name=&quot;sex&quot;/&gt; 女&lt;input type=&quot;radio&quot; name=&quot;sex&quot;/&gt; checkbox 复选框 button 普通按钮 submit 提交按钮 reset重置按钮 image 图像形式的提交按钮 file 文件域</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">value 默认文本值 size 正整数 显示宽度 cheched=cheched maxlength textarea 文本域 &lt;textarea&gt;&lt;/textarea&gt;</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">&lt;select&gt;&lt;option&gt;&lt;/option&gt;&lt;/select&gt;下拉菜单 表单域</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">&lt;from action=&quot;&quot;&gt;&lt;/from&gt;action 提交到数据库 action 送到数据库 method gte post 提交方式 查文档 W3school</span><br/><span style=\"line-height:1.75\">MDN</span></p><p></p><p class=\"media-wrap image-wrap align-center\"></p><p></p>', 11, 1, 0, '2018-09-23 00:00:00', NULL);
INSERT INTO `article` VALUES (137, '201710803072', '团队学术报告会-递归与二叉树', 5, 13, '2018年12月7日，数学与计算机学院web应用专业团队在励志楼四楼会议召开了递归与二叉树的讲解会议。 会议伊始，黄文强进行本次会议的考勤，然后进行递归的讲解，主要从两个例子fibonacci和汉诺塔进行讲解，接着团队指导老师兰全祥和其他团', '递归 二叉树', 'http://img.pzhuweb.cn/2017108030721561794807002.jpg', '{\"blocks\":[{\"key\":\"2hc5v\",\"text\":\"2018年12月7日，数学与计算机学院web应用专业团队在励志楼四楼会议召开了递归与二叉树的讲解会议。 会议伊始，黄文强进行本次会议的考勤，然后进行递归的讲解，主要从两个例子fibonacci和汉诺塔进行讲解，接着团队指导老师兰全祥和其他团队成员进行了点评和修正。之后杨新宇对二叉树进行了讲解，包括满二叉树与全二叉树的区别以及对二叉树遍历的顺序等。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":174,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":174,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":174,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">2018年12月7日，数学与计算机学院web应用专业团队在励志楼四楼会议召开了递归与二叉树的讲解会议。 会议伊始，黄文强进行本次会议的考勤，然后进行递归的讲解，主要从两个例子fibonacci和汉诺塔进行讲解，接着团队指导老师兰全祥和其他团队成员进行了点评和修正。之后杨新宇对二叉树进行了讲解，包括满二叉树与全二叉树的区别以及对二叉树遍历的顺序等。</span></span></span></p>', 13, 1, 0, '2018-12-07 00:00:00', NULL);
INSERT INTO `article` VALUES (138, '0002250', '从Maven安装配置到使用IDEA创建Maven WEB项目', 2, 2, '一、Maven的安装从官网下载Maven 传送门https://maven.apache.org/download.cgi将下载的Maven解压到只要你开心的位置，都是可以的（要记住这个位置，后面有用）配置Maven环境变量1、打开控制面板', 'Maven WEB', 'http://img.pzhuweb.cn/2017108041051561794927989.jpg', '{\"blocks\":[{\"key\":\"cpugj\",\"text\":\"一、Maven的安装\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"6jtfp\",\"text\":\"从官网下载Maven 传送门https://maven.apache.org/download.cgi\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":14,\"length\":37,\"key\":0}],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"7b62h\",\"text\":\"将下载的Maven解压到只要你开心的位置，都是可以的（要记住这个位置，后面有用）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"casqj\",\"text\":\"配置Maven环境变量\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"r6lp\",\"text\":\"1、打开控制面板->系统和安全->系统 ，点击左侧的高级系统设置（或者右键此电脑，打开属性）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":46,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"fb7h0\",\"text\":\"2、点击环境变量，在系统变量中创建变量名为MAVEN_HOME，值为你下载解压的Maven位置\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":47,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"7enp3\",\"text\":\"3、在Path中添加至为你解压的Maven的bin文件的位置，win10 1709版本后的不能使用MAVEN_HOME代替，需写绝对位置，点击确定，直到退出\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":78,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"ego68\",\"text\":\"4、测试环境是否搭建成功：win + R 打开运行框，输入cmd，运行，然后输入mvn -v(注意中间的空格不能少)，如果出现如图所示，便是成功！详情见连接\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":78,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"98hna\",\"text\":\"https://blog.csdn.net/Impassive_y/article/details/82156119\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":58,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":0,\"length\":58,\"key\":1}],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://maven.apache.org/download.cgi\",\"target\":null,\"nodeAttributes\":{}}},\"1\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://blog.csdn.net/Impassive_y/article/details/82156119\",\"target\":null,\"nodeAttributes\":{}}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">一、Maven的安装</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">从官网下载Maven 传送门<a href=\"https://maven.apache.org/download.cgi\">https://maven.apache.org/download.cgi</a></span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">将下载的Maven解压到只要你开心的位置，都是可以的（要记住这个位置，后面有用）</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">配置Maven环境变量</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">1、打开控制面板-&gt;系统和安全-&gt;系统 ，点击左侧的高级系统设置（或者右键此电脑，打开属性）</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">2、点击环境变量，在系统变量中创建变量名为MAVEN_HOME，值为你下载解压的Maven位置</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">3、在Path中添加至为你解压的Maven的bin文件的位置，win10 1709版本后的不能使用MAVEN_HOME代替，需写绝对位置，点击确定，直到退出</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">4、测试环境是否搭建成功：win + R 打开运行框，输入cmd，运行，然后输入mvn -v(注意中间的空格不能少)，如果出现如图所示，便是成功！详情见连接</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\"><a href=\"https://blog.csdn.net/Impassive_y/article/details/82156119\">https://blog.csdn.net/Impassive_y/article/details/82156119</a></span></p>', 11, 1, 0, '2018-08-31 00:00:00', NULL);
INSERT INTO `article` VALUES (140, '201710803017', '基于Java的String和数组常用方法的讲解', 5, 13, '2018年10月28日，数学与计算机学院Web应用团队与励志楼四楼召开了关于“基于Java的String和数组常用方法”的讲解会议。前者主讲人是2017级软件工程一班的徐岸，后者主讲人是2017级软件工程四班的刘杰。', 'String和数组', 'http://img.pzhuweb.cn/2017108030171561795024448.jpg', '{\"blocks\":[{\"key\":\"aor3k\",\"text\":\"2018年10月28日，数学与计算机学院Web应用团队与励志楼四楼召开了关于“基于Java的String和数组常用方法”的讲解会议。前者主讲人是2017级软件工程一班的徐岸，后者主讲人是2017级软件工程四班的刘杰。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":108,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":108,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":108,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":108,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"dfigp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"6enfk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"9kouk\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"egs8k\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"104\",\"alt\":\"2017108030171561794966166.jpg\",\"title\":\"2017108030171561794966166.jpg\"},\"url\":\"http://img.pzhuweb.cn/2017108030171561794966166.jpg\",\"width\":\"1000px\",\"height\":\"750px\"}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">2018年10月28日，数学与计算机学院Web应用团队与励志楼四楼召开了关于“基于Java的String和数组常用方法”的讲解会议。前者主讲人是2017级软件工程一班的徐岸，后者主讲人是2017级软件工程四班的刘杰。</span></span></span></span></p><p></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"104\" alt=\"2017108030171561794966166.jpg\" title=\"2017108030171561794966166.jpg\" src=\"http://img.pzhuweb.cn/2017108030171561794966166.jpg\" width=\"1000px\" height=\"750px\" style=\"width:1000px;height:750px\"/></div><p></p>', 13, 1, 0, '2018-11-09 00:00:00', NULL);
INSERT INTO `article` VALUES (141, '201710804172', '数组的创建及常用方法', 5, 14, '创建 Array 对象的语法：var array = [];var array = new Array();var array = new Array(size);var array = [element0, element1, ..., ', '数组', 'http://img.pzhuweb.cn/2017108041721561795140497.png', '{\"blocks\":[{\"key\":\"84rmr\",\"text\":\"创建 Array 对象的语法：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"1gld4\",\"text\":\"\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"b9dd4\",\"text\":\"\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"dhhpg\",\"text\":\"\\nvar array = [];\\n\\nvar array = new Array();\\n\\nvar array = new Array(size);\\n\\nvar array = [element0, element1, ..., elementn];\\n\\nvar array = new Array(element0, element1, ..., elementn);\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":15,\"style\":\"LINEHEIGHT-2\"},{\"offset\":18,\"length\":24,\"style\":\"LINEHEIGHT-2\"},{\"offset\":44,\"length\":28,\"style\":\"LINEHEIGHT-2\"},{\"offset\":74,\"length\":48,\"style\":\"LINEHEIGHT-2\"},{\"offset\":124,\"length\":57,\"style\":\"LINEHEIGHT-2\"},{\"offset\":4,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":21,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":29,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":47,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":55,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":77,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":127,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":135,\"length\":5,\"style\":\"FONTSIZE-16\"},{\"offset\":4,\"length\":7,\"style\":\"COLOR-DF5320\"},{\"offset\":21,\"length\":7,\"style\":\"COLOR-DF5320\"},{\"offset\":29,\"length\":5,\"style\":\"COLOR-DF5320\"},{\"offset\":47,\"length\":7,\"style\":\"COLOR-DF5320\"},{\"offset\":55,\"length\":5,\"style\":\"COLOR-DF5320\"},{\"offset\":77,\"length\":7,\"style\":\"COLOR-DF5320\"},{\"offset\":127,\"length\":7,\"style\":\"COLOR-DF5320\"},{\"offset\":135,\"length\":5,\"style\":\"COLOR-DF5320\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"1c1iq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"e4mq6\",\"text\":\"\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"820j\",\"text\":\"concat()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"BOLD\"},{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"8pmru\",\"text\":\"连接两个或更多的数组，并返回结果。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"bdbtk\",\"text\":\"join()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"c8pub\",\"text\":\"把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"bnf6b\",\"text\":\"pop()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"BOLD\"},{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"2akos\",\"text\":\"删除并返回数组的最后一个元素\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"7lq83\",\"text\":\"push()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"auq87\",\"text\":\"向数组的末尾添加一个或更多元素，并返回新的长度。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"eaj6i\",\"text\":\"reverse()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"BOLD\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"ba6sb\",\"text\":\"颠倒数组中元素的顺序。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"fmkl1\",\"text\":\"shift()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"BOLD\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"nosu\",\"text\":\"删除并返回数组的第一个元素\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"c00km\",\"text\":\"slice()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"BOLD\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"fann\",\"text\":\"从某个已有的数组返回选定的元素\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"82sss\",\"text\":\"sort()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"5ccc9\",\"text\":\"对数组的元素进行排序\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"bel8m\",\"text\":\"splice()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"BOLD\"},{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"6j35r\",\"text\":\"删除元素，并向数组添加新元素。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"8gga0\",\"text\":\"toString()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"BOLD\"},{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"26r7b\",\"text\":\"把数组转换为字符串，并返回结果。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"fierc\",\"text\":\"toLocaleString()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"BOLD\"},{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"eevdo\",\"text\":\"把数组转换为本地数组，并返回结果。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"cp6kt\",\"text\":\"unshift()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"BOLD\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"7f3g\",\"text\":\"向数组的开头添加一个或更多元素，并返回新的长度。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"f1utb\",\"text\":\"valueOf()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"BOLD\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"ilee\",\"text\":\"返\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"6ferb\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"6r6fe\",\"text\":\"回数组对象的原始值\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"duo5v\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"8idf0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"106\",\"alt\":\"2017108041721561795131649.png\",\"title\":\"2017108041721561795131649.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041721561795131649.png\",\"width\":\"1000px\"}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">创建 Array 对象的语法：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"></code></pre><p></p><p><br/><span style=\"line-height:2\">var<span style=\"font-size:16px\"><span style=\"color:#df5320\"> array </span></span>= [];</span><br/><br/><span style=\"line-height:2\">var<span style=\"font-size:16px\"><span style=\"color:#df5320\"> array </span></span>=<span style=\"font-size:16px\"><span style=\"color:#df5320\"> new </span></span>Array();</span><br/><br/><span style=\"line-height:2\">var<span style=\"font-size:16px\"><span style=\"color:#df5320\"> array </span></span>=<span style=\"font-size:16px\"><span style=\"color:#df5320\"> new </span></span>Array(size);</span><br/><br/><span style=\"line-height:2\">var<span style=\"font-size:16px\"><span style=\"color:#df5320\"> array </span></span>= [element0, element1, ..., elementn];</span><br/><br/><span style=\"line-height:2\">var<span style=\"font-size:16px\"><span style=\"color:#df5320\"> array </span></span>=<span style=\"font-size:16px\"><span style=\"color:#df5320\"> new </span></span>Array(element0, element1, ..., elementn);</span><br/></p><p></p><p><br/></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">concat()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">连接两个或更多的数组，并返回结果。</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">join()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">把数组的所有元素放入一个字符串。元素通过指定的分隔符进行分隔。</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">pop()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">删除并返回数组的最后一个元素</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">push()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">向数组的末尾添加一个或更多元素，并返回新的长度。</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">reverse()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">颠倒数组中元素的顺序。</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">shift()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">删除并返回数组的第一个元素</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">slice()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">从某个已有的数组返回选定的元素</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">sort()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">对数组的元素进行排序</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">splice()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">删除元素，并向数组添加新元素。</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">toString()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">把数组转换为字符串，并返回结果。</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">toLocaleString()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">把数组转换为本地数组，并返回结果。</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">unshift()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">向数组的开头添加一个或更多元素，并返回新的长度。</span></p><p style=\"text-align:left;text-indent:2em;\"><strong><span style=\"line-height:2\">valueOf()</span></strong></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">返</span></p><p></p><p><span style=\"line-height:2\">回数组对象的原始值</span></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"106\" alt=\"2017108041721561795131649.png\" title=\"2017108041721561795131649.png\" src=\"http://img.pzhuweb.cn/2017108041721561795131649.png\" width=\"1000px\" style=\"width:1000px\"/></div><p></p>', 8, 1, 0, '2018-05-02 00:00:00', NULL);
INSERT INTO `article` VALUES (142, '201710804105', 'WEB应用专业社团启动社团官方网站建设项目', 5, 13, '为了迎接本科审核式评估，让WEB应用专业社团更好地进行延续和成果的展示，充分发挥社团成员的创新创造能力，将所学知识运用到实际生活中。WEB应用专业社团在2017年9月10日星期天晚上19:40在分析测试中心创新实验室7A-3对WEB应用专业', '新闻', 'http://img.pzhuweb.cn/2017108041051561795018579.jpg', '{\"blocks\":[{\"key\":\"6g89i\",\"text\":\"为了迎接本科审核式评估，让WEB应用专业社团更好地进行延续和成果的展示，充分发挥社团成员的创新创造能力，将所学知识运用到实际生活中。WEB应用专业社团在2017年9月10日星期天晚上19:40在分析测试中心创新实验室7A-3对WEB应用专业团队官方网站进行了需求分析和讨论，同时对近期的工作和问题进行了指导。本次会议由WEB应用专业社团指导教师兰全祥老师主持，专业社团组长刘星、后台开发负责人陈波、前端开发负责人吴振东等人参与了讨论。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":217,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"8h3r6\",\"text\":\"会前，兰全祥老师就新学期图书馆图书采购事宜进行了说明，鼓励社团成员多看书、多学习。会上，在兰全祥老师的指导下，社团各成员对社团的官方网站的需求进行了分析和讨论，明确了社团网站的各负责同学。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":94,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"43u6l\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"src\":\"http://old.pzhuweb.cn/upload/2018-4/2018-4-60df4924d96183a7914c3693ba04e36e.jpg\",\"alt\":\"e1aac2b76e2f4725a04103f508b576e7.jpg\"},\"float\":\"\",\"alignment\":\"left\"}},{\"key\":\"41ps0\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"e1jon\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041051561795032229.jpg\",\"name\":\"5.jpg\",\"type\":\"IMAGE\",\"width\":850,\"height\":594,\"meta\":{\"id\":105,\"title\":\"2017108041051561795032229.jpg\",\"alt\":\"2017108041051561795032229.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">为了迎接本科审核式评估，让WEB应用专业社团更好地进行延续和成果的展示，充分发挥社团成员的创新创造能力，将所学知识运用到实际生活中。WEB应用专业社团在2017年9月10日星期天晚上19:40在分析测试中心创新实验室7A-3对WEB应用专业团队官方网站进行了需求分析和讨论，同时对近期的工作和问题进行了指导。本次会议由WEB应用专业社团指导教师兰全祥老师主持，专业社团组长刘星、后台开发负责人陈波、前端开发负责人吴振东等人参与了讨论。</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">会前，兰全祥老师就新学期图书馆图书采购事宜进行了说明，鼓励社团成员多看书、多学习。会上，在兰全祥老师的指导下，社团各成员对社团的官方网站的需求进行了分析和讨论，明确了社团网站的各负责同学。</span></p><p src=\"http://old.pzhuweb.cn/upload/2018-4/2018-4-60df4924d96183a7914c3693ba04e36e.jpg\" alt=\"e1aac2b76e2f4725a04103f508b576e7.jpg\"></p><div class=\"media-wrap image-wrap\"><img id=\"105\" title=\"2017108041051561795032229.jpg\" alt=\"2017108041051561795032229.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041051561795032229.jpg\" width=\"850\" height=\"594\" style=\"width:850px;height:594px\"/></div><p></p>', 10, 1, 0, '2017-09-10 00:00:00', NULL);
INSERT INTO `article` VALUES (143, '201710804169', '设计模式之六大原则', 5, 13, '1、单一职责原则(Single Responsibility Principle, SRP)：一个类只负责一个功能领域中的相应职责，或者可以定义为：就一个类而言，应该只有一个引起它变化的原因。 2、开闭原则(Open-Closed Prin', '设计原则', 'http://img.pzhuweb.cn/2017108041691561795528616.jpg', '{\"blocks\":[{\"key\":\"2lhlg\",\"text\":\"1、单一职责原则(Single Responsibility Principle, SRP)：一个类只负责一个功能领域中的相应职责，或者可以定义为：就一个类而言，应该只有一个引起它变化的原因。 2、开闭原则(Open-Closed Principle, OCP)：一个软件实体应当对扩展开放，对修改关闭。即软件实体应尽量在不修改原有代码的情况下进行扩展。 3、里氏代换原则(Liskov Substitution Principle, LSP)：所有引用基类（父类）的地方必须能透明地使用其子类的对象。 4、依赖倒转原则(Dependency Inversion Principle, DIP)：抽象不应该依赖于细节，细节应当依赖于抽象。换言之，要针对接口编程，而不是针对实现编程。 5、接口隔离原则(Interface Segregation Principle, ISP)：使用多个专门的接口，而不使用单一的总接口，即客户端不应该依赖那些它不需要的接口。 6、迪米特法则(Law of Demeter, LoD)：一个软件实体应当尽可能少地与其他实体发生相互作用。详细（https://www.cnblogs.com/dolphin0520/p/3919839.html?tdsourcetag=s_pctim_aiomsg）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":487,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":487,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":487,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":487,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":487,\"length\":77,\"key\":0}],\"data\":{}},{\"key\":\"cnm81\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"649jq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://www.cnblogs.com/dolphin0520/p/3919839.html?tdsourcetag=s_pctim_aiomsg\",\"target\":\"\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041691561795539369.jpg\",\"name\":\"timg.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":112,\"title\":\"2017108041691561795539369.jpg\",\"alt\":\"2017108041691561795539369.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">1、单一职责原则(Single Responsibility Principle, SRP)：一个类只负责一个功能领域中的相应职责，或者可以定义为：就一个类而言，应该只有一个引起它变化的原因。 2、开闭原则(Open-Closed Principle, OCP)：一个软件实体应当对扩展开放，对修改关闭。即软件实体应尽量在不修改原有代码的情况下进行扩展。 3、里氏代换原则(Liskov Substitution Principle, LSP)：所有引用基类（父类）的地方必须能透明地使用其子类的对象。 4、依赖倒转原则(Dependency Inversion Principle, DIP)：抽象不应该依赖于细节，细节应当依赖于抽象。换言之，要针对接口编程，而不是针对实现编程。 5、接口隔离原则(Interface Segregation Principle, ISP)：使用多个专门的接口，而不使用单一的总接口，即客户端不应该依赖那些它不需要的接口。 6、迪米特法则(Law of Demeter, LoD)：一个软件实体应当尽可能少地与其他实体发生相互作用。详细（</span></span></span></span><a href=\"https://www.cnblogs.com/dolphin0520/p/3919839.html?tdsourcetag=s_pctim_aiomsg\" target=\"\">https://www.cnblogs.com/dolphin0520/p/3919839.html?tdsourcetag=s_pctim_aiomsg</a>）</p><div class=\"media-wrap image-wrap\"><img id=\"112\" title=\"2017108041691561795539369.jpg\" alt=\"2017108041691561795539369.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041691561795539369.jpg\"/></div><p></p>', 7, 1, 0, '2018-09-23 00:00:00', NULL);
INSERT INTO `article` VALUES (145, '201710803017', 'WEB应用专业团队开展团队活动HTML讲解', 5, 13, '为了保证专业团队发展的持续性，从2018年3月开始，WEB应用开发专业团队计划将开展为期12周，共计12次的专业团队活动。团队活动主题主要围绕WEB应用开发知识，包括前端设计基础、编程规范、算法思想、环境搭建、项目部署等。活动形式主要以专题', 'HTML', 'http://img.pzhuweb.cn/2017108030171561795234262.jpg', '{\"blocks\":[{\"key\":\"cr1m1\",\"text\":\"为了保证专业团队发展的持续性，从2018年3月开始，WEB应用开发专业团队计划将开展为期12周，共计12次的专业团队活动。团队活动主题主要围绕WEB应用开发知识，包括前端设计基础、编程规范、算法思想、环境搭建、项目部署等。活动形式主要以专题报告会和讨论会的形式开展。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":133,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"bifv\",\"text\":\"2018年3月31日19:40在砺志楼四楼会议室，开展了由社团指导老师兰全祥主讲的第一次团队主题活动——网页设计基础HTML。全体专业团队成员参加了本次主题活动。在报告会之前，兰全祥老师主要介绍了专业团队的本学期活动安排、创新实验室、团队软硬件条件等，专业团队队长刘星详细地介绍了团队官网，让新加入团队的2017级成员进一步了解WEB应用开发专业的情况。之后，兰全祥老师主要介绍了网页开发三大技术HTML、CSS和JavaScript，提供了HTML学习的途径和方法，强调了学习重点和学习目标。最后，团队2015级、2016级成员发表了各自对于前端学习的经验和体会。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":283,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"cjcr2\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"161kr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"cojd3\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"c7ns6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"http://img.pzhuweb.cn/2017108030171561795253030.jpg\"}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">为了保证专业团队发展的持续性，从2018年3月开始，WEB应用开发专业团队计划将开展为期12周，共计12次的专业团队活动。团队活动主题主要围绕WEB应用开发知识，包括前端设计基础、编程规范、算法思想、环境搭建、项目部署等。活动形式主要以专题报告会和讨论会的形式开展。</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">2018年3月31日19:40在砺志楼四楼会议室，开展了由社团指导老师兰全祥主讲的第一次团队主题活动——网页设计基础HTML。全体专业团队成员参加了本次主题活动。在报告会之前，兰全祥老师主要介绍了专业团队的本学期活动安排、创新实验室、团队软硬件条件等，专业团队队长刘星详细地介绍了团队官网，让新加入团队的2017级成员进一步了解WEB应用开发专业的情况。之后，兰全祥老师主要介绍了网页开发三大技术HTML、CSS和JavaScript，提供了HTML学习的途径和方法，强调了学习重点和学习目标。最后，团队2015级、2016级成员发表了各自对于前端学习的经验和体会。</span></p><p> </p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" src=\"http://img.pzhuweb.cn/2017108030171561795253030.jpg\"/></div><p></p>', 7, 1, 0, '2018-04-26 00:00:00', NULL);
INSERT INTO `article` VALUES (146, '201710804105', '团队学术报告会-打字母游戏&拼图游戏', 5, 13, '2018年10月21日，数学与计算机学院Web应用团队与励志楼四楼召开了关于“拼图游戏”和“打字游戏”的讲解会议。前者主讲人是2017级软件工程苟雨晴，讲解了java-swing相关知识，对于图片的分割，分割以后单块图片的移动以及鼠标事件的', '新闻', 'http://img.pzhuweb.cn/2017108041051561795223506.jpg', '{\"blocks\":[{\"key\":\"2bk0f\",\"text\":\"2018年10月21日，数学与计算机学院Web应用团队与励志楼四楼召开了关于“拼图游戏”和“打字游戏”的讲解会议。前者主讲人是2017级软件工程苟雨晴，讲解了java-swing相关知识，对于图片的分割，分割以后单块图片的移动以及鼠标事件的监听。后者主讲人是2017级软件工程武涛，讲解了怎么获得随机字母和字母的颜色，以及字母的移动和键盘事件的监听。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":175,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":175,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":175,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":175,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2ta47\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"8begf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"107\",\"alt\":\"2017108041051561795215529.jpg\",\"title\":\"2017108041051561795215529.jpg\"},\"url\":\"http://img.pzhuweb.cn/2017108041051561795215529.jpg\"}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">2018年10月21日，数学与计算机学院Web应用团队与励志楼四楼召开了关于“拼图游戏”和“打字游戏”的讲解会议。前者主讲人是2017级软件工程苟雨晴，讲解了java-swing相关知识，对于图片的分割，分割以后单块图片的移动以及鼠标事件的监听。后者主讲人是2017级软件工程武涛，讲解了怎么获得随机字母和字母的颜色，以及字母的移动和键盘事件的监听。</span></span></span></span></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"107\" alt=\"2017108041051561795215529.jpg\" title=\"2017108041051561795215529.jpg\" src=\"http://img.pzhuweb.cn/2017108041051561795215529.jpg\"/></div><p></p>', 11, 1, 0, '2018-10-21 00:00:00', NULL);
INSERT INTO `article` VALUES (147, '201710803075', 'WEB应用专业团队2018-2019学年第二学期第一次见面会', 5, 13, '2019年2月24日下午三点，数学与计算机学院WEB应用专业团队在分册楼7a-2召开了2018-2019学年第二学期第一次团队会议。 会议。开始，由兰全祥老师对团队成员进行了管理，并欢迎张俊知道老师加入团队；之后由兰全祥老师介绍了本次会议的', '会议', 'http://img.pzhuweb.cn/2017108030751561800585205.png', '{\"blocks\":[{\"key\":\"4h700\",\"text\":\"2019年2月24日下午三点，数学与计算机学院WEB应用专业团队在分册楼7a-2召开了2018-2019学年第二学期第一次团队会议。 会议。开始，由兰全祥老师对团队成员进行了管理，并欢迎张俊知道老师加入团队；之后由兰全祥老师介绍了本次会议的团队事务：第一周的创新实验室的位置申请、团队成员假期项目成果检测（大三成员只检查项目，大二成员检验成果并试卷检验，大一成员试卷检验）、团队成员学科成绩检验、团队成员报告会题目拟定；最后由张俊老师介绍了大学生计算机作品竞赛和综合大学生设计大赛两个比赛的大致信息。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":250,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":250,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":250,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":250,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"5aht8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"f7s6m\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"4jril\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030751561800591473.png\",\"name\":\"8.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":118,\"title\":\"2017108030751561800591473.png\",\"alt\":\"2017108030751561800591473.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">2019年2月24日下午三点，数学与计算机学院WEB应用专业团队在分册楼7a-2召开了2018-2019学年第二学期第一次团队会议。 会议。开始，由兰全祥老师对团队成员进行了管理，并欢迎张俊知道老师加入团队；之后由兰全祥老师介绍了本次会议的团队事务：第一周的创新实验室的位置申请、团队成员假期项目成果检测（大三成员只检查项目，大二成员检验成果并试卷检验，大一成员试卷检验）、团队成员学科成绩检验、团队成员报告会题目拟定；最后由张俊老师介绍了大学生计算机作品竞赛和综合大学生设计大赛两个比赛的大致信息。</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"118\" title=\"2017108030751561800591473.png\" alt=\"2017108030751561800591473.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030751561800591473.png\"/></div><p></p>', 13, 1, 0, '2019-02-15 00:00:00', NULL);
INSERT INTO `article` VALUES (148, '201710804105', 'JavaScript中的原型/原型链学习', 1, 1, '原型/原型链一、引入（为什么会有原型prototype）Javascript是一种基于对象的语言，也是可以不通过类，直接创建对象的语言。&quot;属性&quot;（property）和&quot;方法&quot;（method），封装成一', '原型/原型链', 'http://img.pzhuweb.cn/2017108041051562228527332.jpg', '{\"blocks\":[{\"key\":\"a2rtb\",\"text\":\"原型/原型链\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"center\"},\"textAlign\":\"center\"}},{\"key\":\"1b1uh\",\"text\":\"一、引入（为什么会有原型prototype）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"843be\",\"text\":\"Javascript是一种基于对象的语言，也是可以不通过类，直接创建对象的语言。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"981p5\",\"text\":\"\\\"属性\\\"（property）和\\\"方法\\\"（method），封装成一个对象，要从原型对象生成一个实例对象\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":50,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"e4kij\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"center\"},\"textAlign\":\"center\",\"textIndent\":1}},{\"key\":\"7df20\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"1sg7f\",\"text\":\"如果要多创建几个对象，代码就很冗余，而且实例和原型之间看不出联系。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"9j76\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"e4ljh\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"3da9l\",\"text\":\"上图代码解决了冗余的问题，但是看不出实例和原型之间有什么联系。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"a2en4\",\"text\":\"为了解决从原型对象生成实例的问题，Javascript提供了一个构造函数（Constructor）模式。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":52,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"5nvrn\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"9dnn6\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"1hrpj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"6j8f3\",\"text\":\"New可以改变this指向，谁调用它就指向谁，如上图this.name指向的分别是cat1和cat2。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"emo2n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"2q0ip\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"4en91\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"eofmh\",\"text\":\"构造函数相对前面来说很好，但是如果多几个方法和属性，又有相同的方法，比如猫和老虎都是猫科动物，然后每次生成实例，都有重复的内容猫科动物，就会耗费内存，所以把相同的方法提出来，让type属性在内存中只生成一次，然后所有实例都指向那个内存地址。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":120,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"eniee\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"e3nq1\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"arnob\",\"text\":\"原型/原型链\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"center\"},\"textAlign\":\"center\",\"textIndent\":1}},{\"key\":\"e8snr\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"f07v1\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"ni64\",\"text\":\"二、什么是原型（prototype）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"8svu8\",\"text\":\"概念：原型是function对象的一个属性，它定义了该函数制造出的对象的公共祖先。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"bar1o\",\"text\":\"通过该该函数产生的对象，可以继承该原型的属性和方法，原型也是对象。 \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"e5f87\",\"text\":\"Person.prototype----原型\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"1o3b8\",\"text\":\"Person.prototype = { }-----祖先\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"37hbl\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"kjo4\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":4}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"9jvt3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"1pqt7\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":5}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"2md21\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"3mv8i\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"70g6a\",\"text\":\"new会劫持所有的普通函数并用构造函数的形式来调用它，this的指向就会发生改变。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textAlign\":\"left\"}},{\"key\":\"3a7mc\",\"text\":\"三、有什么作用\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"3g5q\",\"text\":\"1.提取出共有属性，解决内存耗费的问题还有代码冗余问题\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"29b5a\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"4r87v\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"173vk\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":6}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"ec6bh\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"9nu8c\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":7}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"42hcq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"anmco\",\"text\":\"2.可以通过person.prototype增加，删除，查询，修改，\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":34,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"7f8c1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"fi6nc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"9ah4u\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":8}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"9cdt5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"4faec\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":9}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"17mo7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"dn5ht\",\"text\":\"增加：Person.prototype.age  = 18;(直接通过原型增加)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"3i8f1\",\"text\":\"删除：Delete Person.prototype.lastName\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":35,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"9kg2o\",\"text\":\"不能通过Delete person.lastName删除（后代无法改变祖先的方法和属性）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":44,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"dplk8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"bg3jb\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":10}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"eq7k\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2ska1\",\"text\":\"修改：Person.prototype.lastName = “bai”\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"dr9nh\",\"text\":\"查询：person.lastName直接向上查询，看是否有相应的属性或者方法\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"roa7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"3b6v5\",\"text\":\"四、看原型里面有什么（constructor和__proto__）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"10ovm\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"5fdik\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":11}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"38t44\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"3jpgq\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":12}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"114m0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"cirjp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"b2pho\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":13}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"4tmre\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"cst16\",\"text\":\"1. Constructor是为了后面的实例可以找到自己的构造器，car对象由Car构造很容易理解，但是并非这样，而是car.constructor通过默认的[[prototype]]委托指向Car。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":3,\"length\":97,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"16\"},\"textIndent\":1}},{\"key\":\"bak8a\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"16\"},\"textIndent\":1}},{\"key\":\"7jqkg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"bu696\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":14}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"50vu7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"27frt\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":15}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"34gq2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"dvocf\",\"text\":\"也可以给Foo.prototype添加一个.constructor属性。用definePrototype（）方法，让.constructor指向Foo\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":75,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"16\"},\"textIndent\":1}},{\"key\":\"s0od\",\"text\":\"因为可以给任意对象添加一个.constructor属性或者对其修改，所以.constructor也是不可信任的，不安全的引用，不一定会指向默认的函数引用。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":77,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"16\"},\"textIndent\":1}},{\"key\":\"4r3jf\",\"text\":\"下列代码是将car的构造函数改为了Person（）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"16\"},\"textIndent\":1}},{\"key\":\"bjpln\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":16}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"867vg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"asrsj\",\"text\":\"2、隐式属性__proto__（命名规则不可修改，JavaScript中无绝对的私有属性）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"94hu9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"c9amh\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":17}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"6hj9i\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"dqlde\",\"text\":\"每个对象都有__proto__属性指向它的原型，如果改变__proto__指向，则改变原型\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"b4kng\",\"text\":\"五、原型链\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"5eca\",\"text\":\"原型是通过__proto__指向的，把原型连接成链就叫原型链，原型链记录了原型创建对象的整个过程，原型链是原型创建对象的历史记录。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":65,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"8tsbe\",\"text\":\"当属性不直接存在于对象中的时候通过原型链来依次查找。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"8qt48\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"center\"},\"textAlign\":\"center\"}},{\"key\":\"8v23n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"brmcr\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":18}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"d3mlb\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"cpaib\",\"text\":\"JS原型和Java中的类进行对比\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"bihpn\",\"text\":\"它和Java中的类是不同的概念，JavaScript模仿了类，模仿了面向对象的使用思想，但是是基于对象的。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":53,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"18eq0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"8i70q\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":19}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"cbq54\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"ekp7b\",\"text\":\"https://www.cnblogs.com/z-w-r/p/6739363.html\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":44,\"style\":\"UNDERLINE\"},{\"offset\":0,\"length\":44,\"style\":\"COLOR-0000FF\"},{\"offset\":0,\"length\":44,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":44,\"key\":20}],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"20dq6\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"127\",\"alt\":\"2017108041051562229027563.png\",\"title\":\"2017108041051562229027563.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229027563.png\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"128\",\"alt\":\"2017108041051562229061827.png\",\"title\":\"2017108041051562229061827.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229061827.png\"}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"129\",\"alt\":\"2017108041051562229077298.png\",\"title\":\"2017108041051562229077298.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229077298.png\"}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"130\",\"alt\":\"2017108041051562229105954.png\",\"title\":\"2017108041051562229105954.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229105954.png\"}},\"4\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"131\",\"alt\":\"2017108041051562229143302.png\",\"title\":\"2017108041051562229143302.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229143302.png\"}},\"5\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"133\",\"alt\":\"2017108041051562229143402.png\",\"title\":\"2017108041051562229143402.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229143402.png\"}},\"6\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"134\",\"alt\":\"2017108041051562229208403.png\",\"title\":\"2017108041051562229208403.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229208403.png\"}},\"7\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"135\",\"alt\":\"2017108041051562229208446.png\",\"title\":\"2017108041051562229208446.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229208446.png\"}},\"8\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"136\",\"alt\":\"2017108041051562229242449.png\",\"title\":\"2017108041051562229242449.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229242449.png\"}},\"9\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"137\",\"alt\":\"2017108041051562229242495.png\",\"title\":\"2017108041051562229242495.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229242495.png\"}},\"10\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"138\",\"alt\":\"2017108041051562229310042.png\",\"title\":\"2017108041051562229310042.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229310042.png\"}},\"11\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"139\",\"alt\":\"2017108041051562229370240.png\",\"title\":\"2017108041051562229370240.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229370240.png\"}},\"12\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"141\",\"alt\":\"2017108041051562229370331.png\",\"title\":\"2017108041051562229370331.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229370331.png\"}},\"13\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"http://img.pzhuweb.cn/2017108041051562229370331.png\"}},\"14\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"142\",\"alt\":\"2017108041051562229408402.png\",\"title\":\"2017108041051562229408402.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229408402.png\"}},\"15\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"143\",\"alt\":\"2017108041051562229408448.png\",\"title\":\"2017108041051562229408448.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229408448.png\"}},\"16\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"144\",\"alt\":\"2017108041051562229448388.png\",\"title\":\"2017108041051562229448388.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041051562229448388.png\"}},\"17\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"http://img.pzhuweb.cn/2017108041051562229518767.png\"}},\"18\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"http://img.pzhuweb.cn/2017108041051562229518871.png\"}},\"19\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"http://img.pzhuweb.cn/2017108041051562229518819.png\"}},\"20\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://www.cnblogs.com/z-w-r/p/6739363.html\",\"target\":null,\"nodeAttributes\":{}}}}}', '<p style=\"text-align:center;\" size=\"2\" _root=\"[object Object]\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\">原型/原型链</p><p><span style=\"line-height:1.75\">一、引入（为什么会有原型prototype）</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Javascript是一种基于对象的语言，也是可以不通过类，直接创建对象的语言。</span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">&quot;属性&quot;（property）和&quot;方法&quot;（method），封装成一个对象，要从原型对象生成一个实例对象</span></p><p style=\"text-align:center;text-indent:2em;\" class=\"MsoNormal\" align=\"center\"></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"127\" alt=\"2017108041051562229027563.png\" title=\"2017108041051562229027563.png\" src=\"http://img.pzhuweb.cn/2017108041051562229027563.png\"/></div><p><span style=\"line-height:1.75\">如果要多创建几个对象，代码就很冗余，而且实例和原型之间看不出联系。</span></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"128\" alt=\"2017108041051562229061827.png\" title=\"2017108041051562229061827.png\" src=\"http://img.pzhuweb.cn/2017108041051562229061827.png\"/></div><p><span style=\"line-height:1.75\">上图代码解决了冗余的问题，但是看不出实例和原型之间有什么联系。</span></p><p><span style=\"line-height:1.75\">为了解决从原型对象生成实例的问题，Javascript提供了一个构造函数（Constructor）模式。</span></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"129\" alt=\"2017108041051562229077298.png\" title=\"2017108041051562229077298.png\" src=\"http://img.pzhuweb.cn/2017108041051562229077298.png\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">New可以改变this指向，谁调用它就指向谁，如上图this.name指向的分别是cat1和cat2。</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"130\" alt=\"2017108041051562229105954.png\" title=\"2017108041051562229105954.png\" src=\"http://img.pzhuweb.cn/2017108041051562229105954.png\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">构造函数相对前面来说很好，但是如果多几个方法和属性，又有相同的方法，比如猫和老虎都是猫科动物，然后每次生成实例，都有重复的内容猫科动物，就会耗费内存，所以把相同的方法提出来，让type属性在内存中只生成一次，然后所有实例都指向那个内存地址。</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"> </p><p style=\"text-indent:2em;\" class=\"MsoNormal\"> </p><p style=\"text-align:center;text-indent:2em;\" class=\"MsoNormal\" align=\"center\"><strong><span style=\"line-height:1.75\">原型/原型链</span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"> </p><p style=\"text-indent:2em;\" class=\"MsoNormal\"> </p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">二、什么是原型（prototype）</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">概念：原型是function对象的一个属性，它定义了该函数制造出的对象的公共祖先。</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">通过该该函数产生的对象，可以继承该原型的属性和方法，原型也是对象。</span> </p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Person.prototype----原型</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Person.prototype = { }-----祖先</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"131\" alt=\"2017108041051562229143302.png\" title=\"2017108041051562229143302.png\" src=\"http://img.pzhuweb.cn/2017108041051562229143302.png\"/></div><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"133\" alt=\"2017108041051562229143402.png\" title=\"2017108041051562229143402.png\" src=\"http://img.pzhuweb.cn/2017108041051562229143402.png\"/></div><p></p><p></p><p style=\"text-align:left;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">new会劫持所有的普通函数并用构造函数的形式来调用它，this的指向就会发生改变。</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">三、有什么作用</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">1.提取出共有属性，解决内存耗费的问题还有代码冗余问题</span></p><p class=\"MsoNormal\"> </p><p class=\"MsoNormal\"></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"134\" alt=\"2017108041051562229208403.png\" title=\"2017108041051562229208403.png\" src=\"http://img.pzhuweb.cn/2017108041051562229208403.png\"/></div><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"135\" alt=\"2017108041051562229208446.png\" title=\"2017108041051562229208446.png\" src=\"http://img.pzhuweb.cn/2017108041051562229208446.png\"/></div><p></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">2.可以通过person.prototype增加，删除，查询，修改，</span></p><p class=\"MsoNormal\"></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"136\" alt=\"2017108041051562229242449.png\" title=\"2017108041051562229242449.png\" src=\"http://img.pzhuweb.cn/2017108041051562229242449.png\"/></div><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"137\" alt=\"2017108041051562229242495.png\" title=\"2017108041051562229242495.png\" src=\"http://img.pzhuweb.cn/2017108041051562229242495.png\"/></div><p></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">增加：Person.prototype.age  = 18;(直接通过原型增加)</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">删除：Delete Person.prototype.lastName</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">不能通过Delete person.lastName删除（后代无法改变祖先的方法和属性）</span></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"138\" alt=\"2017108041051562229310042.png\" title=\"2017108041051562229310042.png\" src=\"http://img.pzhuweb.cn/2017108041051562229310042.png\"/></div><p></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">修改：Person.prototype.lastName = “bai”</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">查询：person.lastName直接向上查询，看是否有相应的属性或者方法</span></p><p></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">四、看原型里面有什么（constructor和__proto__）</span></p><p class=\"MsoNormal\"></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"139\" alt=\"2017108041051562229370240.png\" title=\"2017108041051562229370240.png\" src=\"http://img.pzhuweb.cn/2017108041051562229370240.png\"/></div><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"141\" alt=\"2017108041051562229370331.png\" title=\"2017108041051562229370331.png\" src=\"http://img.pzhuweb.cn/2017108041051562229370331.png\"/></div><p></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" src=\"http://img.pzhuweb.cn/2017108041051562229370331.png\"/></div><p></p><p style=\"text-indent:2em;\" class=\"16\"><span style=\"line-height:1.75\">1.</span> <span style=\"line-height:1.75\">Constructor是为了后面的实例可以找到自己的构造器，car对象由Car构造很容易理解，但是并非这样，而是car.constructor通过默认的[[prototype]]委托指向Car。</span></p><p style=\"text-indent:2em;\" class=\"16\"></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"142\" alt=\"2017108041051562229408402.png\" title=\"2017108041051562229408402.png\" src=\"http://img.pzhuweb.cn/2017108041051562229408402.png\"/></div><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"143\" alt=\"2017108041051562229408448.png\" title=\"2017108041051562229408448.png\" src=\"http://img.pzhuweb.cn/2017108041051562229408448.png\"/></div><p></p><p style=\"text-indent:2em;\" class=\"16\"><span style=\"line-height:1.75\">也可以给Foo.prototype添加一个.constructor属性。用definePrototype（）方法，让.constructor指向Foo</span></p><p style=\"text-indent:2em;\" class=\"16\"><span style=\"line-height:1.75\">因为可以给任意对象添加一个.constructor属性或者对其修改，所以.constructor也是不可信任的，不安全的引用，不一定会指向默认的函数引用。</span></p><p style=\"text-indent:2em;\" class=\"16\"><span style=\"line-height:1.75\">下列代码是将car的构造函数改为了Person（）</span></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"144\" alt=\"2017108041051562229448388.png\" title=\"2017108041051562229448388.png\" src=\"http://img.pzhuweb.cn/2017108041051562229448388.png\"/></div><p></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">2、隐式属性__proto__（命名规则不可修改，JavaScript中无绝对的私有属性）</span></p><p class=\"MsoNormal\"></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" src=\"http://img.pzhuweb.cn/2017108041051562229518767.png\"/></div><p></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">每个对象都有__proto__属性指向它的原型，如果改变__proto__指向，则改变原型</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">五、原型链</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">原型是通过__proto__指向的，把原型连接成链就叫原型链，原型链记录了原型创建对象的整个过程，原型链是原型创建对象的历史记录。</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">当属性不直接存在于对象中的时候通过原型链来依次查找。</span></p><p style=\"text-align:center;\" class=\"MsoNormal\" align=\"center\"></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" src=\"http://img.pzhuweb.cn/2017108041051562229518871.png\"/></div><p></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">JS原型和Java中的类进行对比</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">它和Java中的类是不同的概念，JavaScript模仿了类，模仿了面向对象的使用思想，但是是基于对象的。</span></p><p class=\"MsoNormal\"></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" src=\"http://img.pzhuweb.cn/2017108041051562229518819.png\"/></div><p></p><p class=\"MsoNormal\"><u><span style=\"color:#0000ff\"><span style=\"line-height:1.75\"><a href=\"https://www.cnblogs.com/z-w-r/p/6739363.html\">https://www.cnblogs.com/z-w-r/p/6739363.html</a></span></span></u></p><p class=\"MsoNormal\"> </p>', 16, 1, 0, '2019-07-04 00:00:00', NULL);
INSERT INTO `article` VALUES (149, '201710804172', '团队学术报告会-TimSort&JavaScript的This指针', 5, 13, '本报讯（赵泽忠报导）4月21日20:00，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队第三次全体会议。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。此次会议的主要内容包括第八周的工作总结、兰全祥老师对各年级', 'this指针', 'http://img.pzhuweb.cn/2017108041721561795415098.jpg', '{\"blocks\":[{\"key\":\"a6mar\",\"text\":\"本报讯（赵泽忠报导）4月21日20:00，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队第三次全体会议。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"BOLD\"},{\"offset\":0,\"length\":21,\"style\":\"FONTSIZE-14pt\"},{\"offset\":30,\"length\":61,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":21,\"style\":\"COLOR-000000\"},{\"offset\":30,\"length\":61,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":91,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"vsbcontentstart\"},\"textIndent\":1}},{\"key\":\"b2jf4\",\"text\":\"此次会议的主要内容包括第八周的工作总结、兰全祥老师对各年级团队成员学习计划指导，团队成员近期学习汇报。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":51,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":51,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"vsbcontentstart\"},\"textIndent\":1}},{\"key\":\"4she0\",\"text\":\"会议开始，兰全祥老师对近期工作进行了总结并讲解了论文写作的重要性以及论文写作要求，2016级软件工程罗文对团队跑步情况进行了汇报，然后，2018级吴涛对近期学习内容—排序算法、2016级软件工程罗文对近期学习内容—js中的this指向问题进行了演示与分析。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":128,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":128,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":128,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"32l29\",\"text\":\"通过本次会议，团队成员有了更加准确的个人的学习计划，对论文写作有了进一步的了解。最后，兰全祥老师对本次会议进行了总结，认为同学们还需要不断提升专业能力素养，培养自学能力。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":85,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":85,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":85,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"7agu8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e0kvh\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"6k6s8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721561795399241.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"width\":\"1000px\",\"meta\":{\"id\":110,\"title\":\"2017108041721561795399241.jpg\",\"alt\":\"2017108041721561795399241.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"vsbcontentstart\"><span style=\"line-height:2\"><span style=\"font-size:14ptpx\"><span style=\"color:#000000\"><strong>本报讯（赵泽忠报导）</strong>4月21日20:00，</span></span>WEB应用专业团队<span style=\"font-size:14ptpx\"><span style=\"color:#000000\">在砺志楼403会议室召开了WEB应用专业团队第三次全体会议。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。</span></span></span></p><p style=\"text-indent:2em;\" class=\"vsbcontentstart\"><span style=\"font-size:14ptpx\"><span style=\"color:#000000\"><span style=\"line-height:2\">此次会议的主要内容包括第八周的工作总结、兰全祥老师对各年级团队成员学习计划指导，团队成员近期学习汇报。</span></span></span></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:14ptpx\"><span style=\"color:#000000\"><span style=\"line-height:2\">会议开始，兰全祥老师对近期工作进行了总结并讲解了论文写作的重要性以及论文写作要求，2016级软件工程罗文对团队跑步情况进行了汇报，然后，2018级吴涛对近期学习内容—排序算法、2016级软件工程罗文对近期学习内容—js中的this指向问题进行了演示与分析。</span></span></span></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:14ptpx\"><span style=\"color:#000000\"><span style=\"line-height:2\">通过本次会议，团队成员有了更加准确的个人的学习计划，对论文写作有了进一步的了解。最后，兰全祥老师对本次会议进行了总结，认为同学们还需要不断提升专业能力素养，培养自学能力。</span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"110\" title=\"2017108041721561795399241.jpg\" alt=\"2017108041721561795399241.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041721561795399241.jpg\" width=\"1000px\" style=\"width:1000px\"/></div><p></p>', 17, 1, 0, '2019-04-21 00:00:00', NULL);
INSERT INTO `article` VALUES (150, '201710803017', 'WEB应用专业团队创新实验室成员工作总结', 5, 13, 'WEB应用专业团队于2018年6月9日19:00在励志楼会议室开展了创新实验室成员工作总结。由团队指导老师兰全祥主持，2015级、2016级团队成员对这学期成果作总结报告。首先团队队长刘星完成了团队官网的设计与开发，并参加了阿里的面试，他建', '工作总结', 'http://img.pzhuweb.cn/2017108030171561795504467.jpg', '{\"blocks\":[{\"key\":\"85qql\",\"text\":\"WEB应用专业团队于2018年6月9日19:00在励志楼会议室开展了创新实验室成员工作总结。由团队指导老师兰全祥主持，2015级、2016级团队成员对这学期成果作总结报告。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":86,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"42n36\",\"text\":\"首先团队队长刘星完成了团队官网的设计与开发，并参加了阿里的面试，他建议大家要有一个成熟的项目，要有扎实的基础，这些在工作面试中非常重要。然后2015级网络工程陈波主要学习了大数据技术、参加了学科专业竞赛，他建议多注重Java底层实现的学习。之后2015级和2016 级其他创新实验室成员对本学期学习成果进行总结，提出了自身不足及改进方向。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":169,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"35mf1\",\"text\":\"最后，兰全祥老师对本次报告会进行了总结，对每一位团队成员的本期表现进行分析，对做的不好的地方提出建议，对部分团队成员技术发展方向做出评价，肯定团队成员做出的成绩，也对后续的学习寄予深厚的希望！通过此次总结会，团队创新实验室全体成员进一步了解到了自身的不足，确定了之后的学习方向和目标。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":142,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"3jbb6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"c3itl\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"eb7rm\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"1sodu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"111\",\"alt\":\"2017108030171561795492736.jpg\",\"title\":\"2017108030171561795492736.jpg\"},\"url\":\"http://img.pzhuweb.cn/2017108030171561795492736.jpg\"}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">WEB应用专业团队于2018年6月9日19:00在励志楼会议室开展了创新实验室成员工作总结。由团队指导老师兰全祥主持，2015级、2016级团队成员对这学期成果作总结报告。</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">首先团队队长刘星完成了团队官网的设计与开发，并参加了阿里的面试，他建议大家要有一个成熟的项目，要有扎实的基础，这些在工作面试中非常重要。然后2015级网络工程陈波主要学习了大数据技术、参加了学科专业竞赛，他建议多注重Java底层实现的学习。之后2015级和2016 级其他创新实验室成员对本学期学习成果进行总结，提出了自身不足及改进方向。</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">最后，兰全祥老师对本次报告会进行了总结，对每一位团队成员的本期表现进行分析，对做的不好的地方提出建议，对部分团队成员技术发展方向做出评价，肯定团队成员做出的成绩，也对后续的学习寄予深厚的希望！通过此次总结会，团队创新实验室全体成员进一步了解到了自身的不足，确定了之后的学习方向和目标。</span></p><p></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"111\" alt=\"2017108030171561795492736.jpg\" title=\"2017108030171561795492736.jpg\" src=\"http://img.pzhuweb.cn/2017108030171561795492736.jpg\"/></div><p></p>', 7, 1, 0, '2018-06-12 00:00:00', NULL);
INSERT INTO `article` VALUES (151, '201710803075', '团队学术报告会-Java中的关键字 ', 5, 13, '2019年3月15日19:40在分测6a-3举行团队分享会，本次分享会由杨廷发和刘杰主讲。杨廷发同学讲解了Java中的关键字的相关知识点，分别对Vector、ArrayList、HashMap、TreeMap等关键字的对比与实现进行了代码演', 'Java关键字', 'http://img.pzhuweb.cn/2017108030751561800670509.jpg', '{\"blocks\":[{\"key\":\"3orr9\",\"text\":\"2019年3月15日19:40在分测6a-3举行团队分享会，本次分享会由杨廷发和刘杰主讲。杨廷发同学讲解了Java中的关键字的相关知识点，分别对Vector、ArrayList、HashMap、TreeMap等关键字的对比与实现进行了代码演示。随后刘杰同学讲解了Java中常见的几个关键字，并对部分关键字进行了现场演示与讲解。最后由团队指导老师兰全祥老师总结发言，他指出团队成员应该去学习和巩固今天主讲同学所讲的知识，并在下次团队会议中进行提问。团队成员在本次分享收获颇深，自此本次分享会圆满结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":249,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":249,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":249,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":249,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"bq5qb\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fab0d\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"aecp1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030751561800697769.jpg\",\"name\":\"0194BE169D0FA052D5729CDB5CF_E4621D83_107F0.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":119,\"title\":\"2017108030751561800697769.jpg\",\"alt\":\"2017108030751561800697769.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"color:#24292e\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">2019年3月15日19:40在分测6a-3举行团队分享会，本次分享会由杨廷发和刘杰主讲。杨廷发同学讲解了Java中的关键字的相关知识点，分别对Vector、ArrayList、HashMap、TreeMap等关键字的对比与实现进行了代码演示。随后刘杰同学讲解了Java中常见的几个关键字，并对部分关键字进行了现场演示与讲解。最后由团队指导老师兰全祥老师总结发言，他指出团队成员应该去学习和巩固今天主讲同学所讲的知识，并在下次团队会议中进行提问。团队成员在本次分享收获颇深，自此本次分享会圆满结束。</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"119\" title=\"2017108030751561800697769.jpg\" alt=\"2017108030751561800697769.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030751561800697769.jpg\"/></div><p></p>', 13, 1, 0, '2019-03-16 00:00:00', NULL);
INSERT INTO `article` VALUES (152, '201710803017', 'java中List接口的特点及实现类，类与对象知识点', 2, 14, '一. List的主特点有:可重复而有序序列,List接口可让程序员对列表中的每个元素的插入位置进行精确的控制,可根据index(索引)来访问,搜索元素. List的功能: 1)添加功能: add(index,element); //将ele', 'List接口', 'http://img.pzhuweb.cn/2017108030171561795775546.png', '{\"blocks\":[{\"key\":\"2hcf4\",\"text\":\"一. List的主特点有:可重复而有序序列,List接口可让程序员对列表中的每个元素的插入位置进行精确的控制,可根据index(索引)来访问,搜索元素. List的功能: 1)添加功能: add(index,element); //将element元素插入到index位置.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":137,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"ej088\",\"text\":\"addAll(Collection c); //将集合c中的元素全部添加到list序列末尾.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":46,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"d92ie\",\"text\":\"2)获取功能及查询功能: get(index); //获取index位置的元素.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"cto97\",\"text\":\"contains(element); //如果list中有element元素则返回true,反之.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":49,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"bmjcf\",\"text\":\"indexOf(element); //返回element第一次出现的位置.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"78gv0\",\"text\":\"lastIndexOf(element); //如果list中有element元素,则返回其最后一次出现的位置\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":55,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"3i6ar\",\"text\":\"isEmpty(); //判断链表是否为空\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"7si04\",\"text\":\"3)删除功能: remove(index); //删除index处的元素.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"bbqvp\",\"text\":\"clear(); //清空序列\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"ev7p4\",\"text\":\"remove(Collection c); //将集合list中含有集合c的所有元素删除. 4)修改功能: set(index,element); //将index处的元素置为element. 5)遍历方法 用for循环结合get(index)获取元素. 用subList(startindex,endindex); //得到从startindex到endindex的元素.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":187,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"2q8c6\",\"text\":\"实现List接口的类 1)LinkedList 是一个双列表,在添加和删除元素时具有ArrayList更好的性能,但在get与set方面弱于ArrayList.LinkedList不能随机访问,它在列表中索引的操作将从开头或者结尾遍历列表. 2)ArrayList 是一个动态数组,其容器的大小会随加入或删除元素的时增大或者是变小,到容量快溢出的时候,会进行扩容操作,为了提高效率最好确定容量的值. 3)Vector 向量类以实现累死动态数组的功能.对于预先不知或者不愿预先定义数组大小，并且需要频繁地进行查找，插入，删除工作的情况。可以考虑使用向量类。 4)Stack Stack继承Vector,实现一个后进先出,先进后出的堆栈.Stack刚刚创建后是空栈.Stack只提供五个方法使得Vector得以被当做堆栈使用 测试栈是否为空： isEmpty(); 查看栈顶部对象，但不从栈中移除： peek(); 移除栈顶部的对象，并作为此函数的值返回该对象：pop(); 把项压入栈顶部 push(E item); 返回对象在栈中的位置 search(Object o);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":486,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"31es5\",\"text\":\"为了记牢某些功能写的代码有: package ListInterfaceStudy;\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":42,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"fqtnv\",\"text\":\"import java.util.ArrayList; import java.util.Collection; import java.util.LinkedList;\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":85,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"c35a8\",\"text\":\"public class LinkedListStudy {\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"1qri0\",\"text\":\"public static void main(String[] args) {\\n    int size = 0;\\n    LinkedList linkedlist = new LinkedList();\\n    for(int i = 0; i < 5; i++) {\\n        linkedlist.add(i + 1);\\n        System.out.print(linkedlist.get(i) + \\\" \\\");\\n    }\\n    System.out.println();\\n    System.out.print(\\\"linkedlist:\\\" + linkedlist);//可以直接输出linkedlist的元素\\n    System.out.println(\\\"\\\\nlast element:\\\" + linkedlist.getLast());\\n                                       //用LinkedList.getLast()得到其最后一个元素\\n    System.out.println();\\n    System.out.println(\\\"linkedlist 的大小为:\\\" +linkedlist.size());\\n    size = linkedlist.size();\\n    System.out.println(\\\"所以说linkedlist的最大索引为:\\\" + (size - 1));\\n    linkedlist.set(0, 11);\\n    System.out.println(\\\"经过linkedlist.set(0,11)后\\\");\\n    System.out.print(\\\"索引为0得元素为:\\\");\\n    System.out.println(linkedlist.get(0));\\n    linkedlist.remove(4);//linkedlist 的最大索引为4,在执行remove(4)后,即表明linkedlist的最大索引为3\\n                         //所以在linkedlist.get(4)会发生错误,即下一行注释的语句的会发生错误\\n    //System.out.println(\\\"remove(4)后:\\\" + linkedlist.get(4));\\n    size = linkedlist.size();\\n    System.out.println(\\\"经过linkedlist.remove(4)后,最大索引为:\\\" + (size -1) );\\n    linkedlist.add(4, 888);\\n    System.out.println(\\\"在索引为4的位置添加 8的值后,linkedlist的值为:\\\");\\n    System.out.println(linkedlist.subList(0, linkedlist.size()));\\n    System.out.println(\\\"\\\\n\\\\n\\\");\\n    System.out.println(\\\"toArray()d的功能:\\\" + linkedlist.toArray());//toArray()的功能还不太理解\\n    System.out.println(\\\"经过removeLastOcurrce(4)后\\\");\\n    //System.out.println(\\\"且经过removeLast(0)后,linkedlist中的元素有:\\\" + linkedlist.removeLast(0));\\n\\n    System.out.println(linkedlist.removeLastOccurrence(4));\\n                                                //removeLastOccurrence(n)的作用是,判断是否能将元素4闪出去\\n                                                //若能删除,则返回true,反之返回false\\n    System.out.println(linkedlist.subList(0, linkedlist.size()));\\n\\n\\n    Collection collection = new ArrayList();//用ArrayList来分配内存空间\\n\\n    collection.add(\\\"Myname\\\");\\n    collection.add(\\\"YourInterested\\\");\\n    System.out.println(collection);\\n    Collection collection2 = new ArrayList();\\n    collection2.add(\\\"these are different!\\\");\\n    collection.addAll(collection2);\\n    System.out.println(collection2);\\n    System.out.println(collection);\\n}\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"},{\"offset\":41,\"length\":17,\"style\":\"LINEHEIGHT-2\"},{\"offset\":59,\"length\":45,\"style\":\"LINEHEIGHT-2\"},{\"offset\":105,\"length\":32,\"style\":\"LINEHEIGHT-2\"},{\"offset\":138,\"length\":30,\"style\":\"LINEHEIGHT-2\"},{\"offset\":169,\"length\":50,\"style\":\"LINEHEIGHT-2\"},{\"offset\":220,\"length\":5,\"style\":\"LINEHEIGHT-2\"},{\"offset\":226,\"length\":25,\"style\":\"LINEHEIGHT-2\"},{\"offset\":252,\"length\":70,\"style\":\"LINEHEIGHT-2\"},{\"offset\":323,\"length\":65,\"style\":\"LINEHEIGHT-2\"},{\"offset\":389,\"length\":71,\"style\":\"LINEHEIGHT-2\"},{\"offset\":461,\"length\":25,\"style\":\"LINEHEIGHT-2\"},{\"offset\":487,\"length\":62,\"style\":\"LINEHEIGHT-2\"},{\"offset\":550,\"length\":29,\"style\":\"LINEHEIGHT-2\"},{\"offset\":580,\"length\":60,\"style\":\"LINEHEIGHT-2\"},{\"offset\":641,\"length\":26,\"style\":\"LINEHEIGHT-2\"},{\"offset\":668,\"length\":50,\"style\":\"LINEHEIGHT-2\"},{\"offset\":719,\"length\":34,\"style\":\"LINEHEIGHT-2\"},{\"offset\":754,\"length\":42,\"style\":\"LINEHEIGHT-2\"},{\"offset\":797,\"length\":80,\"style\":\"LINEHEIGHT-2\"},{\"offset\":878,\"length\":68,\"style\":\"LINEHEIGHT-2\"},{\"offset\":947,\"length\":60,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1008,\"length\":29,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1038,\"length\":70,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1109,\"length\":27,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1137,\"length\":57,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1195,\"length\":65,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1261,\"length\":31,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1293,\"length\":83,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1377,\"length\":50,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1428,\"length\":90,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1520,\"length\":59,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1580,\"length\":90,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1671,\"length\":72,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1744,\"length\":65,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1812,\"length\":63,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1877,\"length\":29,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1907,\"length\":37,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1945,\"length\":35,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1981,\"length\":45,\"style\":\"LINEHEIGHT-2\"},{\"offset\":2027,\"length\":44,\"style\":\"LINEHEIGHT-2\"},{\"offset\":2072,\"length\":35,\"style\":\"LINEHEIGHT-2\"},{\"offset\":2108,\"length\":36,\"style\":\"LINEHEIGHT-2\"},{\"offset\":2145,\"length\":35,\"style\":\"LINEHEIGHT-2\"},{\"offset\":2181,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":30,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":45,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":56,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":87,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":91,\"length\":12,\"style\":\"FONTSIZE-16\"},{\"offset\":113,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":121,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":128,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":165,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":177,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":214,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":230,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":248,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":256,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":273,\"length\":13,\"style\":\"FONTSIZE-16\"},{\"offset\":301,\"length\":21,\"style\":\"FONTSIZE-16\"},{\"offset\":327,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":346,\"length\":17,\"style\":\"FONTSIZE-16\"},{\"offset\":380,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":428,\"length\":32,\"style\":\"FONTSIZE-16\"},{\"offset\":465,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":483,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":491,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":510,\"length\":18,\"style\":\"FONTSIZE-16\"},{\"offset\":545,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":576,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":584,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":603,\"length\":22,\"style\":\"FONTSIZE-16\"},{\"offset\":636,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":660,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":663,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":672,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":691,\"length\":25,\"style\":\"FONTSIZE-16\"},{\"offset\":723,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":740,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":758,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":792,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":819,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":822,\"length\":55,\"style\":\"FONTSIZE-16\"},{\"offset\":903,\"length\":43,\"style\":\"FONTSIZE-16\"},{\"offset\":951,\"length\":56,\"style\":\"FONTSIZE-16\"},{\"offset\":1034,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":1042,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":1061,\"length\":32,\"style\":\"FONTSIZE-16\"},{\"offset\":1103,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":1128,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":1131,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":1141,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":1160,\"length\":32,\"style\":\"FONTSIZE-16\"},{\"offset\":1199,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":1232,\"length\":25,\"style\":\"FONTSIZE-16\"},{\"offset\":1265,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":1284,\"length\":6,\"style\":\"FONTSIZE-16\"},{\"offset\":1297,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":1316,\"length\":16,\"style\":\"FONTSIZE-16\"},{\"offset\":1346,\"length\":9,\"style\":\"FONTSIZE-16\"},{\"offset\":1357,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":1381,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":1400,\"length\":25,\"style\":\"FONTSIZE-16\"},{\"offset\":1432,\"length\":86,\"style\":\"FONTSIZE-16\"},{\"offset\":1524,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":1560,\"length\":17,\"style\":\"FONTSIZE-16\"},{\"offset\":1628,\"length\":42,\"style\":\"FONTSIZE-16\"},{\"offset\":1719,\"length\":24,\"style\":\"FONTSIZE-16\"},{\"offset\":1748,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":1781,\"length\":25,\"style\":\"FONTSIZE-16\"},{\"offset\":1840,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":1844,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":1856,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":1896,\"length\":8,\"style\":\"FONTSIZE-16\"},{\"offset\":1926,\"length\":16,\"style\":\"FONTSIZE-16\"},{\"offset\":1949,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":2010,\"length\":3,\"style\":\"FONTSIZE-16\"},{\"offset\":2014,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":2047,\"length\":22,\"style\":\"FONTSIZE-16\"},{\"offset\":2090,\"length\":16,\"style\":\"FONTSIZE-16\"},{\"offset\":2112,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":2149,\"length\":7,\"style\":\"FONTSIZE-16\"},{\"offset\":30,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":45,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":56,\"length\":1,\"style\":\"COLOR-DF5320\"},{\"offset\":113,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":121,\"length\":1,\"style\":\"COLOR-DF5320\"},{\"offset\":128,\"length\":1,\"style\":\"COLOR-DF5320\"},{\"offset\":165,\"length\":1,\"style\":\"COLOR-DF5320\"},{\"offset\":248,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":483,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":545,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":576,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":636,\"length\":1,\"style\":\"COLOR-DF5320\"},{\"offset\":660,\"length\":1,\"style\":\"COLOR-DF5320\"},{\"offset\":663,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":792,\"length\":1,\"style\":\"COLOR-DF5320\"},{\"offset\":819,\"length\":1,\"style\":\"COLOR-DF5320\"},{\"offset\":1034,\"length\":2,\"style\":\"COLOR-DF5320\"},{\"offset\":1103,\"length\":1,\"style\":\"COLOR-DF5320\"},{\"offset\":1128,\"length\":1,\"style\":\"COLOR-DF5320\"},{\"offset\":1131,\"length\":3,\"style\":\"COLOR-DF5320\"},{\"offset\":1240,\"length\":10,\"style\":\"COLOR-DF5320\"},{\"offset\":1251,\"length\":4,\"style\":\"COLOR-DF5320\"},{\"offset\":1789,\"length\":10,\"style\":\"COLOR-DF5320\"},{\"offset\":1800,\"length\":4,\"style\":\"COLOR-DF5320\"},{\"offset\":2094,\"length\":11,\"style\":\"COLOR-DF5320\"},{\"offset\":87,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":1346,\"length\":2,\"style\":\"COLOR-6666EA\"},{\"offset\":1840,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":2010,\"length\":3,\"style\":\"COLOR-6666EA\"},{\"offset\":214,\"length\":3,\"style\":\"COLOR-7B9726\"},{\"offset\":273,\"length\":13,\"style\":\"COLOR-7B9726\"},{\"offset\":346,\"length\":17,\"style\":\"COLOR-7B9726\"},{\"offset\":510,\"length\":18,\"style\":\"COLOR-7B9726\"},{\"offset\":603,\"length\":22,\"style\":\"COLOR-7B9726\"},{\"offset\":691,\"length\":25,\"style\":\"COLOR-7B9726\"},{\"offset\":740,\"length\":11,\"style\":\"COLOR-7B9726\"},{\"offset\":1061,\"length\":32,\"style\":\"COLOR-7B9726\"},{\"offset\":1160,\"length\":32,\"style\":\"COLOR-7B9726\"},{\"offset\":1284,\"length\":6,\"style\":\"COLOR-7B9726\"},{\"offset\":1316,\"length\":16,\"style\":\"COLOR-7B9726\"},{\"offset\":1400,\"length\":25,\"style\":\"COLOR-7B9726\"},{\"offset\":1896,\"length\":8,\"style\":\"COLOR-7B9726\"},{\"offset\":1926,\"length\":16,\"style\":\"COLOR-7B9726\"},{\"offset\":2047,\"length\":22,\"style\":\"COLOR-7B9726\"},{\"offset\":301,\"length\":21,\"style\":\"COLOR-9C9491\"},{\"offset\":428,\"length\":32,\"style\":\"COLOR-9C9491\"},{\"offset\":822,\"length\":55,\"style\":\"COLOR-9C9491\"},{\"offset\":903,\"length\":43,\"style\":\"COLOR-9C9491\"},{\"offset\":951,\"length\":56,\"style\":\"COLOR-9C9491\"},{\"offset\":1357,\"length\":19,\"style\":\"COLOR-9C9491\"},{\"offset\":1432,\"length\":86,\"style\":\"COLOR-9C9491\"},{\"offset\":1628,\"length\":42,\"style\":\"COLOR-9C9491\"},{\"offset\":1719,\"length\":24,\"style\":\"COLOR-9C9491\"},{\"offset\":1856,\"length\":19,\"style\":\"COLOR-9C9491\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"7vber\",\"text\":\"} 二. 类与对象 1)在类定义对象时要为对象分配内存空间. 2)成员变量是定义在类内方法外的变量. 局部变量只能在对应的作用域内起作用. 成员变量有默认值,而局部变量没有默认值,在使用的时候需要赋值后在使用 3)用是static修饰的为类方法或者类变量,没有用static修饰的为实例方法或者实例变量 4)方法的重载只看方法名和参数列表,不要看返回值类型. 5)实例方法不能通过类名来调用,当this关键字穿现在实例方法中时就代表正在调用该方法的当前对象。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":229,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}}],\"entityMap\":{}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">一. List的主特点有:可重复而有序序列,List接口可让程序员对列表中的每个元素的插入位置进行精确的控制,可根据index(索引)来访问,搜索元素. List的功能: 1)添加功能: add(index,element); //将element元素插入到index位置.</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">addAll(Collection c); //将集合c中的元素全部添加到list序列末尾.</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">2)获取功能及查询功能: get(index); //获取index位置的元素.</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">contains(element); //如果list中有element元素则返回true,反之.</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">indexOf(element); //返回element第一次出现的位置.</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">lastIndexOf(element); //如果list中有element元素,则返回其最后一次出现的位置</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">isEmpty(); //判断链表是否为空</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">3)删除功能: remove(index); //删除index处的元素.</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">clear(); //清空序列</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">remove(Collection c); //将集合list中含有集合c的所有元素删除. 4)修改功能: set(index,element); //将index处的元素置为element. 5)遍历方法 用for循环结合get(index)获取元素. 用subList(startindex,endindex); //得到从startindex到endindex的元素.</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">实现List接口的类 1)LinkedList 是一个双列表,在添加和删除元素时具有ArrayList更好的性能,但在get与set方面弱于ArrayList.LinkedList不能随机访问,它在列表中索引的操作将从开头或者结尾遍历列表. 2)ArrayList 是一个动态数组,其容器的大小会随加入或删除元素的时增大或者是变小,到容量快溢出的时候,会进行扩容操作,为了提高效率最好确定容量的值. 3)Vector 向量类以实现累死动态数组的功能.对于预先不知或者不愿预先定义数组大小，并且需要频繁地进行查找，插入，删除工作的情况。可以考虑使用向量类。 4)Stack Stack继承Vector,实现一个后进先出,先进后出的堆栈.Stack刚刚创建后是空栈.Stack只提供五个方法使得Vector得以被当做堆栈使用 测试栈是否为空： isEmpty(); 查看栈顶部对象，但不从栈中移除： peek(); 移除栈顶部的对象，并作为此函数的值返回该对象：pop(); 把项压入栈顶部 push(E item); 返回对象在栈中的位置 search(Object o);</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">为了记牢某些功能写的代码有: package ListInterfaceStudy;</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">import java.util.ArrayList; import java.util.Collection; import java.util.LinkedList;</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">public class LinkedListStudy {</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">public static void main(String<span style=\"font-size:16px\"><span style=\"color:#df5320\">[]</span></span> args) {</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\"><span style=\"color:#df5320\">int</span></span> size = <span style=\"font-size:16px\"><span style=\"color:#df5320\">0</span></span>;</span><br/><span style=\"line-height:2\">    LinkedList linkedlist = <span style=\"font-size:16px\"><span style=\"color:#6666ea\">new</span></span> <span style=\"font-size:16px\">LinkedList()</span>;</span><br/><span style=\"line-height:2\">    for(<span style=\"font-size:16px\"><span style=\"color:#df5320\">int</span></span> i = <span style=\"font-size:16px\"><span style=\"color:#df5320\">0</span></span>; i &lt; <span style=\"font-size:16px\"><span style=\"color:#df5320\">5</span></span>; i++) {</span><br/><span style=\"line-height:2\">        linkedlist.add(i + <span style=\"font-size:16px\"><span style=\"color:#df5320\">1</span></span>);</span><br/><span style=\"line-height:2\">        <span style=\"font-size:16px\">System.</span>out.print(linkedlist.get(i) + <span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot; &quot;</span></span>);</span><br/><span style=\"line-height:2\">    }</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println<span style=\"font-size:16px\"><span style=\"color:#df5320\">()</span></span>;</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.print(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;linkedlist:&quot;</span></span> + linkedlist);<span style=\"font-size:16px\"><span style=\"color:#9c9491\">//可以直接输出linkedlist的元素</span></span></span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;\\nlast element:&quot;</span></span> + linkedlist.get<span style=\"font-size:16px\">Last()</span>);</span><br/><span style=\"line-height:2\">                                       <span style=\"font-size:16px\"><span style=\"color:#9c9491\">//用LinkedList.getLast()得到其最后一个元素</span></span></span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println<span style=\"font-size:16px\"><span style=\"color:#df5320\">()</span></span>;</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;linkedlist 的大小为:&quot;</span></span> +linkedlist.size<span style=\"font-size:16px\"><span style=\"color:#df5320\">()</span></span>);</span><br/><span style=\"line-height:2\">    size = linkedlist.size<span style=\"font-size:16px\"><span style=\"color:#df5320\">()</span></span>;</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;所以说linkedlist的最大索引为:&quot;</span></span> + (size - <span style=\"font-size:16px\"><span style=\"color:#df5320\">1</span></span>));</span><br/><span style=\"line-height:2\">    linkedlist.set(<span style=\"font-size:16px\"><span style=\"color:#df5320\">0</span></span>, <span style=\"font-size:16px\"><span style=\"color:#df5320\">11</span></span>);</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;经过linkedlist.set(0,11)后&quot;</span></span>);</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.print(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;索引为0得元素为:&quot;</span></span>);</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(linkedlist.get(<span style=\"font-size:16px\"><span style=\"color:#df5320\">0</span></span>));</span><br/><span style=\"line-height:2\">    linkedlist.remove(<span style=\"font-size:16px\"><span style=\"color:#df5320\">4</span></span>);<span style=\"font-size:16px\"><span style=\"color:#9c9491\">//linkedlist 的最大索引为4,在执行remove(4)后,即表明linkedlist的最大索引为3</span></span></span><br/><span style=\"line-height:2\">                         <span style=\"font-size:16px\"><span style=\"color:#9c9491\">//所以在linkedlist.get(4)会发生错误,即下一行注释的语句的会发生错误</span></span></span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\"><span style=\"color:#9c9491\">//System.out.println(&quot;remove(4)后:&quot; + linkedlist.get(4));</span></span></span><br/><span style=\"line-height:2\">    size = linkedlist.size<span style=\"font-size:16px\"><span style=\"color:#df5320\">()</span></span>;</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;经过linkedlist.remove(4)后,最大索引为:&quot;</span></span> + (size -<span style=\"font-size:16px\"><span style=\"color:#df5320\">1</span></span>) );</span><br/><span style=\"line-height:2\">    linkedlist.add(<span style=\"font-size:16px\"><span style=\"color:#df5320\">4</span></span>, <span style=\"font-size:16px\"><span style=\"color:#df5320\">888</span></span>);</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;在索引为4的位置添加 8的值后,linkedlist的值为:&quot;</span></span>);</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(linkedlist.sub<span style=\"font-size:16px\">List(0, <span style=\"color:#df5320\">linkedlist</span>.<span style=\"color:#df5320\">size</span>()</span>));</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;\\n\\n&quot;</span></span>);</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;toArray()d的功能:&quot;</span></span> + linkedlist.<span style=\"font-size:16px\"><span style=\"color:#6666ea\">to</span>Array()</span>);<span style=\"font-size:16px\"><span style=\"color:#9c9491\">//toArray()的功能还不太理解</span></span></span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;经过removeLastOcurrce(4)后&quot;</span></span>);</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\"><span style=\"color:#9c9491\">//System.out.println(&quot;且经过removeLast(0)后,linkedlist中的元素有:&quot; + linkedlist.removeLast(0));</span></span></span><br/><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(linkedlist.remove<span style=\"font-size:16px\">LastOccurrence(4)</span>);</span><br/><span style=\"line-height:2\">                                                <span style=\"font-size:16px\"><span style=\"color:#9c9491\">//removeLastOccurrence(n)的作用是,判断是否能将元素4闪出去</span></span></span><br/><span style=\"line-height:2\">                                                <span style=\"font-size:16px\"><span style=\"color:#9c9491\">//若能删除,则返回true,反之返回false</span></span></span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(linkedlist.sub<span style=\"font-size:16px\">List(0, <span style=\"color:#df5320\">linkedlist</span>.<span style=\"color:#df5320\">size</span>()</span>));</span><br/><br/><br/><span style=\"line-height:2\">    Collection collection = <span style=\"font-size:16px\"><span style=\"color:#6666ea\">new</span></span> <span style=\"font-size:16px\">ArrayList()</span>;<span style=\"font-size:16px\"><span style=\"color:#9c9491\">//用ArrayList来分配内存空间</span></span></span><br/><br/><span style=\"line-height:2\">    collection.add(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;Myname&quot;</span></span>);</span><br/><span style=\"line-height:2\">    collection.add(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;YourInterested&quot;</span></span>);</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(collection);</span><br/><span style=\"line-height:2\">    Collection collection2 = <span style=\"font-size:16px\"><span style=\"color:#6666ea\">new</span></span> <span style=\"font-size:16px\">ArrayList()</span>;</span><br/><span style=\"line-height:2\">    collection2.add(<span style=\"font-size:16px\"><span style=\"color:#7b9726\">&quot;these are different!&quot;</span></span>);</span><br/><span style=\"line-height:2\">    collection.add<span style=\"font-size:16px\">All(<span style=\"color:#df5320\">collection2</span>)</span>;</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(collection2);</span><br/><span style=\"line-height:2\">    <span style=\"font-size:16px\">System.</span>out.println(collection);</span><br/><span style=\"line-height:2\">}</span><br/></code></pre><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:2\">} 二. 类与对象 1)在类定义对象时要为对象分配内存空间. 2)成员变量是定义在类内方法外的变量. 局部变量只能在对应的作用域内起作用. 成员变量有默认值,而局部变量没有默认值,在使用的时候需要赋值后在使用 3)用是static修饰的为类方法或者类变量,没有用static修饰的为实例方法或者实例变量 4)方法的重载只看方法名和参数列表,不要看返回值类型. 5)实例方法不能通过类名来调用,当this关键字穿现在实例方法中时就代表正在调用该方法的当前对象。</span></p>', 12, 1, 0, '2018-09-23 00:00:00', NULL);
INSERT INTO `article` VALUES (153, '201710804035', 'javaWeb的会话跟踪技术', 2, 2, ' 一、会话技术简介1．存储客户端的状态由一个问题引出内容，例如网站的购物系统，用户将购买的商品信息存储到哪里？因为Http协议是无状态的，也就是说每个客户访问服务器端资源时，服务器并不知道该客户端是谁，所以需要会话技术识别客户端的状态。会话', '会话跟踪', 'http://img.pzhuweb.cn/140848948.2760081495784977000.1537431400359.67161562202823280.jpg', '{\"blocks\":[{\"key\":\"a9val\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"coea1\",\"text\":\"一、会话技术简介\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"7cpmj\",\"text\":\"1．存储客户端的状态\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"f0n71\",\"text\":\"由一个问题引出内容，例如网站的购物系统，用户将购买的商品信息存储到哪里？因为Http协议是无状态的，也就是说每个客户访问服务器端资源时，服务器并不知道该客户端是谁，所以需要会话技术识别客户端的状态。会话技术是帮助服务器 记住客户端状态（区分客户端）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":124,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"b16o9\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"2qhpk\",\"text\":\"2．会话技术\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"5hoqp\",\"text\":\"从打开一个浏览器访问某个站点，到关闭这个浏览器的整个过程，成为一次会话。会话技术就是记录这次会话中客户端的状态与数据的。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":60,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":36,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"4hvf8\",\"text\":\"会话技术分为Cookie和Session：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"d49mp\",\"text\":\"Cookie：数据存储在客户端本地，减少服务器端的存储的压力，安全性不好，客户端 可以清除cookie\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"e6ppu\",\"text\":\"Session：将数据存储到服务器端，安全性相对好，增加服务器的压力\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":34,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"2rohg\",\"text\":\"二、Cookie技术\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"size\":\"5\",\"_root\":\"[object Object]\",\"__ownerid\":\"undefined\",\"__hash\":\"undefined\",\"__altered\":\"false\"},\"textIndent\":1}},{\"key\":\"6uq77\",\"text\":\"Cookie技术是将用户的数据存储到客户端的技术，我们分为两方面学习：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":35,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9qia\",\"text\":\"第一，服务器端怎样将一个Cookie发送到客户端\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"e4tpj\",\"text\":\"第二，服务器端怎样接受客户端携带的Cookie\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"ff6io\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"5d3td\",\"text\":\"1．服务器端向客户端发送一个Cookie\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":20,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"3c9oj\",\"text\":\"1）创建Cookie：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"57jme\",\"text\":\"Cookie cookie = new Cookie(String cookieName,String cookieValue);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":65,\"style\":\"BOLD\"},{\"offset\":0,\"length\":65,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":65,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"1rfmm\",\"text\":\"示例：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"fn82e\",\"text\":\"Cookie cookie = new Cookie(\\\"username\\\"，\\\"zhangsan\\\");\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":50,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"ejvjt\",\"text\":\"  注意：Cookie中不能存储中文\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"7ero5\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"1jihi\",\"text\":\"2）设置Cookie在客户端的持久化时间：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"7nm2\",\"text\":\"cookie.setMaxAge(int seconds); ---时间秒\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"BOLD\"},{\"offset\":0,\"length\":37,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":37,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"4ceuj\",\"text\":\"注意：如果不设置持久化时间，cookie会存储在浏览器的内存中，浏览器关闭 cookie信息销毁（会话级别的cookie），如果设置持久化时间，cookie信息会 被持久化到浏览器的磁盘文件里\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":96,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":37,\"style\":\"BOLD\"},{\"offset\":38,\"length\":43,\"style\":\"BOLD\"},{\"offset\":82,\"length\":14,\"style\":\"BOLD\"},{\"offset\":0,\"length\":37,\"style\":\"COLOR-FF0000\"},{\"offset\":38,\"length\":43,\"style\":\"COLOR-FF0000\"},{\"offset\":82,\"length\":14,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"88t81\",\"text\":\"示例：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"34d58\",\"text\":\"cookie.setMaxAge(10*60);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"39lc9\",\"text\":\"设置cookie信息在浏览器的磁盘文件中存储的时间是10分钟，过期浏览器 自动删除该cookie信息\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":50,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"32jj2\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"95i79\",\"text\":\"3）设置Cookie的携带路径：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"4ocnh\",\"text\":\"cookie.setPath(String path);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":28,\"style\":\"BOLD\"},{\"offset\":0,\"length\":28,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":28,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"1vgec\",\"text\":\"注意：如果不设置携带路径，那么该cookie信息会在访问产生该cookie的 web资源所在的路径都携带cookie信息\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":60,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":38,\"style\":\"COLOR-000000\"},{\"offset\":39,\"length\":21,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3dmes\",\"text\":\"示例：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"bok8f\",\"text\":\"cookie.setPath(\\\"/WEB16\\\");\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9qe94\",\"text\":\"代表访问WEB16应用中的任何资源都携带cookie\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"7l7au\",\"text\":\"cookie.setPath(\\\"/WEB16/cookieServlet\\\");\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"e8hkt\",\"text\":\"代表访问WEB16中的cookieServlet时才携带cookie信息\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"8tbk6\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"4fjbn\",\"text\":\"4）向客户端发送cookie：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"7s7hn\",\"text\":\"response.addCookie(Cookie cookie);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":34,\"style\":\"BOLD\"},{\"offset\":0,\"length\":34,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":34,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"6rssf\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"4nnup\",\"text\":\"5）删除客户端的cookie：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"727nr\",\"text\":\"如果想删除客户端的已经存储的cookie信息，那么就使用同名同路径的持久化时 间为0的cookie进行覆盖即可\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":55,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":28,\"length\":10,\"style\":\"BOLD\"},{\"offset\":39,\"length\":3,\"style\":\"BOLD\"},{\"offset\":28,\"length\":10,\"style\":\"COLOR-FF0000\"},{\"offset\":39,\"length\":3,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"83p30\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"927nv\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"afflh\",\"text\":\"2．服务器端怎么接受客户端携带的Cookie\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"dunet\",\"text\":\"cookie信息是以请求头的方式发送到服务器端的：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"924op\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9mkfo\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"2o7mc\",\"text\":\" \\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"62bj\",\"text\":\"1）通过request获得所有的Cookie：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"e18to\",\"text\":\"Cookie[] cookies = request.getCookies();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"BOLD\"},{\"offset\":0,\"length\":40,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"7u2dj\",\"text\":\"2）遍历Cookie数组，通过Cookie的名称获得我们想要的Cookie\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"hdua\",\"text\":\"for(Cookie cookie : cookies){\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"BOLD\"},{\"offset\":0,\"length\":29,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9186u\",\"text\":\"if(cookie.getName().equal(cookieName)){\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"BOLD\"},{\"offset\":0,\"length\":39,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":39,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"jkdi\",\"text\":\"String cookieValue = cookie.getValue();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"BOLD\"},{\"offset\":0,\"length\":39,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":39,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"f02ka\",\"text\":\"}\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"BOLD\"},{\"offset\":0,\"length\":1,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"aldik\",\"text\":\"}\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"BOLD\"},{\"offset\":0,\"length\":1,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"1l3t8\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"bvt3d\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"aeh6j\",\"text\":\"三、Session技术\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"82jcb\",\"text\":\"Session技术是将数据存储在服务器端的技术，会为每个客户端都创建一块内存空间 存储客户的数据，但客户端需要每次都携带一个标识ID去服务器中寻找属于自己的内 存空间。所以说Session的实现是基于Cookie，Session需要借助于Cookie存储客 户的唯一性标识JSESSIONID\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":146,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"a93pk\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3nqg7\",\"text\":\"在Session这我们需要学习如下三个问题：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"d3mtp\",\"text\":\"怎样获得属于本客户端的session对象（内存区域）？\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"4ashl\",\"text\":\"怎样向session中存取数据（session也是一个域对象）？\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":32,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"40nmp\",\"text\":\"session对象的生命周期？\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"801d5\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"d8dgg\",\"text\":\"1．获得Session对象\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2ktm4\",\"text\":\"HttpSession session = request.getSession();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"BOLD\"},{\"offset\":0,\"length\":43,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9mjuu\",\"text\":\"此方法会获得专属于当前会话的Session对象，如果服务器端没有该会话的Session 对象会创建一个新的Session返回，如果已经有了属于该会话的Session直接将已有 的Session返回（实质就是根据JSESSIONID判断该客户端是否在服务器上已经存在 session了）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":142,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"1o8ro\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3ueau\",\"text\":\"2．怎样向session中存取数据（session也是一个域对象）\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"dg3kc\",\"text\":\"Session也是存储数据的区域对象，所以session对象也具有如下三个方法：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"akaf1\",\"text\":\"session.setAttribute(String name,Object obj);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"ck4tv\",\"text\":\"session.getAttribute(String name);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":34,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"92raa\",\"text\":\"session.removeAttribute(String name);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3pp5r\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"55ii9\",\"text\":\"3．Session对象的生命周期（面试题/笔试题）\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"didhm\",\"text\":\"创建：第一次执行request.getSession()时创建\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"5312r\",\"text\":\"销毁：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3uigs\",\"text\":\"1）服务器（非正常）关闭时\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"enavv\",\"text\":\"2）session过期/失效（默认30分钟）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"bnhce\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"2i38u\",\"text\":\"问题：时间的起算点 从何时开始计算30分钟？\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"8hulv\",\"text\":\"从不操作服务器端的资源开始计时\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"6pibf\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"ah17b\",\"text\":\"可以在工程的web.xml中进行配置\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"eicmn\",\"text\":\"<session-config>\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"dolt0\",\"text\":\" <session-timeout>30</session-timeout>\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"bbejk\",\"text\":\"</session-config>\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"fhti2\",\"text\":\"3）手动销毁session\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"b3u3n\",\"text\":\"session.invalidate();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"6prot\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"6fl0o\",\"text\":\"作用范围：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"6csj5\",\"text\":\"默认在一次会话中，也就是说在，一次会话中任何资源公用一个session对象\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"1sqom\",\"text\":\"       面试题：浏览器关闭，session就销毁了？ 不对\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":32,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"4tcsg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"am83u\",\"text\":\"总结：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"biqbd\",\"text\":\"重点：图\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"bfltr\",\"text\":\"会话技术：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"doefm\",\"text\":\"Cookie技术：存到客户端\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9395o\",\"text\":\"发送cookie\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"cfhfg\",\"text\":\"Cookie cookie = new Cookie(name,value)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"e58tp\",\"text\":\"cookie.setMaxAge(秒)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":19,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"bmvud\",\"text\":\"cookie.setPath()\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"bvf76\",\"text\":\"response.addCookie(cookie)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"49dtu\",\"text\":\"获得cookie\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"d0fv6\",\"text\":\"Cookie[] cookies = request.getCookies();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"d4k56\",\"text\":\"cookie.getName();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"94bfr\",\"text\":\"cookie.getValue();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"fdje7\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"7j6ja\",\"text\":\"Session技术：存到服务器端 借助cookie存储JSESSIONID\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"eo5qa\",\"text\":\"HttpSession session = request.getSession();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"7sd44\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"fhm75\",\"text\":\"setAttribute(name,value);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"eeqh5\",\"text\":\"getAttribute(name);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":19,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"eb1po\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"ajoq\",\"text\":\"session生命周期\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"du38g\",\"text\":\"创建：第一次指定request.getSession();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"6m9af\",\"text\":\"销毁：服务器关闭、session失效/过期、手动session.invalidate();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"8q83r\",\"text\":\"session作用范围：默认一会话中\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"8i7ss\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"size\":\"0\",\"_root\":\"undefined\",\"__ownerid\":\"undefined\",\"__hash\":\"undefined\",\"__altered\":\"false\"},\"textIndent\":1}},{\"key\":\"5kglo\",\"text\":\"三、request技术\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"FONTSIZE-40\"},{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"size\":\"0\",\"_root\":\"undefined\",\"__ownerid\":\"undefined\",\"__hash\":\"undefined\",\"__altered\":\"false\"},\"textIndent\":1}},{\"key\":\"c84tu\",\"text\":\"(1)request是一个域对象\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"ck2lp\",\"text\":\"request对象也是一个存储数据的区域对象，所以也具有如下方法：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"7p726\",\"text\":\"setAttribute(String name, Object o)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":35,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"e5urj\",\"text\":\"getAttribute(String name)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"eepuc\",\"text\":\"removeAttribute(String name)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":28,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"efiah\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"ernrf\",\"text\":\"注意：request域的作用范围：一次请求中\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"hp4c\",\"text\":\"(2)request完成请求转发\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"8iu2b\",\"text\":\"获得请求转发器----path是转发的地址\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"f0tr3\",\"text\":\"RequestDispatcher getRequestDispatcher(String path)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"fuf3p\",\"text\":\"通过转发器对象转发\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"1d2q3\",\"text\":\"requestDispathcer.forward(ServletRequest request, ServletResponse response)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":75,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"ed0n2\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"3nfk7\",\"text\":\" 注意：ServletContext域与Request域的生命周期比较？\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":35,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"4st2m\",\"text\":\" ServletContext：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":15,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"d4lnt\",\"text\":\" 创建：服务器启动\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":8,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"aq60r\",\"text\":\" 销毁：服务器关闭\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":8,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"4ms9k\",\"text\":\" 域的作用范围：整个web应用\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":14,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"eqh8c\",\"text\":\" request：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":8,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"477p9\",\"text\":\" 创建：访问时创建request\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":15,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"d1qkk\",\"text\":\" 销毁：响应结束request销毁\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":16,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"fgbdo\",\"text\":\" 域的作用范围：一次请求中\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":12,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"bo2ti\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"4prv6\",\"text\":\" 注意：转发与重定向的区别？\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":13,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"4jqc4\",\"text\":\" 1）重定向两次请求，转发一次请求\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":16,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"74dle\",\"text\":\" 2）重定向地址栏的地址变化，转发地址不变\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":20,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"bpto7\",\"text\":\" 3）重新定向可以访问外部网站 转发只能访问内部资源\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":14,\"style\":\"CODE\"},{\"offset\":16,\"length\":10,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"eaq7p\",\"text\":\" 4）转发的性能要优于重定向\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":13,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"1oret\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2n5i5\",\"text\":\"   四、ServletContext\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":19,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":19,\"style\":\"FONTSIZE-36\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"eqs3n\",\"text\":\"ServletContext代表是一个web应用的环境（上下文）对象，ServletContext对象 内部封装是该web应用的信息，ServletContext对象一个web应用只有一个\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":94,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9as61\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"6aa27\",\"text\":\"问题：一个web应用有几个servlet对象？----多个\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"cjqua\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"2ieh5\",\"text\":\"ServletContext对象的生命周期？\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"2vaga\",\"text\":\"创建：该web应用被加载（服务器启动或发布web应用（前提，服务器启动状 态））\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"eanv8\",\"text\":\"销毁：web应用被卸载（服务器关闭，移除该web应用）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"2hqg\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"5utcb\",\"text\":\"1．怎样获得ServletContext对象\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"90o58\",\"text\":\"1）ServletContext servletContext = config.getServletContext();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":61,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"7kep5\",\"text\":\"2）ServletContext servletContext = this.getServletContext();\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":59,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":59,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"fvkb8\",\"text\":\"ServletContext域对象的作用范围：整个web应（所有的web资源都可以随意向 servletcontext域中存取数据，数据可以共享）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":44,\"style\":\"COLOR-FF0000\"},{\"offset\":45,\"length\":28,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":73,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"e3d11\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"75l88\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"amk6j\",\"text\":\"域对象的通用的方法：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"fgjq5\",\"text\":\"setAtrribute(String name,Object obj);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"5pqll\",\"text\":\"getAttribute(String name);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"2l70f\",\"text\":\"removeAttribute(String name);\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"des9g\",\"text\":\"     \\u0014W��y2\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"cvh22\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"i6gg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"d346o\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2m9vk\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"file:///C:/Users/11650/AppData/Local/Temp/msohtmlclip1/01/clip_image002.png\"}}}}', '<p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> </span></p><h1 style=\"text-indent:2em;\"><span style=\"line-height:1.75\">一、会话技术简介</span></h1><h3><span style=\"line-height:1.75\">1．存储客户端的状态</span></h3><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">由一个问题引出内容，例如网站的购物系统，用户将购买的商品信息存储到哪里？因为Http协议是无状态的，也就是说每个客户访问服务器端资源时，服务器并不知道该客户端是谁，所以需要会话技术识别客户端的状态。会话技术是帮助服务器 记住客户端状态（区分客户端）</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><h3><span style=\"line-height:1.75\">2．会话技术</span></h3><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"><span style=\"color:#ff0000\">从打开一个浏览器访问某个站点，到关闭这个浏览器的整个过程，成为一次会话。</span>会话技术就是记录这次会话中客户端的状态与数据的。</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">会话技术分为Cookie和Session：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Cookie：数据存储在客户端本地，减少服务器端的存储的压力，安全性不好，客户端 可以清除cookie</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Session：将数据存储到服务器端，安全性相对好，增加服务器的压力</span></p><h1 style=\"text-indent:2em;\" size=\"5\" _root=\"[object Object]\" __ownerid=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"line-height:1.75\">二、Cookie技术</span></h1><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Cookie技术是将用户的数据存储到客户端的技术，我们分为两方面学习：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">第一，服务器端怎样将一个Cookie发送到客户端</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">第二，服务器端怎样接受客户端携带的Cookie</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><h3><span style=\"line-height:1.75\">1．服务器端向客户端发送一个Cookie</span></h3><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">1）创建Cookie：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">Cookie cookie = new Cookie(String cookieName,String cookieValue);</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">示例：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Cookie cookie = new Cookie(&quot;username&quot;，&quot;zhangsan&quot;);</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">  注意：Cookie中不能存储中文</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">2）设置Cookie在客户端的持久化时间：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">cookie.setMaxAge(int seconds); ---时间秒</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"><strong><span style=\"color:#ff0000\">注意：如果不设置持久化时间，cookie会存储在浏览器的内存中，浏览器关闭</span></strong> <strong><span style=\"color:#ff0000\">cookie信息销毁（会话级别的cookie），如果设置持久化时间，cookie信息会</span></strong> <strong><span style=\"color:#ff0000\">被持久化到浏览器的磁盘文件里</span></strong></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">示例：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">cookie.setMaxAge(10*60);</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">设置cookie信息在浏览器的磁盘文件中存储的时间是10分钟，过期浏览器 自动删除该cookie信息</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">3）设置Cookie的携带路径：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">cookie.setPath(String path);</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"><span style=\"color:#000000\">注意：如果不设置携带路径，那么该cookie信息会在访问产生该cookie的</span> <span style=\"color:#000000\">web资源所在的路径都携带cookie信息</span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">示例：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">cookie.setPath(&quot;/WEB16&quot;);</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">代表访问WEB16应用中的任何资源都携带cookie</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">cookie.setPath(&quot;/WEB16/cookieServlet&quot;);</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">代表访问WEB16中的cookieServlet时才携带cookie信息</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">4）向客户端发送cookie：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">response.addCookie(Cookie cookie);</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">5）删除客户端的cookie：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">如果想删除客户端的已经存储的cookie信息，那么就使用<strong><span style=\"color:#ff0000\">同名同路径的持久化时</span></strong> <strong><span style=\"color:#ff0000\">间为0</span></strong>的cookie进行覆盖即可</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><h3><span style=\"line-height:1.75\">2．服务器端怎么接受客户端携带的Cookie</span></h3><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">cookie信息是以请求头的方式发送到服务器端的：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" src=\"file:///C:/Users/11650/AppData/Local/Temp/msohtmlclip1/01/clip_image002.png\"/></div><p><span style=\"line-height:1.75\"> <br/> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">1）通过request获得所有的Cookie：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">Cookie[] cookies = request.getCookies();</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">2）遍历Cookie数组，通过Cookie的名称获得我们想要的Cookie</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">for(Cookie cookie : cookies){</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">if(cookie.getName().equal(cookieName)){</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">String cookieValue = cookie.getValue();</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">}</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">}</span></span></strong></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><h1 style=\"text-indent:2em;\"><span style=\"line-height:1.75\">三、Session技术</span></h1><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Session技术是将数据存储在服务器端的技术，会为每个客户端都创建一块内存空间 存储客户的数据，但客户端需要每次都携带一个标识ID去服务器中寻找属于自己的内 存空间。所以说Session的实现是基于Cookie，Session需要借助于Cookie存储客 户的唯一性标识JSESSIONID</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">在Session这我们需要学习如下三个问题：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">怎样获得属于本客户端的session对象（内存区域）？</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">怎样向session中存取数据（session也是一个域对象）？</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">session对象的生命周期？</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><h3><span style=\"line-height:1.75\">1．获得Session对象</span></h3><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">HttpSession session = request.getSession();</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">此方法会获得专属于当前会话的Session对象，如果服务器端没有该会话的Session 对象会创建一个新的Session返回，如果已经有了属于该会话的Session直接将已有 的Session返回（实质就是根据JSESSIONID判断该客户端是否在服务器上已经存在 session了）</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><h3><span style=\"line-height:1.75\">2．怎样向session中存取数据（session也是一个域对象）</span></h3><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Session也是存储数据的区域对象，所以session对象也具有如下三个方法：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">session.setAttribute(String name,Object obj);</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">session.getAttribute(String name);</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">session.removeAttribute(String name);</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><h3><span style=\"line-height:1.75\">3．Session对象的生命周期（面试题/笔试题）</span></h3><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">创建：第一次执行request.getSession()时创建</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">销毁：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">1）服务器（非正常）关闭时</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">2）session过期/失效（默认30分钟）</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">问题：时间的起算点 从何时开始计算30分钟？</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">从不操作服务器端的资源开始计时</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">可以在工程的web.xml中进行配置</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">&lt;session-config&gt;</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> &lt;session-timeout&gt;30&lt;/session-timeout&gt;</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">&lt;/session-config&gt;</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">3）手动销毁session</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">session.invalidate();</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">作用范围：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">默认在一次会话中，也就是说在，一次会话中任何资源公用一个session对象</span></p><p><span style=\"line-height:1.75\">       面试题：浏览器关闭，session就销毁了？ 不对</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">总结：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">重点：图</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">会话技术：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Cookie技术：存到客户端</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">发送cookie</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Cookie cookie = new Cookie(name,value)</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">cookie.setMaxAge(秒)</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">cookie.setPath()</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">response.addCookie(cookie)</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">获得cookie</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Cookie[] cookies = request.getCookies();</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">cookie.getName();</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">cookie.getValue();</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">Session技术：存到服务器端 借助cookie存储JSESSIONID</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">HttpSession session = request.getSession();</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">setAttribute(name,value);</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">getAttribute(name);</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">session生命周期</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">创建：第一次指定request.getSession();</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">销毁：服务器关闭、session失效/过期、手动session.invalidate();</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">session作用范围：默认一会话中</span></p><p style=\"text-indent:2em;\" size=\"0\" _root=\"undefined\" __ownerid=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"line-height:1.75\"> </span></p><h3 style=\"text-indent:2em;\" size=\"0\" _root=\"undefined\" __ownerid=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"font-size:40px\"><span style=\"line-height:1.75\">三、request技术</span></span></h3><p class=\"MsoNormal\"><span style=\"line-height:1.75\">(1)request是一个域对象</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">request对象也是一个存储数据的区域对象，所以也具有如下方法：</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">setAttribute(String name, Object o)</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">getAttribute(String name)</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">removeAttribute(String name)</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">注意：request域的作用范围：一次请求中</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">(2)request完成请求转发</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">获得请求转发器----path是转发的地址</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">RequestDispatcher getRequestDispatcher(String path)</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">通过转发器对象转发</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">requestDispathcer.forward(ServletRequest request, ServletResponse response)</span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>注意：ServletContext域与Request域的生命周期比较？</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>ServletContext：</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>创建：服务器启动</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>销毁：服务器关闭</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>域的作用范围：整个web应用</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>request：</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>创建：访问时创建request</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>销毁：响应结束request销毁</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>域的作用范围：一次请求中</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>注意：转发与重定向的区别？</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>1）重定向两次请求，转发一次请求</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>2）重定向地址栏的地址变化，转发地址不变</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>3）重新定向可以访问外部网站</code> <code>转发只能访问内部资源</code></span></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> <code>4）转发的性能要优于重定向</code></span></p><p></p><p><span style=\"line-height:1.75\"><span style=\"font-size:36px\">   四、ServletContext</span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">ServletContext代表是一个web应用的环境（上下文）对象，ServletContext对象 内部封装是该web应用的信息，ServletContext对象一个web应用只有一个</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">问题：一个web应用有几个servlet对象？----多个</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">ServletContext对象的生命周期？</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">创建：该web应用被加载（服务器启动或发布web应用（前提，服务器启动状 态））</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">销毁：web应用被卸载（服务器关闭，移除该web应用）</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><h3><span style=\"line-height:1.75\">1．怎样获得ServletContext对象</span></h3><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">1）ServletContext servletContext = config.getServletContext();</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">2）ServletContext servletContext = this.getServletContext();</span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"><span style=\"color:#ff0000\">ServletContext域对象的作用范围：整个web应（所有的web资源都可以随意向</span> <span style=\"color:#ff0000\">servletcontext域中存取数据，数据可以共享）</span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">域对象的通用的方法：</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">setAtrribute(String name,Object obj);</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">getAttribute(String name);</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\">removeAttribute(String name);</span></p><p><span style=\"line-height:1.75\">     W��y2</span></p><p></p><p></p><p></p><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"> </span></p>', 19, 1, 0, '2019-07-04 00:00:00', NULL);
INSERT INTO `article` VALUES (154, '201710803017', '模块化', 1, 14, '理解模块化首先引入三个概念：暴露，引入，依赖暴露：模块内部的内容是私有的，外部无法直接访问，但是你想要使用这个模块的一些方法或者对象呢？（要是完全的无法访问，那这个模块写来干嘛？），那就需要用到暴露的语法了。比如下面这个例子：//这个js文', '模块化 es6', 'http://img.pzhuweb.cn/2017108030171562665032120.png', '{\"blocks\":[{\"key\":\"24jn\",\"text\":\"理解模块化\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"85js1\",\"text\":\"首先引入三个概念：暴露，引入，依赖\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"fr6mh\",\"text\":\"暴露：模块内部的内容是私有的，外部无法直接访问，但是你想要使用这个模块的一些方法或者对象呢？（要是完全的无法访问，那这个模块写来干嘛？），那就需要用到暴露的语法了。比如下面这个例子：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":91,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"e8g55\",\"text\":\"//这个js文件里面是一个立即执行函数，外部无法直接访问\\n(function (window) {\\n let message = \'module1\';\\n function foo() {\\n console.log(\\\"foo() \\\" + message)\\n    };\\n //下面是暴露，将{foo}对象暴露给全局作用域的module\\n //外部就可以通过module.foo()调用这个模块的foo()方法\\n window.module = {foo};\\n})(window)\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":28,\"style\":\"COLOR-6A9955\"},{\"offset\":135,\"length\":31,\"style\":\"COLOR-6A9955\"},{\"offset\":168,\"length\":35,\"style\":\"COLOR-6A9955\"},{\"offset\":0,\"length\":238,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":29,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":38,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":46,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":63,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":74,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":89,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":102,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":106,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":116,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":125,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":127,\"length\":6,\"style\":\"COLOR-D4D4D4\"},{\"offset\":211,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":219,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":225,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":228,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":237,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":30,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":51,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":77,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":40,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":55,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":118,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":205,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":212,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":222,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":231,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":65,\"length\":9,\"style\":\"COLOR-CE9178\"},{\"offset\":107,\"length\":8,\"style\":\"COLOR-CE9178\"},{\"offset\":86,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":103,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":95,\"length\":7,\"style\":\"COLOR-4EC9B0\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"31ftu\",\"text\":\"                    \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":20,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"6hpcf\",\"text\":\"引入：当一个模块的内部需要用到另外一个模块暴露的方法或对象，这时就需要将另外一个模块引入。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"af4o3\",\"text\":\"依赖：A模块的内部实现需要用到B模块暴露的方法或对象，就称之为：A依赖于B\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"fbamq\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"70j1e\",\"text\":\"1.什么是模块?\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"FONTSIZE-18pt\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"17phb\",\"text\":\"将一个复杂的程序依据一定的规则(规范)封装成几个块(文件), 并进行组合在一起\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"24o2s\",\"text\":\"块的内部数据与实现是私有的, 只是向外部暴露一些接口(方法)与外部其它模块通信\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"2ha28\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"2qab0\",\"text\":\"2.现代模块化的基石\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"FONTSIZE-18pt\"},{\"offset\":0,\"length\":10,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"f2jrt\",\"text\":\"IIFE模式增强 : 引入依赖\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"BOLD\"},{\"offset\":0,\"length\":15,\"style\":\"FONTSIZE-11.5pt\"},{\"offset\":0,\"length\":15,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\"}},{\"key\":\"bkv7o\",\"text\":\"//module1.js\\n(function (window,$) {\\n let message = \'module1\';\\n //打印内部数据的方法\\n function foo() {\\n console.log(\\\"foo() \\\" + message);\\n    }\\n //使用jquery对象改变背景颜色\\n function changeBgc() {\\n $(\'body\').css(\'background-color\', \'red\');\\n    }\\n //暴露行为\\n window.module = {foo,changeBgc};\\n})(window,jQuery)\\n<!-- test.html的body部分 -->\\n<!-- 引入要有一定的顺序module1.js依赖于jquery，所以要在jquery之后 -->\\n<script src=\\\"jquery-3.4.0.min.js\\\"></script>\\n<script src=\\\"module1.js\\\"></script>\\n<script>\\n  module.foo();\\n  module.changeBgc();\\n</script>\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":94,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":453,\"length\":6,\"style\":\"COLOR-4EC9B0\"},{\"offset\":469,\"length\":6,\"style\":\"COLOR-4EC9B0\"},{\"offset\":51,\"length\":9,\"style\":\"COLOR-CE9178\"},{\"offset\":106,\"length\":8,\"style\":\"COLOR-CE9178\"},{\"offset\":180,\"length\":6,\"style\":\"COLOR-CE9178\"},{\"offset\":192,\"length\":18,\"style\":\"COLOR-CE9178\"},{\"offset\":212,\"length\":5,\"style\":\"COLOR-CE9178\"},{\"offset\":375,\"length\":21,\"style\":\"COLOR-CE9178\"},{\"offset\":419,\"length\":12,\"style\":\"COLOR-CE9178\"},{\"offset\":14,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":37,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":76,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":154,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":364,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":399,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":408,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":434,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":443,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":491,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":85,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":102,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":163,\"length\":9,\"style\":\"COLOR-DCDCAA\"},{\"offset\":178,\"length\":1,\"style\":\"COLOR-DCDCAA\"},{\"offset\":188,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":460,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":476,\"length\":9,\"style\":\"COLOR-DCDCAA\"},{\"offset\":0,\"length\":498,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":363,\"length\":1,\"style\":\"COLOR-808080\"},{\"offset\":396,\"length\":3,\"style\":\"COLOR-808080\"},{\"offset\":405,\"length\":1,\"style\":\"COLOR-808080\"},{\"offset\":407,\"length\":1,\"style\":\"COLOR-808080\"},{\"offset\":431,\"length\":3,\"style\":\"COLOR-808080\"},{\"offset\":440,\"length\":1,\"style\":\"COLOR-808080\"},{\"offset\":442,\"length\":1,\"style\":\"COLOR-808080\"},{\"offset\":449,\"length\":1,\"style\":\"COLOR-808080\"},{\"offset\":489,\"length\":2,\"style\":\"COLOR-808080\"},{\"offset\":497,\"length\":1,\"style\":\"COLOR-808080\"},{\"offset\":24,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":31,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":41,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":117,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":235,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":242,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":252,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":256,\"length\":9,\"style\":\"COLOR-9CDCFE\"},{\"offset\":271,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":278,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":371,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":415,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":0,\"length\":12,\"style\":\"COLOR-6A9955\"},{\"offset\":63,\"length\":11,\"style\":\"COLOR-6A9955\"},{\"offset\":134,\"length\":18,\"style\":\"COLOR-6A9955\"},{\"offset\":227,\"length\":6,\"style\":\"COLOR-6A9955\"},{\"offset\":286,\"length\":25,\"style\":\"COLOR-6A9955\"},{\"offset\":312,\"length\":50,\"style\":\"COLOR-6A9955\"},{\"offset\":13,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":22,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":30,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":32,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":49,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":60,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":88,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":101,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":105,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":115,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":124,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":127,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":172,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":179,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":186,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":191,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":210,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":217,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":220,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":241,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":249,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":255,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":265,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":268,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":277,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":284,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":374,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":418,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":459,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":463,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":475,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":485,\"length\":3,\"style\":\"COLOR-D4D4D4\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"btrs5\",\"text\":\"3. 模块化的好处\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"FONTSIZE-18pt\"},{\"offset\":0,\"length\":9,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"743nk\",\"text\":\"避免命名冲突(减少命名空间污染)\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"FONTSIZE-11.5pt\"},{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2305t\",\"text\":\"更好的分离, 按需加载\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"FONTSIZE-11.5pt\"},{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6i360\",\"text\":\"更高复用性\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"FONTSIZE-11.5pt\"},{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f1aln\",\"text\":\"高可维护性\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"FONTSIZE-11.5pt\"},{\"offset\":0,\"length\":5,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7saip\",\"text\":\"问题：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-16pt\"},{\"offset\":0,\"length\":3,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":2,\"length\":1,\"style\":\"FONTSIZE-12pt\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"a06mm\",\"text\":\"请求过多: 首先我们要依赖多个模块，那样就会发送多个请求，导致请求过多\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"FONTSIZE-12pt\"},{\"offset\":6,\"length\":29,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":35,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"6ruaf\",\"text\":\"依赖模糊：我们不知道他们的具体依赖关系是什么，也就是说很容易因为不了解他们之间的依赖关系导致加载先后顺序出错。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":55,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":55,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"4sh0q\",\"text\":\"难以维护：以上两种原因就导致了很难维护，很可能出现牵一发而动全身的情况导致项目出现严重的问题。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":47,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":47,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"1ourb\",\"text\":\"模块化固然有多个好处，然而一个页面需要引入多个js文件，就会出现以上这些问题。而这些问题可以通过模块化规范来解决，下面介绍开发中最流行的ES6规范。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":74,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":74,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"atkeb\",\"text\":\"4.ES6模块化\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":8,\"style\":\"FONTSIZE-18.72\"},{\"offset\":0,\"length\":8,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cmp0f\",\"text\":\"ES6模块的设计思想是尽量的静态化，使得编译时就能确认模块的依赖关系。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"8u2uh\",\"text\":\"ES6模块化语法\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"diojl\",\"text\":\" 基本的暴露\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"76jps\",\"text\":\"使用export关键字将模块的部分代码暴露，而未导出的模块在外部是不可访问的，因为任意没有被显示导出的在模块内保持私有。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"76ftr\",\"text\":\"//暴露模块。分别暴露  module1.js\\nexport function foo() {\\n console.log(\'foo() module1\');\\n}\\n\\nexport function bar() {\\n console.log(\'bar() module1\');\\n}\\n\\n//统一暴露  module2.js\\nfunction fun1() {\\n console.log(\\\"fun() module2\\\");\\n}\\n\\nfunction fun2() {\\n console.log(\\\"fun2() module2\\\");\\n}\\n\\nexport {fun1,fun2};\\n\\n//默认暴露 可以暴露任意数据类型，暴露什么数据接收到的就是什么数据\\n//export default value\\nexport default {\\n msg: \'module3\',\\n showMsg(){\\n console.log(this.msg);\\n    },\\n changeMsg(msg){\\n this.msg = msg;\\n    }\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"COLOR-6A9955\"},{\"offset\":140,\"length\":18,\"style\":\"COLOR-6A9955\"},{\"offset\":285,\"length\":34,\"style\":\"COLOR-6A9955\"},{\"offset\":320,\"length\":22,\"style\":\"COLOR-6A9955\"},{\"offset\":24,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":82,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":264,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":343,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":350,\"length\":7,\"style\":\"COLOR-C586C0\"},{\"offset\":31,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":89,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":159,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":211,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":402,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":438,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":40,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":57,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":98,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":115,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":168,\"length\":4,\"style\":\"COLOR-DCDCAA\"},{\"offset\":186,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":220,\"length\":4,\"style\":\"COLOR-DCDCAA\"},{\"offset\":238,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":378,\"length\":7,\"style\":\"COLOR-DCDCAA\"},{\"offset\":398,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":421,\"length\":9,\"style\":\"COLOR-DCDCAA\"},{\"offset\":43,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":56,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":60,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":76,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":79,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":101,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":114,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":118,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":134,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":137,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":172,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":185,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":189,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":205,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":208,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":224,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":237,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":241,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":258,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":261,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":270,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":276,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":281,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":357,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":375,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":385,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":397,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":401,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":406,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":410,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":413,\"length\":6,\"style\":\"COLOR-D4D4D4\"},{\"offset\":430,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":434,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":442,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":447,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":452,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":454,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":460,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":49,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":107,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":178,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":230,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":390,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":61,\"length\":15,\"style\":\"COLOR-CE9178\"},{\"offset\":119,\"length\":15,\"style\":\"COLOR-CE9178\"},{\"offset\":190,\"length\":15,\"style\":\"COLOR-CE9178\"},{\"offset\":242,\"length\":16,\"style\":\"COLOR-CE9178\"},{\"offset\":366,\"length\":9,\"style\":\"COLOR-CE9178\"},{\"offset\":272,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":277,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":361,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":407,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":431,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":443,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":449,\"length\":3,\"style\":\"COLOR-9CDCFE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"54pov\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"g95e\",\"text\":\" 基本的引入\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"afohn\",\"text\":\"只要有暴露的模块，你就可以在其他模块内部使用import关键字来访问已被暴露的功能。Import语句有两个部分，一是需要引入的标识符，二是需要引入的标识符的来源模块。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"68f8e\",\"text\":\"//引入其他模块\\n//语法 import { identifier1, identifier2 } from \\\"路径\\\";\\n// 常规引入\\nimport {foo,bar} from \'./module1\';\\nimport {fun1,fun2} from \'./module2\';\\n//完全引入，当你不想想上面那样引入时，你可以使用下面的方法，将暴露出来的所有接口作为tempmodule的属性\\nimport * as tempmodule from \'./module1\';\\n//默认暴露的引入\\nimport module3 from \'./module3\';\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"COLOR-6A9955\"},{\"offset\":9,\"length\":51,\"style\":\"COLOR-6A9955\"},{\"offset\":61,\"length\":7,\"style\":\"COLOR-6A9955\"},{\"offset\":141,\"length\":56,\"style\":\"COLOR-6A9955\"},{\"offset\":239,\"length\":9,\"style\":\"COLOR-6A9955\"},{\"offset\":69,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":86,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":104,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":123,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":198,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":207,\"length\":2,\"style\":\"COLOR-C586C0\"},{\"offset\":221,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":249,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":264,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":75,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":80,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":84,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":102,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":110,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":116,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":121,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":139,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":237,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":280,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":77,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":81,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":112,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":117,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":210,\"length\":10,\"style\":\"COLOR-9CDCFE\"},{\"offset\":256,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":91,\"length\":11,\"style\":\"COLOR-CE9178\"},{\"offset\":128,\"length\":11,\"style\":\"COLOR-CE9178\"},{\"offset\":226,\"length\":11,\"style\":\"COLOR-CE9178\"},{\"offset\":269,\"length\":11,\"style\":\"COLOR-CE9178\"},{\"offset\":205,\"length\":1,\"style\":\"COLOR-569CD6\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1lkc8\",\"text\":\"注意：这里引入的模块接口表现得就像是使用了const的定义，所以不能在import语句之前使用此标识符（也就是要受暂时性死区限制），更不能对其进行修改。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"5k2j4\",\"text\":\"\\texport与import都有一个重要的限制，那就是它们必须被用在其他语句或表达式的外部\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"34ofb\",\"text\":\"if (flag) {\\n import module3 from \'./module3\';    //  语法错误 \\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"COLOR-C586C0\"},{\"offset\":13,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":28,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":2,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":8,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":44,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":59,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":4,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":20,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":33,\"length\":11,\"style\":\"COLOR-CE9178\"},{\"offset\":49,\"length\":9,\"style\":\"COLOR-6A9955\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4ursu\",\"text\":\"此处的import语句位于if语句内部，这是不被许可的。暴露和导出都不能以任何的方式动态使用。原因就是ES6的设计是静态化，需要在编译时就知道导出了什么，暴露了什么，依赖关系是什么。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}}],\"entityMap\":{}}', '<h1><span style=\"line-height:1.75\">理解模块化</span></h1><p class=\"MsoNormal\"><span style=\"line-height:1.75\">首先引入三个概念：暴露，引入，依赖</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">暴露：模块内部的内容是私有的，外部无法直接访问，但是你想要使用这个模块的一些方法或者对象呢？（要是完全的无法访问，那这个模块写来干嘛？），那就需要用到暴露的语法了。比如下面这个例子：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\"><span style=\"color:#6a9955\">//这个js文件里面是一个立即执行函数，外部无法直接访问</span><br/><span style=\"color:#d4d4d4\">(</span><span style=\"color:#569cd6\">function</span><span style=\"color:#d4d4d4\"> (</span><span style=\"color:#9cdcfe\">window</span><span style=\"color:#d4d4d4\">) {</span><br/> <span style=\"color:#569cd6\">let</span> <span style=\"color:#9cdcfe\">message</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#ce9178\">&#x27;module1&#x27;</span><span style=\"color:#d4d4d4\">;</span><br/> <span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">foo</span><span style=\"color:#d4d4d4\">() {</span><br/> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&quot;foo() &quot;</span> <span style=\"color:#d4d4d4\">+</span> <span style=\"color:#9cdcfe\">message</span><span style=\"color:#d4d4d4\">)</span><br/><span style=\"color:#d4d4d4\">    };</span><br/> <span style=\"color:#6a9955\">//下面是暴露，将{foo}对象暴露给全局作用域的module</span><br/> <span style=\"color:#6a9955\">//外部就可以通过module.foo()调用这个模块的foo()方法</span><br/> <span style=\"color:#9cdcfe\">window</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">module</span> <span style=\"color:#d4d4d4\">= {</span><span style=\"color:#9cdcfe\">foo</span><span style=\"color:#d4d4d4\">};</span><br/><span style=\"color:#d4d4d4\">})(</span><span style=\"color:#9cdcfe\">window</span><span style=\"color:#d4d4d4\">)</span></span></code></pre><p class=\"MsoNormal\"><span style=\"line-height:1.75\">                    </span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">引入：当一个模块的内部需要用到另外一个模块暴露的方法或对象，这时就需要将另外一个模块引入。</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">依赖：A模块的内部实现需要用到B模块暴露的方法或对象，就称之为：A依赖于B</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><h3><span style=\"font-size:18ptpx\"><span style=\"color:#333333\"><span style=\"line-height:1.75\">1.什么是模块?</span></span></span></h3><p class=\"MsoNormal\"><span style=\"line-height:1.75\">将一个复杂的程序依据一定的规则(规范)封装成几个块(文件), 并进行组合在一起</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">块的内部数据与实现是私有的, 只是向外部暴露一些接口(方法)与外部其它模块通信</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p><h3><span style=\"font-size:18ptpx\"><span style=\"color:#333333\"><span style=\"line-height:1.75\">2.现代模块化的基石</span></span></span></h3><p style=\"text-align:left;\" class=\"MsoNormal\" align=\"left\"><strong><span style=\"font-size:11.5ptpx\"><span style=\"color:#333333\"><span style=\"line-height:1.75\">IIFE模式增强 : 引入依赖</span></span></span></strong></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:1.75\"><span style=\"color:#6a9955\">//module1.js</span><br/><span style=\"color:#d4d4d4\">(</span><span style=\"color:#569cd6\">function</span><span style=\"color:#d4d4d4\"> (</span><span style=\"color:#9cdcfe\">window</span><span style=\"color:#d4d4d4\">,</span><span style=\"color:#9cdcfe\">$</span><span style=\"color:#d4d4d4\">) {</span><br/> <span style=\"color:#569cd6\">let</span> <span style=\"color:#9cdcfe\">message</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#ce9178\">&#x27;module1&#x27;</span><span style=\"color:#d4d4d4\">;</span><br/> <span style=\"color:#6a9955\">//打印内部数据的方法</span><br/> <span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">foo</span><span style=\"color:#d4d4d4\">() {</span><br/> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&quot;foo() &quot;</span> <span style=\"color:#d4d4d4\">+</span> <span style=\"color:#9cdcfe\">message</span><span style=\"color:#d4d4d4\">);</span><br/><span style=\"color:#d4d4d4\">    }</span><br/> <span style=\"color:#6a9955\">//使用jquery对象改变背景颜色</span><br/> <span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">changeBgc</span><span style=\"color:#d4d4d4\">() {</span><br/> <span style=\"color:#dcdcaa\">$</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&#x27;body&#x27;</span><span style=\"color:#d4d4d4\">).</span><span style=\"color:#dcdcaa\">css</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&#x27;background-color&#x27;</span><span style=\"color:#d4d4d4\">, </span><span style=\"color:#ce9178\">&#x27;red&#x27;</span><span style=\"color:#d4d4d4\">);</span><br/><span style=\"color:#d4d4d4\">    }</span><br/> <span style=\"color:#6a9955\">//暴露行为</span><br/> <span style=\"color:#9cdcfe\">window</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">module</span> <span style=\"color:#d4d4d4\">= {</span><span style=\"color:#9cdcfe\">foo</span><span style=\"color:#d4d4d4\">,</span><span style=\"color:#9cdcfe\">changeBgc</span><span style=\"color:#d4d4d4\">};</span><br/><span style=\"color:#d4d4d4\">})(</span><span style=\"color:#9cdcfe\">window</span><span style=\"color:#d4d4d4\">,</span><span style=\"color:#9cdcfe\">jQuery</span><span style=\"color:#d4d4d4\">)<br/></span><span style=\"color:#6a9955\">&lt;!-- test.html的body部分 --&gt;</span><br/><span style=\"color:#6a9955\">&lt;!-- 引入要有一定的顺序module1.js依赖于jquery，所以要在jquery之后 --&gt;</span><br/><span style=\"color:#808080\">&lt;</span><span style=\"color:#569cd6\">script</span> <span style=\"color:#9cdcfe\">src</span><span style=\"color:#d4d4d4\">=</span><span style=\"color:#ce9178\">&quot;jquery-3.4.0.min.js&quot;</span><span style=\"color:#808080\">&gt;&lt;/</span><span style=\"color:#569cd6\">script</span><span style=\"color:#808080\">&gt;</span><br/><span style=\"color:#808080\">&lt;</span><span style=\"color:#569cd6\">script</span> <span style=\"color:#9cdcfe\">src</span><span style=\"color:#d4d4d4\">=</span><span style=\"color:#ce9178\">&quot;module1.js&quot;</span><span style=\"color:#808080\">&gt;&lt;/</span><span style=\"color:#569cd6\">script</span><span style=\"color:#808080\">&gt;</span><br/><span style=\"color:#808080\">&lt;</span><span style=\"color:#569cd6\">script</span><span style=\"color:#808080\">&gt;</span><br/>  <span style=\"color:#4ec9b0\">module</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">foo</span><span style=\"color:#d4d4d4\">();</span><br/>  <span style=\"color:#4ec9b0\">module</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">changeBgc</span><span style=\"color:#d4d4d4\">();</span><br/><span style=\"color:#808080\">&lt;/</span><span style=\"color:#569cd6\">script</span><span style=\"color:#808080\">&gt;</span></span></code></pre><h3><span style=\"font-size:18ptpx\"><span style=\"color:#333333\"><span style=\"line-height:1.75\">3. 模块化的好处</span></span></span></h3><ul><li><span style=\"font-size:11.5ptpx\"><span style=\"line-height:1.75\">避免命名冲突(减少命名空间污染)</span></span></li><li><span style=\"font-size:11.5ptpx\"><span style=\"line-height:1.75\">更好的分离, 按需加载</span></span></li><li><span style=\"font-size:11.5ptpx\"><span style=\"line-height:1.75\">更高复用性</span></span></li><li><span style=\"font-size:11.5ptpx\"><span style=\"color:#333333\"><span style=\"line-height:1.75\">高可维护性</span></span></span></li></ul><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"><span style=\"font-size:16ptpx\">问题</span><span style=\"font-size:12ptpx\">：</span></span></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"><span style=\"font-size:12ptpx\">请求过多:</span> <span style=\"font-size:12ptpx\">首先我们要依赖多个模块，那样就会发送多个请求，导致请求过多</span></span></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.75\">依赖模糊：我们不知道他们的具体依赖关系是什么，也就是说很容易因为不了解他们之间的依赖关系导致加载先后顺序出错。</span></span></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.75\">难以维护：以上两种原因就导致了很难维护，很可能出现牵一发而动全身的情况导致项目出现严重的问题。</span></span></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.75\">模块化固然有多个好处，然而一个页面需要引入多个js文件，就会出现以上这些问题。而这些问题可以通过模块化规范来解决，下面介绍开发中最流行的ES6规范。</span></span></p><p><span style=\"color:#333333\"><span style=\"font-size:18.72px\"><span style=\"background-color:#ffffff\">4.ES6模块化</span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\">ES6模块的设计思想是尽量的静态化，使得编译时就能确认模块的依赖关系。</p><p class=\"MsoNormal\">ES6模块化语法</p><p class=\"MsoNormal\"> 基本的暴露</p><p style=\"text-indent:2em;\" class=\"MsoNormal\">使用export关键字将模块的部分代码暴露，而未导出的模块在外部是不可访问的，因为任意没有被显示导出的在模块内保持私有。</p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#6a9955\">//暴露模块。分别暴露  module1.js</span><br/><span style=\"color:#c586c0\">export</span> <span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">foo</span><span style=\"color:#d4d4d4\">() {</span><br/> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&#x27;foo() module1&#x27;</span><span style=\"color:#d4d4d4\">);</span><br/><span style=\"color:#d4d4d4\">}</span><br/><br/><span style=\"color:#c586c0\">export</span> <span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">bar</span><span style=\"color:#d4d4d4\">() {</span><br/> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&#x27;bar() module1&#x27;</span><span style=\"color:#d4d4d4\">);</span><br/><span style=\"color:#d4d4d4\">}<br/><br/></span><span style=\"color:#6a9955\">//统一暴露  module2.js</span><br/><span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">fun1</span><span style=\"color:#d4d4d4\">() {</span><br/> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&quot;fun() module2&quot;</span><span style=\"color:#d4d4d4\">);</span><br/><span style=\"color:#d4d4d4\">}</span><br/><br/><span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">fun2</span><span style=\"color:#d4d4d4\">() {</span><br/> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&quot;fun2() module2&quot;</span><span style=\"color:#d4d4d4\">);</span><br/><span style=\"color:#d4d4d4\">}</span><br/><br/><span style=\"color:#c586c0\">export</span><span style=\"color:#d4d4d4\"> {</span><span style=\"color:#9cdcfe\">fun1</span><span style=\"color:#d4d4d4\">,</span><span style=\"color:#9cdcfe\">fun2</span><span style=\"color:#d4d4d4\">};<br/><br/></span><span style=\"color:#6a9955\">//默认暴露 可以暴露任意数据类型，暴露什么数据接收到的就是什么数据</span><br/><span style=\"color:#6a9955\">//export default value</span><br/><span style=\"color:#c586c0\">export</span> <span style=\"color:#c586c0\">default</span><span style=\"color:#d4d4d4\"> {</span><br/> <span style=\"color:#9cdcfe\">msg:</span> <span style=\"color:#ce9178\">&#x27;module3&#x27;</span><span style=\"color:#d4d4d4\">,</span><br/> <span style=\"color:#dcdcaa\">showMsg</span><span style=\"color:#d4d4d4\">(){</span><br/> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#569cd6\">this</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">msg</span><span style=\"color:#d4d4d4\">);</span><br/><span style=\"color:#d4d4d4\">    },</span><br/> <span style=\"color:#dcdcaa\">changeMsg</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">msg</span><span style=\"color:#d4d4d4\">){</span><br/> <span style=\"color:#569cd6\">this</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">msg</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#9cdcfe\">msg</span><span style=\"color:#d4d4d4\">;</span><br/><span style=\"color:#d4d4d4\">    }</span><br/><span style=\"color:#d4d4d4\">}</span></code></pre><p class=\"MsoNormal\"> </p><p class=\"MsoNormal\"> 基本的引入</p><p style=\"text-indent:2em;\" class=\"MsoNormal\">只要有暴露的模块，你就可以在其他模块内部使用import关键字来访问已被暴露的功能。Import语句有两个部分，一是需要引入的标识符，二是需要引入的标识符的来源模块。</p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#6a9955\">//引入其他模块</span><br/><span style=\"color:#6a9955\">//语法 import { identifier1, identifier2 } from &quot;路径&quot;;</span><br/><span style=\"color:#6a9955\">// 常规引入</span><br/><span style=\"color:#c586c0\">import</span><span style=\"color:#d4d4d4\"> {</span><span style=\"color:#9cdcfe\">foo</span><span style=\"color:#d4d4d4\">,</span><span style=\"color:#9cdcfe\">bar</span><span style=\"color:#d4d4d4\">} </span><span style=\"color:#c586c0\">from</span> <span style=\"color:#ce9178\">&#x27;./module1&#x27;</span><span style=\"color:#d4d4d4\">;</span><br/><span style=\"color:#c586c0\">import</span><span style=\"color:#d4d4d4\"> {</span><span style=\"color:#9cdcfe\">fun1</span><span style=\"color:#d4d4d4\">,</span><span style=\"color:#9cdcfe\">fun2</span><span style=\"color:#d4d4d4\">} </span><span style=\"color:#c586c0\">from</span> <span style=\"color:#ce9178\">&#x27;./module2&#x27;</span><span style=\"color:#d4d4d4\">;</span><br/><span style=\"color:#6a9955\">//完全引入，当你不想想上面那样引入时，你可以使用下面的方法，将暴露出来的所有接口作为tempmodule的属性</span><br/><span style=\"color:#c586c0\">import</span> <span style=\"color:#569cd6\">*</span> <span style=\"color:#c586c0\">as</span> <span style=\"color:#9cdcfe\">tempmodule</span> <span style=\"color:#c586c0\">from</span> <span style=\"color:#ce9178\">&#x27;./module1&#x27;</span><span style=\"color:#d4d4d4\">;</span><br/><span style=\"color:#6a9955\">//默认暴露的引入</span><br/><span style=\"color:#c586c0\">import</span> <span style=\"color:#9cdcfe\">module3</span> <span style=\"color:#c586c0\">from</span> <span style=\"color:#ce9178\">&#x27;./module3&#x27;</span><span style=\"color:#d4d4d4\">;</span></code></pre><p style=\"text-indent:2em;\" class=\"MsoNormal\">注意：这里引入的模块接口表现得就像是使用了const的定义，所以不能在import语句之前使用此标识符（也就是要受暂时性死区限制），更不能对其进行修改。</p><p style=\"text-indent:2em;\">	export与import都有一个重要的限制，那就是它们必须被用在其他语句或表达式的外部</p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#c586c0\">if</span><span style=\"color:#d4d4d4\"> (</span><span style=\"color:#9cdcfe\">flag</span><span style=\"color:#d4d4d4\">) {</span><br/> <span style=\"color:#c586c0\">import</span> <span style=\"color:#9cdcfe\">module3</span> <span style=\"color:#c586c0\">from</span> <span style=\"color:#ce9178\">&#x27;./module3&#x27;</span><span style=\"color:#d4d4d4\">;    </span><span style=\"color:#6a9955\">//  语法错误 </span><br/><span style=\"color:#d4d4d4\">}</span></code></pre><p style=\"text-indent:2em;\"><span style=\"color:#000000\">此处的import语句位于if语句内部，这是不被许可的。暴露和导出都不能以任何的方式动态使用。原因就是</span>ES6的设计是静态化，需要在编译时就知道导出了什么，暴露了什么，依赖关系是什么。</p>', 33, 1, 0, '2019-07-09 00:00:00', NULL);
INSERT INTO `article` VALUES (155, '201710804172', '团队学术报告会-JS异步编程和红黑树', 5, 13, '本报讯（曹林报导）6月8日7：40，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队第四次全体会议。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。 此次会议的主要内容包括对前段时间的工作总结，大三向大二的工作交', '异步编程、红黑树', 'http://img.pzhuweb.cn/2017108041721561796507420.jpg', '{\"blocks\":[{\"key\":\"b2ano\",\"text\":\"本报讯（曹林报导）6月8日7：40，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队第四次全体会议。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":88,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":88,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":88,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"19vrm\",\"text\":\" 此次会议的主要内容包括对前段时间的工作总结，大三向大二的工作交接仪式，兰全祥老师对各年级成员的学习计划进行点评并加以指导，团队成员近期学习汇报。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":73,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1,\"length\":72,\"style\":\"FONTSIZE-14pt\"},{\"offset\":1,\"length\":72,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"arlqn\",\"text\":\"会议开始，2016级软件工程任云宏对近期学习内容—异步编程、2016级计算机科学与技术雷虹对近期学习内容—红黑树概念及运用进行了讲解。最后，兰全祥老师对于报告会的讲解技巧、团队的运行状态和学习的方法进行了讲解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":105,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":105,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":105,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3iv4d\",\"text\":\"通过本次会议，团队成员在学习方法上得到了提高。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":23,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":23,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"ahcqn\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eb4vg\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"3dao9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721561796484789.jpg\",\"name\":\"QQ图片20190629162038.jpg\",\"type\":\"IMAGE\",\"width\":\"1000px\",\"meta\":{\"id\":115,\"title\":\"2017108041721561796484789.jpg\",\"alt\":\"2017108041721561796484789.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" size=\"1\" _root=\"[object Object]\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"font-size:14ptpx\"><span style=\"color:#000000\"><span style=\"line-height:2\">本报讯（曹林报导）6月8日7：40，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队第四次全体会议。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。</span></span></span></p><p class=\"MsoNormal\"><span style=\"line-height:2\"> <span style=\"font-size:14ptpx\"><span style=\"color:#000000\">此次会议的主要内容包括对前段时间的工作总结，大三向大二的工作交接仪式，兰全祥老师对各年级成员的学习计划进行点评并加以指导，团队成员近期学习汇报。</span></span></span></p><p style=\"text-indent:2em;\" size=\"1\" _root=\"[object Object]\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"font-size:14ptpx\"><span style=\"color:#000000\"><span style=\"line-height:2\">会议开始，2016级软件工程任云宏对近期学习内容—异步编程、2016级计算机科学与技术雷虹对近期学习内容—红黑树概念及运用进行了讲解。最后，兰全祥老师对于报告会的讲解技巧、团队的运行状态和学习的方法进行了讲解。</span></span></span></p><p style=\"text-indent:2em;\" size=\"1\" _root=\"[object Object]\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"font-size:14ptpx\"><span style=\"color:#000000\"><span style=\"line-height:2\">通过本次会议，团队成员在学习方法上得到了提高。</span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"115\" title=\"2017108041721561796484789.jpg\" alt=\"2017108041721561796484789.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041721561796484789.jpg\" width=\"1000px\" style=\"width:1000px\"/></div><p></p>', 22, 1, 0, '2019-06-08 00:00:00', NULL);
INSERT INTO `article` VALUES (157, '201710804169', '深入浅出UML类图', 2, 13, '深入浅出UML类图作者：刘伟 ，发布于：2012-11-23，来源：CSDN在UML 2.0的13种图形中，类图是使用频率最高的UML图之一。 类图用于描述系统中所包含的类以及它们之间的相互关系，帮助人们简化对系统的理解，它是系统分析和设计', 'UML类图', 'http://img.pzhuweb.cn/2017108041691561797577096.jpg', '{\"blocks\":[{\"key\":\"2i62d\",\"text\":\"深入浅出UML类图\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"b0be5\",\"text\":\"作者：刘伟 ，发布于：2012-11-23，来源：CSDN\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"egm55\",\"text\":\"在UML 2.0的13种图形中，类图是使用频率最高的UML图之一。 类图用于描述系统中所包含的类以及它们之间的相互关系，帮助人们简化对系统的理解，它是系统分析和设计阶段的重要产物，也是系统编码和测试的重要模型依据。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":107,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"b0pr9\",\"text\":\"1、类及类的分类 2、类的UML图示 详细信息请点击：http://www.uml.org.cn/oobject/201211231.asp\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":70,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":27,\"length\":43,\"key\":0}],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"51f7g\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"4on8s\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"http://www.uml.org.cn/oobject/201211231.asp\",\"target\":\"_blank\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041691561797586287.jpg\",\"name\":\"g.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":116,\"title\":\"2017108041691561797586287.jpg\",\"alt\":\"2017108041691561797586287.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">深入浅出UML类图</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">作者：刘伟 ，发布于：2012-11-23，来源：CSDN</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">在UML 2.0的13种图形中，类图是使用频率最高的UML图之一。 类图用于描述系统中所包含的类以及它们之间的相互关系，帮助人们简化对系统的理解，它是系统分析和设计阶段的重要产物，也是系统编码和测试的重要模型依据。</span></p><p style=\"text-align:left;text-indent:2em;\"><span style=\"line-height:1.75\">1、类及类的分类 2、类的UML图示 详细信息请点击：<a href=\"http://www.uml.org.cn/oobject/201211231.asp\" target=\"_blank\">http://www.uml.org.cn/oobject/201211231.asp</a></span></p><div class=\"media-wrap image-wrap\"><img id=\"116\" title=\"2017108041691561797586287.jpg\" alt=\"2017108041691561797586287.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041691561797586287.jpg\"/></div><p></p>', 4, 1, 0, '2018-09-23 00:00:00', NULL);
INSERT INTO `article` VALUES (158, '201710804169', 'MVC安全登录', 5, 13, '完成了基于MVC的安全登录研究与设计', 'MVC', 'http://img.pzhuweb.cn/2017108041691561798125097.jpg', '{\"blocks\":[{\"key\":\"er5hj\",\"text\":\"完成了基于MVC的安全登录研究与设计\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"COLOR-555555\"},{\"offset\":0,\"length\":18,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":18,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":18,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1ilcv\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"6j10c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041691561798136985.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":117,\"title\":\"2017108041691561798136985.jpg\",\"alt\":\"2017108041691561798136985.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"color:#555555\"><span style=\"font-size:16px\"><span style=\"letter-spacing:1px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">完成了基于MVC的安全登录研究与设计</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"117\" title=\"2017108041691561798136985.jpg\" alt=\"2017108041691561798136985.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041691561798136985.jpg\"/></div><p></p>', 4, 0, 0, '2018-09-24 00:00:00', NULL);
INSERT INTO `article` VALUES (159, '201710804172', 'WEB应用专业团队2018-2019-2学期第二次全体会议', 5, 13, '本报讯（赵修俊报导）4月12日16:00，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队第二次全体会议。WEB指导教师兰全祥、张俊以及WEB应用团队全体成员出席了本次会议。本次会议的主要内容包括4-7周的工作总结、挑战杯及计', '竞赛演讲', 'http://img.pzhuweb.cn/2017108041721561801323119.jpg', '{\"blocks\":[{\"key\":\"141j6\",\"text\":\"本报讯（赵修俊报导）4月12日16:00，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队第二次全体会议。WEB指导教师兰全祥、张俊以及WEB应用团队全体成员出席了本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"BOLD\"},{\"offset\":52,\"length\":1,\"style\":\"BOLD\"},{\"offset\":0,\"length\":94,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"vsbcontent_start\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"d38nq\",\"text\":\"本次会议的主要内容包括4-7周的工作总结、挑战杯及计算机设计大赛等学科竞赛安排、各年级团队成员学习计划指导以及近期参赛作品演讲与指导。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":67,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4iesp\",\"text\":\"会议开始，先由兰老师对近期工作进行了总结，包括蓝桥杯省赛、大学生创新创业项目申报、“挑战杯”大学生课外学术科技作品竞赛、中国大学生计算机设计大赛申报与承办工作。然后，2016级软件工程罗文对团队长跑情况进行了汇报，2016级计算机科学与技术雷虹对团队成员完成学习任务情况进行了总结。最后，参加“挑战杯”以及大学生设计大赛的团队成员对参赛作品进行了讲解和汇报，包括罗文讲解的《基于Node.js的创新团队管理系统的设计与实现》、雷虹讲解的《基于MVC的网站登录模块安全性研究与设计》以及赵修俊讲解的《海洋清洁者》。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":256,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"b4fnq\",\"text\":\"通过本次会议，团队成员更加明确了个人的学习计划，对学科竞赛有了进一步的了解。最后，兰全祥老师对本次会议进行了总结，认为团队成员不仅要在专业学习能力上下功夫，还需要努力提高自身的演讲水平和综合素质能力。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":100,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"vsbcontent_end\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"eeo0m\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d7np7\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"2rk39\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721561801299762.jpg\",\"name\":\"F9F5712CBEB36EE75531CF85C6E_EF1E4F5A_8B60.jpg\",\"type\":\"IMAGE\",\"width\":\"1000px\",\"meta\":{\"id\":120,\"title\":\"2017108041721561801299762.jpg\",\"alt\":\"2017108041721561801299762.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:start;text-indent:2em;\" class=\"vsbcontent_start\"><span style=\"line-height:2\"><strong>本报讯（赵修俊报导）</strong>4月12日16:00，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队<strong>第</strong>二次全体会议。WEB指导教师兰全祥、张俊以及WEB应用团队全体成员出席了本次会议。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">本次会议的主要内容包括4-7周的工作总结、挑战杯及计算机设计大赛等学科竞赛安排、各年级团队成员学习计划指导以及近期参赛作品演讲与指导。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">会议开始，先由兰老师对近期工作进行了总结，包括蓝桥杯省赛、大学生创新创业项目申报、“挑战杯”大学生课外学术科技作品竞赛、中国大学生计算机设计大赛申报与承办工作。然后，2016级软件工程罗文对团队长跑情况进行了汇报，2016级计算机科学与技术雷虹对团队成员完成学习任务情况进行了总结。最后，参加“挑战杯”以及大学生设计大赛的团队成员对参赛作品进行了讲解和汇报，包括罗文讲解的《基于Node.js的创新团队管理系统的设计与实现》、雷虹讲解的《基于MVC的网站登录模块安全性研究与设计》以及赵修俊讲解的《海洋清洁者》。</span></p><p style=\"text-align:start;text-indent:2em;\" class=\"vsbcontent_end\"><span style=\"line-height:2\">通过本次会议，团队成员更加明确了个人的学习计划，对学科竞赛有了进一步的了解。最后，兰全祥老师对本次会议进行了总结，认为团队成员不仅要在专业学习能力上下功夫，还需要努力提高自身的演讲水平和综合素质能力。</span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"120\" title=\"2017108041721561801299762.jpg\" alt=\"2017108041721561801299762.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041721561801299762.jpg\" width=\"1000px\" style=\"width:1000px\"/></div><p></p>', 9, 1, 0, '2019-04-12 00:00:00', NULL);
INSERT INTO `article` VALUES (160, '201710804169', '团队学习指导-论文讲解', 5, 13, '2019年6月26日，在分册7A-2召开了关于论文的讲解，论文分为应用型和技术型。应用型论文结构包括技术了解及介绍、技术难点讲解重点讲解、总结、代码精简和取出重要部分粘贴等。技术型论文结构包括技术的意义（有无价值）、技术解决了什么问题（详细', '论文', 'http://img.pzhuweb.cn/2017108041691561802914244.jpg', '{\"blocks\":[{\"key\":\"4mlra\",\"text\":\"2019年6月26日，在分册7A-2召开了关于论文的讲解，论文分为应用型和技术型。应用型论文结构包括技术了解及介绍、技术难点讲解重点讲解、总结、代码精简和取出重要部分粘贴等。技术型论文结构包括技术的意义（有无价值）、技术解决了什么问题（详细讲解）、此技术的优缺点及运用场景等。小组合作互看论文，讲解。最后对曹林的论文进行指导。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":163,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dbpn9\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"sbin\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041691561802936677.jpg\",\"name\":\"TIM图片20190629180802.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":122,\"title\":\"2017108041691561802936677.jpg\",\"alt\":\"2017108041691561802936677.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"line-height:1.75\">2019年6月26日，在分册7A-2召开了关于论文的讲解，论文分为应用型和技术型。应用型论文结构包括技术了解及介绍、技术难点讲解重点讲解、总结、代码精简和取出重要部分粘贴等。技术型论文结构包括技术的意义（有无价值）、技术解决了什么问题（详细讲解）、此技术的优缺点及运用场景等。小组合作互看论文，讲解。最后对曹林的论文进行指导。</span></p><div class=\"media-wrap image-wrap\"><img id=\"122\" title=\"2017108041691561802936677.jpg\" alt=\"2017108041691561802936677.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041691561802936677.jpg\"/></div><p></p>', 24, 1, 0, '2019-06-27 00:00:00', NULL);
INSERT INTO `article` VALUES (161, '0002250', 'WEB应用专业团队2020年度立项大创项目2项', 5, 13, '从2020年3月20日接学校通知开始，WEB应用专业团队开始为申请2020年度大学生创新创业训练计划项目做准备。经过指导教师和团队成员讨论，决定申报以苟雨晴为组长（成员包含伍涛、曹林、朱守平、杨新宇等）的“基于工程教育认证的培养目标及培养过', '成果', 'http://img.pzhuweb.cn/00022501591840383932.png', '{\"blocks\":[{\"key\":\"ef5p9\",\"text\":\"从2020年3月20日接学校通知开始，WEB应用专业团队开始为申请2020年度大学生创新创业训练计划项目做准备。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":56,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"5ic0p\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"center\",\"textIndent\":1}},{\"key\":\"c0e18\",\"text\":\"经过指导教师和团队成员讨论，决定申报以苟雨晴为组长（成员包含伍涛、曹林、朱守平、杨新宇等）的“基于工程教育认证的培养目标及培养过程管理系统”和以赵泽忠为组长（成员包含徐岸、赵修俊、彭治皓、苗海洋等）的“软件工程专业学生毕业要求达成评价及分析系统”两个项目。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":128,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"etir9\",\"text\":\"经过学院推荐，学校评审，在2020年6月3日教务处下发立项文件，确定“软件工程专业学生毕业要求达成评价及分析系统”为2020年度省级大学生创新训练项目，“基于工程教育认证的培养目标及培养过程管理系统”为2020年度校级大学生创新训练项目。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":119,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"3s3ge\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"center\",\"textIndent\":1}},{\"key\":\"4lppd\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"rich_pages \",\"data-ratio\":\"0.6435845213849287\",\"data-s\":\"300,640\",\"data-src\":\"https://mmbiz.qpic.cn/mmbiz_png/ZrDibf0iabM4bc0yAiavicSQJ8yVtVRFrSKxbaHhFkDlI5oKehia4ctSmRj5MwG4SbUfQ1jicYwTytm3UZOMLA5cicuNg/640?wx_fmt=png\",\"data-type\":\"png\",\"data-w\":\"982\",\"_width\":\"604px\",\"src\":\"https://mmbiz.qpic.cn/mmbiz_png/ZrDibf0iabM4bc0yAiavicSQJ8yVtVRFrSKxbaHhFkDlI5oKehia4ctSmRj5MwG4SbUfQ1jicYwTytm3UZOMLA5cicuNg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\",\"crossorigin\":\"anonymous\",\"data-fail\":\"0\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"e8d4t\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"72c92\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ff6bo\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"9a0eu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2iiq2\",\"text\":\"WEB应用专业团队始终秉承以学生为中心的指导理念，自成立以来每年都积极申报大学生创新创业训练计划项目，团队成员也积极参与项目研究，这种正向的持续发展使得专业团队越来越具有活力，越来越能体现学子的风采。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":100,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/00022501591840429836.png\",\"name\":\"QQ截图20200611095227.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":277,\"title\":\"00022501591840429836.png\",\"alt\":\"00022501591840429836.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/00022501591840429884.png\",\"name\":\"QQ截图20200611095245.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":278,\"title\":\"00022501591840429884.png\",\"alt\":\"00022501591840429884.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:justify;text-indent:2em;\"><span style=\"line-height:1.75\">从2020年3月20日接学校通知开始，WEB应用专业团队开始为申请2020年度大学生创新创业训练计划项目做准备。</span></p><p style=\"text-align:center;text-indent:2em;\"></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"line-height:1.75\">经过指导教师和团队成员讨论，决定申报以苟雨晴为组长（成员包含伍涛、曹林、朱守平、杨新宇等）的“基于工程教育认证的培养目标及培养过程管理系统”和以赵泽忠为组长（成员包含徐岸、赵修俊、彭治皓、苗海洋等）的“软件工程专业学生毕业要求达成评价及分析系统”两个项目。</span></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"line-height:1.75\">经过学院推荐，学校评审，在2020年6月3日教务处下发立项文件，确定“软件工程专业学生毕业要求达成评价及分析系统”为2020年度省级大学生创新训练项目，“基于工程教育认证的培养目标及培养过程管理系统”为2020年度校级大学生创新训练项目。</span></p><p style=\"text-align:center;text-indent:2em;\"></p><p class=\"rich_pages \" data-ratio=\"0.6435845213849287\" data-s=\"300,640\" data-src=\"https://mmbiz.qpic.cn/mmbiz_png/ZrDibf0iabM4bc0yAiavicSQJ8yVtVRFrSKxbaHhFkDlI5oKehia4ctSmRj5MwG4SbUfQ1jicYwTytm3UZOMLA5cicuNg/640?wx_fmt=png\" data-type=\"png\" data-w=\"982\" _width=\"604px\" src=\"https://mmbiz.qpic.cn/mmbiz_png/ZrDibf0iabM4bc0yAiavicSQJ8yVtVRFrSKxbaHhFkDlI5oKehia4ctSmRj5MwG4SbUfQ1jicYwTytm3UZOMLA5cicuNg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1\" crossorigin=\"anonymous\" data-fail=\"0\"></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"277\" title=\"00022501591840429836.png\" alt=\"00022501591840429836.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/00022501591840429836.png\"/></div><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"278\" title=\"00022501591840429884.png\" alt=\"00022501591840429884.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/00022501591840429884.png\"/></div><p></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"line-height:1.75\">WEB应用专业团队始终秉承以学生为中心的指导理念，自成立以来每年都积极申报大学生创新创业训练计划项目，团队成员也积极参与项目研究，这种正向的持续发展使得专业团队越来越具有活力，越来越能体现学子的风采。</span></p>', 41, 1, 1, '2020-06-11 00:00:00', NULL);
INSERT INTO `article` VALUES (162, '201610804094', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (163, '201510803023', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (164, '201810804091', '创新实验室后期安排', 5, 13, '本报讯（雷凌报道）7月1日19:40，WEB应用专业团队在分析测试中心7A-2召开了WEB应用专业团队创新实验室后期安排会议，WEB指导老师兰全祥以及WEB应用团队全体成员出席了本次会议。本次会议的主要内容包括咨询团队成员放假时间并做本学期', '新闻报道', 'http://img.pzhuweb.cn/2018108040911562041235651.jpg', '{\"blocks\":[{\"key\":\"bdu7b\",\"text\":\"本报讯（雷凌报道）7月1日19:40，WEB应用专业团队在分析测试中心7A-2召开了WEB应用专业团队创新实验室后期安排会议，WEB指导老师兰全祥以及WEB应用团队全体成员出席了本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":94,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"876mo\",\"text\":\"本次会议的主要内容包括咨询团队成员放假时间并做本学期放假前WEB团队的有关安排、团队成员提出本周及下周WEB团队学术报告的重要内容、WEB应用团队官网的成员信息完善、讨论并修改团队学习任务的各项指标、总结本学年团队成员的任务和目标并提出下一学年的学习目标和任务、WEB团队的大创项目的\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":142,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"m2o4\",\"text\":\"会议开始，首先由兰全祥老师询问WEB团队在校成员的离校时间，根据团队成员不同的离校时间安排本周和下周的WEB团队学术报告会议的相关安排。其次，由每一个做学术报告的成员提出本周及下周团队学术报告中的重点和难点，包括构造函数，session、cookie、jsp中的response、rquest和jsp中的四大作用域，js变量作用域，js执行机制，js的垃圾回收机制，RGB、HSL，闭包，js立即执行函数，多线程，绘图，反射，文件的读取，js中的this指针，js高阶函数，java的多态，二进制，指针，结构体，二叉树，图、最小生成树，查找算法，动态规划。然后，兰全祥老师要求团队成员在WEB团队官网上完善自己的个人信息，并根据团队实际情况讨论并修改团队学习任务的各项指标和团队考核的各项指标。最后兰全祥老师总结团队成员在本学年应该完成的学习任务和学习成果，并提出相关要求。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":387,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"36cnh\",\"text\":\"通过本次会议，团队成员更加明确个人的学习计划，对团队的培养要求和培养计划有了更加深刻的了解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":46,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"1ne2e\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"7s67a\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"126\",\"alt\":\"2018108040911562041483760.jpg\",\"title\":\"2018108040911562041483760.jpg\"},\"url\":\"http://img.pzhuweb.cn/2018108040911562041483760.jpg\"}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:2\">本报讯（雷凌报道）7月1日19:40，WEB应用专业团队在分析测试中心7A-2召开了WEB应用专业团队创新实验室后期安排会议，WEB指导老师兰全祥以及WEB应用团队全体成员出席了本次会议。</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:2\">本次会议的主要内容包括咨询团队成员放假时间并做本学期放假前WEB团队的有关安排、团队成员提出本周及下周WEB团队学术报告的重要内容、WEB应用团队官网的成员信息完善、讨论并修改团队学习任务的各项指标、总结本学年团队成员的任务和目标并提出下一学年的学习目标和任务、WEB团队的大创项目的</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:2\">会议开始，首先由兰全祥老师询问WEB团队在校成员的离校时间，根据团队成员不同的离校时间安排本周和下周的WEB团队学术报告会议的相关安排。其次，由每一个做学术报告的成员提出本周及下周团队学术报告中的重点和难点，包括构造函数，session、cookie、jsp中的response、rquest和jsp中的四大作用域，js变量作用域，js执行机制，js的垃圾回收机制，RGB、HSL，闭包，js立即执行函数，多线程，绘图，反射，文件的读取，js中的this指针，js高阶函数，java的多态，二进制，指针，结构体，二叉树，图、最小生成树，查找算法，动态规划。然后，兰全祥老师要求团队成员在WEB团队官网上完善自己的个人信息，并根据团队实际情况讨论并修改团队学习任务的各项指标和团队考核的各项指标。最后兰全祥老师总结团队成员在本学年应该完成的学习任务和学习成果，并提出相关要求。</span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:2\">通过本次会议，团队成员更加明确个人的学习计划，对团队的培养要求和培养计划有了更加深刻的了解。</span></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"126\" alt=\"2018108040911562041483760.jpg\" title=\"2018108040911562041483760.jpg\" src=\"http://img.pzhuweb.cn/2018108040911562041483760.jpg\"/></div><p></p>', 14, 1, 0, '2019-07-02 00:00:00', NULL);
INSERT INTO `article` VALUES (165, '201710804172', 'JavaScript执行机制实例详解', 1, 1, '想要理解JavaScript的运行机制，需要分别深刻理解几个点：JavaScript的单线程机制、任务队列（同步任务和异步任务）、事件和回调函数、定时器、Event Loop（事件循环）。JavaScript的单线程机制JavaScript', 'js执行机制', 'http://img.pzhuweb.cn/2017108041721562033097821.jpg', '{\"blocks\":[{\"key\":\"a7plc\",\"text\":\"想要理解JavaScript的运行机制，需要分别深刻理解几个点：JavaScript的单线程机制、任务队列（同步任务和异步任务）、事件和回调函数、定时器、Event Loop（事件循环）。\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":94,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"markdown_views\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"bnis3\",\"text\":\"JavaScript的单线程机制\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"6qpo2\",\"text\":\"JavaScript的一个语言特性（也是这门语言的核心）就是单线程。单线程简单地说就是同一时间只能做一件事，当有多个任务时，只能按照一个顺序一个完成了再执行下一个。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":82,\"style\":\"LINEHEIGHT-2\"},{\"offset\":30,\"length\":3,\"style\":\"BOLD\"},{\"offset\":43,\"length\":10,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"mkhr\",\"text\":\"JavaScript的单线程与它的语言用途是有关的。作为一门浏览器脚本语言，JavaScript的主要用途是完成用户交互、操作DOM。这就决定了它只能是单线程，否则会导致复杂的同步问题。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":93,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"ebblf\",\"text\":\"设想JavaScript同时有两个线程，一个线程需要在某个DOM节点上添加内容，而另一个线程的操作是删除了这个节点，那么浏览器应该以谁为准呢？\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":71,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"d8r7s\",\"text\":\"所以为了避免复杂性，JavaScript从诞生起就是单线程。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"81i27\",\"text\":\"为了提高CPU的利用率，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程完全受主线程控制，且不得操作DOM。所以这个标准并没有改变JavaScript单线程的本质。\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":104,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"9p54j\",\"text\":\"任务队列\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2fhfo\",\"text\":\"一个接一个地完成任务也就意味着待完成的任务是需要排队的，那么为什么会需要排队呢？\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"e9bfo\",\"text\":\"通常排队有以下两种原因：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"6l653\",\"text\":\"任务计算量过大，CPU处于忙碌状态；\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3povv\",\"text\":\"任务所需的东西未准备好所以无法继续执行，导致CPU闲置，等待输入输出设备（I/O设备）。 \\n\\n比如有的任务你需要Ajax获取到数据才能往下执行\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-2\"},{\"offset\":47,\"length\":24,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"78tv8\",\"text\":\"\\n由此JavaScript的设计者也意识到，这时完全可以先运行后面已经就绪的任务来提高运行效率，也就是把等待中的任务先挂起放到一边，等得到需要的东西再执行。就好比接电话时对方离开了一下，这时正好有另一个来电，于是你便把当前通话挂起，等那个通话结束后，再连回之前的通话。 所以也就出现了同步和异步的概念，任务也被分成了两种，一种是同步任务（Synchronous），另一种是异步任务（Asynchronous）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":204,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"cafpf\",\"text\":\"同步任务：需要执行的任务在主线程上排队，一个接一个，前一个完成了再执行下一个\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7l9ob\",\"text\":\"异步任务：没有马上被执行但需要执行的任务，存放在“任务队列”（task queue）中，“任务队列”会通知主线程什么时候哪个异步任务可以执行，然后这个任务就会进入主线程并被执行。 \\n\\n所有的同步执行都可以看作是没有异步任务的异步执行\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":90,\"style\":\"LINEHEIGHT-2\"},{\"offset\":92,\"length\":24,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"74vu5\",\"text\":\"\\n具体来说，异步执行如下：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":12,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"bsoo7\",\"text\":\"（1）所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。\\n也就是所有能被马上执行的任务都在主线程上排好了队，一个接一个的被执行。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"LINEHEIGHT-2\"},{\"offset\":52,\"length\":35,\"style\":\"LINEHEIGHT-2\"},{\"offset\":22,\"length\":3,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"da762\",\"text\":\"（2）主线程之外，还存在一个“任务队列”（task queue）。只要异步任务有了运行结果，就在“任务队列”之中放置一个事件。\\n也就是说每个异步任务准备好了就会立一个唯一的flag，这个flag用来标识对应的异步任务。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":63,\"style\":\"LINEHEIGHT-2\"},{\"offset\":64,\"length\":45,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"63jdm\",\"text\":\"（3）一旦“执行栈”中的所有同步任务执行完毕，系统就会读取“任务队列”，看看里面有哪些事件。那些对应的异步任务，就结束等待状态，进入执行栈开始被执行。\\n也就是主线程把之前的任务做完了之后，就会来看“任务队列”中的flag，来把对应的异步任务打包来执行。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":75,\"style\":\"LINEHEIGHT-2\"},{\"offset\":76,\"length\":50,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1pa5d\",\"text\":\"（4）主线程不断重复以上三步。\\n只要主线程空了，就会去读取“任务队列”。这个过程会被不断重复，这就是JavaScript的运行机制。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-2\"},{\"offset\":16,\"length\":50,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7evav\",\"text\":\"那怎么知道主线程执行栈为空啊？js引擎存在monitoring process进程，会持续不断的检查主线程执行栈是否为空，一旦为空，就会去Event Queue那里检查是否有等待被调用的函数。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":96,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"epfse\",\"text\":\"下面用一张导图来说明主线程和任务队列。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":19,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"7vb5n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"eir60\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"fn5l6\",\"text\":\"导图要表达的内容用文字来表述的话：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"6s26a\",\"text\":\"同步和异步任务分别进入不同的执行”场所”，同步的进入主线程，异步的进入Event Table并注册函数。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":52,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2t79t\",\"text\":\"当指定的事情完成时，Event Table会将这个函数移入Event Queue。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"av1ft\",\"text\":\"主线程内的任务执行完毕为空，会去Event Queue读取对应的函数，进入主线程执行。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"66sgd\",\"text\":\"上述过程会不断重复，也就是常说的Event Loop(事件循环)。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"frure\",\"text\":\"事件和回调函数\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"5lpe3\",\"text\":\"事件\",\"type\":\"header-four\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"63nud\",\"text\":\"“任务队列”是一个事件的队列（也可以理解成是消息的队列），IO设备完成一项任务，就会在“任务队列”中添加一个事件，表示相关的异步任务可以进入“执行栈”。接着主线程读取“任务队列”，查看里面有哪些事件。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":100,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"75vam\",\"text\":\"“任务队列”中的事件，除了IO设备的事件以外，还包括一些用户产生的事件（比如鼠标点击、页面滚动等等）。只要指定过回调函数，这些事件发生时就会进入“任务队列”，等待主线程读取。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":87,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"3kbla\",\"text\":\"回调函数\",\"type\":\"header-four\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"8j3ip\",\"text\":\"所谓“回调函数”（callback），就是那些会被主线程挂起来的代码。异步任务必须指定回调函数，当主线程开始执行异步任务，就是执行对应的回调函数。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":73,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"9laog\",\"text\":\"“任务队列”是一个先进先出的数据结构，排在前面的事件，优先被主线程读取。主线程的读取过程基本上是自动的，只要执行栈一清空，“任务队列”上第一位的事件就自动进入主线程。但是，如果包含“定时器”，主线程首先要检查一下执行时间，某些事件只有到了规定的时间，才能返回主线程。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":133,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1loo0\",\"text\":\"Event Loop\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"d4gei\",\"text\":\"主线程从“任务队列”中读取事件，这个过程是循环不断的，所以整个的运行机制又称为“Event Loop”（事件循环）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":58,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"9igvq\",\"text\":\"为了更好地理解Event Loop，下面参照Philip Roberts的演讲中的一张图。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"7lj4k\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"do8au\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"1r8bt\",\"text\":\"上图中，主线程在运行时，产生了heap（堆）和stack（栈），栈中的代码调用各种外部API，并在“任务队列”中加入各种事件（click，load，done）。当栈中的代码执行完毕，主线程就会读取“任务队列”，并依次执行那些事件所对应的回调函数。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":123,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"8do3q\",\"text\":\"执行栈中的代码（同步任务），总是在读取“任务队列”（异步任务）之前执行。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"94t06\",\"text\":\"let data = [];\\n$.ajax({    url:www.javascript.com,    data:data,    success:() => {        console.log(\'发送成功!\');\\n }\\n})console.log(\'代码执行结束\');\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-2\"},{\"offset\":15,\"length\":97,\"style\":\"LINEHEIGHT-2\"},{\"offset\":114,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":116,\"length\":24,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"dh5tv\",\"text\":\"上面是一段简易的ajax请求代码：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-2\"},{\"offset\":8,\"length\":4,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"eboit\",\"text\":\"ajax进入Event Table，注册回调函数success。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":32,\"style\":\"LINEHEIGHT-2\"},{\"offset\":24,\"length\":7,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dhpe\",\"text\":\"执行console.log(\'代码执行结束\')。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-2\"},{\"offset\":2,\"length\":21,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c67oq\",\"text\":\"ajax事件完成，回调函数success进入Event Queue。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":34,\"style\":\"LINEHEIGHT-2\"},{\"offset\":13,\"length\":7,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"vps5\",\"text\":\"主线程从Event Queue读取回调函数success并执行。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":32,\"style\":\"LINEHEIGHT-2\"},{\"offset\":21,\"length\":7,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f6v18\",\"text\":\"定时器\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"ankdi\",\"text\":\"除了放置异步任务的事件，“任务队列”还可以放置定时事件，即指定某些代码在多少时间之后执行。这叫做定时器（timer）功能，也就是定时执行的代码。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":72,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"e5vor\",\"text\":\"SetTimeout()和setInterval()可以用来注册在指定时间之后单次或重复调用的函数，它们的内部运行机制完全一样，区别在于前者指定的代码是一次性执行，后者会在指定毫秒数的间隔里重复调用:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":100,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":12,\"style\":\"CODE\"},{\"offset\":13,\"length\":13,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"8mvdv\",\"text\":\"setInterval(updateClock, 60000); //60秒调用一次updateClock()\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":55,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"7td9s\",\"text\":\"因为它们都是客户端JavaScript中重要的全局函数，所以定义为Window对象的方法。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"dlsuk\",\"text\":\"但作为通用函数，其实不会对窗口做什么事情。\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"fa3uo\",\"text\":\"Window对象的setTImeout()方法用来实现一个函数在指定的毫秒数之后运行。所以它接受两个参数，第一个是回调函数，第二个是推迟执行的毫秒数。 setTimeout()和setInterval()返回一个值，这个值可以传递给clearTimeout()用于取消这个函数的执行。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":142,\"style\":\"LINEHEIGHT-2\"},{\"offset\":9,\"length\":12,\"style\":\"CODE\"},{\"offset\":76,\"length\":12,\"style\":\"CODE\"},{\"offset\":89,\"length\":13,\"style\":\"CODE\"},{\"offset\":116,\"length\":14,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2mn70\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"line number1 index0 alt2\"},\"textAlign\":\"right\"}},{\"key\":\"ffafg\",\"text\":\"console.log(1);\\n\\n       setTimeout(function(){console.log(2);}, 1000);\\n\\n       console.log(3);\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-2\"},{\"offset\":17,\"length\":53,\"style\":\"LINEHEIGHT-2\"},{\"offset\":72,\"length\":22,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"1rmqr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"line number2 index1 alt1\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"f3q2c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"51urr\",\"text\":\"上面代码的执行结果是1，3，2，因为setTimeout()将第二行推迟到1000毫秒之后执行。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":48,\"style\":\"LINEHEIGHT-2\"},{\"offset\":18,\"length\":12,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"85gdk\",\"text\":\"如果将setTimeout()的第二个参数设为0，就表示当前代码执行完（执行栈清空）以后，立即执行（0毫秒间隔）指定的回调函数。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":64,\"style\":\"LINEHEIGHT-2\"},{\"offset\":3,\"length\":12,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"57aqp\",\"text\":\"setTimeout(function(){console.log(1);}, 0);\\n\\nconsole.log(2)\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-2\"},{\"offset\":45,\"length\":14,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"5of3r\",\"text\":\"上面代码的执行结果总是2，1，因为只有在执行完第二行以后，系统才会执行“任务队列”中的回调函数。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":48,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2s4q\",\"text\":\"总之，setTimeout(fn,0)的含义是，指定某个任务在主线程最早可得的空闲时间执行，也就是尽可能早地执行。它在“任务队列”的尾部添加一个事件，因此要等到同步任务和“任务队列”现有的事件都处理完，才会得到执行。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":108,\"style\":\"LINEHEIGHT-2\"},{\"offset\":3,\"length\":16,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"99fdl\",\"text\":\"HTML5标准规定了setTimeout()的第二个参数的最小值（最短间隔），不得低于4毫秒，如果低于这个值，就会自动增加。\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":62,\"style\":\"LINEHEIGHT-2\"},{\"offset\":10,\"length\":12,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2i465\",\"text\":\"需要注意的是，setTimeout()只是将事件插入了“任务队列”，必须等到当前代码（执行栈）执行完，主线程才会去执行它指定的回调函数。要是当前代码耗时很长，有可能要等很久，所以并没有办法保证回调函数一定会在setTimeout()指定的时间执行。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":124,\"style\":\"LINEHEIGHT-2\"},{\"offset\":7,\"length\":12,\"style\":\"CODE\"},{\"offset\":104,\"length\":12,\"style\":\"CODE\"},{\"offset\":21,\"length\":12,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"26u31\",\"text\":\"由于历史原因，setTimeout()和setInterval()的第一个参数可以作为字符串传入。如果这么做，那这个字符串会在指定的超时时间或间隔之后进行求值（相当于执行eval()）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":93,\"style\":\"LINEHEIGHT-2\"},{\"offset\":7,\"length\":12,\"style\":\"CODE\"},{\"offset\":20,\"length\":13,\"style\":\"CODE\"},{\"offset\":85,\"length\":6,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2j1qs\",\"text\":\"Node.js的Event Loop\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"24o32\",\"text\":\"Node.js也是单线程的Event Loop，但是它的运行机制不同于浏览器环境。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"d8qfb\",\"text\":\"Node.js的运行机制如下。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"dofti\",\"text\":\"（1）V8引擎解析JavaScript脚本。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"di6c0\",\"text\":\"（2）解析后的代码，调用Node API。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"14dnh\",\"text\":\"（3）libuv库负责Node API的执行。它将不同的任务分配给不同的线程，形成一个Event Loop（事件循环），以异步的方式将任务的执行结果返回给V8引擎。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":82,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"d9hc8\",\"text\":\"（4）V8引擎再将结果返回给用户。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"146kl\",\"text\":\"除了setTimeout和setInterval这两个方法，Node.js还提供了另外两个与”任务队列”有关的方法：process.nextTick和setImmediate。它们可以帮助我们加深对”任务队列”的理解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":109,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"am940\",\"text\":\"process.nextTick方法可以在当前”执行栈”的尾部—-下一次Event Loop（主线程读取”任务队列”）之前—-触发回调函数。也就是说，它指定的任务总是发生在所有异步任务之前。setImmediate方法则是在当前”任务队列”的尾部添加事件，也就是说，它指定的任务总是在下一次Event Loop时执行，这与setTimeout(fn, 0)很像。请看下面的例子\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":188,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4mgop\",\"text\":\"process.nextTick(function A() {\\n              console.log(1);\\n              process.nesetTimeout(function timeout() {\\n                     console.log(\'TIMEOUT FIRED\');\\n                     xtTick(function B(){\\n                     console.log(2);\\n                     })\\n              ;})\\n       ;},  0)\\n        // 1// 2// TIMEOUT FIRED\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"LINEHEIGHT-2\"},{\"offset\":32,\"length\":29,\"style\":\"LINEHEIGHT-2\"},{\"offset\":62,\"length\":55,\"style\":\"LINEHEIGHT-2\"},{\"offset\":118,\"length\":50,\"style\":\"LINEHEIGHT-2\"},{\"offset\":169,\"length\":41,\"style\":\"LINEHEIGHT-2\"},{\"offset\":211,\"length\":36,\"style\":\"LINEHEIGHT-2\"},{\"offset\":248,\"length\":23,\"style\":\"LINEHEIGHT-2\"},{\"offset\":272,\"length\":17,\"style\":\"LINEHEIGHT-2\"},{\"offset\":290,\"length\":14,\"style\":\"LINEHEIGHT-2\"},{\"offset\":305,\"length\":32,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"3dot3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"line number2 index1 alt1\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"c8rsf\",\"text\":\"上面代码中，由于process.nextTick方法指定的回调函数，总是在当前”执行栈”的尾部触发，所以不仅函数A比setTimeout指定的回调函数timeout先执行，而且函数B也比timeout先执行。这说明，如果有多个process.nextTick语句（不管它们是否嵌套），将全部在当前”执行栈”执行。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":156,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4viqf\",\"text\":\"现在，再看setImmediate。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1c0af\",\"text\":\"setImmediate(function A() {console.log(1);\\nsetImmediate(function B(){console.log(2);});});\\nsetTimeout(function timeout() {console.log(\'TIMEOUT FIRED\');\\n}, 0);\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":42,\"style\":\"LINEHEIGHT-2\"},{\"offset\":43,\"length\":47,\"style\":\"LINEHEIGHT-2\"},{\"offset\":91,\"length\":60,\"style\":\"LINEHEIGHT-2\"},{\"offset\":152,\"length\":6,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"c1ght\",\"text\":\"上面代码中，setImmediate与setTimeout(fn,0)各自添加了一个回调函数A和timeout，都是在下一次Event Loop触发。那么，哪个回调函数先执行呢？答案是不确定。运行结果可能是1–TIMEOUT FIRED–2，也可能是TIMEOUT FIRED–1–2。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":143,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"549qq\",\"text\":\"令人困惑的是，Node.js文档中称，setImmediate指定的回调函数，总是排在setTimeout前面。实际上，这种情况只发生在递归调用的时候。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":76,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2k4js\",\"text\":\"setImmediate(function (){setImmediate(function A() {console.log(1);\\nsetImmediate(function B(){console.log(2);});});\\nsetTimeout(function timeout() {console.log(\'TIMEOUT FIRED\');\\n}, 0);\\n}); \\n// 1 // TIMEOUT FIRED // 2\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":67,\"style\":\"LINEHEIGHT-2\"},{\"offset\":68,\"length\":47,\"style\":\"LINEHEIGHT-2\"},{\"offset\":116,\"length\":60,\"style\":\"LINEHEIGHT-2\"},{\"offset\":177,\"length\":6,\"style\":\"LINEHEIGHT-2\"},{\"offset\":184,\"length\":4,\"style\":\"LINEHEIGHT-2\"},{\"offset\":189,\"length\":26,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"dvi99\",\"text\":\"上面代码中，setImmediate和setTimeout被封装在一个setImmediate里面，它的运行结果总是1–TIMEOUT FIRED–2，这时函数A一定在timeout前面触发。至于2排在TIMEOUT FIRED的后面（即函数B在timeout后面触发），是因为setImmediate总是将事件注册到下一轮Event Loop，所以函数A和timeout是在同一轮Loop执行，而函数B在下一轮Loop执行。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":213,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"b4frg\",\"text\":\"我们由此得到了process.nextTick和setImmediate的一个重要区别：多个process.nextTick语句总是在当前”执行栈”一次执行完，多个setImmediate可能则需要多次loop才能执行完。事实上，这正是Node.js 10.0版添加setImmediate方法的原因，否则像下面这样的递归调用process.nextTick，将会没完没了，主线程根本不会去读取”事件队列”！\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":204,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1q7p8\",\"text\":\"process.nextTick(function foo() {process.nextTick(foo);\\n});\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":55,\"style\":\"LINEHEIGHT-2\"},{\"offset\":56,\"length\":3,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"a0osc\",\"text\":\"事实上，现在要是你写出递归的process.nextTick，Node.js会抛出一个警告，要求你改成setImmediate。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":64,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"6dh6l\",\"text\":\"另外，由于process.nextTick指定的回调函数是在本次”事件循环”触发，而setImmediate指定的是在下次”事件循环”触发，所以很显然，前者总是比后者发生得早，而且执行效率也高（因为不用检查”任务队列”）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":111,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"8n45k\",\"text\":\"Promise\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1npo9\",\"text\":\"除了广义的同步任务和异步任务，任务还有更精细的定义：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"f4v8m\",\"text\":\"macro-task(宏任务)：包括整体代码script，setTimeout，setInterval\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"93ma2\",\"text\":\"micro-task(微任务)：Promise，process.nextTick\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a80rn\",\"text\":\"事件循环，宏任务，微任务的关系如图所示：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":20,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"5jj4k\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2vgof\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{\"nodeAttributes\":{\"class\":\"media-wrap image-wrap\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"citk\",\"text\":\"按照宏任务和微任务这种分类方式，JS的执行机制是\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"c90tv\",\"text\":\"执行一个宏任务,过程中如果遇到微任务,就将其放到微任务的【事件队列】里\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":35,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9oec2\",\"text\":\"当前宏任务执行完成后,会查看微任务的【事件队列】,并将里面全部的微任务依次执行完\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"eqqu\",\"text\":\"请看下面的例子：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4fd3n\",\"text\":\"setTimeout(function(){\\n console.log(\'定时器开始啦\')\\n });\\n \\n new Promise(function(resolve){\\n console.log(\'马上执行for循环啦\');     for(var i = 0; i < 10000; i++){\\n i == 99 && resolve();\\n }\\n }).then(function(){\\n console.log(\'执行then函数啦\')\\n }); console.log(\'代码执行结束\');\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-2\"},{\"offset\":23,\"length\":22,\"style\":\"LINEHEIGHT-2\"},{\"offset\":46,\"length\":4,\"style\":\"LINEHEIGHT-2\"},{\"offset\":51,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":53,\"length\":31,\"style\":\"LINEHEIGHT-2\"},{\"offset\":85,\"length\":63,\"style\":\"LINEHEIGHT-2\"},{\"offset\":149,\"length\":22,\"style\":\"LINEHEIGHT-2\"},{\"offset\":172,\"length\":2,\"style\":\"LINEHEIGHT-2\"},{\"offset\":175,\"length\":20,\"style\":\"LINEHEIGHT-2\"},{\"offset\":196,\"length\":25,\"style\":\"LINEHEIGHT-2\"},{\"offset\":222,\"length\":27,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"5uebg\",\"text\":\"首先执行script下的宏任务,遇到setTimeout,将其放到宏任务的【队列】里\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":42,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b7ruf\",\"text\":\"遇到 new Promise直接执行,打印”马上执行for循环啦”\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bu466\",\"text\":\"遇到then方法,是微任务,将其放到微任务的【队列里】\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"161lk\",\"text\":\"打印 “代码执行结束”\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5knp3\",\"text\":\"本轮宏任务执行完毕,查看本轮的微任务,发现有一个then方法里的函数, 打印”执行then函数啦”\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":49,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9813h\",\"text\":\"到此,本轮的event loop 全部完成。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7het9\",\"text\":\"下一轮的循环里,先执行一个宏任务,发现宏任务的【队列】里有一个 setTimeout里的函数,执行打印”定时器开始啦”\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":59,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"92cj0\",\"text\":\"所以最后的执行顺序是【马上执行for循环啦 — 代码执行结束 — 执行then函数啦 — 定时器开始啦】\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":52,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"bmubu\",\"text\":\"我们来分析一段较复杂的代码，看看你是否真的掌握了js的执行机制：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":32,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"3o7s\",\"text\":\"console.log(\'1\');\\n \\nsetTimeout(function() {\\n console.log(\'2\');    process.nextTick(function() {\\n console.log(\'3\');\\n })\\n new Promise(function(resolve) {\\n console.log(\'4\');\\n resolve();\\n }).then(function() {\\n console.log(\'5\')\\n })\\n})process.nextTick(function() {\\n console.log(\'6\');\\n})\\nnew Promise(function(resolve) {\\n console.log(\'7\');\\n resolve();\\n}).then(function() {\\n console.log(\'8\')\\n})\\n \\nsetTimeout(function() {\\n console.log(\'9\');    process.nextTick(function() {\\n console.log(\'10\');\\n })\\n new Promise(function(resolve) {\\n console.log(\'11\');\\n resolve();\\n }).then(function() {\\n console.log(\'12\')\\n })\\n})\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-2\"},{\"offset\":18,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":20,\"length\":23,\"style\":\"LINEHEIGHT-2\"},{\"offset\":44,\"length\":51,\"style\":\"LINEHEIGHT-2\"},{\"offset\":96,\"length\":18,\"style\":\"LINEHEIGHT-2\"},{\"offset\":115,\"length\":3,\"style\":\"LINEHEIGHT-2\"},{\"offset\":119,\"length\":32,\"style\":\"LINEHEIGHT-2\"},{\"offset\":152,\"length\":18,\"style\":\"LINEHEIGHT-2\"},{\"offset\":171,\"length\":11,\"style\":\"LINEHEIGHT-2\"},{\"offset\":183,\"length\":21,\"style\":\"LINEHEIGHT-2\"},{\"offset\":205,\"length\":17,\"style\":\"LINEHEIGHT-2\"},{\"offset\":223,\"length\":3,\"style\":\"LINEHEIGHT-2\"},{\"offset\":227,\"length\":31,\"style\":\"LINEHEIGHT-2\"},{\"offset\":259,\"length\":18,\"style\":\"LINEHEIGHT-2\"},{\"offset\":278,\"length\":2,\"style\":\"LINEHEIGHT-2\"},{\"offset\":281,\"length\":31,\"style\":\"LINEHEIGHT-2\"},{\"offset\":313,\"length\":18,\"style\":\"LINEHEIGHT-2\"},{\"offset\":332,\"length\":11,\"style\":\"LINEHEIGHT-2\"},{\"offset\":344,\"length\":20,\"style\":\"LINEHEIGHT-2\"},{\"offset\":365,\"length\":17,\"style\":\"LINEHEIGHT-2\"},{\"offset\":383,\"length\":2,\"style\":\"LINEHEIGHT-2\"},{\"offset\":386,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":388,\"length\":23,\"style\":\"LINEHEIGHT-2\"},{\"offset\":412,\"length\":51,\"style\":\"LINEHEIGHT-2\"},{\"offset\":464,\"length\":19,\"style\":\"LINEHEIGHT-2\"},{\"offset\":484,\"length\":3,\"style\":\"LINEHEIGHT-2\"},{\"offset\":488,\"length\":32,\"style\":\"LINEHEIGHT-2\"},{\"offset\":521,\"length\":19,\"style\":\"LINEHEIGHT-2\"},{\"offset\":541,\"length\":11,\"style\":\"LINEHEIGHT-2\"},{\"offset\":553,\"length\":21,\"style\":\"LINEHEIGHT-2\"},{\"offset\":575,\"length\":18,\"style\":\"LINEHEIGHT-2\"},{\"offset\":594,\"length\":3,\"style\":\"LINEHEIGHT-2\"},{\"offset\":598,\"length\":2,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-lang\":\"javascript\",\"class\":\"lang-javascript\"}}},{\"key\":\"oomr\",\"text\":\"第一轮事件循环流程分析如下：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"blb7n\",\"text\":\"整体script作为第一个宏任务进入主线程，遇到console.log，输出1。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"},{\"offset\":24,\"length\":11,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1g39\",\"text\":\"遇到setTimeout，其回调函数被分发到宏任务Event Queue中。我们暂且记为setTimeout1。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":56,\"style\":\"LINEHEIGHT-2\"},{\"offset\":2,\"length\":10,\"style\":\"CODE\"},{\"offset\":44,\"length\":11,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6pjkb\",\"text\":\"遇到process.nextTick()，其回调函数被分发到微任务Event Queue中。我们记为process1。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":59,\"style\":\"LINEHEIGHT-2\"},{\"offset\":2,\"length\":18,\"style\":\"CODE\"},{\"offset\":50,\"length\":8,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4fjv4\",\"text\":\"遇到Promise，new Promise直接执行，输出7。then被分发到微任务Event Queue中。我们记为then1。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":64,\"style\":\"LINEHEIGHT-2\"},{\"offset\":2,\"length\":7,\"style\":\"CODE\"},{\"offset\":10,\"length\":11,\"style\":\"CODE\"},{\"offset\":30,\"length\":4,\"style\":\"CODE\"},{\"offset\":58,\"length\":5,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"26k94\",\"text\":\"又遇到了setTimeout，其回调函数被分发到宏任务Event Queue中，我们记为setTimeout2。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":56,\"style\":\"LINEHEIGHT-2\"},{\"offset\":4,\"length\":10,\"style\":\"CODE\"},{\"offset\":44,\"length\":11,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4pt3o\",\"text\":\"宏任务Event Queue微任务Event QueuesetTimeout1process1setTimeout2then1\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":63,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"gag\",\"text\":\"* 上表是第一轮事件循环宏任务结束时各Event Queue的情况，此时已经输出了1和7。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1rs70\",\"text\":\"我们发现了process1和then1两个微任务。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"LINEHEIGHT-2\"},{\"offset\":5,\"length\":8,\"style\":\"CODE\"},{\"offset\":14,\"length\":5,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8sqqv\",\"text\":\"执行process1,输出6。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-2\"},{\"offset\":2,\"length\":8,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cd6k8\",\"text\":\"执行then1，输出8。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-2\"},{\"offset\":2,\"length\":5,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1ubgc\",\"text\":\"好了，第一轮事件循环正式结束，这一轮的结果是输出1，7，6，8。那么第二轮时间循环从setTimeout1宏任务开始：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":59,\"style\":\"LINEHEIGHT-2\"},{\"offset\":42,\"length\":11,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"ak5ku\",\"text\":\"首先输出2。接下来遇到了process.nextTick()，同样将其分发到微任务Event Queue中，记为process2。new Promise立即执行输出4，then也分发到微任务Event Queue中，记为then2。\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":116,\"style\":\"LINEHEIGHT-2\"},{\"offset\":12,\"length\":18,\"style\":\"CODE\"},{\"offset\":56,\"length\":8,\"style\":\"CODE\"},{\"offset\":65,\"length\":11,\"style\":\"CODE\"},{\"offset\":84,\"length\":4,\"style\":\"CODE\"},{\"offset\":110,\"length\":5,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4q43d\",\"text\":\"宏任务Event Queue微任务Event QueuesetTimeout2process2\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":47,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2cjv\",\"text\":\"then2\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2i3fa\",\"text\":\"* 第二轮事件循环宏任务结束，我们发现有process2和then2两个微任务可以执行。 \\n* 输出3。 \\n* 输出5。 \\n* 第二轮事件循环结束，第二轮输出2，4，3，5。 \\n* 第三轮事件循环开始，此时只剩setTimeout2了，执行。 \\n* 直接输出9。 \\n* 将process.nextTick()分发到微任务Event Queue中。记为process3。 \\n* 直接执行new Promise，输出11。 \\n* 将then分发到微任务Event Queue中，记为then3。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-2\"},{\"offset\":46,\"length\":7,\"style\":\"LINEHEIGHT-2\"},{\"offset\":54,\"length\":7,\"style\":\"LINEHEIGHT-2\"},{\"offset\":62,\"length\":26,\"style\":\"LINEHEIGHT-2\"},{\"offset\":89,\"length\":33,\"style\":\"LINEHEIGHT-2\"},{\"offset\":123,\"length\":9,\"style\":\"LINEHEIGHT-2\"},{\"offset\":133,\"length\":52,\"style\":\"LINEHEIGHT-2\"},{\"offset\":186,\"length\":24,\"style\":\"LINEHEIGHT-2\"},{\"offset\":211,\"length\":34,\"style\":\"LINEHEIGHT-2\"},{\"offset\":20,\"length\":8,\"style\":\"CODE\"},{\"offset\":29,\"length\":5,\"style\":\"CODE\"},{\"offset\":136,\"length\":18,\"style\":\"CODE\"},{\"offset\":175,\"length\":8,\"style\":\"CODE\"},{\"offset\":192,\"length\":11,\"style\":\"CODE\"},{\"offset\":214,\"length\":4,\"style\":\"CODE\"},{\"offset\":239,\"length\":5,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"arkip\",\"text\":\"宏任务Event Queue微任务Event Queue\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":28,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"ggkt\",\"text\":\"process3\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"4q927\",\"text\":\"then3\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"cku2n\",\"text\":\"* 第三轮事件循环宏任务执行结束，执行两个微任务process3和then3。 \\n* 输出10。 \\n* 输出12。 \\n* 第三轮事件循环结束，第三轮输出9，11，10，12。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"},{\"offset\":41,\"length\":8,\"style\":\"LINEHEIGHT-2\"},{\"offset\":50,\"length\":8,\"style\":\"LINEHEIGHT-2\"},{\"offset\":59,\"length\":28,\"style\":\"LINEHEIGHT-2\"},{\"offset\":24,\"length\":8,\"style\":\"CODE\"},{\"offset\":33,\"length\":5,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1pohj\",\"text\":\"整段代码，共进行了三次事件循环，完整的输出为1，7，6，8，2，4，3，5，9，11，10，12。 \\n(请注意，node环境下的事件监听依赖libuv与前端环境不完全相同，输出顺序可能会有误\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":50,\"style\":\"LINEHEIGHT-2\"},{\"offset\":51,\"length\":44,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"b5p4u\",\"text\":\"文章转载于http://www.php.cn/js-tutorial-388552.html\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":5,\"length\":41,\"key\":3}],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"123\",\"alt\":\"2017108041721562031820518.jpg\",\"title\":\"2017108041721562031820518.jpg\"},\"url\":\"http://img.pzhuweb.cn/2017108041721562031820518.jpg\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"124\",\"alt\":\"2017108041721562031862224.png\",\"title\":\"2017108041721562031862224.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041721562031862224.png\"}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{\"id\":\"125\",\"alt\":\"2017108041721562032760240.png\",\"title\":\"2017108041721562032760240.png\"},\"url\":\"http://img.pzhuweb.cn/2017108041721562032760240.png\"}},\"3\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"http://www.php.cn/js-tutorial-388552.html\",\"target\":\"\",\"nodeAttributes\":{}}}}}', '<p style=\"text-align:start;text-indent:2em;\" class=\"markdown_views\"><span style=\"line-height:2\">想要理解JavaScript的运行机制，需要分别深刻理解几个点：JavaScript的单线程机制、任务队列（同步任务和异步任务）、事件和回调函数、定时器、Event Loop（事件循环）。</span><br/></p><h2 style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">JavaScript的单线程机制</span></h2><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">JavaScript的一个语言特性（也是这门语言的核心）就是<strong>单线程</strong>。单线程简单地说就是<strong>同一时间只能做一件事</strong>，当有多个任务时，只能按照一个顺序一个完成了再执行下一个。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">JavaScript的单线程与它的语言用途是有关的。作为一门浏览器脚本语言，JavaScript的主要用途是完成用户交互、操作DOM。这就决定了它只能是单线程，否则会导致复杂的同步问题。</span></p><blockquote style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">设想JavaScript同时有两个线程，一个线程需要在某个DOM节点上添加内容，而另一个线程的操作是删除了这个节点，那么浏览器应该以谁为准呢？</span></blockquote><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">所以为了避免复杂性，JavaScript从诞生起就是单线程。</span></p><blockquote style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">为了提高CPU的利用率，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程完全受主线程控制，且不得操作DOM。所以这个标准并没有改变JavaScript单线程的本质。</span></blockquote><h2 style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">任务队列</span></h2><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">一个接一个地完成任务也就意味着待完成的任务是需要排队的，那么为什么会需要排队呢？</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">通常排队有以下两种原因：</span></p><ul><li><span style=\"line-height:2\">任务计算量过大，CPU处于忙碌状态；</span></li><li><span style=\"line-height:2\">任务所需的东西未准备好所以无法继续执行，导致CPU闲置，等待输入输出设备（I/O设备）。 </span><br/><br/><span style=\"line-height:2\">比如有的任务你需要Ajax获取到数据才能往下执行</span></li></ul><p style=\"text-align:start;text-indent:2em;\"><br/><span style=\"line-height:2\">由此JavaScript的设计者也意识到，这时完全可以先运行后面已经就绪的任务来提高运行效率，也就是把等待中的任务先挂起放到一边，等得到需要的东西再执行。就好比接电话时对方离开了一下，这时正好有另一个来电，于是你便把当前通话挂起，等那个通话结束后，再连回之前的通话。 所以也就出现了同步和异步的概念，任务也被分成了两种，一种是同步任务（Synchronous），另一种是异步任务（Asynchronous）。</span></p><ul><li><span style=\"line-height:2\">同步任务：需要执行的任务在主线程上排队，一个接一个，前一个完成了再执行下一个</span></li><li><span style=\"line-height:2\">异步任务：没有马上被执行但需要执行的任务，存放在“任务队列”（task queue）中，“任务队列”会通知主线程什么时候哪个异步任务可以执行，然后这个任务就会进入主线程并被执行。 </span><br/><br/><span style=\"line-height:2\">所有的同步执行都可以看作是没有异步任务的异步执行</span></li></ul><p style=\"text-align:start;text-indent:2em;\"><br/><span style=\"line-height:2\">具体来说，异步执行如下：</span></p><ul><li><span style=\"line-height:2\">（1）所有同步任务都在主线程上执行，形成一个<strong>执行栈</strong>（execution context stack）。</span><br/><span style=\"line-height:2\">也就是所有能被马上执行的任务都在主线程上排好了队，一个接一个的被执行。</span></li><li><span style=\"line-height:2\">（2）主线程之外，还存在一个“任务队列”（task queue）。只要异步任务有了运行结果，就在“任务队列”之中放置一个事件。</span><br/><span style=\"line-height:2\">也就是说每个异步任务准备好了就会立一个唯一的flag，这个flag用来标识对应的异步任务。</span></li><li><span style=\"line-height:2\">（3）一旦“执行栈”中的所有同步任务执行完毕，系统就会读取“任务队列”，看看里面有哪些事件。那些对应的异步任务，就结束等待状态，进入执行栈开始被执行。</span><br/><span style=\"line-height:2\">也就是主线程把之前的任务做完了之后，就会来看“任务队列”中的flag，来把对应的异步任务打包来执行。</span></li><li><span style=\"line-height:2\">（4）主线程不断重复以上三步。</span><br/><span style=\"line-height:2\">只要主线程空了，就会去读取“任务队列”。这个过程会被不断重复，这就是JavaScript的运行机制。</span></li></ul><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">那怎么知道主线程执行栈为空啊？js引擎存在monitoring process进程，会持续不断的检查主线程执行栈是否为空，一旦为空，就会去Event Queue那里检查是否有等待被调用的函数。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">下面用一张导图来说明主线程和任务队列。</span></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"123\" alt=\"2017108041721562031820518.jpg\" title=\"2017108041721562031820518.jpg\" src=\"http://img.pzhuweb.cn/2017108041721562031820518.jpg\"/></div><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">导图要表达的内容用文字来表述的话：</span></p><ul><li><span style=\"line-height:2\">同步和异步任务分别进入不同的执行”场所”，同步的进入主线程，异步的进入Event Table并注册函数。</span></li><li><span style=\"line-height:2\">当指定的事情完成时，Event Table会将这个函数移入Event Queue。</span></li><li><span style=\"line-height:2\">主线程内的任务执行完毕为空，会去Event Queue读取对应的函数，进入主线程执行。</span></li><li><span style=\"line-height:2\">上述过程会不断重复，也就是常说的Event Loop(事件循环)。</span></li></ul><h2 style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">事件和回调函数</span></h2><h4 style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">事件</span></h4><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">“任务队列”是一个事件的队列（也可以理解成是消息的队列），IO设备完成一项任务，就会在“任务队列”中添加一个事件，表示相关的异步任务可以进入“执行栈”。接着主线程读取“任务队列”，查看里面有哪些事件。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">“任务队列”中的事件，除了IO设备的事件以外，还包括一些用户产生的事件（比如鼠标点击、页面滚动等等）。只要指定过回调函数，这些事件发生时就会进入“任务队列”，等待主线程读取。</span></p><h4 style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">回调函数</span></h4><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">所谓“回调函数”（callback），就是那些会被主线程挂起来的代码。异步任务必须指定回调函数，当主线程开始执行异步任务，就是执行对应的回调函数。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">“任务队列”是一个先进先出的数据结构，排在前面的事件，优先被主线程读取。主线程的读取过程基本上是自动的，只要执行栈一清空，“任务队列”上第一位的事件就自动进入主线程。但是，如果包含“定时器”，主线程首先要检查一下执行时间，某些事件只有到了规定的时间，才能返回主线程。</span></p><h2 style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">Event Loop</span></h2><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">主线程从“任务队列”中读取事件，这个过程是循环不断的，所以整个的运行机制又称为“Event Loop”（事件循环）。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">为了更好地理解Event Loop，下面参照Philip Roberts的演讲中的一张图。</span></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"124\" alt=\"2017108041721562031862224.png\" title=\"2017108041721562031862224.png\" src=\"http://img.pzhuweb.cn/2017108041721562031862224.png\"/></div><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">上图中，主线程在运行时，产生了heap（堆）和stack（栈），栈中的代码调用各种外部API，并在“任务队列”中加入各种事件（click，load，done）。当栈中的代码执行完毕，主线程就会读取“任务队列”，并依次执行那些事件所对应的回调函数。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">执行栈中的代码（同步任务），总是在读取“任务队列”（异步任务）之前执行。</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">let data = [];</span><br/><span style=\"line-height:2\">$.ajax({    url:www.javascript.com,    data:data,    success:() =&gt; {        console.log(&#x27;发送成功!&#x27;);</span><br/> <span style=\"line-height:2\">}</span><br/><span style=\"line-height:2\">})console.log(&#x27;代码执行结束&#x27;);</span></code></pre><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">上面是一段简易的<code>ajax</code>请求代码：</span></p><ul><li><span style=\"line-height:2\">ajax进入Event Table，注册回调函数<code>success</code>。</span></li><li><span style=\"line-height:2\">执行<code>console.log(&#x27;代码执行结束&#x27;)</code>。</span></li><li><span style=\"line-height:2\">ajax事件完成，回调函数<code>success</code>进入Event Queue。</span></li><li><span style=\"line-height:2\">主线程从Event Queue读取回调函数<code>success</code>并执行。</span></li></ul><h2 style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">定时器</span></h2><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">除了放置异步任务的事件，“任务队列”还可以放置定时事件，即指定某些代码在多少时间之后执行。这叫做定时器（timer）功能，也就是定时执行的代码。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\"><code>SetTimeout()</code>和<code>setInterval()</code>可以用来注册在指定时间之后单次或重复调用的函数，它们的内部运行机制完全一样，区别在于前者指定的代码是一次性执行，后者会在指定毫秒数的间隔里重复调用:</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">setInterval(updateClock, 60000); //60秒调用一次updateClock()</span></code></pre><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">因为它们都是客户端JavaScript中重要的全局函数，所以定义为Window对象的方法。</span></p><blockquote style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">但作为通用函数，其实不会对窗口做什么事情。</span></blockquote><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">Window对象的<code>setTImeout()</code>方法用来实现一个函数在指定的毫秒数之后运行。所以它接受两个参数，第一个是回调函数，第二个是推迟执行的毫秒数。 <code>setTimeout()</code>和<code>setInterval()</code>返回一个值，这个值可以传递给<code>clearTimeout()</code>用于取消这个函数的执行。</span></p><p style=\"text-align:right;\" class=\"line number1 index0 alt2\"></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">console.log(1);</span><br/><br/><span style=\"line-height:2\">       setTimeout(function(){console.log(2);}, 1000);</span><br/><br/><span style=\"line-height:2\">       console.log(3);</span></code></pre><p style=\"text-align:left;text-indent:2em;\" class=\"line number2 index1 alt1\"></p><p style=\"text-align:start;text-indent:2em;\"></p><p style=\"text-indent:2em;\"><span style=\"line-height:2\">上面代码的执行结果是1，3，2，因为<code>setTimeout()</code>将第二行推迟到1000毫秒之后执行。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">如果将<code>setTimeout()</code>的第二个参数设为0，就表示当前代码执行完（执行栈清空）以后，立即执行（0毫秒间隔）指定的回调函数。</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">setTimeout(function(){console.log(1);}, 0);</span><br/><br/><span style=\"line-height:2\">console.log(2)</span></code></pre><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">上面代码的执行结果总是2，1，因为只有在执行完第二行以后，系统才会执行“任务队列”中的回调函数。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">总之，<code>setTimeout(fn,0)</code>的含义是，指定某个任务在主线程最早可得的空闲时间执行，也就是尽可能早地执行。它在“任务队列”的尾部添加一个事件，因此要等到同步任务和“任务队列”现有的事件都处理完，才会得到执行。</span></p><blockquote style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">HTML5标准规定了<code>setTimeout()</code>的第二个参数的最小值（最短间隔），不得低于4毫秒，如果低于这个值，就会自动增加。</span></blockquote><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">需要注意的是，<code>setTimeout()</code>只是<strong>将事件插入了“任务队列”</strong>，必须等到当前代码（执行栈）执行完，主线程才会去执行它指定的回调函数。要是当前代码耗时很长，有可能要等很久，所以并没有办法保证回调函数一定会在<code>setTimeout()</code>指定的时间执行。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">由于历史原因，<code>setTimeout()</code>和<code>setInterval()</code>的第一个参数可以作为字符串传入。如果这么做，那这个字符串会在指定的超时时间或间隔之后进行求值（相当于执行<code>eval()</code>）。</span></p><h2 style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">Node.js的Event Loop</span></h2><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">Node.js也是单线程的Event Loop，但是它的运行机制不同于浏览器环境。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">Node.js的运行机制如下。</span></p><ul><li><span style=\"line-height:2\">（1）V8引擎解析JavaScript脚本。</span></li><li><span style=\"line-height:2\">（2）解析后的代码，调用Node API。</span></li><li><span style=\"line-height:2\">（3）libuv库负责Node API的执行。它将不同的任务分配给不同的线程，形成一个Event Loop（事件循环），以异步的方式将任务的执行结果返回给V8引擎。</span></li><li><span style=\"line-height:2\">（4）V8引擎再将结果返回给用户。</span></li></ul><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">除了setTimeout和setInterval这两个方法，Node.js还提供了另外两个与”任务队列”有关的方法：process.nextTick和setImmediate。它们可以帮助我们加深对”任务队列”的理解。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">process.nextTick方法可以在当前”执行栈”的尾部—-下一次Event Loop（主线程读取”任务队列”）之前—-触发回调函数。也就是说，它指定的任务总是发生在所有异步任务之前。setImmediate方法则是在当前”任务队列”的尾部添加事件，也就是说，它指定的任务总是在下一次Event Loop时执行，这与setTimeout(fn, 0)很像。请看下面的例子</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">process.nextTick(function A() {</span><br/><span style=\"line-height:2\">              console.log(1);</span><br/><span style=\"line-height:2\">              process.nesetTimeout(function timeout() {</span><br/><span style=\"line-height:2\">                     console.log(&#x27;TIMEOUT FIRED&#x27;);</span><br/><span style=\"line-height:2\">                     xtTick(function B(){</span><br/><span style=\"line-height:2\">                     console.log(2);</span><br/><span style=\"line-height:2\">                     })</span><br/><span style=\"line-height:2\">              ;})</span><br/><span style=\"line-height:2\">       ;},  0)</span><br/><span style=\"line-height:2\">        // 1// 2// TIMEOUT FIRED</span></code></pre><p style=\"text-align:left;text-indent:2em;\" class=\"line number2 index1 alt1\"></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">上面代码中，由于process.nextTick方法指定的回调函数，总是在当前”执行栈”的尾部触发，所以不仅函数A比setTimeout指定的回调函数timeout先执行，而且函数B也比timeout先执行。这说明，如果有多个process.nextTick语句（不管它们是否嵌套），将全部在当前”执行栈”执行。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">现在，再看setImmediate。</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">setImmediate(function A() {console.log(1);</span><br/><span style=\"line-height:2\">setImmediate(function B(){console.log(2);});});</span><br/><span style=\"line-height:2\">setTimeout(function timeout() {console.log(&#x27;TIMEOUT FIRED&#x27;);</span><br/><span style=\"line-height:2\">}, 0);</span><br/></code></pre><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">上面代码中，setImmediate与setTimeout(fn,0)各自添加了一个回调函数A和timeout，都是在下一次Event Loop触发。那么，哪个回调函数先执行呢？答案是不确定。运行结果可能是1–TIMEOUT FIRED–2，也可能是TIMEOUT FIRED–1–2。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">令人困惑的是，Node.js文档中称，setImmediate指定的回调函数，总是排在setTimeout前面。实际上，这种情况只发生在递归调用的时候。</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">setImmediate(function (){setImmediate(function A() {console.log(1);</span><br/><span style=\"line-height:2\">setImmediate(function B(){console.log(2);});});</span><br/><span style=\"line-height:2\">setTimeout(function timeout() {console.log(&#x27;TIMEOUT FIRED&#x27;);</span><br/><span style=\"line-height:2\">}, 0);</span><br/><span style=\"line-height:2\">}); </span><br/><span style=\"line-height:2\">// 1 // TIMEOUT FIRED // 2</span></code></pre><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">上面代码中，setImmediate和setTimeout被封装在一个setImmediate里面，它的运行结果总是1–TIMEOUT FIRED–2，这时函数A一定在timeout前面触发。至于2排在TIMEOUT FIRED的后面（即函数B在timeout后面触发），是因为setImmediate总是将事件注册到下一轮Event Loop，所以函数A和timeout是在同一轮Loop执行，而函数B在下一轮Loop执行。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">我们由此得到了process.nextTick和setImmediate的一个重要区别：多个process.nextTick语句总是在当前”执行栈”一次执行完，多个setImmediate可能则需要多次loop才能执行完。事实上，这正是Node.js 10.0版添加setImmediate方法的原因，否则像下面这样的递归调用process.nextTick，将会没完没了，主线程根本不会去读取”事件队列”！</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">process.nextTick(function foo() {process.nextTick(foo);</span><br/><span style=\"line-height:2\">});</span></code></pre><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">事实上，现在要是你写出递归的process.nextTick，Node.js会抛出一个警告，要求你改成setImmediate。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">另外，由于process.nextTick指定的回调函数是在本次”事件循环”触发，而setImmediate指定的是在下次”事件循环”触发，所以很显然，前者总是比后者发生得早，而且执行效率也高（因为不用检查”任务队列”）。</span></p><h2 style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">Promise</span></h2><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">除了广义的同步任务和异步任务，任务还有更精细的定义：</span></p><ul><li><span style=\"line-height:2\">macro-task(宏任务)：包括整体代码script，setTimeout，setInterval</span></li><li><span style=\"line-height:2\">micro-task(微任务)：Promise，process.nextTick</span></li></ul><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">事件循环，宏任务，微任务的关系如图所示：</span></p><p></p><div class=\"media-wrap image-wrap\"><img class=\"media-wrap image-wrap\" id=\"125\" alt=\"2017108041721562032760240.png\" title=\"2017108041721562032760240.png\" src=\"http://img.pzhuweb.cn/2017108041721562032760240.png\"/></div><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">按照宏任务和微任务这种分类方式，JS的执行机制是</span></p><ul><li><span style=\"line-height:2\">执行一个宏任务,过程中如果遇到微任务,就将其放到微任务的【事件队列】里</span></li><li><span style=\"line-height:2\">当前宏任务执行完成后,会查看微任务的【事件队列】,并将里面全部的微任务依次执行完</span></li></ul><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">请看下面的例子：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">setTimeout(function(){</span><br/><span style=\"line-height:2\"> console.log(&#x27;定时器开始啦&#x27;)</span><br/><span style=\"line-height:2\"> });</span><br/><span style=\"line-height:2\"> </span><br/><span style=\"line-height:2\"> new Promise(function(resolve){</span><br/><span style=\"line-height:2\"> console.log(&#x27;马上执行for循环啦&#x27;);     for(var i = 0; i &lt; 10000; i++){</span><br/><span style=\"line-height:2\"> i == 99 &amp;&amp; resolve();</span><br/><span style=\"line-height:2\"> }</span><br/><span style=\"line-height:2\"> }).then(function(){</span><br/><span style=\"line-height:2\"> console.log(&#x27;执行then函数啦&#x27;)</span><br/><span style=\"line-height:2\"> }); console.log(&#x27;代码执行结束&#x27;);</span></code></pre><ul><li><span style=\"line-height:2\">首先执行script下的宏任务,遇到setTimeout,将其放到宏任务的【队列】里</span></li><li><span style=\"line-height:2\">遇到 new Promise直接执行,打印”马上执行for循环啦”</span></li><li><span style=\"line-height:2\">遇到then方法,是微任务,将其放到微任务的【队列里】</span></li><li><span style=\"line-height:2\">打印 “代码执行结束”</span></li><li><span style=\"line-height:2\">本轮宏任务执行完毕,查看本轮的微任务,发现有一个then方法里的函数, 打印”执行then函数啦”</span></li><li><span style=\"line-height:2\">到此,本轮的event loop 全部完成。</span></li><li><span style=\"line-height:2\">下一轮的循环里,先执行一个宏任务,发现宏任务的【队列】里有一个 setTimeout里的函数,执行打印”定时器开始啦”</span></li></ul><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">所以最后的执行顺序是【马上执行for循环啦 — 代码执行结束 — 执行then函数啦 — 定时器开始啦】</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">我们来分析一段较复杂的代码，看看你是否真的掌握了js的执行机制：</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">console.log(&#x27;1&#x27;);</span><br/><span style=\"line-height:2\"> </span><br/><span style=\"line-height:2\">setTimeout(function() {</span><br/><span style=\"line-height:2\"> console.log(&#x27;2&#x27;);    process.nextTick(function() {</span><br/><span style=\"line-height:2\"> console.log(&#x27;3&#x27;);</span><br/><span style=\"line-height:2\"> })</span><br/><span style=\"line-height:2\"> new Promise(function(resolve) {</span><br/><span style=\"line-height:2\"> console.log(&#x27;4&#x27;);</span><br/><span style=\"line-height:2\"> resolve();</span><br/><span style=\"line-height:2\"> }).then(function() {</span><br/><span style=\"line-height:2\"> console.log(&#x27;5&#x27;)</span><br/><span style=\"line-height:2\"> })</span><br/><span style=\"line-height:2\">})process.nextTick(function() {</span><br/><span style=\"line-height:2\"> console.log(&#x27;6&#x27;);</span><br/><span style=\"line-height:2\">})</span><br/><span style=\"line-height:2\">new Promise(function(resolve) {</span><br/><span style=\"line-height:2\"> console.log(&#x27;7&#x27;);</span><br/><span style=\"line-height:2\"> resolve();</span><br/><span style=\"line-height:2\">}).then(function() {</span><br/><span style=\"line-height:2\"> console.log(&#x27;8&#x27;)</span><br/><span style=\"line-height:2\">})</span><br/><span style=\"line-height:2\"> </span><br/><span style=\"line-height:2\">setTimeout(function() {</span><br/><span style=\"line-height:2\"> console.log(&#x27;9&#x27;);    process.nextTick(function() {</span><br/><span style=\"line-height:2\"> console.log(&#x27;10&#x27;);</span><br/><span style=\"line-height:2\"> })</span><br/><span style=\"line-height:2\"> new Promise(function(resolve) {</span><br/><span style=\"line-height:2\"> console.log(&#x27;11&#x27;);</span><br/><span style=\"line-height:2\"> resolve();</span><br/><span style=\"line-height:2\"> }).then(function() {</span><br/><span style=\"line-height:2\"> console.log(&#x27;12&#x27;)</span><br/><span style=\"line-height:2\"> })</span><br/><span style=\"line-height:2\">})</span><br/></code></pre><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">第一轮事件循环流程分析如下：</span></p><ul><li><span style=\"line-height:2\">整体script作为第一个宏任务进入主线程，遇到<code>console.log</code>，输出1。</span></li><li><span style=\"line-height:2\">遇到<code>setTimeout</code>，其回调函数被分发到宏任务Event Queue中。我们暂且记为<code>setTimeout1</code>。</span></li><li><span style=\"line-height:2\">遇到<code>process.nextTick()</code>，其回调函数被分发到微任务Event Queue中。我们记为<code>process1</code>。</span></li><li><span style=\"line-height:2\">遇到<code>Promise</code>，<code>new Promise</code>直接执行，输出7。<code>then</code>被分发到微任务Event Queue中。我们记为<code>then1</code>。</span></li><li><span style=\"line-height:2\">又遇到了<code>setTimeout</code>，其回调函数被分发到宏任务Event Queue中，我们记为<code>setTimeout2</code>。</span></li></ul><p><span style=\"line-height:2\">宏任务Event Queue微任务Event QueuesetTimeout1process1setTimeout2then1</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">* 上表是第一轮事件循环宏任务结束时各Event Queue的情况，此时已经输出了1和7。</span></p><ul><li><span style=\"line-height:2\">我们发现了<code>process1</code>和<code>then1</code>两个微任务。</span></li><li><span style=\"line-height:2\">执行<code>process1</code>,输出6。</span></li><li><span style=\"line-height:2\">执行<code>then1</code>，输出8。</span></li></ul><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">好了，第一轮事件循环正式结束，这一轮的结果是输出1，7，6，8。那么第二轮时间循环从<code>setTimeout1</code>宏任务开始：</span></p><ul><li><span style=\"line-height:2\">首先输出2。接下来遇到了<code>process.nextTick()</code>，同样将其分发到微任务Event Queue中，记为<code>process2</code>。<code>new Promise</code>立即执行输出4，<code>then</code>也分发到微任务Event Queue中，记为<code>then2</code>。</span></li></ul><p><span style=\"line-height:2\">宏任务Event Queue微任务Event QueuesetTimeout2process2</span></p><p><span style=\"line-height:2\">then2</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">* 第二轮事件循环宏任务结束，我们发现有<code>process2</code>和<code>then2</code>两个微任务可以执行。 </span><br/><span style=\"line-height:2\">* 输出3。 </span><br/><span style=\"line-height:2\">* 输出5。 </span><br/><span style=\"line-height:2\">* 第二轮事件循环结束，第二轮输出2，4，3，5。 </span><br/><span style=\"line-height:2\">* 第三轮事件循环开始，此时只剩setTimeout2了，执行。 </span><br/><span style=\"line-height:2\">* 直接输出9。 </span><br/><span style=\"line-height:2\">* 将<code>process.nextTick()</code>分发到微任务Event Queue中。记为<code>process3</code>。 </span><br/><span style=\"line-height:2\">* 直接执行<code>new Promise</code>，输出11。 </span><br/><span style=\"line-height:2\">* 将<code>then</code>分发到微任务Event Queue中，记为<code>then3</code>。</span></p><p><span style=\"line-height:2\">宏任务Event Queue微任务Event Queue</span></p><p><span style=\"line-height:2\">process3</span></p><p><span style=\"line-height:2\">then3</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">* 第三轮事件循环宏任务执行结束，执行两个微任务<code>process3</code>和<code>then3</code>。 </span><br/><span style=\"line-height:2\">* 输出10。 </span><br/><span style=\"line-height:2\">* 输出12。 </span><br/><span style=\"line-height:2\">* 第三轮事件循环结束，第三轮输出9，11，10，12。</span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:2\">整段代码，共进行了三次事件循环，完整的输出为1，7，6，8，2，4，3，5，9，11，10，12。 </span><br/><span style=\"line-height:2\">(请注意，node环境下的事件监听依赖libuv与前端环境不完全相同，输出顺序可能会有误</span></p><p><span style=\"line-height:2\">文章转载于</span><a href=\"http://www.php.cn/js-tutorial-388552.html\" target=\"\">http://www.php.cn/js-tutorial-388552.html</a></p>', 30, 1, 0, '2019-07-02 00:00:00', NULL);
INSERT INTO `article` VALUES (166, '201710804172', '学术报告会——JS原型链和JavaWeb会话跟踪', 5, 13, '本报讯（伍涛报导）7月3日7：40，WEB应用专业团队在砺志楼403会议室召开了学术报告会——JS原型链和JavaWeb会话跟踪。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。此次会议的主要内容包括苟雨晴讲解JavaScri', '原型链 会话跟踪', 'http://img.pzhuweb.cn/2017108041721562232295286.jpg', '{\"blocks\":[{\"key\":\"f7ik0\",\"text\":\"本报讯（伍涛报导）7月3日7：40，WEB应用专业团队在砺志楼403会议室召开了学术报告会——JS原型链和JavaWeb会话跟踪。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。\\n\\n此次会议的主要内容包括苟雨晴讲解JavaScript原型和原型链、徐岸讲解JavaWeb的会话跟踪技术\\n\\n首先，由2017级软件工程苟雨晴对avaScript原型和原型链进行了讲解，其主要讲了原型与原型链的概念，原型与实例之间的联系，为什么使用原型，以及原型中的construction和  proto  的概念以及使用，对原型链的简单介绍\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":251,\"style\":\"LINEHEIGHT-2\"},{\"offset\":252,\"length\":16,\"style\":\"LINEHEIGHT-2\"},{\"offset\":242,\"length\":2,\"style\":\"UNDERLINE\"},{\"offset\":249,\"length\":2,\"style\":\"UNDERLINE\"},{\"offset\":249,\"length\":2,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"6rsva\",\"text\":\"然后，由2017级软件工程徐岸对JavaWeb的会话跟踪技术进行了讲解，其主要讲解了JSP中重定向和请求转发的区别，传统的HTTP协议的三次握手，cookie和session的使用，session的生命周期，request、session、application的作用域\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":135,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"6ii23\",\"text\":\"最后，兰全祥老师对于报告会的讲解技巧进行了总结。\\n\\n通过本次会议，团队成员在学习方法上和知识技能上得到了提高。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":55,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9qrud\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"15ct7\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"9bo3t\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1rg4j\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"6hkvb\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721562232244869.jpg\",\"name\":\"QQ图片20190704172347.jpg\",\"type\":\"IMAGE\",\"width\":\"1000px\",\"meta\":{\"id\":149,\"title\":\"2017108041721562232244869.jpg\",\"alt\":\"2017108041721562232244869.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721562232241765.jpg\",\"type\":\"IMAGE\",\"width\":\"1000px\"}}}}', '<p><span style=\"line-height:2\">本报讯（伍涛报导）7月3日7：40，WEB应用专业团队在砺志楼403会议室召开了学术报告会——JS原型链和JavaWeb会话跟踪。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。<br/><br/>此次会议的主要内容包括苟雨晴讲解JavaScript原型和原型链、徐岸讲解JavaWeb的会话跟踪技术<br/><br/>首先，由2017级软件工程苟雨晴对avaScript原型和原型链进行了讲解，其主要讲了原型与原型链的概念，原型与实例之间的联系，为什么使用原型，以及原型中的construction和<u>  </u>proto<u><strong>  </strong></u></span>的<span style=\"line-height:2\">概念以及使用，对原型链的简单介绍</span></p><p><span style=\"line-height:2\">然后，由2017级软件工程徐岸对JavaWeb的会话跟踪技术进行了讲解，其主要讲解了JSP中重定向和请求转发的区别，传统的HTTP协议的三次握手，cookie和session的使用，session的生命周期，request、session、application的作用域</span></p><p><span style=\"line-height:2\">最后，兰全祥老师对于报告会的讲解技巧进行了总结。<br/><br/>通过本次会议，团队成员在学习方法上和知识技能上得到了提高。</span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"149\" title=\"2017108041721562232244869.jpg\" alt=\"2017108041721562232244869.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041721562232244869.jpg\" width=\"1000px\" style=\"width:1000px\"/></div><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2017108041721562232241765.jpg\" width=\"1000px\" style=\"width:1000px\"/></div><p></p>', 19, 1, 0, '2019-07-04 00:00:00', NULL);
INSERT INTO `article` VALUES (167, '201710804035', 'WEB应用专业团队2019-2020-1学期第一次学术报告会暨大一新成员见面会', 5, 13, '2019年9月29日19:40WEB应用团队成员在励志楼会议室举行WEB应用专业团队2019-2020-1学期第一次报告会暨大一新成员见面会。本次会议由兰老师主持，兰老师首先给大一新成员介绍团队的基本情况和团队管理规范，并对相关事宜做了详细', '报告会', 'http://img.pzhuweb.cn/140848948.3055042931660726000.1565325523345.35421569833831235.jpg', '{\"blocks\":[{\"key\":\"4ocgo\",\"text\":\"2019年9月29日19:40WEB应用团队成员在励志楼会议室举行WEB应用专业团队2019-2020-1学期第一次报告会暨大一新成员见面会。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":55,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":71,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":71,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":71,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":71,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"7km5m\",\"text\":\"本次会议由兰老师主持，兰老师首先给大一新成员介绍团队的基本情况和团队管理规范，并对相关事宜做了详细的解答。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":53,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":53,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":53,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":53,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"38seh\",\"text\":\"紧接着赵修俊同学开始报告会，主要讲解了java中增强for循环、lambda表达式，列举了相关应用场景，以及它们的优缺点。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":61,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":61,\"style\":\"LETTERSPACING-0\"},{\"offset\":0,\"length\":61,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":61,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"cbvin\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1qrop\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"a9d6k\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.3055042931660726000.1565325523345.35421570527101306.jpg\",\"type\":\"IMAGE\",\"width\":\"700px\"}}}}', '<p style=\"text-indent:2em;\"><span style=\"color:#000000\"><span style=\"letter-spacing:0px\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\"><span style=\"background-color:#ffffff\">2019年9月29日19:40WEB应用团队成员在励志楼会议室举行WEB应用专业团队2019-2020-1学期</span>第一次报告会暨大一新成员见面会。</span></span></span></span></p><p style=\"text-indent:2em;\"><span style=\"color:#000000\"><span style=\"letter-spacing:0px\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\">本次会议由兰老师主持，兰老师首先给大一新成员介绍团队的基本情况和团队管理规范，并对相关事宜做了详细的解答。</span></span></span></span></p><p style=\"text-indent:2em;\"><span style=\"color:#000000\"><span style=\"letter-spacing:0px\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\">紧接着赵修俊同学开始报告会，主要讲解了java中增强for循环、lambda表达式，列举了相关应用场景，以及它们的优缺点。</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/140848948.3055042931660726000.1565325523345.35421570527101306.jpg\" width=\"700px\" style=\"width:700px\"/></div><p></p>', 40, 1, 0, '2019-09-30 00:00:00', NULL);
INSERT INTO `article` VALUES (168, '201710804105', 'WEB应用专业团队2019-2020-1学期第四次学术报告会', 5, 13, '攀枝花学院WEB应用专业团队于2019年10月25日在励志楼四楼会议室召开了WEB应用专业团队第四次报告会，本次报告会的主讲人是2017级曹林同学和2017级伍涛同学，主讲的内容是递归和设计原则，会议的参与者为WEB应用专业团队全体成员。会', '新闻', 'http://img.pzhuweb.cn/2017108041051572168009586.jpg', '{\"blocks\":[{\"key\":\"bcdlt\",\"text\":\"攀枝花学院WEB应用专业团队于2019年10月25日在励志楼四楼会议室召开了WEB应用专业团队第四次报告会，本次报告会的主讲人是2017级曹林同学和2017级伍涛同学，主讲的内容是递归和设计原则，会议的参与者为WEB应用专业团队全体成员。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"FONTSIZE-18\"},{\"offset\":12,\"length\":31,\"style\":\"FONTSIZE-18\"},{\"offset\":45,\"length\":65,\"style\":\"FONTSIZE-18\"},{\"offset\":112,\"length\":7,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":10,\"style\":\"FONTSIZE-inherit\"},{\"offset\":12,\"length\":31,\"style\":\"FONTSIZE-inherit\"},{\"offset\":45,\"length\":65,\"style\":\"FONTSIZE-inherit\"},{\"offset\":112,\"length\":7,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":12,\"length\":31,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":45,\"length\":65,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":112,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":119,\"style\":\"LETTERSPACING-1\"},{\"offset\":10,\"length\":2,\"style\":\"COLOR-000000\"},{\"offset\":43,\"length\":2,\"style\":\"COLOR-000000\"},{\"offset\":110,\"length\":2,\"style\":\"COLOR-000000\"},{\"offset\":10,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":43,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":110,\"length\":2,\"style\":\"FONTSIZE-16\"},{\"offset\":10,\"length\":2,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":43,\"length\":2,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":110,\"length\":2,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"8i70a\",\"text\":\"会议初始兰老师对团队上一周的情况进行了总结，对跑步情况进行清查，对大家提出的团队运行建议逐条进行解释总结，提出对团队运行需要更新团队管理方案，细节细化，对团队每周进行的报告会进行量化考核等建议。然后曹林同学主讲递归算法，讲了两个经典的递归问题，斐波拉契数列和汉诺塔，讲解了写递归需要对注意事项，还有对递归算法的优化方法；伍涛同学也粗略讲解了七种设计原则，分别是开闭原则，单一职责原则，接口隔离原则，迪米特法则，里式替换原则，依赖倒置原则、合成复用原则，详细的实现方法在下一周报告会在进行分享。最后，指导老师兰全祥老师对此次会议做出了总结，对大一和大二的同学布置了下一周的学习任务，至此会议结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":297,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":297,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":297,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":297,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2oj58\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"b4uk6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d05jp\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"6dvf7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041051572168048017.jpg\",\"name\":\"$CYG~3T3I{Y@G_TOO2M0R)J.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":204,\"title\":\"2017108041051572168048017.jpg\",\"alt\":\"2017108041051572168048017.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041051572168048066.jpg\",\"name\":\"_ASKUQEV]Z4Y@$6V`GVEB6Y.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":205,\"title\":\"2017108041051572168048066.jpg\",\"alt\":\"2017108041051572168048066.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"letter-spacing:1px\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\">攀枝花学院WEB应用</span></span></span><span style=\"font-size:16px\"><span style=\"color:#000000\"><span style=\"background-color:#ffffff\">专业</span></span></span><span style=\"line-height:1.75\"><span style=\"font-size:inheritpx\"><span style=\"font-size:18px\">团队于2019年10月25日在励志楼四楼会议室召开了WEB应用</span></span></span><span style=\"color:#000000\"><span style=\"background-color:#ffffff\"><span style=\"font-size:16px\">专业</span></span></span><span style=\"line-height:1.75\"><span style=\"font-size:18px\"><span style=\"font-size:inheritpx\">团队第四次报告会，本次报告会的主讲人是2017级曹林同学和2017级伍涛同学，主讲的内容是递归和设计原则，会议的参与者为WEB应用</span></span></span><span style=\"background-color:#ffffff\"><span style=\"color:#000000\"><span style=\"font-size:16px\">专业</span></span></span><span style=\"font-size:inheritpx\"><span style=\"font-size:18px\"><span style=\"line-height:1.75\">团队全体成员。</span></span></span></span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"font-size:18px\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\"><span style=\"letter-spacing:1px\">会议初始兰老师对团队上一周的情况进行了总结，对跑步情况进行清查，对大家提出的团队运行建议逐条进行解释总结，提出对团队运行需要更新团队管理方案，细节细化，对团队每周进行的报告会进行量化考核等建议。然后曹林同学主讲递归算法，讲了两个经典的递归问题，斐波拉契数列和汉诺塔，讲解了写递归需要对注意事项，还有对递归算法的优化方法；伍涛同学也粗略讲解了七种设计原则，分别是开闭原则，单一职责原则，接口隔离原则，迪米特法则，里式替换原则，依赖倒置原则、合成复用原则，详细的实现方法在下一周报告会在进行分享。最后，指导老师兰全祥老师对此次会议做出了总结，对大一和大二的同学布置了下一周的学习任务，至此会议结束。</span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"204\" title=\"2017108041051572168048017.jpg\" alt=\"2017108041051572168048017.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041051572168048017.jpg\"/></div><p></p><div class=\"media-wrap image-wrap\"><img id=\"205\" title=\"2017108041051572168048066.jpg\" alt=\"2017108041051572168048066.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041051572168048066.jpg\"/></div><p></p>', 11, 1, 0, '2019-10-27 00:00:00', NULL);
INSERT INTO `article` VALUES (169, '201710804172', '学术报告会——线性表的链式表示、实现以及简单应用和移位指令（原码、反码、补码）', 5, 13, '本报讯（朱守平报道）7月8日7:40，WEB应用专业团队在励志楼403会议室召开了学术报告会——线性表的链式表示、实现以及简单应用和移位指令（原码、反码、补码）。WEB指导教师兰全祥以及WEB应用团队全员出席了此次会议。 此次会议的主要内容', '线性表 移位指令', 'http://img.pzhuweb.cn/2017108041721562748135110.jpg', '{\"blocks\":[{\"key\":\"8hp8\",\"text\":\"本报讯（朱守平报道）7月8日7:40，WEB应用专业团队在励志楼403会议室召开了学术报告会——线性表的链式表示、实现以及简单应用和移位指令（原码、反码、补码）。WEB指导教师兰全祥以及WEB应用团队全员出席了此次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":110,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"cuo09\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"5sco5\",\"text\":\"此次会议的主要内容包括朱守平讲解线性表的链式表示、实现以及简单应用，范江林讲解移位指令（原码、反码、补码）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":54,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"523p6\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"1i7ga\",\"text\":\"首先由2018级软件工程朱守平对线性表的链式表示、实现以及简单应用进行了讲解，其主要讲了线性表的链式结构（单链表、双链表、循环链表）的概念以及插入、删除和创建操作，顺序存储结构和链式存储结构的比较以及顺序存储结构和链式存储结构的实际应用情景。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":121,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"2bo22\",\"text\":\"然后由2018级计算机科学与技术范江林对移位指令（原码、反码、补码）进行了讲解，其主要讲解了计算机表示整式的方式（原码、反码、补码），原码、反码、补码的发展以及移位。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":83,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"alm6j\",\"text\":\"在整个过程当中，兰全祥老师也进行了方向引导，让团队成员在勤思考方面的能力得到了锻炼以及在知识方面得到了扩充。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":54,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"4uglv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1in6j\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"cam50\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cftb9\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"8brs0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721562747935303.jpg\",\"type\":\"IMAGE\",\"width\":\"1000px\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721562747938807.jpg\",\"type\":\"IMAGE\",\"width\":\"1000px\"}}}}', '<p class=\"MsoNormal\"><span style=\"line-height:2\">本报讯（朱守平报道）7月8日7:40，WEB应用专业团队在励志楼403会议室召开了学术报告会——线性表的链式表示、实现以及简单应用和移位指令（原码、反码、补码）。WEB指导教师兰全祥以及WEB应用团队全员出席了此次会议。</span></p><p class=\"MsoNormal\"> </p><p class=\"MsoNormal\"><span style=\"line-height:2\">此次会议的主要内容包括朱守平讲解线性表的链式表示、实现以及简单应用，范江林讲解移位指令（原码、反码、补码）。</span></p><p class=\"MsoNormal\"> </p><p class=\"MsoNormal\"><span style=\"line-height:2\">首先由2018级软件工程朱守平对线性表的链式表示、实现以及简单应用进行了讲解，其主要讲了线性表的链式结构（单链表、双链表、循环链表）的概念以及插入、删除和创建操作，顺序存储结构和链式存储结构的比较以及顺序存储结构和链式存储结构的实际应用情景。</span></p><p class=\"MsoNormal\"><span style=\"line-height:2\">然后由2018级计算机科学与技术范江林对移位指令（原码、反码、补码）进行了讲解，其主要讲解了计算机表示整式的方式（原码、反码、补码），原码、反码、补码的发展以及移位。</span></p><p class=\"MsoNormal\"><span style=\"line-height:2\">在整个过程当中，兰全祥老师也进行了方向引导，让团队成员在勤思考方面的能力得到了锻炼以及在知识方面得到了扩充。</span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2017108041721562747935303.jpg\" width=\"1000px\" style=\"width:1000px\"/></div><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2017108041721562747938807.jpg\" width=\"1000px\" style=\"width:1000px\"/></div><p></p>', 16, 1, 0, '2019-07-08 00:00:00', NULL);
INSERT INTO `article` VALUES (170, '201510803075', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (171, '201710804169', 'JavaScript中的闭包', 1, 1, '1、闭包是什么？	定义：一个拥有许多变量和绑定了这些变量的环境的表达式（通常是一个函数），因而这些变量也是该表达式的一部分。		闭包就是一个函数, 一般是定义在外层函数中的内层函数，可以访问外部变量（函数）。(函数嵌套函数）    闭包产生', 'js闭包', 'http://img.pzhuweb.cn/2017108041691562301398839.jpg', '{\"blocks\":[{\"key\":\"bohjb\",\"text\":\"1、闭包是什么？\\n\\t定义：一个拥有许多变量和绑定了这些变量的环境的表达式（通常是一个函数），因而这些变量也是该表达式的一部分。\\n\\t\\t闭包就是一个函数, 一般是定义在外层函数中的内层函数，可以访问外部变量（函数）。(函数嵌套函数）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":114,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dbp0h\",\"text\":\"\\n    闭包产生条件:  函数嵌套 \\n\\t\\t           内部函数引用了外部函数的数据（变量/函数）\\n\\t\\t           外部函数执行\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":74,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6jsok\",\"text\":\"不可向外暴露内部函数引用的数据\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":4}},{\"key\":\"8524t\",\"text\":\"2、JavaScript中内存分为对堆内存和栈内存，堆内存存储数据类型值，栈内存提供javaScript代码执行的环境和存储基本类型值。\\n  堆内存的释放:  让所有引用堆内存地址的变量为null，即没有变量占用这段内存，浏览器会在空闲时进行垃圾回收。\\n  栈内存的释放:  一般情况下，当函数执行完，所形成的私有作用域（栈内存）会自动的释放，同时在栈内存中存放的值也会释放。\\n                        特殊情况下，函数执行完，当前形成的栈内存中，某些内容被栈内存以外的变量占用，此时栈内存不能释放。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":261,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bihna\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ej3v1\",\"text\":\"3、闭包有什么好处，运用在哪里？\\n（1）\\\"保存\\\"作用：形成不销毁的栈内存，把一些信息保存下来，供以后使用。 （延长了局部变量的生命周期）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":68,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"65qbo\",\"text\":\"\\n     function fn(){\\n         var n = 20;\\n         function f() {\\n            n++;\\n           console.log(n);\\n        }\\n       f();\\n       return f;\\n     }\\n     var x = fn();\\n    x();\\n    x();\\n   console.log(n);\\n        \\n        结果：21 22 23 10\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":243,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":6,\"length\":9,\"style\":\"COLOR-26A6A6\"},{\"offset\":30,\"length\":4,\"style\":\"COLOR-26A6A6\"},{\"offset\":36,\"length\":2,\"style\":\"COLOR-26A6A6\"},{\"offset\":51,\"length\":9,\"style\":\"COLOR-26A6A6\"},{\"offset\":79,\"length\":2,\"style\":\"COLOR-26A6A6\"},{\"offset\":139,\"length\":7,\"style\":\"COLOR-26A6A6\"},{\"offset\":161,\"length\":4,\"style\":\"COLOR-26A6A6\"},{\"offset\":167,\"length\":2,\"style\":\"COLOR-26A6A6\"},{\"offset\":15,\"length\":2,\"style\":\"ITALIC\"},{\"offset\":60,\"length\":1,\"style\":\"ITALIC\"},{\"offset\":94,\"length\":7,\"style\":\"ITALIC\"},{\"offset\":127,\"length\":1,\"style\":\"ITALIC\"},{\"offset\":146,\"length\":1,\"style\":\"ITALIC\"},{\"offset\":165,\"length\":2,\"style\":\"ITALIC\"},{\"offset\":169,\"length\":2,\"style\":\"ITALIC\"},{\"offset\":179,\"length\":1,\"style\":\"ITALIC\"},{\"offset\":188,\"length\":1,\"style\":\"ITALIC\"},{\"offset\":196,\"length\":7,\"style\":\"ITALIC\"},{\"offset\":208,\"length\":1,\"style\":\"ITALIC\"},{\"offset\":34,\"length\":2,\"style\":\"COLOR-458383\"},{\"offset\":78,\"length\":1,\"style\":\"COLOR-458383\"},{\"offset\":106,\"length\":1,\"style\":\"COLOR-458383\"},{\"offset\":38,\"length\":2,\"style\":\"COLOR-BCD42A\"},{\"offset\":94,\"length\":7,\"style\":\"BOLD\"},{\"offset\":165,\"length\":2,\"style\":\"BOLD\"},{\"offset\":179,\"length\":1,\"style\":\"BOLD\"},{\"offset\":188,\"length\":1,\"style\":\"BOLD\"},{\"offset\":196,\"length\":7,\"style\":\"BOLD\"},{\"offset\":208,\"length\":1,\"style\":\"BOLD\"},{\"offset\":94,\"length\":7,\"style\":\"COLOR-660E7A\"},{\"offset\":165,\"length\":2,\"style\":\"COLOR-660E7A\"},{\"offset\":179,\"length\":1,\"style\":\"COLOR-660E7A\"},{\"offset\":188,\"length\":1,\"style\":\"COLOR-660E7A\"},{\"offset\":196,\"length\":7,\"style\":\"COLOR-660E7A\"},{\"offset\":208,\"length\":1,\"style\":\"COLOR-660E7A\"},{\"offset\":102,\"length\":3,\"style\":\"COLOR-7A7A43\"},{\"offset\":204,\"length\":3,\"style\":\"COLOR-7A7A43\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7v7eu\",\"text\":\"（2）让函数外部可以操作函数内部的数据。\\n (3）“保护”作用：保护私有变量不被外界干扰\\n\\t在真实项目开发中，团队协助，应尽可能减少全局变量的使用，防止“全局变量污染”，\\n\\t可以把自己的代码封装到一个闭包中，让全局变量变成私有变量\\n \\t\\n       (function () {\\n           function fn(){\\n              console.log(1);\\n           }\\n          fn();\\n       })();\\n      (function () {\\n          function fn() {\\n            console.log(2);\\n          }\\n         fn()\\n       })();\\n4、产生：在嵌套的内部函数定义执行完成时\\n     死亡:  在嵌套的内部函数被垃圾回收时\\n\\n5、闭包缺点\\n函数执行完成后，函数内的局部变量没有释放，占用内存，容易造成内存泄漏。\\n解决：及时释放 （赋值为null）\\n\\n内存泄漏：占用的内存没有及时释放，内存泄漏积累多了容易造成内存溢出\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":495,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":127,\"length\":9,\"style\":\"COLOR-26A6A6\"},{\"offset\":152,\"length\":9,\"style\":\"COLOR-26A6A6\"},{\"offset\":246,\"length\":9,\"style\":\"COLOR-26A6A6\"},{\"offset\":270,\"length\":9,\"style\":\"COLOR-26A6A6\"},{\"offset\":161,\"length\":2,\"style\":\"ITALIC\"},{\"offset\":181,\"length\":7,\"style\":\"ITALIC\"},{\"offset\":220,\"length\":2,\"style\":\"ITALIC\"},{\"offset\":279,\"length\":2,\"style\":\"ITALIC\"},{\"offset\":298,\"length\":7,\"style\":\"ITALIC\"},{\"offset\":335,\"length\":2,\"style\":\"ITALIC\"},{\"offset\":181,\"length\":7,\"style\":\"BOLD\"},{\"offset\":298,\"length\":7,\"style\":\"BOLD\"},{\"offset\":181,\"length\":7,\"style\":\"COLOR-660E7A\"},{\"offset\":298,\"length\":7,\"style\":\"COLOR-660E7A\"},{\"offset\":189,\"length\":3,\"style\":\"COLOR-7A7A43\"},{\"offset\":306,\"length\":3,\"style\":\"COLOR-7A7A43\"},{\"offset\":193,\"length\":1,\"style\":\"COLOR-BCD42A\"},{\"offset\":310,\"length\":1,\"style\":\"COLOR-BCD42A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{}}', '<p><span style=\"line-height:1.75\">1、闭包是什么？<br/>	定义：一个拥有许多变量和绑定了这些变量的环境的表达式（通常是一个函数），因而这些变量也是该表达式的一部分。<br/>		闭包就是一个函数, 一般是定义在外层函数中的内层函数，可以访问外部变量（函数）。(函数嵌套函数）</span></p><p><span style=\"line-height:1.75\"><br/>    闭包产生条件:  函数嵌套 <br/>		           内部函数引用了外部函数的数据（变量/函数）<br/>		           外部函数执行</span></p><p style=\"text-indent:8em;\"><span style=\"line-height:1.75\">不可向外暴露内部函数引用的数据</span></p><p><span style=\"line-height:1.75\">2、JavaScript中内存分为对堆内存和栈内存，堆内存存储数据类型值，栈内存提供javaScript代码执行的环境和存储基本类型值。<br/>  堆内存的释放:  让所有引用堆内存地址的变量为null，即没有变量占用这段内存，浏览器会在空闲时进行垃圾回收。<br/>  栈内存的释放:  一般情况下，当函数执行完，所形成的私有作用域（栈内存）会自动的释放，同时在栈内存中存放的值也会释放。<br/>                        特殊情况下，函数执行完，当前形成的栈内存中，某些内容被栈内存以外的变量占用，此时栈内存不能释放。</span></p><p></p><p><span style=\"line-height:1.75\">3、闭包有什么好处，运用在哪里？<br/>（1）&quot;保存&quot;作用：形成不销毁的栈内存，把一些信息保存下来，供以后使用。 （延长了局部变量的生命周期）</span></p><p><span style=\"line-height:1.75\"><br/>     <span style=\"color:#26a6a6\">function </span><em>fn</em>(){<br/>         <span style=\"color:#26a6a6\">var </span><span style=\"color:#458383\">n </span><span style=\"color:#26a6a6\">= </span><span style=\"color:#bcd42a\">20</span>;<br/>         <span style=\"color:#26a6a6\">function </span><em>f</em>() {<br/>            <span style=\"color:#458383\">n</span><span style=\"color:#26a6a6\">++</span>;<br/>           <span style=\"color:#660e7a\"><em><strong>console</strong></em></span>.<span style=\"color:#7a7a43\">log</span>(<span style=\"color:#458383\">n</span>);<br/>        }<br/>       <em>f</em>();<br/>       <span style=\"color:#26a6a6\">return </span><em>f</em>;<br/>     }<br/>     <span style=\"color:#26a6a6\">var </span><span style=\"color:#660e7a\"><strong><em>x </em></strong></span><span style=\"color:#26a6a6\">= </span><em>fn</em>();<br/>    <strong><em><span style=\"color:#660e7a\">x</span></em></strong>();<br/>    <span style=\"color:#660e7a\"><strong><em>x</em></strong></span>();<br/>   <strong><span style=\"color:#660e7a\"><em>console</em></span></strong>.<span style=\"color:#7a7a43\">log</span>(<span style=\"color:#660e7a\"><strong><em>n</em></strong></span>);<br/>        <br/>        结果：21 22 23 10</span></p><p><span style=\"line-height:1.75\">（2）让函数外部可以操作函数内部的数据。<br/> (3）“保护”作用：保护私有变量不被外界干扰<br/>	在真实项目开发中，团队协助，应尽可能减少全局变量的使用，防止“全局变量污染”，<br/>	可以把自己的代码封装到一个闭包中，让全局变量变成私有变量<br/> 	<br/>       (<span style=\"color:#26a6a6\">function </span>() {<br/>           <span style=\"color:#26a6a6\">function </span><em>fn</em>(){<br/>              <span style=\"color:#660e7a\"><strong><em>console</em></strong></span>.<span style=\"color:#7a7a43\">log</span>(<span style=\"color:#bcd42a\">1</span>);<br/>           }<br/>          <em>fn</em>();<br/>       })();<br/>      (<span style=\"color:#26a6a6\">function </span>() {<br/>          <span style=\"color:#26a6a6\">function </span><em>fn</em>() {<br/>            <em><span style=\"color:#660e7a\"><strong>console</strong></span></em>.<span style=\"color:#7a7a43\">log</span>(<span style=\"color:#bcd42a\">2</span>);<br/>          }<br/>         <em>fn</em>()<br/>       })();<br/>4、产生：在嵌套的内部函数定义执行完成时<br/>     死亡:  在嵌套的内部函数被垃圾回收时<br/><br/>5、闭包缺点<br/>函数执行完成后，函数内的局部变量没有释放，占用内存，容易造成内存泄漏。<br/>解决：及时释放 （赋值为null）<br/><br/>内存泄漏：占用的内存没有及时释放，内存泄漏积累多了容易造成内存溢出</span></p>', 19, 1, 0, '2019-07-05 00:00:00', NULL);
INSERT INTO `article` VALUES (172, '201710804169', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (173, '201810804085', '学术报告会-JS中的闭包和图像处理中算法的运用', 5, 1, '本报讯（吴涛报导）7月4日7：40，WEB应用专业团队在砺志楼403会议室召开了学术报告会——JS中的闭包和图像处理中算法的运用。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。此次会议的主要内容报告黄金树讲解JavaScri', 'Java图像处理', 'http://img.pzhuweb.cn/2018108040851562319992145.jpg', '{\"blocks\":[{\"key\":\"a7e97\",\"text\":\"本报讯（吴涛报导）7月4日7：40，WEB应用专业团队在砺志楼403会议室召开了学术报告会——JS中的闭包和图像处理中算法的运用。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":47,\"style\":\"COLOR-000000\"},{\"offset\":64,\"length\":32,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":47,\"style\":\"FONTSIZE-medium\"},{\"offset\":64,\"length\":32,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":47,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":64,\"length\":32,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":96,\"style\":\"LINEHEIGHT-2\"},{\"offset\":47,\"length\":17,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8jm96\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3n3mm\",\"text\":\"此次会议的主要内容报告黄金树讲解JavaScript中的闭包，赵泽忠讲解图像处理中算法的运用；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":47,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":47,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":47,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":47,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"q8lr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1l2k6\",\"text\":\"首先，由2017级软件工程黄金树介绍了我们为什么需要闭包，闭包是一种函数的嵌套使用，起作用就是保护数据，防止数据被外部修改；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":62,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":62,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":62,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":62,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cb833\",\"text\":\"1.闭包实现的条件：1.函数实现嵌套；2.使用内部函数对外部函数的值进行修改；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":39,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":39,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":39,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"epjkc\",\"text\":\"2.闭包的产生：在嵌套内部的函数定义执行完成时；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":24,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":24,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a4mod\",\"text\":\"3.闭包的销毁：手动销毁或者窗口关闭的时候；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":22,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":22,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a3qfi\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b0aq1\",\"text\":\"然后，由2017级软件工程的赵泽忠讲解了java中图像处理的算法；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":33,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":33,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"da4js\",\"text\":\"1.讲解了位图和矢量图，现在的计算机系统大部分都是用的矢量图，保证了视图的质量；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":40,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":40,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fgold\",\"text\":\"2.讲解了像素和分辨率；像素：最小的分辨率单位；分辨率：决定了位图图像细节的精细程度；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":43,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":43,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"85du7\",\"text\":\"3.RGB模式：自然界的一切颜色都可以通过红、绿、蓝进行混合表示，RGB就是这样一种颜色表示的方法；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":50,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":50,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":50,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":50,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7t7n4\",\"text\":\"4.灰度值；传统的RGB模式有三种颜色通道，通过一种特殊的算法，可以把三种通道的算法转变成一种算法，这就是灰度值的算法;   \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":63,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":63,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":63,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":63,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7l4m3\",\"text\":\"   Gray = R x 0.299 + G x 0.587 + B x 1.114;\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":44,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":44,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":44,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":44,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bn35m\",\"text\":\"5.另外还讲了底片处理，Gramma矫正和图像直方图（灰度拉伸处理）等相关知识；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":40,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":40,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2ggoa\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"19c12\",\"text\":\"最后，兰全祥老师对于报告会的讲解技巧进行了总结，并表示要注重算法的学习，在编程中能够写出更加优质的代码；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":52,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":52,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":52,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":52,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9h53f\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ds8nh\",\"text\":\"通过本次会议，团队成员在专业学习上有了进一步的进展；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":26,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":26,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":26,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"529i7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9d7kh\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"divb3\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"c88js\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dcg2v\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"9aa92\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040851562319935146.jpg\",\"name\":\"QQ图片20190705174518.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":150,\"title\":\"2018108040851562319935146.jpg\",\"alt\":\"2018108040851562319935146.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040851562319972242.jpg\",\"name\":\"QQ图片20190705174545.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":153,\"title\":\"2018108040851562319972242.jpg\",\"alt\":\"2018108040851562319972242.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"line-height:2\"><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\">本报讯（吴涛报导）7月4日7：40，WEB应用专业团队在砺志楼403会议室召开了学术报告会——</span></span></span><strong>JS中的闭包和图像处理中算法的运用</strong><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\">。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。</span></span></span></span></p><p></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">此次会议的主要内容报告黄金树讲解JavaScript中的闭包，赵泽忠讲解图像处理中算法的运用；</span></span></span></span></p><p></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">首先，由2017级软件工程黄金树介绍了我们为什么需要闭包，闭包是一种函数的嵌套使用，起作用就是保护数据，防止数据被外部修改；</span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">1.闭包实现的条件：1.函数实现嵌套；2.使用内部函数对外部函数的值进行修改；</span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">2.闭包的产生：在嵌套内部的函数定义执行完成时；</span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">3.闭包的销毁：手动销毁或者窗口关闭的时候；</span></span></span></span></p><p></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">然后，由2017级软件工程的赵泽忠讲解了java中图像处理的算法；</span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">1.讲解了位图和矢量图，现在的计算机系统大部分都是用的矢量图，保证了视图的质量；</span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">2.讲解了像素和分辨率；像素：最小的分辨率单位；分辨率：决定了位图图像细节的精细程度；</span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">3.RGB模式：自然界的一切颜色都可以通过红、绿、蓝进行混合表示，RGB就是这样一种颜色表示的方法；</span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">4.灰度值；传统的RGB模式有三种颜色通道，通过一种特殊的算法，可以把三种通道的算法转变成一种算法，这就是灰度值的算法;   </span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">   Gray = R x 0.299 + G x 0.587 + B x 1.114;</span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">5.另外还讲了底片处理，Gramma矫正和图像直方图（灰度拉伸处理）等相关知识；</span></span></span></span></p><p></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">最后，兰全祥老师对于报告会的讲解技巧进行了总结，并表示要注重算法的学习，在编程中能够写出更加优质的代码；</span></span></span></span></p><p></p><p><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\">通过本次会议，团队成员在专业学习上有了进一步的进展；</span></span></span></span></p><p></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"150\" title=\"2018108040851562319935146.jpg\" alt=\"2018108040851562319935146.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040851562319935146.jpg\"/></div><p></p><div class=\"media-wrap image-wrap\"><img id=\"153\" title=\"2018108040851562319972242.jpg\" alt=\"2018108040851562319972242.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040851562319972242.jpg\"/></div><p></p>', 29, 1, 0, '2019-07-05 00:00:00', NULL);
INSERT INTO `article` VALUES (174, '201810804085', 'FreeMarker模板技术的简单实践', 2, 2, '什么是freeMarker模板技术？FreeMarker是一种模板引擎技术 一个基于模板生成文本输出的通用工具，使用纯Java编写，具有以下特点: （1）FreeMakrer适合被设计用来生成HTML Web页面，特别是基于MVC模式的应用', 'FreeMarker', '', '{\"blocks\":[{\"key\":\"63ibh\",\"text\":\"什么是freeMarker模板技术？\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"syntax\":\"java\"}},{\"key\":\"2b952\",\"text\":\"FreeMarker是一种模板引擎技术 \\n一个基于模板生成文本输出的通用工具，使用纯Java编写，具有以下特点: \\n（1）FreeMakrer适合被设计用来生成HTML Web页面，特别是基于MVC模式的应用程序。 \\n（2）虽然FreeMakrer具有一些编程的能力，但通常由Java程序准备要显示的数据，由FreeMakrer生成页面，通过模板显示准备的数据 。 \\n（3）FreeMakrer不是一个Web应用框架，而适合作为Web应用框架一个组件。 \\n（4）FreeMakrer与容器无关，因为它并不知道HTTP或Servlet。 \\n（5）Freemarker 更适合作为Model2框架（如Struts）的视图组件，你也可以在模板中使用JSP标记库。 \\n（6）Freemarker 是免费的 。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":350,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"iah1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3838d\",\"text\":\"理论上FreeMarker技术可以生成各种各样的页面；简单的我们生成一个实体类；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"148is\",\"text\":\"1.建立maven工程，并引入依赖（建立java工程并且导入jar包也可以实现）‘\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1bcc3\",\"text\":\"<dependency>\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":11,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1,\"length\":10,\"style\":\"COLOR-3F7F7F\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"db0u7\",\"text\":\" <groupId>org.freemarker</groupId>\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":34,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1,\"length\":33,\"style\":\"FONTSIZE-inherit\"},{\"offset\":1,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":9,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":24,\"length\":2,\"style\":\"COLOR-008080\"},{\"offset\":33,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":2,\"length\":7,\"style\":\"COLOR-3F7F7F\"},{\"offset\":26,\"length\":7,\"style\":\"COLOR-3F7F7F\"},{\"offset\":10,\"length\":14,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"aphd1\",\"text\":\" <artifactId>freemarker</artifactId>\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1,\"length\":35,\"style\":\"FONTSIZE-inherit\"},{\"offset\":1,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":12,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":23,\"length\":2,\"style\":\"COLOR-008080\"},{\"offset\":35,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":2,\"length\":10,\"style\":\"COLOR-3F7F7F\"},{\"offset\":25,\"length\":10,\"style\":\"COLOR-3F7F7F\"},{\"offset\":13,\"length\":10,\"style\":\"UNDERLINE\"},{\"offset\":13,\"length\":10,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bnhrl\",\"text\":\" <version>2.3.19</version>\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1,\"length\":25,\"style\":\"FONTSIZE-inherit\"},{\"offset\":1,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":9,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":16,\"length\":2,\"style\":\"COLOR-008080\"},{\"offset\":25,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":2,\"length\":7,\"style\":\"COLOR-3F7F7F\"},{\"offset\":18,\"length\":7,\"style\":\"COLOR-3F7F7F\"},{\"offset\":10,\"length\":6,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1sj4h\",\"text\":\" </dependency>\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-2\"},{\"offset\":1,\"length\":13,\"style\":\"FONTSIZE-inherit\"},{\"offset\":1,\"length\":2,\"style\":\"COLOR-008080\"},{\"offset\":13,\"length\":1,\"style\":\"COLOR-008080\"},{\"offset\":3,\"length\":10,\"style\":\"COLOR-3F7F7F\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"79tr1\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"k5i6\",\"text\":\"2.建立一个class.ftl模板文件，把一个类的类名，属性，和包名分别用${className},${property},${pakeger}进行替换，这个名字都可以自己取；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":88,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5turs\",\"text\":\"package ${pakeger};\\n\\npublic class ${className} {\\n    \\n    private Integer ${property}Id;\\n    private String ${property}Name;\\n    private Integer ${property}Age;\\n    \\n    public ${className}() {\\n        \\n    }\\n\\n    public ${className}(Integer ${property}Id, String ${property}Name, Integer ${property}Age) {\\n        super();\\n        this.${property}Id = ${property}Id;\\n        this.${property}Name = ${property}Name;\\n        this.${property}Age = ${property}Age;\\n    }\\n\\n    @Override\\n    public String toString() {\\n        return \\\"${className} [${property}Id=\\\" + ${property}Id + \\\", ${property}Name=\\\" + ${property}Name + \\\", ${property}Age=\\\" + ${property}Age + \\\"]\\\";\\n    }\\n\\n    public Integer get${className}Id() {\\n        return ${property}Id;\\n    }\\n\\n    public void set${className}Id(Integer ${property}Id) {\\n        this.${property}Id = ${property}Id;\\n    }\\n\\n    public String get${className}Name() {\\n        return ${property}Name;\\n    }\\n\\n    public void set${className}Name(String ${property}Name) {\\n        this.${property}Name = ${property}Name;\\n    }\\n\\n    public Integer get${className}Age() {\\n        return ${property}Age;\\n    }\\n\\n    public void set${className}Age(Integer ${property}Age) {\\n        this.${property}Age = ${property}Age;\\n    }\\n\\n}\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1252,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"syntax\":\"java\"}},{\"key\":\"418a3\",\"text\":\"3.编写java代码对class.ftl文件进行“克隆”，需要在java代码中指定${className},${property},${pakeger}的值；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":79,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"a1mda\",\"text\":\"4.点击运行即可生成对应的实体类；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"81dr3\",\"text\":\"package cn.itcast.freemarker.test;\\n\\nimport java.io.File;\\nimport java.io.FileOutputStream;\\nimport java.io.IOException;\\nimport java.io.OutputStreamWriter;\\nimport java.io.Writer;\\nimport java.util.HashMap;\\nimport java.util.Map;\\n\\nimport freemarker.template.Configuration;\\nimport freemarker.template.Template;\\nimport freemarker.template.TemplateException;\\nimport freemarker.template.TemplateExceptionHandler;\\n\\npublic class FreeMarkerTest {\\n\\t\\n\\tpublic static void main(String[] args) throws IOException, TemplateException {\\n\\t     // 创建Freemarker对象的配置对象\\n\\t        Configuration cfg = new Configuration();\\n\\t        // 设定默认的位置（路径）\\n\\t        cfg.setDirectoryForTemplateLoading(new File(\\\"\\\"));\\n\\t        cfg.setDefaultEncoding(\\\"UTF-8\\\");\\n\\t        cfg.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);\\n\\n\\t        // 数据\\n\\t        Map<String,String> paramMap = new HashMap<>();\\n\\n\\t        String className = \\\"Teacher\\\";\\n\\t        String property = className.toLowerCase();\\n\\t        String pakeger = \\\"cn.itcast.freemarker.entity\\\";\\n\\n\\t        paramMap.put(\\\"pakeger\\\", pakeger);\\n\\t        paramMap.put(\\\"className\\\", className);\\n\\t        paramMap.put(\\\"property\\\", property);\\n\\n\\t        Template t = cfg.getTemplate(\\\"class.ftl\\\");\\n\\t        // 组合生成\\n\\t        Writer out = new OutputStreamWriter(new FileOutputStream(new File(\\\"Teacher.java\\\")), \\\"UTF-8\\\");\\n\\t        // 执行\\n\\t        t.process(paramMap, out);\\n\\t    }\\n\\n}\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1394,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}}],\"entityMap\":{}}', '<p><span style=\"line-height:2\">什么是freeMarker模板技术？</span></p><p><span style=\"line-height:2\">FreeMarker是一种模板引擎技术 <br/>一个基于模板生成文本输出的通用工具，使用纯Java编写，具有以下特点: <br/>（1）FreeMakrer适合被设计用来生成HTML Web页面，特别是基于MVC模式的应用程序。 <br/>（2）虽然FreeMakrer具有一些编程的能力，但通常由Java程序准备要显示的数据，由FreeMakrer生成页面，通过模板显示准备的数据 。 <br/>（3）FreeMakrer不是一个Web应用框架，而适合作为Web应用框架一个组件。 <br/>（4）FreeMakrer与容器无关，因为它并不知道HTTP或Servlet。 <br/>（5）Freemarker 更适合作为Model2框架（如Struts）的视图组件，你也可以在模板中使用JSP标记库。 <br/>（6）Freemarker 是免费的 。</span></p><p></p><p><span style=\"line-height:2\">理论上FreeMarker技术可以生成各种各样的页面；简单的我们生成一个实体类；</span></p><p><span style=\"line-height:2\">1.建立maven工程，并引入依赖（建立java工程并且导入jar包也可以实现）‘</span></p><p><span style=\"font-size:inheritpx\"><span style=\"line-height:2\"><span style=\"color:#008080\">&lt;</span><span style=\"color:#3f7f7f\">dependency</span><span style=\"color:#008080\">&gt;</span></span></span></p><p><span style=\"line-height:2\"> <span style=\"font-size:inheritpx\"><span style=\"color:#008080\">&lt;</span><span style=\"color:#3f7f7f\">groupId</span><span style=\"color:#008080\">&gt;</span><span style=\"color:#000000\">org.freemarker</span><span style=\"color:#008080\">&lt;/</span><span style=\"color:#3f7f7f\">groupId</span><span style=\"color:#008080\">&gt;</span></span></span></p><p><span style=\"line-height:2\"> <span style=\"font-size:inheritpx\"><span style=\"color:#008080\">&lt;</span><span style=\"color:#3f7f7f\">artifactId</span><span style=\"color:#008080\">&gt;</span><u><span style=\"color:#000000\">freemarker</span></u><span style=\"color:#008080\">&lt;/</span><span style=\"color:#3f7f7f\">artifactId</span><span style=\"color:#008080\">&gt;</span></span></span></p><p><span style=\"line-height:2\"> <span style=\"font-size:inheritpx\"><span style=\"color:#008080\">&lt;</span><span style=\"color:#3f7f7f\">version</span><span style=\"color:#008080\">&gt;</span><span style=\"color:#000000\">2.3.19</span><span style=\"color:#008080\">&lt;/</span><span style=\"color:#3f7f7f\">version</span><span style=\"color:#008080\">&gt;</span></span></span></p><p><span style=\"line-height:2\"> <span style=\"font-size:inheritpx\"><span style=\"color:#008080\">&lt;/</span><span style=\"color:#3f7f7f\">dependency</span><span style=\"color:#008080\">&gt;</span></span></span></p><p><span style=\"line-height:2\"> </span></p><p><span style=\"line-height:2\">2.建立一个class.ftl模板文件，把一个类的类名，属性，和包名分别用${className},${property},${pakeger}进行替换，这个名字都可以自己取；</span></p><pre data-lang=\"java\" class=\"lang-java\"><code class=\"lang-java\"><span style=\"line-height:2\">package ${pakeger};<br/><br/>public class ${className} {<br/>    <br/>    private Integer ${property}Id;<br/>    private String ${property}Name;<br/>    private Integer ${property}Age;<br/>    <br/>    public ${className}() {<br/>        <br/>    }<br/><br/>    public ${className}(Integer ${property}Id, String ${property}Name, Integer ${property}Age) {<br/>        super();<br/>        this.${property}Id = ${property}Id;<br/>        this.${property}Name = ${property}Name;<br/>        this.${property}Age = ${property}Age;<br/>    }<br/><br/>    @Override<br/>    public String toString() {<br/>        return &quot;${className} [${property}Id=&quot; + ${property}Id + &quot;, ${property}Name=&quot; + ${property}Name + &quot;, ${property}Age=&quot; + ${property}Age + &quot;]&quot;;<br/>    }<br/><br/>    public Integer get${className}Id() {<br/>        return ${property}Id;<br/>    }<br/><br/>    public void set${className}Id(Integer ${property}Id) {<br/>        this.${property}Id = ${property}Id;<br/>    }<br/><br/>    public String get${className}Name() {<br/>        return ${property}Name;<br/>    }<br/><br/>    public void set${className}Name(String ${property}Name) {<br/>        this.${property}Name = ${property}Name;<br/>    }<br/><br/>    public Integer get${className}Age() {<br/>        return ${property}Age;<br/>    }<br/><br/>    public void set${className}Age(Integer ${property}Age) {<br/>        this.${property}Age = ${property}Age;<br/>    }<br/><br/>}<br/></span></code></pre><p><span style=\"line-height:2\">3.编写java代码对class.ftl文件进行“克隆”，需要在java代码中指定${className},${property},${pakeger}的值；</span></p><p><span style=\"line-height:2\">4.点击运行即可生成对应的实体类；</span></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"line-height:2\">package cn.itcast.freemarker.test;<br/><br/>import java.io.File;<br/>import java.io.FileOutputStream;<br/>import java.io.IOException;<br/>import java.io.OutputStreamWriter;<br/>import java.io.Writer;<br/>import java.util.HashMap;<br/>import java.util.Map;<br/><br/>import freemarker.template.Configuration;<br/>import freemarker.template.Template;<br/>import freemarker.template.TemplateException;<br/>import freemarker.template.TemplateExceptionHandler;<br/><br/>public class FreeMarkerTest {<br/>	<br/>	public static void main(String[] args) throws IOException, TemplateException {<br/>	     // 创建Freemarker对象的配置对象<br/>	        Configuration cfg = new Configuration();<br/>	        // 设定默认的位置（路径）<br/>	        cfg.setDirectoryForTemplateLoading(new File(&quot;&quot;));<br/>	        cfg.setDefaultEncoding(&quot;UTF-8&quot;);<br/>	        cfg.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);<br/><br/>	        // 数据<br/>	        Map&lt;String,String&gt; paramMap = new HashMap&lt;&gt;();<br/><br/>	        String className = &quot;Teacher&quot;;<br/>	        String property = className.toLowerCase();<br/>	        String pakeger = &quot;cn.itcast.freemarker.entity&quot;;<br/><br/>	        paramMap.put(&quot;pakeger&quot;, pakeger);<br/>	        paramMap.put(&quot;className&quot;, className);<br/>	        paramMap.put(&quot;property&quot;, property);<br/><br/>	        Template t = cfg.getTemplate(&quot;class.ftl&quot;);<br/>	        // 组合生成<br/>	        Writer out = new OutputStreamWriter(new FileOutputStream(new File(&quot;Teacher.java&quot;)), &quot;UTF-8&quot;);<br/>	        // 执行<br/>	        t.process(paramMap, out);<br/>	    }<br/><br/>}<br/></span></code></pre>', 20, 1, 0, '2019-07-06 00:00:00', NULL);
INSERT INTO `article` VALUES (175, '201810801070', '学术报告会——JS模块化和JAVA（清洁员）游戏开发', 5, 1, '本报讯（杨新宇报道）7月6日7：40，WEB应用团队在励志楼403会议室召开了学术报告会——JS模块化和JAVA清洁员游戏开发。此次会议的主要内容报告有曹林讲解JS模块化，赵修俊讲解JAVA游戏开发（清洁员游戏）。首先，由2017级软件工程', '新闻', 'http://img.pzhuweb.cn/2018108010701562485114153.jpg', '{\"blocks\":[{\"key\":\"2jjto\",\"text\":\"本报讯（杨新宇报道）7月6日7：40，WEB应用团队在励志楼403会议室召开了学术报告会——JS模块化和JAVA清洁员游戏开发。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":64,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"68cm7\",\"text\":\"此次会议的主要内容报告有曹林讲解JS模块化，赵修俊讲解JAVA游戏开发（清洁员游戏）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"a2jm4\",\"text\":\"首先，由2017级软件工程曹林讲解：对模块化的理解：（暴露，引入，依赖）将复杂程序按一定规则封装成几块，并将其组合在一起，块内数据与实现是私有的，只向外部暴露一些接口与外部设备通信。 产生的原因：耦合度很高，关联性强，命名空间受到污染。 模块化的作用：降低耦合度，降低代码复杂度，解决命名空间的污染。 模块化的历史： 全局function模式、namespace模式。模块规模化的好处：避免命名冲突，更好的分离，按需加载，更高的复用性，维护性更高。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":224,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"5ttng\",\"text\":\"然后由2017级软件工程赵修俊介绍： 介绍了课前认识：awt，swing，绘图，多线程，文件读取，反射。 游戏技术难点：物体生成，碰撞检测，移动，消失，敌人攻击性等。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":83,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a5bl\",\"text\":\"最后，吴涛同学和兰全祥老师对本次会议进行了总结，兰老师并表示要在暑假里开发Java游戏。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":44,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5coou\",\"text\":\"通过本次会议，团队成员在JS模块化与Java学习上，有了进一步的了解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":35,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bp66r\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1grd1\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"ekobi\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6kbjb\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"6iish\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701562484722270.jpg\",\"type\":\"IMAGE\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701562484726869.jpg\",\"type\":\"IMAGE\"}}}}', '<p class=\"MsoNormal\"><span style=\"line-height:1.75\">本报讯（杨新宇报道）7月6日7：40，WEB应用团队在励志楼403会议室召开了学术报告会——JS模块化和JAVA清洁员游戏开发。</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">此次会议的主要内容报告有曹林讲解JS模块化，赵修俊讲解JAVA游戏开发（清洁员游戏）。</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\">首先，由2017级软件工程曹林讲解：对模块化的理解：（暴露，引入，依赖）将复杂程序按一定规则封装成几块，并将其组合在一起，块内数据与实现是私有的，只向外部暴露一些接口与外部设备通信。 产生的原因：耦合度很高，关联性强，命名空间受到污染。 模块化的作用：降低耦合度，降低代码复杂度，解决命名空间的污染。 模块化的历史： 全局function模式、namespace模式。模块规模化的好处：避免命名冲突，更好的分离，按需加载，更高的复用性，维护性更高。</span></p><p><span style=\"line-height:1.75\">然后由2017级软件工程赵修俊介绍： 介绍了课前认识：awt，swing，绘图，多线程，文件读取，反射。 游戏技术难点：物体生成，碰撞检测，移动，消失，敌人攻击性等。</span></p><p><span style=\"line-height:1.75\">最后，吴涛同学和兰全祥老师对本次会议进行了总结，兰老师并表示要在暑假里开发Java游戏。</span></p><p><span style=\"line-height:1.75\">通过本次会议，团队成员在JS模块化与Java学习上，有了进一步的了解。</span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701562484722270.jpg\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701562484726869.jpg\"/></div><p></p>', 38, 1, 0, '2019-07-07 00:00:00', NULL);
INSERT INTO `article` VALUES (176, '201810801070', '深度优先、广度优先与启发式搜索A*', 3, 15, '1、 深度优先搜索（1） 定义：深度优先搜索（DFS）：是一种用于遍历或者搜索树和图得算法。深度优先总是对最近才发现的结点v的边出发进行探索，直到该结点的所有出发边都被发现了为止。一旦结点v的所有出发边都被发现，搜索则“回溯”到v的前驱结点', 'A*', 'http://img.pzhuweb.cn/2018108010701563029948421.jpg', '{\"blocks\":[{\"key\":\"1cs90\",\"text\":\"1、 深度优先搜索\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"BOLD\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":9,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"1kql8\",\"text\":\"（1） 定义：深度优先搜索（DFS）：是一种用于遍历或者搜索树和图得算法。深度优先总是对最近才发现的结点v的边出发进行探索，直到该结点的所有出发边都被发现了为止。一旦结点v的所有出发边都被发现，搜索则“回溯”到v的前驱结点，然后搜索该前驱结点的出发边。（该过程一直持续到从源结点可以达到的所有结点都被发现为止）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":152,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":156,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":44,\"length\":2,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"r2ul\",\"text\":\"（2） 实现方法：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":5,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"apibf\",\"text\":\"一、 首先将根节点放入stack中\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":14,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"73utf\",\"text\":\"二、 从stack中取出第一个节点，并检验是否为目标。如果找到目标，则结束搜索并传回结果。否则将它某个尚未检验过的直接子节点加入stack中。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":68,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":71,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"bl319\",\"text\":\"三、 重复步骤二。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":6,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"13edu\",\"text\":\"四、 如果不存在未检测过的直接子节点，将上一级节点加入stack中。重复步骤二。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":37,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"fv9e4\",\"text\":\"五、 重复步骤四\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":5,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"5c9vn\",\"text\":\"六、 若stack为空，表示整张图都检查过了\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":19,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"886b6\",\"text\":\"（3） 图形演示\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":4,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"du0la\",\"text\":\"为每个顶点设立一个“访问标志”。首先将图中每个顶点的访问标志设为 false,  之后搜索图中每个顶点，如果未被访问，则以该顶点为起始点，进行深度优先遍历，否则继续检查下一顶点。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"FONTSIZE-14pt\"},{\"offset\":41,\"length\":48,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":26,\"style\":\"COLOR-333333\"},{\"offset\":41,\"length\":48,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":89,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":26,\"length\":13,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":2}},{\"key\":\"32t0o\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1vtsj\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"csevk\",\"text\":\"访问指定的起始顶点；若当前访问的顶点的邻接顶点有未被访问的，则任选一个访问之；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":39,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":39,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":2}},{\"key\":\"6l0ik\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"e81eu\",\"text\":\"反之，退回到最近访问过的顶点；直到与起始顶点相通的全部顶点都访问完毕；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":35,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":35,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":35,\"style\":\"COLOR-333333\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"qt1v\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"f29d2\",\"text\":\"回退到1，发现了新的没有被访问的结点\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":18,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":18,\"style\":\"COLOR-333333\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"50a8b\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{}},{\"key\":\"ejcu9\",\"text\":\"继续回退，回退到0再也找不到新的结点了，那么回退，回退到起始顶点，结束搜索\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":37,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":37,\"style\":\"COLOR-333333\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"e9746\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":4}],\"data\":{}},{\"key\":\"43sng\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8qjoa\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":5}],\"data\":{}},{\"key\":\"9q6ce\",\"text\":\"顶点的访问序列为：  v0 , v1 , v4 , v5 , v6 , v2 , v3（不唯一）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"FONTSIZE-14pt\"},{\"offset\":10,\"length\":38,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":9,\"style\":\"COLOR-333333\"},{\"offset\":10,\"length\":38,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":48,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"908vs\",\"text\":\"实现过程：依靠栈，一维数组和图的邻接矩阵存储方式\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":24,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":24,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"14a3u\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":6}],\"data\":{}},{\"key\":\"efq86\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"64mil\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":7}],\"data\":{}},{\"key\":\"dq3ts\",\"text\":\"图的邻接矩阵存储方式（如上图）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":15,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":15,\"style\":\"COLOR-333333\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"ad8dm\",\"text\":\"（4）存储方式\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":7,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":7,\"style\":\"COLOR-333333\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"20l39\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"1l45o\",\"text\":\"一、 邻接表\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":2,\"style\":\"COLOR-333333\"},{\"offset\":3,\"length\":3,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":2}},{\"key\":\"3lm6a\",\"text\":\"二、 邻接矩阵\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":4,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":2,\"style\":\"COLOR-333333\"},{\"offset\":3,\"length\":4,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"3vilh\",\"text\":\"（5） 分析\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":3,\"style\":\"COLOR-333333\"},{\"offset\":4,\"length\":2,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"bpl8q\",\"text\":\"再遍历图时，对图中每一个顶点之多调用一次DFS函数，因为一旦某个顶点被标志成已经被访问，就不再从才它出发进行搜索。因此用二维数组表示邻接表时，查找某个点的时间复杂度为O（n2)，用邻接表时为O（n + e）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":104,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":104,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":104,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":86,\"length\":1,\"style\":\"SUPERSCRIPT\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":2}},{\"key\":\"13k9v\",\"text\":\"（6） 用途\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":3,\"style\":\"COLOR-333333\"},{\"offset\":4,\"length\":2,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"8ths8\",\"text\":\"一、 寻找两个点的路径\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":8,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":2,\"style\":\"COLOR-333333\"},{\"offset\":3,\"length\":8,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"2mgkj\",\"text\":\"二、 用于更高级算法的子程序（Tarjan，连通图，强连通图的解）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":30,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":2,\"style\":\"COLOR-333333\"},{\"offset\":3,\"length\":30,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"bmer6\",\"text\":\"（7）拓展：爬山法（是对深度优先的改进算法），使用某一种贪心算法（评估函数）来帮助我们决定在搜索空间中向哪一个方向搜索。（总是选择局部最优，有无解的风险）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"FONTSIZE-14pt\"},{\"offset\":37,\"length\":40,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":77,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":77,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":33,\"length\":4,\"style\":\"FONTSIZE-16pt\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"6bsud\",\"text\":\"2、 广度优先搜索\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"BOLD\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":9,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"9rl0i\",\"text\":\"（1） 定义：广度优先搜索（BFS）：是一种图形搜索算法，简单的说BFS就是从根结点开始，沿着树的宽度（或者图顶点的度）遍历树或者图的结点。如果所有的结点都被访问，则算法终止。 (也是许多重要图论算法的原型，Prim最小生成树，Dijkstra的单源最短路径)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":126,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":130,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"crcrd\",\"text\":\"（2） 实现方法： \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":6,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"8ogg3\",\"text\":\"一、 首先将根节点放入队列中。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":12,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"8c5o5\",\"text\":\"二、 从队列中取出第一个结点，并检验它是否为目标，如果找到目标，则结束搜索并传回结果，否则就将它所有的尚未检验过的直接子节点加入队列中。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":65,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":68,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"943dj\",\"text\":\"三、 当队列为空时，表示整张图都检查过了，则没有找到目标。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":26,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"4a9qk\",\"text\":\"四、 重复步骤二。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":6,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"55djr\",\"text\":\"（3） 图形演示：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":5,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"adf79\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f5cou\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":8}],\"data\":{}},{\"key\":\"bqdlr\",\"text\":\"（4） 储存方法：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":5,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":9,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"1hsng\",\"text\":\"一、 邻接表\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"8es58\",\"text\":\"二、 邻接矩阵\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":4,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"f6qpm\",\"text\":\"（5） 分析：空间复杂度：因为所有的结点都必须被储存，因此空间复杂度为O（|V| + |E|）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":43,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":47,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"7b0m\",\"text\":\"时间复杂度：最差的情况下，BFS必须查找所有到可能结点的所有路径，因此其时间复杂度为O（|V| + |E|）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":55,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":55,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"8hm63\",\"text\":\"（6） 用途：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"a4tei\",\"text\":\"一、 查找连接组件中的所有结点。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":13,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"erlrt\",\"text\":\"二、 查找非加权图中任两点的最短路径\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":15,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"a9dgh\",\"text\":\"三、 测试是否为二分图（二分图：能被两种颜色着色的图）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":24,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":27,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"4260h\",\"text\":\"（7） 从起点开始，首先遍历起点周围邻近的点，然后再遍历已经遍历过的点邻近的点，逐步的向外扩散，直到找到终。这种算法，就像洪水一样向外扩张。算法的过程如下图：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":79,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":54,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":70,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":79,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":54,\"length\":16,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"froin\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9v277\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":9}],\"data\":{}},{\"key\":\"5p0ih\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"apj61\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":10}],\"data\":{}},{\"key\":\"es29r\",\"text\":\"   （8） 顺便提一下：光束搜索（是对广度优先搜索的改进）使用某种贪心算法（评估函数），在每一层中只有满意的结点会被保留（即束宽），其他结点则被永久抛弃。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":78,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":78,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":63,\"length\":2,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"buf63\",\"text\":\"3、 Dijkstra：算法用来寻求图形中节点之间的最短路径，最终得到一个最短路径树。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"BOLD\"},{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":11,\"style\":\"FONTSIZE-20\"},{\"offset\":11,\"length\":32,\"style\":\"FONTSIZE-14pt\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"ajpk1\",\"text\":\"（1）算法步骤:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"6i8l4\",\"text\":\"一、 初始时，S只包含源点，即S={v}，v的距离为0。U包含除v外的其他顶点，即U={其他顶点}，若v与U中顶点u有边，则<u, v>正常有权值，若u不是v的出边邻接点，则<u, v> 权值为无。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":96,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":99,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":3,\"length\":96,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"94v0e\",\"text\":\"二、 从U中选取一个距离v最小的顶点k，把k加入S中（该选定的距离就是v到k的最短路径长度）。   \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":47,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":50,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":3,\"length\":47,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"fuirg\",\"text\":\"三、 以k为新考虑的中间点，修改U中各顶点的距离；若从源点v到顶点u的距离（经过顶点k）比原来距离（不经过顶点k）短，则修改顶点u\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":62,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":65,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":3,\"length\":62,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"ahn4v\",\"text\":\" 的距离值，修改后的距离值  =  从源点v到k边上的权  + 顶点k的距离到u边上的权 。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":46,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":13,\"style\":\"FONTSIZE-14pt\"},{\"offset\":15,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":18,\"length\":11,\"style\":\"FONTSIZE-14pt\"},{\"offset\":30,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":32,\"length\":14,\"style\":\"FONTSIZE-14pt\"},{\"offset\":6,\"length\":8,\"style\":\"COLOR-FF0000\"},{\"offset\":15,\"length\":2,\"style\":\"COLOR-FF0000\"},{\"offset\":18,\"length\":11,\"style\":\"COLOR-FF0000\"},{\"offset\":30,\"length\":1,\"style\":\"COLOR-FF0000\"},{\"offset\":32,\"length\":14,\"style\":\"COLOR-FF0000\"},{\"offset\":15,\"length\":2,\"style\":\"BOLD\"},{\"offset\":30,\"length\":1,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"6v5es\",\"text\":\"四、 重复步骤二和三，直到所有顶点都包含在S中。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":21,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":3,\"length\":21,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"3kr9p\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7jvq0\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":11}],\"data\":{}},{\"key\":\"224n9\",\"text\":\"   代码:\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8leha\",\"text\":\"void dij(int n, int to) {\\n\\tmemset(vis, false, sizeof(vis));  //标志数组\\n\\tfor (int i = 1; i <= n; i++) {\\n\\t\\tds[i] = d[to][i];//初始化\\n\\t}\\n\\tds[to] = 0;\\n\\tvis[to] = true;\\n\\tfor (int i = 1; i <= n; i++) {\\n\\t\\tint v = -1, max = MAX;\\n\\t\\tfor (int j = 1; j <= n; j++) {\\n\\t\\t\\tif (!vis[j] && max > ds[j]) {  //寻找一个结点与之有关联的边的最小值\\n\\t\\t\\t\\tmax = ds[j];\\n\\t\\t\\t\\tv = j;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif (v == -1)\\n\\t\\t\\tbreak;\\n\\t\\tvis[v] = true;\\n\\t\\tfor (int j = 1; j <= n; j++) {\\n\\t\\t\\tif (!vis[j] && ds[j] > ds[v] + d[v][j]) {   //更新最小边\\n\\t\\t\\t\\tds[j] = ds[v] + d[v][j];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":509,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"99d1i\",\"text\":\"（2）在算法中，需要计算每一个节点距离起点的总移动代价。同时，还需要一个优先队列结构。对于所有待遍历的节点，放入优先队列中会按照代价进行排序。在算法运行的过程中，每次都从优先队列中选出代价最小的作为下一个遍历的节点。直到到达终点为止。下面比较了不考虑节点移动代价差异的广度优先搜索和考虑移动代价的Dijkstra算法的运行结果：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":164,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":122,\"style\":\"COLOR-4D4D4D\"},{\"offset\":125,\"length\":39,\"style\":\"COLOR-4D4D4D\"},{\"offset\":0,\"length\":164,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":164,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":122,\"length\":3,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"pofi\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fo57f\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":12}],\"data\":{}},{\"key\":\"97cd6\",\"text\":\"4、最佳优先搜索（Best First）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"COLOR-4D4D4D\"},{\"offset\":0,\"length\":20,\"style\":\"BOLD\"},{\"offset\":0,\"length\":20,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":20,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"5096s\",\"text\":\"在有些情况下，如果我们可以预先计算出每一个节点到终点的距离（启发式距离），则我们可以利用这个信息更快的到达终点。（算法与Dijkstra算法类似）使用优先队列，每次始终选取到终点移动代价最小的节点作为下一个遍历的节点。如下图\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":112,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":112,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"bge61\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ejdr6\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":13}],\"data\":{}},{\"key\":\"6rdfa\",\"text\":\"如果起点和终点之间存在障碍物，则最佳优先算法找到的很可能不是最短路径\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":34,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":34,\"style\":\"COLOR-4D4D4D\"},{\"offset\":0,\"length\":34,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":34,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"5ko44\",\"text\":\"由此可见，在最佳优先搜索中是基于目标搜索，而不是基于完全搜索\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":30,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":30,\"style\":\"BOLD\"},{\"offset\":0,\"length\":30,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":30,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"textAlign\":\"left\",\"textIndent\":2}},{\"key\":\"b3uco\",\"text\":\"5、 A* \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":6,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"d0esv\",\"text\":\"（1） A*是一种在图形平面上，有多个节点的路径，求出最低通过成本的算法。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":33,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":37,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"8893a\",\"text\":\"（2） A* = 分支界限 + 扩展列表 + 可容许启发式。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":26,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":30,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":3,\"length\":27,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"a85bt\",\"text\":\"分支界限（暴力搜索）：广度优先队列式（先进先出）或以最小耗费（最大效益）优先的方式（优先队列分支限界）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":52,\"style\":\"BOLD\"},{\"offset\":0,\"length\":52,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":52,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"brpof\",\"text\":\"扩展列表：在这里的意思是，保存下一个因该访问的结点，从而达到不再访问已经访问的结点\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"BOLD\"},{\"offset\":0,\"length\":41,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":41,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"1060l\",\"text\":\"分治界限+扩展列表：相当于宽度优先搜索或者Dijkstra算法。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":32,\"style\":\"BOLD\"},{\"offset\":0,\"length\":32,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":32,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"e9m8p\",\"text\":\"可容许启发式：1可容许性：启发式估计值能够确保小于实际距离。2一致性：结点X与目标的估计值 – 结点Y与目标的估计值的绝对值 <= X与Y的实际距离。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":75,\"style\":\"BOLD\"},{\"offset\":0,\"length\":75,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":75,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"85cm7\",\"text\":\"（3） 算法理论：A*算法综合了贪心优先搜索（可容许启发式）和Dijkstra（分支界限）算法的优点。在进行启发式搜索提高算法的同时，可以保证找到最优路径（基于评估函数）。A*算法通过下面这个函数来计算每个节点的优先级。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":106,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":110,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"3q7cs\",\"text\":\"    F(n) = g(n) + h(n)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":4,\"length\":18,\"style\":\"FONTSIZE-14pt\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"23ulv\",\"text\":\"一、F（n）是节点n的综合优先级。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"1svlc\",\"text\":\"二、 g(n)表示从起点到任意顶点n的实际距离。（分支界限）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":3,\"length\":27,\"style\":\"FONTSIZE-14pt\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"681is\",\"text\":\"三、h(n)表示任意顶点n到目标顶点的估算距离（根据所采用的评估函数的不同而变化）。这也是A*算法的启发函数（可容许启发式）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":63,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":63,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"3npvi\",\"text\":\"l 如果给g(n)为0的话，即只计算任意顶点n到目标的评估函数h(n)，而不计算起始到顶点n的距离，则算法转化为使用贪心策略的广度优先搜索，速度最快，但可能得不出最优解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":83,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":85,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"7q7l2\",\"text\":\"l 如果h(n)为0的话，即只需要求出起点到任意顶点n最短路径g(n)，而不计算任何评估函数h(n),则转化为单源最短路径问题，即Dijkstra算法，此时需要计算最多的顶点。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":86,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":88,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"5ke2i\",\"text\":\"l 如果h(n)不大于顶点n 到目标顶点的实际距离，则一定可以求出最优解，而且h(n)越小，需要计算的节点越多，算法效率越低。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":61,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":63,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"c38il\",\"text\":\"l 如果h(n)完全等于顶点n到终点得代价，则将找到最佳路径，并且速度很快。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":36,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"2up8l\",\"text\":\"l 如果h(n)的值比顶点n到终点的代价要大，则算法不能保证找到最短路径，不过此时会很快。当h(n)相较于g(n)大很多，则此时只有h(n)产生效果，这也变成了最佳优先搜索。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":85,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":87,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"65t8f\",\"text\":\"根据上文所述，当h(n)与g(n)的比例不想同时，所产生的结果也就不相同\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":36,\"style\":\"BOLD\"},{\"offset\":0,\"length\":36,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":36,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"13hci\",\"text\":\"（4）比较                 \\n             当使用分支界限时：由下图可知，第一幅图的扩展的结点为835，第二幅图的结点为57\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"FONTSIZE-14pt\"},{\"offset\":36,\"length\":40,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":5,\"style\":\"COLOR-FF0000\"},{\"offset\":0,\"length\":5,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":76,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"euchi\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e1ieo\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":14}],\"data\":{}},{\"key\":\"1jb6h\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4q7gn\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":15}],\"data\":{}},{\"key\":\"bihfb\",\"text\":\"l 使用分支界限 + 扩展列表：由下图可知，第一幅图的扩展的结点为38，第二幅图的结点为35\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":14,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":46,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":2}},{\"key\":\"7o888\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"47r2m\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":16}],\"data\":{}},{\"key\":\"c938r\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9ps4f\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":17}],\"data\":{}},{\"key\":\"9jrf0\",\"text\":\"l 使用分支界限+可容许启发式：由下图可知，第一幅图的扩展的结点为70，第二幅图的结点为6\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":14,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":2}},{\"key\":\"et45v\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fe8k8\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":18}],\"data\":{}},{\"key\":\"r9pc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"buajk\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":19}],\"data\":{}},{\"key\":\"fld29\",\"text\":\"有上图可知的总结可知，S开始点在不同的地方，使用分支界限+可容许启发式与使用分支界限 + 扩展列表的所扩展的结点的数量的大小比较不相同。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":68,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":68,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":2}},{\"key\":\"1r0sl\",\"text\":\"因此出现了A*算法：通过下图明显可以看出A*算法的强大\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"3d009\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5lmgu\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":20}],\"data\":{}},{\"key\":\"8l70i\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"an5el\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":21}],\"data\":{}},{\"key\":\"bt0r2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"31kjk\",\"text\":\"下图是三种算法的比较：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"kh8a\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":22}],\"data\":{}},{\"key\":\"5nlo2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4c21t\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dqhu5\",\"text\":\"（5） 常见的评估函数有——欧几里得距离，曼哈顿距离，切比雪夫距离（对角距离）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":36,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":14,\"length\":26,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"ce13g\",\"text\":\"l 欧几里得距离：(n维空间)如果图形中允许朝任何方向移动，则可以使用欧几里得距离。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":40,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":42,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"crbqt\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":23}],\"data\":{}},{\"key\":\"6ns9g\",\"text\":\"function heuristic(node) =\\ndx = abs(node.x - goal.x)\\ndy = abs(node.y - goal.y)\\nreturn D * sqrt(dx  * dx + dy  * dy)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":100,\"style\":\"COLOR-000000\"},{\"offset\":101,\"length\":14,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":115,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":89,\"length\":11,\"style\":\"ITALIC\"},{\"offset\":101,\"length\":11,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1478v\",\"text\":\"l 曼哈顿距离：如果图形中只允许朝上下左右四个方向移动，则可以使用曼哈顿距离\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":36,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"2n4ak\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b6mlu\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":24}],\"data\":{}},{\"key\":\"aol0r\",\"text\":\"                红色代表曼哈顿距离，绿色代表欧式距离，蓝色和黄色代表等距离的曼哈顿距离。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":52,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":16,\"length\":36,\"style\":\"FONTSIZE-14pt\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"}}},{\"key\":\"59jf8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4vkkn\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":25}],\"data\":{}},{\"key\":\"5k7ad\",\"text\":\"function heuristic(node) =\\ndx = abs(node.x - goal.x)\\ndy = abs(node.y - goal.y)\\nreturn D * (dx + dy)\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":99,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":99,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1l7j3\",\"text\":\"l 切比雪夫距离对角距离：如果图形中允许朝八个方向移动，则可以使用对角距离。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":36,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"6n8fk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cj0kq\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":26}],\"data\":{}},{\"key\":\"8ifb\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8k8vh\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":27}],\"data\":{}},{\"key\":\"bnsac\",\"text\":\" function heuristic(node) =\\n dx = abs(node.x - goal.x)\\n dy = abs(node.y - goal.y)\\n return D  (dx + dy) + (D2 - 2  D) * min(dx, dy)\\n      （6）从地图到一般（下图不是一个地图的场景\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":113,\"style\":\"COLOR-000000\"},{\"offset\":114,\"length\":44,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":158,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":26,\"style\":\"FONTSIZE-12pt\"},{\"offset\":29,\"length\":25,\"style\":\"FONTSIZE-12pt\"},{\"offset\":56,\"length\":25,\"style\":\"FONTSIZE-12pt\"},{\"offset\":83,\"length\":30,\"style\":\"FONTSIZE-12pt\"},{\"offset\":114,\"length\":16,\"style\":\"FONTSIZE-12pt\"},{\"offset\":92,\"length\":21,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f8erh\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3i505\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":28}],\"data\":{}},{\"key\":\"3nc5e\",\"text\":\"在上图中S到A与B的距离为1，A到C的距离为1，B到C的的距离为10，A的估价为100，B的估价为0\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":50,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"fcqtv\",\"text\":\"在这种情况下，满足可容许性，但不满足一致性，因此行不通(即用可容许启发式)肯定会出错。为了保证选择最短路径的准确性 , 引入了一个数作为限制 , A节点一开始预估的是100, 显然不可能估100 , 这个限制就是结点X与目标的估计值 – 结点Y与目标的估计值的绝对值 <= X与Y的实际距离 ，即|(SA) + (SB)| = 2 。 也就是说预估A到C的距离 , 最多估成2 , 不然就可能会造成选择错误。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":70,\"style\":\"FONTSIZE-14pt\"},{\"offset\":71,\"length\":133,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":204,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":7,\"length\":14,\"style\":\"BOLD\"},{\"offset\":100,\"length\":91,\"style\":\"BOLD\"},{\"offset\":100,\"length\":91,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":2}},{\"key\":\"2bnds\",\"text\":\"（7）算法用途\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"8l1mv\",\"text\":\"l 游戏中的NPC的移动计算或网络游戏的BOT的移动计算。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":27,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"jv4q\",\"text\":\"l 机器人的路径规划问题\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-14pt\"},{\"offset\":2,\"length\":10,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"5ft94\",\"text\":\"（8） 拓展\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":4,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoListParagraph\"},\"textIndent\":1}},{\"key\":\"dcahe\",\"text\":\"一、 实际运用:16宫格拼图A*智能还原\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"FONTSIZE-14pt\"},{\"offset\":3,\"length\":17,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":20,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"2dqk3\",\"text\":\"代码：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-14pt\"},{\"offset\":0,\"length\":3,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9tid7\",\"text\":\"#include <iostream>\\n#include <windows.h>\\n#include <cmath>\\n#include <map>\\n#include <queue>\\n#include <ctime>\\n\\nusing namespace std;\\n#define N 4\\n#define N2 16\\n\\n//static const int dx[4] = { 0,-1,0,1 };\\n//static const int dy[4] = { 1,0,-1,0 };\\nstatic const int dx[4] = { 1,0,-1,0 };\\nstatic const int dy[4] = { 0,-1,0,1 };\\nstatic const char dir[4] = { \'r\',\'u\',\'l\',\'d\' };\\nint MDT[N2][N2];\\n\\nstruct Puzzle {\\n\\tint f[N2], space, MD;\\n\\t//图片的位置，，，空格图片的位置，，，保存到终点曼哈顿距离（启发式距离）\\n\\tint cost;//移动的次数\\n\\n\\tbool operator < (const Puzzle &p) const {\\n\\t\\tfor (int i = 0; i < N2; i++) {\\n\\t\\t\\tif (f[i] == p.f[i])\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\treturn f[i] < p.f[i];\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}//对满足正确的位置图形进行排序\\n};\\n\\nstruct State {\\n\\tPuzzle puzzle;\\n\\tdouble estimated;//保存起点到终点的距离\\n\\tbool operator < (const State &s) const {\\n\\t\\treturn estimated > s.estimated;\\n\\t}//对优先级高的整张图片进行排序\\n};\\n\\nint getAllMD(Puzzle pz) {\\n\\tint sum = 0;\\n\\tfor (int i = 0; i < N2; i++) {\\n\\t\\tif (pz.f[i] == N2)\\n\\t\\t\\tcontinue;\\n\\t\\tsum += MDT[i][pz.f[i] - 1];\\n\\t}\\n\\treturn sum;\\n}//计算整张图片现在的位置的总的曼哈顿距离\\n\\nint astar(Puzzle s) {\\n\\tpriority_queue<State> PQ;//优先队列\\n\\ts.MD = getAllMD(s);\\n\\ts.cost = 0;\\n\\tmap<Puzzle, bool> V;//判断是否已经出现\\n\\tPuzzle u, v;\\n\\tState initial;\\n\\tinitial.puzzle = s;\\n\\tinitial.estimated = getAllMD(s);\\n\\tPQ.push(initial);\\n\\n\\twhile (!PQ.empty()) {\\n\\t\\tState st = PQ.top();\\n\\t\\tPQ.pop();\\n\\t\\tu = st.puzzle;\\n\\n\\t\\tif (u.MD == 0)\\n\\t\\t\\treturn u.cost;\\n\\t\\tV[u] = true;\\n\\n\\t\\tint sx = u.space / N;\\n\\t\\tint sy = u.space % N;\\n\\n\\t\\tfor (int r = 0; r < 4; r++) {\\n\\t\\t\\tint tx = sx + dx[r];\\n\\t\\t\\tint ty = sy + dy[r];\\n\\t\\t\\tif (tx < 0 || ty < 0 || tx >= N || ty >= N)\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\tv = u;\\n\\t\\t\\t\\n\\t\\t\\t//计算启发式距离\\n\\t\\t\\tv.MD -= MDT[tx*N + ty][v.f[tx*N + ty] - 1];\\n\\t\\t\\tv.MD += MDT[sx*N + sy][v.f[tx*N + ty] - 1];\\n\\t\\t\\t//v.MD = 2 * v.MD;\\n\\n\\t\\t\\tswap(v.f[sx*N + sy], v.f[tx*N + ty]);\\n\\t\\t\\tv.space = tx * N + ty;\\n\\n\\t\\t\\tif (!V[v]) {\\n\\t\\t\\t\\tv.cost++;\\n\\t\\t\\t\\tState news;\\n\\t\\t\\t\\tnews.puzzle = v;\\n\\t\\t\\t\\tnews.estimated = v.cost + 1.3*v.MD;\\n\\t\\t\\t\\tPQ.push(news);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\treturn -1;\\n}\\n\\nint main()\\n{\\n\\tlong i = 100000000L;\\n\\tclock_t start, finish;\\n\\tdouble duration;\\n\\n\\tstart = clock(); //测试时间开始\\n\\n\\tfor (int i = 0; i < N2; i++) {\\n\\t\\tfor (int j = 0; j < N2; j++) {\\n\\t\\t\\tMDT[i][j] = abs(i / N - j / N) + abs(i%N - j % N);\\n\\t\\t}\\n\\t}//计算每一张图片在每一个位置距离正确位置的曼哈顿距离\\n\\n\\tPuzzle in;\\n\\n\\tfor (int i = 0; i < N2; i++) {\\n\\t\\tcin >> in.f[i];\\n\\t\\tif (in.f[i] == 0) {\\n\\t\\t\\tin.f[i] = N2;\\n\\t\\t\\tin.space = i;//查找空白的图片，以及标记这张图片\\n\\t\\t}\\n\\t}\\n\\n\\tcout << astar(in) << endl;\\n\\t\\n\\tfinish = clock(); //测试时间结束\\n\\n\\tduration = (double)(finish - start) / CLOCKS_PER_SEC; //实际用时：duration\\n\\tcout << duration << \\\"seconds\\\\n\\\";\\n\\tsystem(\\\"exit\\\");//此处的exit与C语言（pause）不同\\n\\treturn 0;\\n}\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2525,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4si4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4uafd\",\"text\":\"在上述的代码中，news.estimated = v.cost + 1.3*v.MD;比较有意思，v.cost 与 1.3*v.MD 的比例不相同（正如上文所提到)，在满足最佳的步数的情况下，v.cost 与 1.3*v.MD 的比例为1：1.3的比例速度最快能计算出，但在不满足最佳的步数的情况下，虽然步数不是最佳，但速度远远快于在最佳步数的情况下的速度。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":179,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":96,\"length\":38,\"style\":\"BOLD\"},{\"offset\":96,\"length\":38,\"style\":\"COLOR-FF0000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"1fj\",\"text\":\"而在a*算法的研究中，最难的是地图的建立，与表示方式。比如如果用网格去表示地图，是因该采用瓷砖运动，还是边缘运动或者是顶点运动。又或者是采用多边形去描述地图等等。还需要去研究。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":88,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"1oh5i\",\"text\":\"在此给各位读者推荐两个网站： http://theory.stanford.edu/~amitp/GameProgramming/AStarComparison.html \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":86,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"kspc\",\"text\":\" https://www.redblobgames.com/pathfinding/a-star/introduction.html \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":67,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"li0s\",\"text\":\"而在a*算法的延申中，还有IDA*与之媲美，更有比A*快的算法B*，希望读者可以去研究\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":43,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"5jjii\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563019573245.png\",\"type\":\"IMAGE\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563019600321.png\",\"type\":\"IMAGE\"}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563019653407.png\",\"type\":\"IMAGE\"}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563019675955.png\",\"type\":\"IMAGE\"}},\"4\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563019642257.png\",\"type\":\"IMAGE\"}},\"5\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563019691660.png\",\"type\":\"IMAGE\"}},\"6\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563019771898.png\",\"type\":\"IMAGE\"}},\"7\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563019788615.png\",\"type\":\"IMAGE\"}},\"8\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563020317695.gif\",\"type\":\"IMAGE\"}},\"9\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563020515521.gif\",\"type\":\"IMAGE\",\"width\":779,\"height\":359.515625}},\"10\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563020551655.png\",\"type\":\"IMAGE\",\"width\":781,\"height\":336.625}},\"11\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563020660204.gif\",\"type\":\"IMAGE\"}},\"12\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563025953360.gif\",\"type\":\"IMAGE\",\"width\":735,\"height\":403.765625}},\"13\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563021156512.gif\",\"type\":\"IMAGE\",\"width\":811,\"height\":349.03125}},\"14\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563022270570.png\",\"type\":\"IMAGE\",\"width\":739,\"height\":428.15625}},\"15\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563022771691.png\",\"type\":\"IMAGE\",\"width\":741,\"height\":427.03125}},\"16\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563022578392.png\",\"type\":\"IMAGE\",\"width\":754,\"height\":457}},\"17\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563022888980.png\",\"type\":\"IMAGE\",\"width\":752,\"height\":483.5625}},\"18\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563022486334.png\",\"type\":\"IMAGE\",\"width\":757,\"height\":424.640625}},\"19\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563022985300.png\",\"type\":\"IMAGE\",\"width\":765,\"height\":459.375}},\"20\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563023392022.png\",\"type\":\"IMAGE\",\"width\":759,\"height\":448.84375}},\"21\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563023461423.png\",\"type\":\"IMAGE\",\"width\":764,\"height\":442.5}},\"22\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563026026639.jpg\",\"type\":\"IMAGE\",\"width\":675,\"height\":390}},\"23\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563023790605.png\",\"type\":\"IMAGE\"}},\"24\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563023834464.jpg\",\"type\":\"IMAGE\"}},\"25\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563023968986.png\",\"type\":\"IMAGE\"}},\"26\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563024127935.png\",\"type\":\"IMAGE\",\"width\":765,\"height\":228}},\"27\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563024166319.png\",\"type\":\"IMAGE\"}},\"28\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701563024343378.png\",\"type\":\"IMAGE\"}}}}', '<p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><strong><span style=\"line-height:1.75\"><span style=\"font-size:20px\">1、 深度优先搜索</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（1）</span> <span style=\"font-size:14ptpx\">定义：深度优先搜索（DFS）：是一种用于遍历或者搜索树和图得算法。深度优先总是对<span style=\"color:#ff0000\">最近</span>才发现的结点v的边出发进行探索，直到该结点的所有出发边都被发现了为止。一旦结点v的所有出发边都被发现，搜索则“回溯”到v的前驱结点，然后搜索该前驱结点的出发边。（该过程一直持续到从源结点可以达到的所有结点都被发现为止）。</span></span></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（2）</span> <span style=\"font-size:14ptpx\">实现方法：</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">一、</span> <span style=\"font-size:14ptpx\">首先将根节点放入stack中</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">二、</span> <span style=\"font-size:14ptpx\">从stack中取出第一个节点，并检验是否为目标。如果找到目标，则结束搜索并传回结果。否则将它某个尚未检验过的直接子节点加入stack中。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">三、</span> <span style=\"font-size:14ptpx\">重复步骤二。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">四、</span> <span style=\"font-size:14ptpx\">如果不存在未检测过的直接子节点，将上一级节点加入stack中。重复步骤二。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">五、</span> <span style=\"font-size:14ptpx\">重复步骤四</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">六、</span> <span style=\"font-size:14ptpx\">若stack为空，表示整张图都检查过了</span></span></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（3）</span> <span style=\"font-size:14ptpx\">图形演示</span></span></p><p style=\"text-align:left;text-indent:4em;\" class=\"MsoNormal\" align=\"left\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">为每个顶点设立一个“访问标志”。首先将图中每个顶点的</span><span style=\"color:#ff0000\">访问标志设为 false,</span></span>  <span style=\"font-size:14ptpx\"><span style=\"color:#333333\">之后搜索图中每个顶点，如果未被访问，则以该顶点为起始点，进行深度优先遍历，否则继续检查下一顶点。</span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563019573245.png\"/></div><p style=\"text-align:left;text-indent:4em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\"><span style=\"line-height:1.75\">访问指定的起始顶点；若当前访问的顶点的邻接顶点有未被访问的，则任选一个访问之；</span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563019600321.png\"/></div><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">反之，退回到最近访问过的顶点；直到与起始顶点相通的全部顶点都访问完毕；</span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563019653407.png\"/></div><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">回退到1，发现了新的没有被访问的结点</span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563019675955.png\"/></div><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">继续回退，回退到0再也找不到新的结点了，那么回退，回退到起始顶点，结束搜索</span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563019642257.png\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563019691660.png\"/></div><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">顶点的访问序列为：</span></span> <span style=\"font-size:14ptpx\"><span style=\"color:#333333\"> v0 , v1 , v4 , v5 , v6 , v2 , v3（不唯一）</span></span></span></p><p style=\"text-indent:4em;\"><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\"><span style=\"color:#000000\"><span style=\"background-color:#ffffff\">实现过程：依靠栈，一维数组和图的邻接矩阵存储方式</span></span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563019771898.png\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563019788615.png\"/></div><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">图的邻接矩阵存储方式（如上图）</span></span></span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">（4）存储方式</span></span></span></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoListParagraph\" align=\"left\"></p><p style=\"text-align:left;text-indent:4em;\" class=\"MsoListParagraph\" align=\"left\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">一、</span></span> <span style=\"font-size:14ptpx\"><span style=\"color:#333333\">邻接表</span></span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">二、</span></span> <span style=\"font-size:14ptpx\"><span style=\"color:#333333\">邻接矩阵</span></span></span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">（5）</span></span> <span style=\"font-size:14ptpx\"><span style=\"color:#333333\">分析</span></span></span></p><p style=\"text-align:left;text-indent:4em;\" class=\"MsoListParagraph\" align=\"left\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\"><span style=\"line-height:1.75\">再遍历图时，对图中每一个顶点之多调用一次DFS函数，因为一旦某个顶点被标志成已经被访问，就不再从才它出发进行搜索。因此用二维数组表示邻接表时，查找某个点的时间复杂度为O（n<sup>2</sup>)，用邻接表时为O（n + e）。</span></span></span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">（6）</span></span> <span style=\"font-size:14ptpx\"><span style=\"color:#333333\">用途</span></span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">一、</span></span> <span style=\"font-size:14ptpx\"><span style=\"color:#333333\">寻找两个点的路径</span></span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#333333\">二、</span></span> <span style=\"font-size:14ptpx\"><span style=\"color:#333333\">用于更高级算法的子程序（Tarjan，连通图，强连通图的解）</span></span></span></p><p style=\"text-indent:2em;\"><span style=\"color:#333333\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（7）拓展：爬山法（是对深度优先的改进算法），使用某一种贪心算法（</span><span style=\"font-size:16ptpx\">评估函数</span><span style=\"font-size:14ptpx\">）来帮助我们决定在搜索空间中向哪一个方向搜索。（总是选择局部最优，有无解的风险）</span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><strong><span style=\"line-height:1.75\"><span style=\"font-size:20px\">2、 广度优先搜索</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（1）</span> <span style=\"font-size:14ptpx\">定义：广度优先搜索（BFS）：是一种图形搜索算法，简单的说BFS就是从根结点开始，沿着树的宽度（或者图顶点的度）遍历树或者图的结点。如果所有的结点都被访问，则算法终止。 (也是许多重要图论算法的原型，Prim最小生成树，Dijkstra的单源最短路径)</span></span></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（2）</span> <span style=\"font-size:14ptpx\">实现方法： </span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">一、</span> <span style=\"font-size:14ptpx\">首先将根节点放入队列中。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">二、</span> <span style=\"font-size:14ptpx\">从队列中取出第一个结点，并检验它是否为目标，如果找到目标，则结束搜索并传回结果，否则就将它所有的尚未检验过的直接子节点加入队列中。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">三、</span> <span style=\"font-size:14ptpx\">当队列为空时，表示整张图都检查过了，则没有找到目标。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">四、</span> <span style=\"font-size:14ptpx\">重复步骤二。</span></span></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（3）</span> <span style=\"font-size:14ptpx\">图形演示：</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563020317695.gif\"/></div><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（4）</span> <span style=\"font-size:14ptpx\">储存方法：</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">一、</span> <span style=\"font-size:14ptpx\">邻接表</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">二、</span> <span style=\"font-size:14ptpx\">邻接矩阵</span></span></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（5）</span> <span style=\"font-size:14ptpx\">分析：空间复杂度：因为所有的结点都必须被储存，因此空间复杂度为O（|V| + |E|）</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\">时间复杂度：最差的情况下，BFS必须查找所有到可能结点的所有路径，因此其时间复杂度为O（|V| + |E|）。</span></span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（6）</span> <span style=\"font-size:14ptpx\">用途：</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">一、</span> <span style=\"font-size:14ptpx\">查找连接组件中的所有结点。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">二、</span> <span style=\"font-size:14ptpx\">查找非加权图中任两点的最短路径</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">三、</span> <span style=\"font-size:14ptpx\">测试是否为二分图（二分图：能被两种颜色着色的图）</span></span></p><p style=\"text-indent:2em;\"><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\"><span style=\"background-color:#ffffff\"><span style=\"color:#ff0000\">（7） 从起点开始，首先遍历起点周围邻近的点，然后再遍历已经遍历过的点邻近的点，逐步的向外扩散，直到找到终。</span><span style=\"color:#000000\">这种算法，就像洪水一样向外扩张。</span></span>算法的过程如下图：</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563020515521.gif\" width=\"779\" height=\"359.515625\" style=\"width:779px;height:359.515625px\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563020551655.png\" width=\"781\" height=\"336.625\" style=\"width:781px;height:336.625px\"/></div><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\">   （8） 顺便提一下：光束搜索（是对广度优先搜索的改进）使用某种贪心算法（评估函数），在每一层中只有满意的结点会被保留（即<span style=\"color:#ff0000\">束宽</span>），其他结点则被永久抛弃。</span></span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\"><strong><span style=\"font-size:20px\">3、 Dijkstra</strong></span><span style=\"font-size:14ptpx\"><strong>：</strong>算法用来寻求图形中节点之间的最短路径，最终得到一个最短路径树。</span></span></p><p style=\"text-indent:2em;\"><span style=\"font-size:14ptpx\"><span style=\"color:#000000\"><span style=\"line-height:1.75\">（1）算法步骤:</span></span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">一、</span> <span style=\"font-size:14ptpx\"><span style=\"color:#000000\">初始时，S只包含源点，即S={v}，v的距离为0。U包含除v外的其他顶点，即U={其他顶点}，若v与U中顶点u有边，则&lt;u, v&gt;正常有权值，若u不是v的出边邻接点，则&lt;u, v&gt; 权值为无。</span></span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">二、</span> <span style=\"font-size:14ptpx\"><span style=\"color:#000000\">从U中选取一个距离v最小的顶点k，把k加入S中（该选定的距离就是v到k的最短路径长度）。   </span></span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">三、</span> <span style=\"font-size:14ptpx\"><span style=\"color:#000000\">以k为新考虑的中间点，修改U中各顶点的距离；若从源点v到顶点u的距离（经过顶点k）比原来距离（不经过顶点k）短，则修改顶点u</span></span></span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> <span style=\"font-size:14ptpx\">的距离值，<span style=\"color:#ff0000\">修改后的距离值 </span></span> <span style=\"font-size:14ptpx\"><span style=\"color:#ff0000\"><strong>= </strong></span></span> <span style=\"font-size:14ptpx\"><span style=\"color:#ff0000\">从源点v到k边上的权 </span></span> <span style=\"font-size:14ptpx\"><span style=\"color:#ff0000\"><strong>+</strong></span></span> <span style=\"font-size:14ptpx\"><span style=\"color:#ff0000\">顶点k的距离到u边上的权 。</span></span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">四、</span> <span style=\"font-size:14ptpx\"><span style=\"color:#000000\">重复步骤二和三，直到所有顶点都包含在S中。</span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563020660204.gif\"/></div><p><span style=\"line-height:1.75\">   代码:</span></p><p><span style=\"line-height:1.75\">void dij(int n, int to) {<br/>	memset(vis, false, sizeof(vis));  //标志数组<br/>	for (int i = 1; i &lt;= n; i++) {<br/>		ds[i] = d[to][i];//初始化<br/>	}<br/>	ds[to] = 0;<br/>	vis[to] = true;<br/>	for (int i = 1; i &lt;= n; i++) {<br/>		int v = -1, max = MAX;<br/>		for (int j = 1; j &lt;= n; j++) {<br/>			if (!vis[j] &amp;&amp; max &gt; ds[j]) {  //寻找一个结点与之有关联的边的最小值<br/>				max = ds[j];<br/>				v = j;<br/>			}<br/>		}<br/>		if (v == -1)<br/>			break;<br/>		vis[v] = true;<br/>		for (int j = 1; j &lt;= n; j++) {<br/>			if (!vis[j] &amp;&amp; ds[j] &gt; ds[v] + d[v][j]) {   //更新最小边<br/>				ds[j] = ds[v] + d[v][j];<br/>			}<br/>		}<br/>	}</span></p><p style=\"text-indent:2em;\"><span style=\"font-size:14ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\"><span style=\"color:#4d4d4d\">（2）在算法中，需要计算每一个节点距离起点的总移动代价。同时，还需要一个优先队列结构。对于所有待遍历的节点，放入优先队列中会按照代价进行排序。在算法运行的过程中，每次都从优先队列中选出代价最小的作为下一个遍历的节点。直到到达终点为止。下面比较了</span><span style=\"color:#ff0000\">不考虑</span><span style=\"color:#4d4d4d\">节点移动代价差异的广度优先搜索和考虑移动代价的Dijkstra算法的运行结果：</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563025953360.gif\" width=\"735\" height=\"403.765625\" style=\"width:735px;height:403.765625px\"/></div><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><strong><span style=\"line-height:1.75\"><span style=\"font-size:20px\"><span style=\"color:#4d4d4d\">4、</span>最佳优先搜索（Best First）</span></span></strong></p><p style=\"text-indent:4em;\"><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\">在有些情况下，如果我们可以预先计算出每一个节点到终点的距离（启发式距离），则我们可以利用这个信息更快的到达终点。（算法与Dijkstra算法类似）使用优先队列，每次始终选取到终点移动代价最小的节点作为下一个遍历的节点。如下图</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563021156512.gif\" width=\"811\" height=\"349.03125\" style=\"width:811px;height:349.03125px\"/></div><p style=\"text-indent:4em;\"><span style=\"font-size:14ptpx\"><span style=\"color:#4d4d4d\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">如果起点和终点之间存在障碍物，则最佳优先算法找到的很可能不是最短路径</span></span></span></span></p><p style=\"text-align:left;text-indent:4em;\"><span style=\"font-size:14ptpx\"><span style=\"background-color:#ffffff\"><strong><span style=\"line-height:1.75\"><span style=\"color:#ff0000\">由此可见，在最佳优先搜索中是基于目标搜索，而不是基于完全搜索</span></span></strong></span></span></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><strong><span style=\"line-height:1.75\"><span style=\"font-size:20px\">5、 A* </span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（1）</span> <span style=\"font-size:14ptpx\">A*是一种在图形平面上，有多个节点的路径，求出最低通过成本的算法。</span></span></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（2）</span><strong> <span style=\"font-size:14ptpx\">A* = 分支界限 + 扩展列表 + 可容许启发式。</span></strong></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><strong><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\">分支界限（暴力搜索）：广度优先队列式（先进先出）或以最小耗费（最大效益）优先的方式（优先队列分支限界）。</span></span></strong></p><p style=\"text-indent:4em;\"><strong><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\">扩展列表：在这里的意思是，保存下一个因该访问的结点，从而达到不再访问已经访问的结点</span></span></strong></p><p style=\"text-indent:4em;\"><strong><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\">分治界限+扩展列表：相当于宽度优先搜索或者Dijkstra算法。</span></span></strong></p><p style=\"text-indent:4em;\"><strong><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\">可容许启发式：1可容许性：启发式估计值能够确保小于实际距离。2一致性：结点X与目标的估计值 – 结点Y与目标的估计值的绝对值 &lt;= X与Y的实际距离。</span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（3）</span> <span style=\"font-size:14ptpx\">算法理论：A*算法综合了贪心优先搜索（可容许启发式）和Dijkstra（分支界限）算法的优点。在进行启发式搜索提高算法的同时，可以保证找到最优路径（基于评估函数）。A*算法通过下面这个函数来计算每个节点的优先级。</span></span></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\">    <span style=\"font-size:14ptpx\">F(n) = g(n) + h(n)</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\">一、F（n）是节点n的综合优先级。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\">二、 <span style=\"font-size:14ptpx\">g(n)表示从起点到任意顶点n的实际距离。（分支界限）</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\">三、h(n)表示任意顶点n到目标顶点的估算距离（根据所采用的评估函数的不同而变化）。这也是A*算法的启发函数（可容许启发式）。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">如果给g(n)为0的话，即只计算任意顶点n到目标的评估函数h(n)，而不计算起始到顶点n的距离，则算法转化为使用贪心策略的广度优先搜索，速度最快，但可能得不出最优解。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">如果h(n)为0的话，即只需要求出起点到任意顶点n最短路径g(n)，而不计算任何评估函数h(n),则转化为单源最短路径问题，即Dijkstra算法，此时需要计算最多的顶点。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">如果h(n)不大于顶点n 到目标顶点的实际距离，则一定可以求出最优解，而且h(n)越小，需要计算的节点越多，算法效率越低。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">如果h(n)完全等于顶点n到终点得代价，则将找到最佳路径，并且速度很快。</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">如果h(n)的值比顶点n到终点的代价要大，则算法不能保证找到最短路径，不过此时会很快。当h(n)相较于g(n)大很多，则此时只有h(n)产生效果，这也变成了最佳优先搜索。</span></span></p><p style=\"text-indent:4em;\"><span style=\"font-size:14ptpx\"><strong><span style=\"color:#ff0000\"><span style=\"line-height:1.75\">根据上文所述，当h(n)与g(n)的比例不想同时，所产生的结果也就不相同</span></span></strong></span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\"><span style=\"color:#ff0000\"><span style=\"color:#000000\">（4）比较</span></span></span>                 <br/>             <span style=\"font-size:14ptpx\">当使用分支界限时：由下图可知，第一幅图的扩展的结点为835，第二幅图的结点为57</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563022270570.png\" width=\"739\" height=\"428.15625\" style=\"width:739px;height:428.15625px\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563022771691.png\" width=\"741\" height=\"427.03125\" style=\"width:741px;height:427.03125px\"/></div><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">使用分支界限 + 扩展列表：</span>由下图可知，第一幅图的扩展的结点为38，第二幅图的结点为35</span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563022578392.png\" width=\"754\" height=\"457\" style=\"width:754px;height:457px\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563022888980.png\" width=\"752\" height=\"483.5625\" style=\"width:752px;height:483.5625px\"/></div><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">使用分支界限+可容许启发式：</span>由下图可知，第一幅图的扩展的结点为70，第二幅图的结点为6</span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563022486334.png\" width=\"757\" height=\"424.640625\" style=\"width:757px;height:424.640625px\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563022985300.png\" width=\"765\" height=\"459.375\" style=\"width:765px;height:459.375px\"/></div><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"color:#ff0000\">有上图可知的总结可知，S开始点在不同的地方，使用分支界限+可容许启发式与使用分支界限 + 扩展列表的所扩展的结点的数量的大小比较不相同。</span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\">因此出现了A*算法：通过下图明显可以看出A*算法的强大</span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563023392022.png\" width=\"759\" height=\"448.84375\" style=\"width:759px;height:448.84375px\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563023461423.png\" width=\"764\" height=\"442.5\" style=\"width:764px;height:442.5px\"/></div><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\">下图是三种算法的比较：</span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563026026639.jpg\" width=\"675\" height=\"390\" style=\"width:675px;height:390px\"/></div><p></p><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（5）</span> <span style=\"font-size:14ptpx\">常见的评估函数有——<span style=\"color:#ff0000\">欧几里得距离，曼哈顿距离，切比雪夫距离（对角距离）。</span></span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">欧几里得距离：(n维空间)如果图形中允许朝任何方向移动，则可以使用欧几里得距离。</span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563023790605.png\"/></div><p><span style=\"line-height:1.75\"><span style=\"color:#000000\">function heuristic(node) =<br/>dx = abs(node.x - goal.x)<br/>dy = abs(node.y - goal.y)<br/>return D *<em> sqrt(dx  *</em></span> <span style=\"color:#000000\"><em>dx + dy  * </em>dy)</span></span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">曼哈顿距离：如果图形中只允许朝上下左右四个方向移动，则可以使用曼哈顿距离</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563023834464.jpg\"/></div><p class=\"MsoListParagraph\"><span style=\"line-height:1.75\">                <span style=\"font-size:14ptpx\">红色代表曼哈顿距离，绿色代表欧式距离，蓝色和黄色代表等距离的曼哈顿距离。</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563023968986.png\"/></div><p><span style=\"color:#000000\"><span style=\"line-height:1.75\">function heuristic(node) =<br/>dx = abs(node.x - goal.x)<br/>dy = abs(node.y - goal.y)<br/>return D * (dx + dy)</span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">切比雪夫距离对角距离：如果图形中允许朝八个方向移动，则可以使用对角距离。</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563024127935.png\" width=\"765\" height=\"228\" style=\"width:765px;height:228px\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563024166319.png\"/></div><p><span style=\"line-height:1.75\"><span style=\"color:#000000\"> <span style=\"font-size:12ptpx\">function heuristic(node) =</span><br/> <span style=\"font-size:12ptpx\">dx = abs(node.x - goal.x)</span><br/> <span style=\"font-size:12ptpx\">dy = abs(node.y - goal.y)</span><br/> <span style=\"font-size:12ptpx\">return D <em> (dx + dy) + (D2 - 2 </em></span></span> <span style=\"color:#000000\"><span style=\"font-size:12ptpx\">D) * min(dx, dy)</span><br/>      （6）从地图到一般（下图不是一个地图的场景</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701563024343378.png\"/></div><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\">在上图中S到A与B的距离为1，A到C的距离为1，B到C的的距离为10，A的估价为100，B的估价为0</span></p><p style=\"text-indent:4em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">在这种情况下，<strong>满足可容许性，但不满足一致性</strong>，因此行不通(即用可容许启发式)肯定会出错。为了保证选择最短路径的准确性 , 引入了一个数作为限制</span> <span style=\"font-size:14ptpx\">, A节点一开始预估的是100, 显然不可能估100 , <strong><span style=\"color:#ff0000\">这个限制就是结点X与目标的估计值 – 结点Y与目标的估计值的绝对值 &lt;= X与Y的实际距离 ，即|(SA) + (SB)| = 2 。 也就是说预估A到C的距离 , 最多估成2 , </span></strong>不然就可能会造成选择错误。</span></span></p><p style=\"text-indent:2em;\"><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\">（7）算法用途</span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">游戏中的NPC的移动计算或网络游戏的BOT的移动计算。</span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">l</span> <span style=\"font-size:14ptpx\">机器人的路径规划问题</span></span></p><p style=\"text-indent:2em;\" class=\"MsoListParagraph\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">（8）</span> <span style=\"font-size:14ptpx\">拓展</span></span></p><p style=\"text-indent:4em;\"><span style=\"line-height:1.75\"><span style=\"font-size:14ptpx\">一、</span> <span style=\"font-size:14ptpx\">实际运用:16宫格拼图A*智能还原</span></span></p><p><span style=\"font-size:14ptpx\"><span style=\"line-height:1.75\">代码：</span></span></p><p><span style=\"line-height:1.75\">#include &lt;iostream&gt;<br/>#include &lt;windows.h&gt;<br/>#include &lt;cmath&gt;<br/>#include &lt;map&gt;<br/>#include &lt;queue&gt;<br/>#include &lt;ctime&gt;<br/><br/>using namespace std;<br/>#define N 4<br/>#define N2 16<br/><br/>//static const int dx[4] = { 0,-1,0,1 };<br/>//static const int dy[4] = { 1,0,-1,0 };<br/>static const int dx[4] = { 1,0,-1,0 };<br/>static const int dy[4] = { 0,-1,0,1 };<br/>static const char dir[4] = { &#x27;r&#x27;,&#x27;u&#x27;,&#x27;l&#x27;,&#x27;d&#x27; };<br/>int MDT[N2][N2];<br/><br/>struct Puzzle {<br/>	int f[N2], space, MD;<br/>	//图片的位置，，，空格图片的位置，，，保存到终点曼哈顿距离（启发式距离）<br/>	int cost;//移动的次数<br/><br/>	bool operator &lt; (const Puzzle &amp;p) const {<br/>		for (int i = 0; i &lt; N2; i++) {<br/>			if (f[i] == p.f[i])<br/>				continue;<br/>			return f[i] &lt; p.f[i];<br/>		}<br/>		return false;<br/>	}//对满足正确的位置图形进行排序<br/>};<br/><br/>struct State {<br/>	Puzzle puzzle;<br/>	double estimated;//保存起点到终点的距离<br/>	bool operator &lt; (const State &amp;s) const {<br/>		return estimated &gt; s.estimated;<br/>	}//对优先级高的整张图片进行排序<br/>};<br/><br/>int getAllMD(Puzzle pz) {<br/>	int sum = 0;<br/>	for (int i = 0; i &lt; N2; i++) {<br/>		if (pz.f[i] == N2)<br/>			continue;<br/>		sum += MDT[i][pz.f[i] - 1];<br/>	}<br/>	return sum;<br/>}//计算整张图片现在的位置的总的曼哈顿距离<br/><br/>int astar(Puzzle s) {<br/>	priority_queue&lt;State&gt; PQ;//优先队列<br/>	s.MD = getAllMD(s);<br/>	s.cost = 0;<br/>	map&lt;Puzzle, bool&gt; V;//判断是否已经出现<br/>	Puzzle u, v;<br/>	State initial;<br/>	initial.puzzle = s;<br/>	initial.estimated = getAllMD(s);<br/>	PQ.push(initial);<br/><br/>	while (!PQ.empty()) {<br/>		State st = PQ.top();<br/>		PQ.pop();<br/>		u = st.puzzle;<br/><br/>		if (u.MD == 0)<br/>			return u.cost;<br/>		V[u] = true;<br/><br/>		int sx = u.space / N;<br/>		int sy = u.space % N;<br/><br/>		for (int r = 0; r &lt; 4; r++) {<br/>			int tx = sx + dx[r];<br/>			int ty = sy + dy[r];<br/>			if (tx &lt; 0 || ty &lt; 0 || tx &gt;= N || ty &gt;= N)<br/>				continue;<br/>			v = u;<br/>			<br/>			//计算启发式距离<br/>			v.MD -= MDT[tx*N + ty][v.f[tx*N + ty] - 1];<br/>			v.MD += MDT[sx*N + sy][v.f[tx*N + ty] - 1];<br/>			//v.MD = 2 * v.MD;<br/><br/>			swap(v.f[sx*N + sy], v.f[tx*N + ty]);<br/>			v.space = tx * N + ty;<br/><br/>			if (!V[v]) {<br/>				v.cost++;<br/>				State news;<br/>				news.puzzle = v;<br/>				news.estimated = v.cost + 1.3*v.MD;<br/>				PQ.push(news);<br/>			}<br/>		}<br/>	}<br/>	return -1;<br/>}<br/><br/>int main()<br/>{<br/>	long i = 100000000L;<br/>	clock_t start, finish;<br/>	double duration;<br/><br/>	start = clock(); //测试时间开始<br/><br/>	for (int i = 0; i &lt; N2; i++) {<br/>		for (int j = 0; j &lt; N2; j++) {<br/>			MDT[i][j] = abs(i / N - j / N) + abs(i%N - j % N);<br/>		}<br/>	}//计算每一张图片在每一个位置距离正确位置的曼哈顿距离<br/><br/>	Puzzle in;<br/><br/>	for (int i = 0; i &lt; N2; i++) {<br/>		cin &gt;&gt; in.f[i];<br/>		if (in.f[i] == 0) {<br/>			in.f[i] = N2;<br/>			in.space = i;//查找空白的图片，以及标记这张图片<br/>		}<br/>	}<br/><br/>	cout &lt;&lt; astar(in) &lt;&lt; endl;<br/>	<br/>	finish = clock(); //测试时间结束<br/><br/>	duration = (double)(finish - start) / CLOCKS_PER_SEC; //实际用时：duration<br/>	cout &lt;&lt; duration &lt;&lt; &quot;seconds\\n&quot;;<br/>	system(&quot;exit&quot;);//此处的exit与C语言（pause）不同<br/>	return 0;<br/>}</span></p><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">在上述的代码中，news.estimated = v.cost + 1.3*v.MD;比较有意思，v.cost 与 1.3*v.MD 的比例不相同（正如上文所提到)，在满足最佳的步数的情况下，<strong><span style=\"color:#ff0000\">v.cost 与 1.3*v.MD 的比例为1：1.3的比例速度最快能计算出</span></strong>，但在不满足最佳的步数的情况下，虽然步数不是最佳，但速度远远快于在最佳步数的情况下的速度。</span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">而在a*算法的研究中，最难的是地图的建立，与表示方式。比如如果用网格去表示地图，是因该采用瓷砖运动，还是边缘运动或者是顶点运动。又或者是采用多边形去描述地图等等。还需要去研究。</span></p><p><span style=\"line-height:1.75\">在此给各位读者推荐两个网站： http://theory.stanford.edu/~amitp/GameProgramming/AStarComparison.html </span></p><p><span style=\"line-height:1.75\"> https://www.redblobgames.com/pathfinding/a-star/introduction.html </span></p><p style=\"text-indent:2em;\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">而在a*算法的延申中，还有IDA*与之媲美，更有比A*快的算法B*，希望读者可以去研究</span></span></span></p><p></p>', 62, 1, 0, '2019-07-13 00:00:00', NULL);
INSERT INTO `article` VALUES (177, '201810804121', '学术报告会— 柯里化与反柯里化和解决if_else多层嵌套问题（卫语句，策略模式，状态模式）', 5, 13, '本报讯（吴雪报道）7月7日7：40，WEB应用团队在励志楼403会议室召开了学术报告会——学术报告会— 柯里化与反柯里化和解决if_else多层嵌套问题（卫语句，策略模式，状态模式）。此次会议的主要内容报告有伍涛讲解 柯里化与反柯里化，雷凌', '柯里化', 'http://img.pzhuweb.cn/2018108041211562514214020.jpg', '{\"blocks\":[{\"key\":\"attqq\",\"text\":\"本报讯（吴雪报道）7月7日7：40，WEB应用团队在励志楼403会议室召开了学术报告会——学术报告会— 柯里化与反柯里化和解决if_else多层嵌套问题（卫语句，策略模式，状态模式）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":45,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"fv1cr\",\"text\":\"此次会议的主要内容报告有伍涛讲解 柯里化与反柯里化，雷凌讲解Java中如何解决if_else多层嵌套问题（卫语句，策略模式，状态模式）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"FONTSIZE-inherit\"},{\"offset\":25,\"length\":43,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":25,\"length\":43,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"ec331\",\"text\":\"首先，由2017级软件工程伍涛讲解：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4ktsg\",\"text\":\"       1、 柯里化的概念：函数柯里化指的是 将能够接收多个参数的函数转化为接收单一参数的函数，并且返回接收余下参数且返回结果的新函数的技术。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6e8jb\",\"text\":\"       2、 函数柯里化公式：\\n              两种公式类型的区别 —— 函数触发执行的机制不同：\\n               （1）公式类型一当传入参数等于函数参数数量时开始执行。\\n               （2）公式类型二当没有参数传入时（且参数数量满足）开始执行。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":10,\"length\":8,\"style\":\"FONTSIZE-15pt\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"535ra\",\"text\":\"       3、 柯里化的特点：参数复用（固定易变因素），延迟执行，提前返回。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"FONTSIZE-inherit\"},{\"offset\":16,\"length\":1,\"style\":\"FONTSIZE-inherit\"},{\"offset\":39,\"length\":1,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":16,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":39,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":10,\"length\":6,\"style\":\"FONTSIZE-15pt\"},{\"offset\":17,\"length\":22,\"style\":\"FONTSIZE-14pt\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"332pk\",\"text\":\"       4、 柯里化的缺点：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"FONTSIZE-inherit\"},{\"offset\":16,\"length\":1,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":16,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":10,\"length\":6,\"style\":\"FONTSIZE-15pt\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"60it2\",\"text\":\"               （1）存取 arguments 对象要比存取命名参数要慢一些。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"1jqbm\",\"text\":\"               （2）老版本浏览器在 arguments.lengths 的实现相当慢(新版本浏览器忽略)。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"ddpek\",\"text\":\" （3）fn.apply() 和 fn.call() 要比直接调用 fn() 慢。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"ap3rj\",\"text\":\" （4）大量嵌套的作用域和闭包会带来开销，影响内存占用和作用域链查找速度。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":2}},{\"key\":\"7id15\",\"text\":\"       5、 柯里化的应用：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"FONTSIZE-inherit\"},{\"offset\":16,\"length\":1,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":16,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":10,\"length\":6,\"style\":\"FONTSIZE-15pt\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3478f\",\"text\":\"              （1）利用柯里化制定约束条件，管控触发机制。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"5a2va\",\"text\":\"              （2）处理浏览器兼容（参数复用实现一次性判断）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"1n4pg\",\"text\":\"              （3）函数节流防抖（延迟执行）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"a030n\",\"text\":\"              （4）ES5前bind方法的实现。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"3b4q0\",\"text\":\"然后由2018级软件工程雷凌介绍：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"3qrp9\",\"text\":\"       1、卫语句的概念：就是把复杂的条件表达式拆分成多个条件表达式。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ao692\",\"text\":\"       2、策略模式：定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f0gi2\",\"text\":\"       3、策略模式的优点：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5k9rl\",\"text\":\"             （1）算法可以自由切换。 \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"u3ll\",\"text\":\"             （2）避免使用多重条件判断。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f9jel\",\"text\":\"             （3）耦合度相对较低，扩展性良好。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"575nk\",\"text\":\"       4、状态模式：当一个对象的内部的状态改变允许改变其行为，这个对象看起来像是改变了类本身。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":34,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":34,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":34,\"length\":17,\"style\":\"COLOR-4D4D4D\"},{\"offset\":34,\"length\":17,\"style\":\"FONTSIZE-16\"},{\"offset\":34,\"length\":17,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ansef\",\"text\":\"       5、状态模式的优点：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"COLOR-4D4D4D\"},{\"offset\":0,\"length\":17,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":17,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"12jvs\",\"text\":\"             （1）封装转化规则。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"COLOR-4D4D4D\"},{\"offset\":0,\"length\":23,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":23,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bu8b2\",\"text\":\"             （2）枚举可能的状态，在枚举状态之前确定状态种类。   \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":38,\"style\":\"COLOR-4D4D4D\"},{\"offset\":0,\"length\":38,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":38,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":38,\"length\":3,\"style\":\"FONTSIZE-inherit\"},{\"offset\":38,\"length\":3,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5kft1\",\"text\":\"通过本次会议，团队成员在柯里化与反柯里化和Java中如何解决if_else多层嵌套问题上有了一定了解.\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":51,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"dprpo\",\"text\":\"                   \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"21irl\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"4u5s9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6dg6c\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"ffuh7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108041211562514549526.jpg\",\"name\":\"QQ图片20190707230558.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":156,\"title\":\"2018108041211562514549526.jpg\",\"alt\":\"2018108041211562514549526.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108041211562514549580.jpg\",\"name\":\"QQ图片20190707234858.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":157,\"title\":\"2018108041211562514549580.jpg\",\"alt\":\"2018108041211562514549580.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:start;text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">本报讯（吴雪报道）7月7日7：40，WEB应用团队在励志楼403会议室召开了学术报告会——</span></span>学术报告会— 柯里化与反柯里化和解决if_else多层嵌套问题（卫语句，策略模式，状态模式）。</p><p style=\"text-align:start;text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">此次会议的主要内容报告有伍涛讲解</span></span> 柯里化与反柯里化<span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">，雷凌讲解Java中如何解决if_else多层嵌套问题（卫语句，策略模式，状态模式）。</span></span></p><p style=\"text-align:start;text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">首先，由2017级软件工程伍涛讲解：</span></span></p><p><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">       1、 柯里化的概念：</span></span>函数柯里化指的是 将能够接收多个参数的函数转化为接收单一参数的函数，并且返回接收余下参数且返回结果的新函数的技术。</p><p><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">       2、 </span></span><span style=\"font-size:15ptpx\">函数柯里化公式：</span><br/>              两种公式类型的区别 —— 函数触发执行的机制不同：<br/>               （1）公式类型一当传入参数等于函数参数数量时开始执行。<br/>               （2）公式类型二当没有参数传入时（且参数数量满足）开始执行。</p><p><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">       3、 </span></span><span style=\"font-size:15ptpx\">柯里化的特点</span><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">：</span></span><span style=\"font-size:14ptpx\">参数复用（固定易变因素），延迟执行，提前返回</span><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">。</span></span></p><p><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">       4、 </span></span><span style=\"font-size:15ptpx\">柯里化的缺点</span><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">：</span></span></p><p class=\"MsoNormal\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">               （1）</span></span>存取 arguments 对象要比存取命名参数要慢一些。</p><p class=\"MsoNormal\">               （2）老版本浏览器在 arguments.lengths 的实现相当慢(新版本浏览器忽略)。</p><p style=\"text-indent:4em;\"> （3）fn.apply() 和 fn.call() 要比直接调用 fn() 慢。</p><p style=\"text-indent:4em;\" size=\"1\" _root=\"[object Object]\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"> （4）大量嵌套的作用域和闭包会带来开销，影响内存占用和作用域链查找速度。</p><p><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">       5、 </span></span><span style=\"font-size:15ptpx\">柯里化的应用</span><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">：</span></span></p><p class=\"MsoNormal\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">              </span></span>（1）利用柯里化制定约束条件，管控触发机制。</p><p class=\"MsoNormal\">              （2）处理浏览器兼容（参数复用实现一次性判断）。</p><p class=\"MsoNormal\">              （3）函数节流防抖（延迟执行）。</p><p class=\"MsoNormal\">              （4）ES5前bind方法的实现。</p><p style=\"text-align:start;text-indent:2em;\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">然后由2018级软件工程雷凌介绍：</span></span></p><p><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">       1、卫语句的概念：</span></span>就是把复杂的条件表达式拆分成多个条件表达式。</p><p><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">       2、策略模式：</span></span>定义一系列的算法,把它们一个个封装起来, 并且使它们可相互替换。</p><p><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">       3、策略模式的优点：</span></span></p><p><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">             （1）</span></span>算法可以自由切换。 </p><p>             （2）避免使用多重条件判断。</p><p>             （3）耦合度相对较低，扩展性良好。</p><p><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">       4、状态模式：当一个对象的内部的状态改变允许改变其行为</span></span><span style=\"color:#4d4d4d\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">，这个对象看起来像是改变了类本身。</span></span></span></p><p><span style=\"color:#4d4d4d\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">       5、状态模式的优点：</span></span></span></p><p><span style=\"color:#4d4d4d\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">             （1）封装转化规则。</span></span></span></p><p><span style=\"color:#4d4d4d\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">             （2）枚举可能的状态，在枚举状态之前确定状态种类。</span></span></span><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\">   </span></span></p><p style=\"text-align:start;text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"><span style=\"font-size:inheritpx\">通过本次会议，团队成员在柯里化与反柯里化和</span>Java中如何解决if_else多层嵌套问题上有了一定了解.</span></p><p><span style=\"line-height:1.75\">                  </span> </p><div class=\"media-wrap image-wrap\"><img id=\"156\" title=\"2018108041211562514549526.jpg\" alt=\"2018108041211562514549526.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108041211562514549526.jpg\"/></div><p></p><div class=\"media-wrap image-wrap\"><img id=\"157\" title=\"2018108041211562514549580.jpg\" alt=\"2018108041211562514549580.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108041211562514549580.jpg\"/></div><p></p>', 2, 0, 0, '2019-07-07 00:00:00', NULL);
INSERT INTO `article` VALUES (180, '201810804121', '学术报告会——柯里化与解决Java中if-else多层嵌套问题（卫语句， 策略模式，状态模式）', 5, 13, '本报讯（吴雪报导）7月7日7：40，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队全体会议。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。此次会议的主要内容包括对柯里化与解决Java中if-else多层嵌套问', '柯里化', 'http://img.pzhuweb.cn/2018108041211562516810926.jpg', '{\"blocks\":[{\"key\":\"dq5je\",\"text\":\"本报讯（吴雪报导）7月7日7：40，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队全体会议。WEB指导教师兰全祥以及\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":66,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"c6p6r\",\"text\":\"WEB应用团队全体成员出席了此次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":19,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"jhl4\",\"text\":\"此次会议的主要内容包括对柯里化与解决Java中if-else多层嵌套问题（卫语句， 策略模式，状态模式）的解析\\n      会议开始,2017级软件工程伍涛讲解了讲解柯里化,2018级软件工程雷凌讲解了如何解决Java中if_else多层嵌套问题（卫语句，策略模式，状态  、模式）。\\n     通过本次会议，团队成员在柯里化和解决if_else多层嵌套学习上，有了进一步的了解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":190,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"73jin\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"62d3j\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"86u2a\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"77of5\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"bkmsi\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108041211562514549526.jpg\",\"type\":\"IMAGE\",\"width\":\"800px\",\"height\":\"600px\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108041211562514549580.jpg\",\"type\":\"IMAGE\",\"width\":\"800px\",\"height\":\"600px\"}}}}', '<p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">本报讯（吴雪报导）7月7日7：40，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队全体会议。WEB指导教师兰全祥以及</span></p><p><span style=\"line-height:1.75\">WEB应用团队全体成员出席了此次会议。</span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">此次会议的主要内容包括对柯里化与解决Java中if-else多层嵌套问题（卫语句， 策略模式，状态模式）的解析<br/>      会议开始,2017级软件工程伍涛讲解了讲解柯里化,2018级软件工程雷凌讲解了如何解决Java中if_else多层嵌套问题（卫语句，策略模式，状态  、模式）。<br/>     通过本次会议，团队成员在柯里化和解决if_else多层嵌套学习上，有了进一步的了解。</span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2018108041211562514549526.jpg\" width=\"800px\" height=\"600px\" style=\"width:800px;height:600px\"/></div><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2018108041211562514549580.jpg\" width=\"800px\" height=\"600px\" style=\"width:800px;height:600px\"/></div><p></p>', 28, 1, 0, '2019-07-07 00:00:00', NULL);
INSERT INTO `article` VALUES (181, '201810801026', '学术报告会-广度优先搜索,深度优先搜索和查找算法解析', 5, 13, '本报讯（范江林报导）6月8日7：40，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队全体会议。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。此次会议的主要内容包括对算法的解析会议开始,2018级计算机科学与技', '学术报告会', 'http://img.pzhuweb.cn/2018108010261562719923929.jpg', '{\"blocks\":[{\"key\":\"6anfl\",\"text\":\"本报讯（范江林报导）6月8日7：40，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队全体会议。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":85,\"style\":\"FONTSIZE-inherit\"},{\"offset\":1,\"length\":85,\"style\":\"COLOR-000000\"},{\"offset\":1,\"length\":85,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"size\":\"1\",\"_root\":\"[object Object]\",\"__ownerid\":\"undefined\",\"__hash\":\"undefined\",\"__altered\":\"false\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"b495h\",\"text\":\"此次会议的主要内容包括对算法的解析\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":17,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1oau\",\"text\":\"会议开始,2018级计算机科学与技术杨新宇讲解了深度优先搜索,广度优先搜索,2018级软件工程吴雪讲解了查找算法解析。最后,兰全祥老师布置了假期作业:动态规划解决摔杯子问题。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":87,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":87,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":87,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"size\":\"1\",\"_root\":\"[object Object]\",\"__ownerid\":\"undefined\",\"__hash\":\"undefined\",\"__altered\":\"false\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"cebqr\",\"text\":\"      通过本次会议，团队成员在学习算法上得到了提高。 \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":29,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2oe6j\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5jt3p\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6rj7q\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"33dnf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"64nch\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010261562720560298.jpg\",\"name\":\"TIM图片20190710084422.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":158,\"title\":\"2018108010261562720560298.jpg\",\"alt\":\"2018108010261562720560298.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:start;text-indent:2em;\" size=\"1\" _root=\"[object Object]\" __ownerid=\"undefined\" __hash=\"undefined\" __altered=\"false\">本<span style=\"font-size:inheritpx\"><span style=\"color:#000000\"><span style=\"line-height:2\">报讯（范江林报导）6月8日7：40，WEB应用专业团队在砺志楼403会议室召开了WEB应用专业团队全体会议。WEB指导教师兰全祥以及WEB应用团队全体成员出席了此次会议。</span></span></span></p><p style=\"text-align:start;text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:inheritpx\"><span style=\"line-height:2\"><span style=\"color:#000000\">此次会议的主要内容包括对算法的解析</span></span></span></p><p style=\"text-align:start;text-indent:2em;\" size=\"1\" _root=\"[object Object]\" __ownerid=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"font-size:inheritpx\"><span style=\"color:#000000\"><span style=\"line-height:2\">会议开始,2018级计算机科学与技术杨新宇讲解了深度优先搜索,广度优先搜索,2018级软件工程吴雪讲解了查找算法解析。最后,兰全祥老师布置了假期作业:动态规划解决摔杯子问题。</span></span></span></p><p><span style=\"font-size:inheritpx\"><span style=\"color:#000000\"><span style=\"line-height:2\">      通过本次会议，团队成员在学习算法上得到了提高。</span></span></span> </p><p> </p><p></p><div class=\"media-wrap image-wrap\"><img id=\"158\" title=\"2018108010261562720560298.jpg\" alt=\"2018108010261562720560298.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108010261562720560298.jpg\"/></div><p></p><p></p>', 23, 1, 0, '2019-07-09 00:00:00', NULL);
INSERT INTO `article` VALUES (182, '201810804085', 'WEB应用专业团队2019-2020-1学期第十次学术报告会', 4, 13, '2020年1月5日19:40在励志楼四楼会议室召开了第十次学术报告会，本次会议首先由朱守平讲解了动态规划的相关内容。并且举例了0.1背包、斐波那契数列进行说明，并且说明了动态规划和传统的递归之间的区别，让我们深入的了解了动态规划。紧接着，由', '报告会', 'http://img.pzhuweb.cn/2018108040851578383785406.jpg', '{\"blocks\":[{\"key\":\"8cql6\",\"text\":\"2020年1月5日19:40在励志楼四楼会议室召开了第十次学术报告会，本次会议首先由朱守平讲解了动态规划的相关内容。并且举例了0.1背包、斐波那契数列进行说明，并且说明了动态规划和传统的递归之间的区别，让我们深入的了解了动态规划。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":115,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":115,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":115,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":115,\"style\":\"LETTERSPACING-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"e2uun\",\"text\":\"紧接着，由刘世雄讲解了Java中的三种线程池，深度的阐释了三种线程池的各种特点，并且一一举例其用法。解释了核心线程和非核心线程的区别，表示线程池可以具有很多的优点。能够大大的节省我们创建线程和终止线程的时间和资源消耗。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":109,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":109,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":109,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":109,\"style\":\"LETTERSPACING-2\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"eum3e\",\"text\":\"最后，由团队指导老师进行总结，本次会议结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":22,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":22,\"style\":\"LETTERSPACING-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1ncu5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fnc7f\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"45vte\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f6ohj\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"dma0j\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3j5rn\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040851578384186628.jpg\",\"name\":\"$`Q3@Y0B~(}L3`O8K%9IXV2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":222,\"title\":\"2018108040851578384186628.jpg\",\"alt\":\"2018108040851578384186628.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040851578384186678.jpg\",\"name\":\"_{(GYGQ[5TY~K)Z{~~~3}V1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":221,\"title\":\"2018108040851578384186678.jpg\",\"alt\":\"2018108040851578384186678.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:start;text-indent:2em;\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\">2020年1月5日19:40在励志楼四楼会议室召开了第十次学术报告会，本次会议首先由朱守平讲解了动态规划的相关内容。并且举例了0.1背包、斐波那契数列进行说明，并且说明了动态规划和传统的递归之间的区别，让我们深入的了解了动态规划。</span></span></span></span></p><p style=\"text-indent:2em;\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\">紧接着，由刘世雄讲解了Java中的三种线程池，深度的阐释了三种线程池的各种特点，并且一一举例其用法。解释了核心线程和非核心线程的区别，表示线程池可以具有很多的优点。能够大大的节省我们创建线程和终止线程的时间和资源消耗。</span></span></span></span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\">最后，由团队指导老师进行总结，本次会议结束。</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"222\" title=\"2018108040851578384186628.jpg\" alt=\"2018108040851578384186628.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040851578384186628.jpg\"/></div><p></p><div class=\"media-wrap image-wrap\"><img id=\"221\" title=\"2018108040851578384186678.jpg\" alt=\"2018108040851578384186678.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040851578384186678.jpg\"/></div><p></p><p></p>', 22, 1, 0, '2020-01-05 00:00:00', NULL);
INSERT INTO `article` VALUES (183, '201810801026', 'WEB应用专业团队2019-2020-1学期第十一次学术报告会', 3, 13, '2020年1月6日19:40在励志楼四楼会议室召开了第十一次学术报告会，本次会议首先由赵修俊讲解了lambda表达式的相关内容， 并且围绕着lambda表达式的三个W一个H的问题进行讨论， 让我们深入的了解lambda表达式。紧接着，由杨新', '学术报告会', 'http://img.pzhuweb.cn/2018108010261578410367891.jpg', '{\"blocks\":[{\"key\":\"8mami\",\"text\":\"2020年1月6日19:40在励志楼四楼会议室召开了第十一次学术报告会，本次会议首先由赵修俊讲解了lambda表达式的相关内容， 并且围绕着lambda表达式的三个W一个H的问题进行讨论， 让我们深入的了解lambda表达式。\\n\\n紧接着，由杨新宇讲解了A*算法，先讲述了贪心优先搜索和Dijkstra算法的特点，A*是算法综合了贪心优先搜索和Dijkstra算法是更有效的直接搜索方法， 并且展示了拼图游戏。团队指导老师对此游戏提出改进建议。\\n\\n最后，由团队指导老师进行总结，本次会议结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"717nu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7fp3k\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"19qdg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010261578410265765.jpg\",\"name\":\"IMG_20200106_194526(1).jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":223,\"title\":\"2018108010261578410265765.jpg\",\"alt\":\"2018108010261578410265765.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p>2020年1月6日19:40在励志楼四楼会议室召开了第十一次学术报告会，本次会议首先由赵修俊讲解了lambda表达式的相关内容， 并且围绕着lambda表达式的三个W一个H的问题进行讨论， 让我们深入的了解lambda表达式。<br/><br/>紧接着，由杨新宇讲解了A*算法，先讲述了贪心优先搜索和Dijkstra算法的特点，A*是算法综合了贪心优先搜索和Dijkstra算法是更有效的直接搜索方法， 并且展示了拼图游戏。团队指导老师对此游戏提出改进建议。<br/><br/>最后，由团队指导老师进行总结，本次会议结束。</p><p></p><div class=\"media-wrap image-wrap\"><img id=\"223\" title=\"2018108010261578410265765.jpg\" alt=\"2018108010261578410265765.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108010261578410265765.jpg\"/></div><p></p>', 17, 1, 0, '2020-01-06 00:00:00', NULL);
INSERT INTO `article` VALUES (184, '201710803072', '图像处理基础', 3, 15, '一：图像处理基础1：位图  位图：亦称为点阵图像或栅格图像，是由称作像素（图片元素）的单个点组成的。这些点可以进行不同的排列和染色以构成图样。当放大位图时，可以看见赖以构成整个图像的无数单个方块。扩大位图尺寸的效果是增大单个像素，从而使线条', '图像处理', 'http://img.pzhuweb.cn/2017108030721562744741760.jpg', '{\"blocks\":[{\"key\":\"fj2pb\",\"text\":\"一：图像处理基础\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":8,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":8,\"style\":\"FONTSIZE-28\"},{\"offset\":0,\"length\":8,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ds8f8\",\"text\":\"1：位图\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":4,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":4,\"style\":\"FONTSIZE-24\"},{\"offset\":0,\"length\":4,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cplg1\",\"text\":\"  位图：亦称为点阵图像或栅格图像，是由称作像素（图片元素）的单个点组成的。这些点可以进行不同的排列和染色以构成图样。当放大位图时，可以看见赖以构成整个图像的无数单个方块。扩大位图尺寸的效果是增大单个像素，从而使线条和形状显得参差不齐。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":118,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":118,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":118,\"style\":\"LETTERSPACING-6\"},{\"offset\":5,\"length\":3,\"style\":\"COLOR-333333\"},{\"offset\":12,\"length\":106,\"style\":\"COLOR-333333\"},{\"offset\":5,\"length\":3,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":12,\"length\":106,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[{\"offset\":8,\"length\":4,\"key\":0}],\"data\":{}},{\"key\":\"6sigv\",\"text\":\"2：像素\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":4,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":4,\"style\":\"FONTSIZE-24\"},{\"offset\":0,\"length\":4,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4sdv0\",\"text\":\"  像素：像素是指由图像的小方格组成的，这些小方块都有一个明确的位置和被分配的色彩数值，小方格颜色和位置就决定该图像所呈现出来的样子。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":67,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":67,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":67,\"style\":\"LETTERSPACING-6\"},{\"offset\":5,\"length\":62,\"style\":\"COLOR-333333\"},{\"offset\":5,\"length\":62,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bia0k\",\"text\":\"3：分辨率\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":5,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":5,\"style\":\"FONTSIZE-24\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"87vc1\",\"text\":\"  分辨率：显示分辨率（屏幕分辨率）是屏幕图像的精密度，是指显示器所能显示的像素有多少。由于屏幕上的点、线和面都是由像素组成的，显示器可显示的像素越多，画面就越精细，同样的屏幕区域内能显示的信息也越多，所以分辨率是个非常重要的性能指标。可以把整个图像想象成是一个大型的棋盘，而分辨率的表示方式就是所有经线和纬线交叉点的数目。显示分辨率一定的情况下，显示屏越小图像越清晰，反之，显示屏大小固定时，显示分辨率越高图像越清晰。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":210,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":210,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":210,\"style\":\"LETTERSPACING-6\"},{\"offset\":6,\"length\":15,\"style\":\"COLOR-333333\"},{\"offset\":23,\"length\":7,\"style\":\"COLOR-333333\"},{\"offset\":33,\"length\":5,\"style\":\"COLOR-333333\"},{\"offset\":40,\"length\":40,\"style\":\"COLOR-333333\"},{\"offset\":82,\"length\":128,\"style\":\"COLOR-333333\"},{\"offset\":6,\"length\":15,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":23,\"length\":7,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":33,\"length\":5,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":40,\"length\":40,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":82,\"length\":128,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[{\"offset\":21,\"length\":2,\"key\":1},{\"offset\":30,\"length\":3,\"key\":2},{\"offset\":38,\"length\":2,\"key\":3},{\"offset\":80,\"length\":2,\"key\":4}],\"data\":{}},{\"key\":\"6rq55\",\"text\":\"4：RGB\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":5,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":5,\"style\":\"FONTSIZE-24\"},{\"offset\":0,\"length\":5,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fvj73\",\"text\":\"  RGB模型也称为加色法混色模型。它是以RGB三色光互相叠加来实现混色的方法，因而适合于显示器等发光体的显示。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":56,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":56,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":56,\"style\":\"LETTERSPACING-6\"},{\"offset\":2,\"length\":54,\"style\":\"COLOR-333333\"},{\"offset\":2,\"length\":54,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7h8eg\",\"text\":\"5：灰度\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":4,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":4,\"style\":\"FONTSIZE-24\"},{\"offset\":0,\"length\":4,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b80oh\",\"text\":\"  灰度：使用黑色调表示物体，即用黑色为基准色，不同的饱和度的黑色来显示图像。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":39,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":39,\"style\":\"LETTERSPACING-6\"},{\"offset\":5,\"length\":34,\"style\":\"COLOR-333333\"},{\"offset\":5,\"length\":34,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8r6ol\",\"text\":\"二：进行图像处理\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":8,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":8,\"style\":\"FONTSIZE-28\"},{\"offset\":0,\"length\":8,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ph6q\",\"text\":\"1：算法原型\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":6,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":6,\"style\":\"FONTSIZE-24\"},{\"offset\":0,\"length\":6,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6prsk\",\"text\":\"  处理图像所依据的公式或原理。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":16,\"style\":\"LETTERSPACING-6\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"62o3r\",\"text\":\"2：算法翻译\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":6,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":6,\"style\":\"FONTSIZE-24\"},{\"offset\":0,\"length\":6,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2pgo6\",\"text\":\"  将基本公式翻译为计算机可执行的源代码。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":21,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":21,\"style\":\"LETTERSPACING-6\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5rtt9\",\"text\":\"3：图像处理\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":6,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":6,\"style\":\"FONTSIZE-24\"},{\"offset\":0,\"length\":6,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cmu3e\",\"text\":\"  引入图像进行对应算法的处理。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":16,\"style\":\"LETTERSPACING-6\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ehvkg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fuivf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5qnn9\",\"text\":\"例子：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":3,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-28\"},{\"offset\":0,\"length\":3,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fa6eu\",\"text\":\"1：图像线性拉伸\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":8,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":8,\"style\":\"FONTSIZE-28\"},{\"offset\":0,\"length\":8,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"chl2k\",\"text\":\"准备工作：做图像直方图处理\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":13,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":13,\"style\":\"BOLD\"},{\"offset\":0,\"length\":13,\"style\":\"FONTSIZE-24\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1s2b\",\"text\":\"基本原理及公式：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":8,\"style\":\"LETTERSPACING-6\"},{\"offset\":0,\"length\":8,\"style\":\"FONTSIZE-24\"},{\"offset\":0,\"length\":8,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2ia3e\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":5}],\"data\":{}},{\"key\":\"37cor\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bdhlf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"float\":\"right\"}},{\"key\":\"ace9c\",\"text\":\"算法设计：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"FONTSIZE-24\"},{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-2.5\"},{\"offset\":0,\"length\":5,\"style\":\"LETTERSPACING-6\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6r103\",\"text\":\"double contrastd[] = new double[256];\\nfor(int i=0;i<contrastd.length;i++){\\n    contrastd[i] = (((double) i-(double)min)/((double)max-(double) min))*255;\\n    if(contrastd[i]>255) contrastd[i] = 255.0;\\n    else if(contrastd[i]<0) contrastd[i]=0.0;\\n}\\n\\nfor(int y = 0; y < height; y++) {\\n    for(int x = 0; x < width; x++) {\\n        Color color = image_reader.getColor(x, y);\\n        color=Color.color(contrastd[(int)(color.getRed()*255)]/255d, contrastd[(int)(color.getGreen()*255)]/255d, contrastd[(int)(color.getBlue()*255)]/255d);\\n        contrast_image_writer.setColor(x, y, color);\\n    }\\n}\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":590,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":590,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":590,\"style\":\"LINEHEIGHT-3\"},{\"offset\":0,\"length\":590,\"style\":\"LETTERSPACING-1\"},{\"offset\":32,\"length\":3,\"style\":\"BOLD\"},{\"offset\":36,\"length\":1,\"style\":\"BOLD\"},{\"offset\":48,\"length\":2,\"style\":\"BOLD\"},{\"offset\":68,\"length\":1,\"style\":\"BOLD\"},{\"offset\":148,\"length\":4,\"style\":\"BOLD\"},{\"offset\":153,\"length\":4,\"style\":\"BOLD\"},{\"offset\":173,\"length\":3,\"style\":\"BOLD\"},{\"offset\":193,\"length\":6,\"style\":\"BOLD\"},{\"offset\":200,\"length\":4,\"style\":\"BOLD\"},{\"offset\":225,\"length\":1,\"style\":\"BOLD\"},{\"offset\":241,\"length\":4,\"style\":\"BOLD\"},{\"offset\":261,\"length\":3,\"style\":\"BOLD\"},{\"offset\":274,\"length\":2,\"style\":\"BOLD\"},{\"offset\":299,\"length\":3,\"style\":\"BOLD\"},{\"offset\":311,\"length\":2,\"style\":\"BOLD\"},{\"offset\":365,\"length\":2,\"style\":\"BOLD\"},{\"offset\":369,\"length\":1,\"style\":\"BOLD\"},{\"offset\":371,\"length\":8,\"style\":\"BOLD\"},{\"offset\":428,\"length\":3,\"style\":\"BOLD\"},{\"offset\":434,\"length\":6,\"style\":\"BOLD\"},{\"offset\":473,\"length\":3,\"style\":\"BOLD\"},{\"offset\":479,\"length\":6,\"style\":\"BOLD\"},{\"offset\":517,\"length\":3,\"style\":\"BOLD\"},{\"offset\":523,\"length\":4,\"style\":\"BOLD\"},{\"offset\":528,\"length\":1,\"style\":\"BOLD\"},{\"offset\":530,\"length\":8,\"style\":\"BOLD\"},{\"offset\":570,\"length\":2,\"style\":\"BOLD\"},{\"offset\":573,\"length\":2,\"style\":\"BOLD\"},{\"offset\":581,\"length\":1,\"style\":\"BOLD\"},{\"offset\":583,\"length\":4,\"style\":\"BOLD\"},{\"offset\":391,\"length\":5,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"bv7mk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"m64d\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://baike.baidu.com/item/%E7%82%B9%E9%98%B5%E5%9B%BE%E5%83%8F\",\"target\":\"_blank\",\"nodeAttributes\":{}}},\"1\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://baike.baidu.com/item/%E5%9B%BE%E5%83%8F/773234\",\"target\":\"_blank\",\"nodeAttributes\":{\"data-lemmaid\":\"773234\"}}},\"2\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://baike.baidu.com/item/%E6%98%BE%E7%A4%BA%E5%99%A8/362722\",\"target\":\"_blank\",\"nodeAttributes\":{\"data-lemmaid\":\"362722\"}}},\"3\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://baike.baidu.com/item/%E5%83%8F%E7%B4%A0/95084\",\"target\":\"_blank\",\"nodeAttributes\":{\"data-lemmaid\":\"95084\"}}},\"4\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://baike.baidu.com/item/%E7%B2%BE%E7%BB%86/1312083\",\"target\":\"_blank\",\"nodeAttributes\":{\"data-lemmaid\":\"1312083\"}}},\"5\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030721562744202178.png\",\"name\":\"无标题.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":159,\"title\":\"2017108030721562744202178.png\",\"alt\":\"2017108030721562744202178.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:28px\"><strong>一：图像处理基础</strong></span></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:24px\"><strong>1：位图</strong></span></span></span></p><p><span style=\"font-size:20px\"><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\">  位图：<span style=\"color:#333333\"><span style=\"background-color:#ffffff\">亦称为</span></span><a href=\"https://baike.baidu.com/item/%E7%82%B9%E9%98%B5%E5%9B%BE%E5%83%8F\" target=\"_blank\">点阵图像</a><span style=\"color:#333333\"><span style=\"background-color:#ffffff\">或栅格图像，是由称作像素（图片元素）的单个点组成的。这些点可以进行不同的排列和染色以构成图样。当放大位图时，可以看见赖以构成整个图像的无数单个方块。扩大位图尺寸的效果是增大单个像素，从而使线条和形状显得参差不齐。</span></span></span></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:24px\"><strong>2：像素</strong></span></span></span></p><p><span style=\"font-size:20px\"><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\">  像素：<span style=\"color:#333333\"><span style=\"background-color:#ffffff\">像素是指由图像的小方格组成的，这些小方块都有一个明确的位置和被分配的色彩数值，小方格颜色和位置就决定该图像所呈现出来的样子。</span></span></span></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:24px\">3：分辨率</span></span></span></p><p><span style=\"font-size:20px\"><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\">  分辨率：<span style=\"color:#333333\"><span style=\"background-color:#ffffff\">显示分辨率（屏幕分辨率）是屏幕</span></span><a href=\"https://baike.baidu.com/item/%E5%9B%BE%E5%83%8F/773234\" target=\"_blank\" data-lemmaid=\"773234\">图像</a><span style=\"color:#333333\"><span style=\"background-color:#ffffff\">的精密度，是指</span></span><a href=\"https://baike.baidu.com/item/%E6%98%BE%E7%A4%BA%E5%99%A8/362722\" target=\"_blank\" data-lemmaid=\"362722\">显示器</a><span style=\"color:#333333\"><span style=\"background-color:#ffffff\">所能显示的</span></span><a href=\"https://baike.baidu.com/item/%E5%83%8F%E7%B4%A0/95084\" target=\"_blank\" data-lemmaid=\"95084\">像素</a><span style=\"background-color:#ffffff\"><span style=\"color:#333333\">有多少。由于屏幕上的点、线和面都是由像素组成的，显示器可显示的像素越多，画面就越</span></span><a href=\"https://baike.baidu.com/item/%E7%B2%BE%E7%BB%86/1312083\" target=\"_blank\" data-lemmaid=\"1312083\">精细</a><span style=\"color:#333333\"><span style=\"background-color:#ffffff\">，同样的屏幕区域内能显示的信息也越多，所以分辨率是个非常重要的性能指标。可以把整个图像想象成是一个大型的棋盘，而分辨率的表示方式就是所有经线和纬线交叉点的数目。显示分辨率一定的情况下，显示屏越小图像越清晰，反之，显示屏大小固定时，显示分辨率越高图像越清晰。</span></span></span></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:24px\"><strong>4：RGB</strong></span></span></span></p><p><span style=\"font-size:20px\"><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\">  <span style=\"color:#333333\"><span style=\"background-color:#ffffff\">RGB模型也称为加色法混色模型。它是以RGB三色光互相叠加来实现混色的方法，因而适合于显示器等发光体的显示。</span></span></span></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:24px\"><strong>5：灰度</strong></span></span></span></p><p><span style=\"font-size:20px\"><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\">  灰度：<span style=\"color:#333333\"><span style=\"background-color:#ffffff\">使用黑色调表示物体，即用黑色为基准色，不同的饱和度的黑色来显示图像。</span></span></span></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:28px\"><strong>二：进行图像处理</strong></span></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:24px\"><strong>1：算法原型</strong></span></span></span></p><p><span style=\"font-size:20px\"><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\">  处理图像所依据的公式或原理。</span></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:24px\"><strong>2：算法翻译</strong></span></span></span></p><p><span style=\"font-size:20px\"><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\">  将基本公式翻译为计算机可执行的源代码。</span></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:24px\"><strong>3：图像处理</strong></span></span></span></p><p><span style=\"font-size:20px\"><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\">  引入图像进行对应算法的处理。</span></span></span></p><p></p><p></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:28px\"><strong>例子：</strong></span></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:28px\"><strong>1：图像线性拉伸</strong></span></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><strong><span style=\"font-size:24px\">准备工作：做图像直方图处理</span></strong></span></span></p><p><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\"><span style=\"font-size:24px\"><strong>基本原理及公式：</strong></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"159\" title=\"2017108030721562744202178.png\" alt=\"2017108030721562744202178.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030721562744202178.png\"/></div><p></p><p></p><p><span style=\"font-size:24px\"><span style=\"line-height:2.5\"><span style=\"letter-spacing:6px\">算法设计：</span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:20px\"><span style=\"line-height:3\"><span style=\"letter-spacing:1px\">double contrastd[] = new double[<strong>256</strong>]<strong>;</strong><br/>for(int i=<strong>0;</strong>i&lt;contrastd.length<strong>;</strong>i++){<br/>    contrastd[i] = (((double) i-(double)min)/((double)max-(double) min))*<strong>255;</strong><br/><strong>    </strong>if(contrastd[i]&gt;<strong>255</strong>) contrastd[i] = <strong>255.0;</strong><br/><strong>    </strong>else if(contrastd[i]&lt;<strong>0</strong>) contrastd[i]=<strong>0.0;</strong><br/>}<br/><br/>for(int y = <strong>0; </strong>y &lt; height<strong>; </strong>y++) {<br/>    for(int x = <strong>0; </strong>x &lt; width<strong>; </strong>x++) {<br/>        Color color = image_reader.getColor(x<strong>, </strong>y)<strong>;</strong><br/><strong>        </strong>color=Color.<em>color</em>(contrastd[(int)(color.getRed()*<strong>255</strong>)]/<strong>255d, </strong>contrastd[(int)(color.getGreen()*<strong>255</strong>)]/<strong>255d, </strong>contrastd[(int)(color.getBlue()*<strong>255</strong>)]/<strong>255d</strong>)<strong>;</strong><br/><strong>        </strong>contrast_image_writer.setColor(x<strong>, </strong>y<strong>, </strong>color)<strong>;</strong><br/><strong>    </strong>}<br/>}</span></span></span></span></p><p></p><p></p>', 28, 1, 0, '2019-07-10 00:00:00', NULL);
INSERT INTO `article` VALUES (185, '201710803072', '对比度拉伸的几个基本算法', 3, 15, '关于图像增强必须清楚的基本概念1.图像增强的目的：1）改善图像的视觉效果，2）转换为更适合于人或机器分析处理的形式3）突出对人或机器分析有意义的信息4）抑制无用信息，提高图像的使用价值5）增强后的图像并不一定保真 2，图像增强的方法分类：1', '对比度拉伸', 'http://img.pzhuweb.cn/2017108030721562745956808.jpg', '{\"blocks\":[{\"key\":\"e652\",\"text\":\"关于图像增强必须清楚的基本概念\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"6251b\",\"text\":\"1.图像增强的目的：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"8hler\",\"text\":\"1）改善图像的视觉效果，\\n2）转换为更适合于人或机器分析处理的形式\\n3）突出对人或机器分析有意义的信息\\n4）抑制无用信息，提高图像的使用价值\\n5）增强后的图像并不一定保真\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"482o3\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"69n0i\",\"text\":\"2，图像增强的方法分类：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"b8tdh\",\"text\":\"1）从处理对象分类：灰度图像，（伪）彩色图像\\n2）从处理策略分类：全局处理，局部处理（ROI ROI，Region of Interest Interest）\\n3）从处理方法分类：空间域（点域运算，即灰度变换；邻域方法，即空域滤波），频域方法\\n4）从处理目的分类：图像锐化，平滑去噪，灰度调整（对比度增强）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"cqlhu\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"ef0pq\",\"text\":\"3，图像增强的方法之对比度增强\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"g770\",\"text\":\"1）灰度变换法\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4aii9\",\"text\":\"线性变换（已实现）\\n对数变换（已实现）\\n指数变换（已实现）\\n\\n2）直方图调整法\\n直方图均衡化（已实现）\\n直方图匹配（未实现）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"en7kv\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"6m926\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2tq76\",\"text\":\"一，直方图均衡化 \",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"5tr4\",\"text\":\"直方图均衡化的英文名称是Histogram Equalization. \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"a81uq\",\"text\":\"　　图像对比度增强的方法可以分成两类:一类是直接对比度增强方法;另一类是间接对比度增强方法。直方图拉伸和直方图均衡化是两种最常见的间接对比度增强方法。直方图拉伸是通过对比度拉伸对直方图进行调整，从而“扩大”前景和背景灰度的差别，以达到增强对比度的目的，这种方法可以利用线性或非线性的方法来实现;直方图均衡化则通过使用累积函数对灰度值进行“调整”以实现对比度的增强。\\n　　直方图均衡化处理的“中心思想”是把原始图像的灰度直方图从比较集中的某个灰度区间变成在全部灰度范围内的均匀分布。直方图均衡化就是对图像进行非线性拉伸，重新分配图像像素值，使一定灰度范围内的像素数量大致相同。直方图均衡化就是把给定图像的直方图分布改变成“均匀”分布直方图分布。\\n　　缺点： \\n　　1）变换后图像的灰度级减少，某些细节消失； \\n　　2）某些图像，如直方图有高峰，经处理后对比度不自然的过分增强。 \\n　　直方图均衡化是图像处理领域中利用图像直方图对对比度进行调整的方法。 \\n　　这种方法通常用来增加许多图像的局部对比度，尤其是当图像的有用数据的对比度相当接近的时候。通过这种方法，亮度可以更好地在直方图上分布。这样就可以用于增强局部的对比度而不影响整体的对比度，直方图均衡化通过有效地扩展常用的亮度来实现这种功能。\\n　　这种方法对于背景和前景都太亮或者太暗的图像非常有用，这种方法尤其是可以带来X光图像中更好的骨骼结构显示以及曝光过度或者曝光不足照片中更好的细节。这种方法的一个主要优势是它是一个相当直观的技术并且是可逆操作，如果已知均衡化函数，那么就可以恢复原始的直方图，并且计算量也不大。这种方法的一个缺点是它对处理的数据不加选择，它可能会增加背景杂讯的对比度并且降低有用信号的对比度。\\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"5k9uq\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20161228150910203?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"c6qjc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"790ji\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"bp44f\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"aqv2r\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20161227193556689?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"9chjh\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6vj01\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"86hf0\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"5tibv\",\"text\":\"二，指数变换\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"co43v\",\"text\":\"指数变换（Power-Law ）的公式：S=c*R^r,通过合理的选择c和r可以压缩灰度范围，算法以c=1.0/255.0, r=2实现。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2lp5n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"8jlju\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20161229163907449?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"58f89\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2o10i\",\"text\":\"要做该图像增强变换需要先做归一化，再指数变换，最后反归一化\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"dmcce\",\"text\":\"增强效果展示：可以看见，改增强算法并不能很好的将像素尽可能的碾平。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"dhhed\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"enlb4\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20170113164203527?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"3i9jq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fteh9\",\"text\":\"指数增强参考程序为：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"6joqm\",\"text\":\" \",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"85i7c\",\"text\":\"clc;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"82jj5\",\"text\":\"close all;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"d1vg0\",\"text\":\"clear all;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"d7u15\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a977u\",\"text\":\"% -------------Gamma Transformations-----------------\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":53,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9d6ep\",\"text\":\"%f = imread(\'Fig0316(4)(bottom_left).tif\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ae1gi\",\"text\":\"f = imread(\'seed.tif\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2hlb5\",\"text\":\"Gamma = 0.4;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b8lpn\",\"text\":\"g2 = myExpEnhance(f,Gamma);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c5in8\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c74e1\",\"text\":\"figure();\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5t0ea\",\"text\":\"subplot(221); imshow(f); xlabel(\'a).Original Image\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":53,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6qhct\",\"text\":\"subplot(222),imhist(f),title(\'原图像直方图\');%显示原始图像直方图\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":49,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f5a7u\",\"text\":\"subplot(223); imshow(g2); xlabel(\'b).Gamma Transformations \\\\gamma = 0.4\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":74,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"57gi6\",\"text\":\"subplot(224),imhist(g2),title(\'增强图像直方图\');%显示原始图像直方图\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a8jgi\",\"text\":\"指数增强核心函数为：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"fjmf8\",\"text\":\" \",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"43a34\",\"text\":\"function dst_img=myExpEnhance(src_img,Gamma)\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":44,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6bnp8\",\"text\":\"src_img = mat2gray(src_img,[0 255]);%将图像矩阵A中介于amin和amax的数据归一化处理， 其余小于amin的元素都变为0， 大于amax的元素都变为1。\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":96,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8ndm5\",\"text\":\"C = 1;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cddqk\",\"text\":\"g2 = C*(src_img.^Gamma);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"calrp\",\"text\":\"%反归一化\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1giah\",\"text\":\"max=255;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"d4rfs\",\"text\":\"min=0;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9u0i5\",\"text\":\"dst_img=uint8(g2*(max-min)+min);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":32,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9iigk\",\"text\":\"\\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1so86\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1u7pj\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"d5kgg\",\"text\":\"三，对数变换\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"ugu6\",\"text\":\"       对数变换主要用于将图像的低灰度值部分扩展，将其高灰度值部分压缩，以达到强调图像低灰度部分的目的。变换方法由下式给出。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"c0d2g\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"9fbbn\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":4}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20131014152926171\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"d9n5d\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1vfm9\",\"text\":\"这里的对数变换，底数为（v+1），实际计算的时候，需要用换底公式。其输入范围为归一化的【0-1】，其输出也为【0-1】。对于不同的底数，其对应的变换曲线如下图所示。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"cgjrp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"9bj55\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":5}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20131014153326875?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGhuaDE2OQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"11f06\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8koec\",\"text\":\"底数越大，对低灰度部分的强调就越强，对高灰度部分的压缩也就越强。相反的，如果想强调高灰度部分，则用反对数函数就可以了。看下面的实验就可以很直观的理解，下图是某图像的二维傅里叶变换图像，其为了使其灰度部分较为明显，一般都会使用灰度变换处理一下。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"dgmkm\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"dl3f6\",\"text\":\"效果图：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"dlv0v\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"bhgia\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":6}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20170113192448174?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"8s9ep\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"84s2e\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4eav5\",\"text\":\"参考代码：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"ans0a\",\"text\":\" \",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"caomd\",\"text\":\"clc;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4uk8p\",\"text\":\"close all;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4vmjl\",\"text\":\"clear all;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1sr7h\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3rcat\",\"text\":\"%-------------Log Transformations-----------------\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":50,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5n97o\",\"text\":\"f = imread(\'seed.tif\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9kbe5\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aj675\",\"text\":\"g_1 = myLogEnhance(f,10);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3lvnf\",\"text\":\"g_2 = myLogEnhance(f,100);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1nb68\",\"text\":\"g_3 = myLogEnhance(f,200);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2mth6\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dqd8n\",\"text\":\"figure();\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"57i4m\",\"text\":\"subplot(2,2,1);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"30pqb\",\"text\":\"imshow(f);xlabel(\'a).Original Image\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":38,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"emd2s\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dql33\",\"text\":\"subplot(2,2,2);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"afqk0\",\"text\":\"imshow(g_1);xlabel(\'b).Log Transformations v=10\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":50,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"873lb\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1mkb5\",\"text\":\"subplot(2,2,3);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5qusa\",\"text\":\"imshow(g_2);xlabel(\'c).Log Transformations v=100\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":51,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"d0r12\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"crgps\",\"text\":\"subplot(2,2,4);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9udo0\",\"text\":\"imshow(g_3);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"di80n\",\"text\":\"xlabel(\'d).Log Transformations v=200\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1sudf\",\"text\":\"\\n对数变换核心函数\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"avboj\",\"text\":\" \",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2669q\",\"text\":\"function dst_img=myLogEnhance(src_img,v)\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"24e6r\",\"text\":\"c=1.0;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5g6gh\",\"text\":\"src_img = mat2gray(src_img,[0 255]);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"l4o0\",\"text\":\"g =c*log2(1 + v*src_img)/log2(v+1);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":35,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"50ed\",\"text\":\"%反归一化\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7s89p\",\"text\":\"max=255;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"59st8\",\"text\":\"min=0;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9uhl3\",\"text\":\"dst_img=uint8(g*(max-min)+min);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cco87\",\"text\":\"\\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"74r4a\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"5rpb4\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"8qtn9\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"fdkos\",\"text\":\"四，灰度拉伸\\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"5ct5e\",\"text\":\"灰度拉伸也用于强调图像的某个部分，与伽马变换与对数变换不同的是，灰度拉升可以改善图像的动态范围。可以将原来低对比度的图像拉伸为高对比度图像。实现灰度拉升的方法很多，其中最简单的一种就是线性拉伸。而这里介绍的方法稍微复杂一些。灰度拉伸所用数学式如下所示。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"a5sdk\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"a84mj\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":7}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20131014160327312\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"dqqgq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"74thm\",\"text\":\"同样的，其输入r为【0-1】，其输出s也为【0-1】。这个式子再熟悉不过了，跟巴特沃斯高通滤波器像极了，其输入输出关系也大致能猜到是个什么形状的。但是，这里就出现一个问题了，输入为0时候，式子无意义了。所以，在用Matlab计算的时候，将其变为如下形式。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"8c79c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"7o8uh\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":8}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20131014160708375\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"52eab\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fdpq\",\"text\":\"这里的eps，就是Matlab里面，一个很小数。如此做的话，式子变得有意义了。但是，其输入范围为【0-1】的时候，其输出范围变为了\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"dajmf\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":9}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20131014160821156\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"fcnjk\",\"text\":\"。输出范围大致为【0-1】，为了精确起见，使用mat2gray函数将其归一化到精确的[0-1]。调用格式如下。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aogvv\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"13fe6\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"54k0q\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"f9i81\",\"text\":\"五，线性拉伸\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"t6bt\",\"text\":\"为了突出感兴趣的目标或者灰度区间，相对抑制那些不感兴趣的灰度区域，可采用分段线性法，常用的是三段线性变换\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"9gci4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"26a95\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":10}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20170114215135255?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"6toga\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d746a\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"bc576\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"6rem3\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":11}],\"data\":{\"nodeAttributes\":{\"alt\":\"\",\"class\":\"has\",\"src\":\"https://img-blog.csdn.net/20170114215438495?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"7ia1u\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"88kqo\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"37dlv\",\"text\":\"参考程序：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"5fom5\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2ruqe\",\"text\":\" \",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"3dbs9\",\"text\":\"clc;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"85m70\",\"text\":\"close all;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1j68g\",\"text\":\"clear all;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ff4s0\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cvg38\",\"text\":\"I=imread(\'seed.tif\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f1a2\",\"text\":\"[m,n,k]=size(I);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"75r1t\",\"text\":\"figure (1)\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7mdm8\",\"text\":\"imshow(\'seed.tif\');title(\' 原图像\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"afudf\",\"text\":\"mid=mean(mean(I));\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6r6nq\",\"text\":\"%横轴\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4f57j\",\"text\":\"fa=20; fb=80;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"reuk\",\"text\":\"%纵轴\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7d3tt\",\"text\":\"ga=50; gb=230;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9geat\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f64ev\",\"text\":\"J=myLinearEnhance(I,fa,fb,ga,gb);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"a3fab\",\"text\":\"figure (2)\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"90ac1\",\"text\":\"imshow(J);title(\' 线性拉伸图像\');\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f9f4n\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cknog\",\"text\":\"pixel_f=1:256;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8i0ec\",\"text\":\"pixel_g=zeros(1,256);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"e29qb\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fccf7\",\"text\":\"%三段斜率,小于1表示该段将会被收缩\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7si1h\",\"text\":\"k1=double(ga/fa);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"jjo4\",\"text\":\"k2=(gb- ga)/(fb- fa);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fiouk\",\"text\":\"k3=(256- gb)/(256- fb);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1tsp0\",\"text\":\"for i=1:256\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6m92e\",\"text\":\"if i <= fa\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cf2j0\",\"text\":\"pixel_g(i)= k1*i;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8b35i\",\"text\":\"elseif fa < i && i <= fb\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"256u5\",\"text\":\"pixel_g(i)= k2*( i- fa)+ ga;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":28,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5lial\",\"text\":\"else\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"88nh9\",\"text\":\"pixel_g(i)= k3*( i - fb)+ gb;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4qu81\",\"text\":\"end\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dt8pm\",\"text\":\"end\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8f96u\",\"text\":\"figure (3)\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8og\",\"text\":\"plot(pixel_f,pixel_g);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fbjtt\",\"text\":\"\\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"cggt9\",\"text\":\"核心函数：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1h6hk\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"emi6j\",\"text\":\" \",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"f9hkj\",\"text\":\"function dst_img=myLinearEnhance(src_img,fa,fb,ga,gb)\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":53,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"emmdl\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"99lor\",\"text\":\"[height,width] = size(src_img);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"69egk\",\"text\":\"dst_img=uint8(zeros(height,width));\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":35,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bbeqp\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bo752\",\"text\":\"src_img=double(src_img);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4gq80\",\"text\":\" \",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a1rlq\",\"text\":\"%三段斜率\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4n8kg\",\"text\":\"k1=ga/fa;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"aop38\",\"text\":\"k2=(gb- ga)/(fb- fa);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dtp\",\"text\":\"k3=(255- gb)/(255- fb);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"66p5j\",\"text\":\"for i=1:height\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3bume\",\"text\":\"for j=1:width\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"vumk\",\"text\":\"if src_img(i,j) <= fa\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":21,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1n5l9\",\"text\":\"dst_img(i,j)= k1*src_img(i,j);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ab8sr\",\"text\":\"elseif fa < src_img(i,j) && src_img(i,j) <= fb\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":46,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1v9et\",\"text\":\"dst_img(i,j)= k2*( src_img(i,j)- fa)+ ga;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7sq5p\",\"text\":\"else\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8calt\",\"text\":\"dst_img(i,j)= k3*( src_img(i,j)- fb)+ gb;\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"65fit\",\"text\":\"end\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"e1kjt\",\"text\":\"end\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bdcs6\",\"text\":\"end\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fmd8q\",\"text\":\"dst_img=uint8(dst_img);\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7o4v8\",\"text\":\"转载自：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cnrtq\",\"text\":\"https://blog.csdn.net/qq_34106574/article/details/82460697\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":58,\"key\":12}],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20161228150910203?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20161227193556689?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20161229163907449?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20170113164203527?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"}},\"4\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20131014152926171\"}},\"5\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20131014153326875?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGhuaDE2OQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\"}},\"6\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20170113192448174?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"}},\"7\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20131014160327312\"}},\"8\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20131014160708375\"}},\"9\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20131014160821156\"}},\"10\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20170114215135255?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"}},\"11\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://img-blog.csdn.net/20170114215438495?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\"}},\"12\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://blog.csdn.net/qq_34106574/article/details/82460697\",\"target\":\"_blank\"}}}}', '<h1 style=\"text-align:start;text-indent:2em;\"><strong>关于图像增强必须清楚的基本概念</strong></h1><p style=\"text-align:start;text-indent:2em;\">1.图像增强的目的：</p><p style=\"text-align:start;text-indent:2em;\">1）改善图像的视觉效果，<br/>2）转换为更适合于人或机器分析处理的形式<br/>3）突出对人或机器分析有意义的信息<br/>4）抑制无用信息，提高图像的使用价值<br/>5）增强后的图像并不一定保真</p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\">2，图像增强的方法分类：</p><p style=\"text-align:start;text-indent:2em;\">1）从处理对象分类：灰度图像，（伪）彩色图像<br/>2）从处理策略分类：全局处理，局部处理（ROI ROI，Region of Interest Interest）<br/>3）从处理方法分类：空间域（点域运算，即灰度变换；邻域方法，即空域滤波），频域方法<br/>4）从处理目的分类：图像锐化，平滑去噪，灰度调整（对比度增强）</p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\">3，图像增强的方法之对比度增强</p><p style=\"text-align:start;text-indent:2em;\">1）灰度变换法</p><p style=\"text-align:start;text-indent:2em;\">线性变换（已实现）<br/>对数变换（已实现）<br/>指数变换（已实现）<br/><br/>2）直方图调整法<br/>直方图均衡化（已实现）<br/>直方图匹配（未实现）</p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\"> </p><h1 style=\"text-align:start;text-indent:2em;\"><strong>一，直方图均衡化 </strong></h1><p style=\"text-align:start;text-indent:2em;\">直方图均衡化的英文名称是Histogram Equalization. </p><p style=\"text-align:start;text-indent:2em;\">　　图像对比度增强的方法可以分成两类:一类是直接对比度增强方法;另一类是间接对比度增强方法。直方图拉伸和直方图均衡化是两种最常见的间接对比度增强方法。直方图拉伸是通过对比度拉伸对直方图进行调整，从而“扩大”前景和背景灰度的差别，以达到增强对比度的目的，这种方法可以利用线性或非线性的方法来实现;直方图均衡化则通过使用累积函数对灰度值进行“调整”以实现对比度的增强。<br/>　　直方图均衡化处理的“中心思想”是把原始图像的灰度直方图从比较集中的某个灰度区间变成在全部灰度范围内的均匀分布。直方图均衡化就是对图像进行非线性拉伸，重新分配图像像素值，使一定灰度范围内的像素数量大致相同。直方图均衡化就是把给定图像的直方图分布改变成“均匀”分布直方图分布。<br/>　　缺点： <br/>　　1）变换后图像的灰度级减少，某些细节消失； <br/>　　2）某些图像，如直方图有高峰，经处理后对比度不自然的过分增强。 <br/>　　直方图均衡化是图像处理领域中利用图像直方图对对比度进行调整的方法。 <br/>　　这种方法通常用来增加许多图像的局部对比度，尤其是当图像的有用数据的对比度相当接近的时候。通过这种方法，亮度可以更好地在直方图上分布。这样就可以用于增强局部的对比度而不影响整体的对比度，直方图均衡化通过有效地扩展常用的亮度来实现这种功能。<br/>　　这种方法对于背景和前景都太亮或者太暗的图像非常有用，这种方法尤其是可以带来X光图像中更好的骨骼结构显示以及曝光过度或者曝光不足照片中更好的细节。这种方法的一个主要优势是它是一个相当直观的技术并且是可逆操作，如果已知均衡化函数，那么就可以恢复原始的直方图，并且计算量也不大。这种方法的一个缺点是它对处理的数据不加选择，它可能会增加背景杂讯的对比度并且降低有用信号的对比度。<br/> </p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20161228150910203?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" class=\"has\"/></div><p></p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20161227193556689?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" class=\"has\"/></div><p></p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\"> </p><h1 style=\"text-align:start;text-indent:2em;\"><strong>二，指数变换</strong></h1><p style=\"text-align:start;text-indent:2em;\">指数变换（Power-Law ）的公式：S=c*R^r,通过合理的选择c和r可以压缩灰度范围，算法以c=1.0/255.0, r=2实现。</p><p style=\"text-align:start;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20161229163907449?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" class=\"has\"/></div><p></p><p style=\"text-align:start;text-indent:2em;\">要做该图像增强变换需要先做归一化，再指数变换，最后反归一化</p><p style=\"text-align:start;text-indent:2em;\">增强效果展示：可以看见，改增强算法并不能很好的将像素尽可能的碾平。</p><p style=\"text-align:start;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20170113164203527?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" class=\"has\"/></div><p></p><p style=\"text-align:start;text-indent:2em;\">指数增强参考程序为：</p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"> </code></pre><ol><li><code>clc;</code></li><li><code>close all;</code></li><li><code>clear all;</code></li><li> </li><li><code>% -------------Gamma Transformations-----------------</code></li><li><code>%f = imread(&#x27;Fig0316(4)(bottom_left).tif&#x27;);</code></li><li><code>f = imread(&#x27;seed.tif&#x27;);</code></li><li><code>Gamma = 0.4;</code></li><li><code>g2 = myExpEnhance(f,Gamma);</code></li><li> </li><li><code>figure();</code></li><li><code>subplot(221); imshow(f); xlabel(&#x27;a).Original Image&#x27;);</code></li><li><code>subplot(222),imhist(f),title(&#x27;原图像直方图&#x27;);%显示原始图像直方图</code></li><li><code>subplot(223); imshow(g2); xlabel(&#x27;b).Gamma Transformations \\gamma = 0.4&#x27;);</code></li><li><code>subplot(224),imhist(g2),title(&#x27;增强图像直方图&#x27;);%显示原始图像直方图</code></li></ol><p style=\"text-align:start;text-indent:2em;\">指数增强核心函数为：</p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"> </code></pre><ol><li><code>function dst_img=myExpEnhance(src_img,Gamma)</code></li><li><code>src_img = mat2gray(src_img,[0 255]);%将图像矩阵A中介于amin和amax的数据归一化处理， 其余小于amin的元素都变为0， 大于amax的元素都变为1。</code></li><li><code>C = 1;</code></li><li><code>g2 = C*(src_img.^Gamma);</code></li><li><code>%反归一化</code></li><li><code>max=255;</code></li><li><code>min=0;</code></li><li><code>dst_img=uint8(g2*(max-min)+min);</code></li></ol><p style=\"text-align:start;text-indent:2em;\"><br/> </p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\"> </p><h1 style=\"text-align:start;text-indent:2em;\"><strong>三，对数变换</strong></h1><p style=\"text-align:start;text-indent:2em;\">       对数变换主要用于将图像的低灰度值部分扩展，将其高灰度值部分压缩，以达到强调图像低灰度部分的目的。变换方法由下式给出。</p><p style=\"text-align:start;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20131014152926171\" class=\"has\"/></div><p></p><p style=\"text-align:start;text-indent:2em;\">这里的对数变换，底数为（v+1），实际计算的时候，需要用换底公式。其输入范围为归一化的【0-1】，其输出也为【0-1】。对于不同的底数，其对应的变换曲线如下图所示。</p><p style=\"text-align:start;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20131014153326875?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdGhuaDE2OQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast\" class=\"has\"/></div><p></p><p style=\"text-align:start;text-indent:2em;\">底数越大，对低灰度部分的强调就越强，对高灰度部分的压缩也就越强。相反的，如果想强调高灰度部分，则用反对数函数就可以了。看下面的实验就可以很直观的理解，下图是某图像的二维傅里叶变换图像，其为了使其灰度部分较为明显，一般都会使用灰度变换处理一下。</p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\">效果图：</p><p style=\"text-align:start;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20170113192448174?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" class=\"has\"/></div><p></p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\">参考代码：</p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"> </code></pre><ol><li><code>clc;</code></li><li><code>close all;</code></li><li><code>clear all;</code></li><li> </li><li><code>%-------------Log Transformations-----------------</code></li><li><code>f = imread(&#x27;seed.tif&#x27;);</code></li><li> </li><li><code>g_1 = myLogEnhance(f,10);</code></li><li><code>g_2 = myLogEnhance(f,100);</code></li><li><code>g_3 = myLogEnhance(f,200);</code></li><li> </li><li><code>figure();</code></li><li><code>subplot(2,2,1);</code></li><li><code>imshow(f);xlabel(&#x27;a).Original Image&#x27;);</code></li><li> </li><li><code>subplot(2,2,2);</code></li><li><code>imshow(g_1);xlabel(&#x27;b).Log Transformations v=10&#x27;);</code></li><li> </li><li><code>subplot(2,2,3);</code></li><li><code>imshow(g_2);xlabel(&#x27;c).Log Transformations v=100&#x27;);</code></li><li> </li><li><code>subplot(2,2,4);</code></li><li><code>imshow(g_3);</code></li><li><code>xlabel(&#x27;d).Log Transformations v=200&#x27;);</code></li></ol><p style=\"text-align:start;text-indent:2em;\"><br/>对数变换核心函数</p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"> </code></pre><ol><li><code>function dst_img=myLogEnhance(src_img,v)</code></li><li><code>c=1.0;</code></li><li><code>src_img = mat2gray(src_img,[0 255]);</code></li><li><code>g =c*log2(1 + v*src_img)/log2(v+1);</code></li><li><code>%反归一化</code></li><li><code>max=255;</code></li><li><code>min=0;</code></li><li><code>dst_img=uint8(g*(max-min)+min);</code></li></ol><p style=\"text-align:start;text-indent:2em;\"><br/> </p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\"><strong>四，灰度拉伸</strong><br/> </p><p style=\"text-align:start;text-indent:2em;\">灰度拉伸也用于强调图像的某个部分，与伽马变换与对数变换不同的是，灰度拉升可以改善图像的动态范围。可以将原来低对比度的图像拉伸为高对比度图像。实现灰度拉升的方法很多，其中最简单的一种就是线性拉伸。而这里介绍的方法稍微复杂一些。灰度拉伸所用数学式如下所示。</p><p style=\"text-align:start;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20131014160327312\" class=\"has\"/></div><p></p><p style=\"text-align:start;text-indent:2em;\">同样的，其输入r为【0-1】，其输出s也为【0-1】。这个式子再熟悉不过了，跟巴特沃斯高通滤波器像极了，其输入输出关系也大致能猜到是个什么形状的。但是，这里就出现一个问题了，输入为0时候，式子无意义了。所以，在用Matlab计算的时候，将其变为如下形式。</p><p style=\"text-align:start;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20131014160708375\" class=\"has\"/></div><p></p><p style=\"text-align:start;text-indent:2em;\">这里的eps，就是Matlab里面，一个很小数。如此做的话，式子变得有意义了。但是，其输入范围为【0-1】的时候，其输出范围变为了</p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20131014160821156\" class=\"has\"/></div><p>。输出范围大致为【0-1】，为了精确起见，使用mat2gray函数将其归一化到精确的[0-1]。调用格式如下。</p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\"> </p><h1 style=\"text-align:start;text-indent:2em;\"><strong>五，线性拉伸</strong></h1><p style=\"text-align:start;text-indent:2em;\">为了突出感兴趣的目标或者灰度区间，相对抑制那些不感兴趣的灰度区域，可采用分段线性法，常用的是三段线性变换</p><p style=\"text-align:start;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20170114215135255?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" class=\"has\"/></div><p></p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdn.net/20170114215438495?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvRWJvd1Rhbmc=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center\" class=\"has\"/></div><p></p><p style=\"text-align:start;text-indent:2em;\"> </p><p style=\"text-align:start;text-indent:2em;\">参考程序：</p><p style=\"text-align:start;text-indent:2em;\"> </p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"> </code></pre><ol><li><code>clc;</code></li><li><code>close all;</code></li><li><code>clear all;</code></li><li> </li><li><code>I=imread(&#x27;seed.tif&#x27;);</code></li><li><code>[m,n,k]=size(I);</code></li><li><code>figure (1)</code></li><li><code>imshow(&#x27;seed.tif&#x27;);title(&#x27; 原图像&#x27;);</code></li><li><code>mid=mean(mean(I));</code></li><li><code>%横轴</code></li><li><code>fa=20; fb=80;</code></li><li><code>%纵轴</code></li><li><code>ga=50; gb=230;</code></li><li> </li><li><code>J=myLinearEnhance(I,fa,fb,ga,gb);</code></li><li><code>figure (2)</code></li><li><code>imshow(J);title(&#x27; 线性拉伸图像&#x27;);</code></li><li> </li><li><code>pixel_f=1:256;</code></li><li><code>pixel_g=zeros(1,256);</code></li><li> </li><li><code>%三段斜率,小于1表示该段将会被收缩</code></li><li><code>k1=double(ga/fa);</code></li><li><code>k2=(gb- ga)/(fb- fa);</code></li><li><code>k3=(256- gb)/(256- fb);</code></li><li><code>for i=1:256</code></li><li><code>if i &lt;= fa</code></li><li><code>pixel_g(i)= k1*i;</code></li><li><code>elseif fa &lt; i &amp;&amp; i &lt;= fb</code></li><li><code>pixel_g(i)= k2*( i- fa)+ ga;</code></li><li><code>else</code></li><li><code>pixel_g(i)= k3*( i - fb)+ gb;</code></li><li><code>end</code></li><li><code>end</code></li><li><code>figure (3)</code></li><li><code>plot(pixel_f,pixel_g);</code></li></ol><p style=\"text-align:start;text-indent:2em;\"><br/> </p><p style=\"text-align:start;text-indent:2em;\">核心函数：</p><p style=\"text-align:start;text-indent:2em;\"> </p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"> </code></pre><ol><li><code>function dst_img=myLinearEnhance(src_img,fa,fb,ga,gb)</code></li><li> </li><li><code>[height,width] = size(src_img);</code></li><li><code>dst_img=uint8(zeros(height,width));</code></li><li> </li><li><code>src_img=double(src_img);</code></li><li> </li><li><code>%三段斜率</code></li><li><code>k1=ga/fa;</code></li><li><code>k2=(gb- ga)/(fb- fa);</code></li><li><code>k3=(255- gb)/(255- fb);</code></li><li><code>for i=1:height</code></li><li><code>for j=1:width</code></li><li><code>if src_img(i,j) &lt;= fa</code></li><li><code>dst_img(i,j)= k1*src_img(i,j);</code></li><li><code>elseif fa &lt; src_img(i,j) &amp;&amp; src_img(i,j) &lt;= fb</code></li><li><code>dst_img(i,j)= k2*( src_img(i,j)- fa)+ ga;</code></li><li><code>else</code></li><li><code>dst_img(i,j)= k3*( src_img(i,j)- fb)+ gb;</code></li><li><code>end</code></li><li><code>end</code></li><li><code>end</code></li><li><code>dst_img=uint8(dst_img);</code></li></ol><p><code>转载自：</code></p><p><a href=\"https://blog.csdn.net/qq_34106574/article/details/82460697\" target=\"_blank\">https://blog.csdn.net/qq_34106574/article/details/82460697</a></p>', 25, 1, 0, '2019-07-10 00:00:00', NULL);
INSERT INTO `article` VALUES (186, '201610804032', '前端思维导图', 1, 11, '', '思维导图', 'http://img.pzhuweb.cn/2016108040321564640140893.png', '{\"blocks\":[{\"key\":\"7m9v3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eoun6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3suo5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dqej0\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"1s442\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"EMBED\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"<iframe id=\\\"embed_dom\\\" name=\\\"embed_dom\\\" frameborder=\\\"0\\\" style=\\\"display:block;width:525px; height:245px;\\\" src=\\\"https://www.processon.com/embed/mind/5d2155a3e4b07917e2d8203a\\\"></iframe>\",\"name\":\"未命名项目\",\"type\":\"EMBED\"}}}}', '<p></p><p></p><p></p><div class=\"media-wrap embed-wrap\"><div><iframe id=\"embed_dom\" name=\"embed_dom\" frameborder=\"0\" style=\"display:block;width:525px; height:245px;\" src=\"https://www.processon.com/embed/mind/5d2155a3e4b07917e2d8203a\"></iframe></div></div><p></p>', 4, 0, 0, '2019-08-01 00:00:00', NULL);
INSERT INTO `article` VALUES (187, '201810801070', 'WEB应用专业团队2019-2020-1学期第六次学术报告会', 3, 13, '2019年11月16日19：40在励志楼会议室举行了第六次学术报告会，本次会议先是由伍涛继上次报告会继续讲Java设计原则，然后对7大设计原则的后四个（里氏替换原则、合成复用原则、依赖倒置原则、迪米特原则）进行了详细讲解。随即由范江林继上次', 'Java与算法', 'http://img.pzhuweb.cn/2018108010701574138487059.jpg', '{\"blocks\":[{\"key\":\"fo24l\",\"text\":\"2019年11月16日19：40在励志楼会议室举行了第六次学术报告会，本次会议先是由伍涛继上次报告会继续讲Java设计原则，然后对7大设计原则的后四个（里氏替换原则、合成复用原则、依赖倒置原则、迪米特原则）进行了详细讲解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":26,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":34,\"length\":77,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":26,\"style\":\"FONTSIZE-16\"},{\"offset\":34,\"length\":77,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"e9m9l\",\"text\":\"随即由范江林继上次报告会继续讲解字符串匹配算法之kma算法：从另一种角度出发讲解此算法和传统的匹配算法的区别，突出了其算法的高效性。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":66,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":66,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"a6urd\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"fjcie\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2cs45\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"d6efl\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701574138522359.jpg\",\"type\":\"IMAGE\",\"width\":\"960px\",\"height\":\"720px\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701574138506324.jpg\",\"type\":\"IMAGE\",\"width\":\"960px\",\"height\":\"720px\"}}}}', '<p style=\"text-align:start;text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"><span style=\"font-size:16px\">2019年11月16日19：40在励志楼会议室举行了</span></span>第六次学术报告会<span style=\"line-height:1.75\"><span style=\"font-size:16px\">，本次会议先是由伍涛继上次报告会继续讲Java设计原则，然后对7大设计原则的后四个（里氏替换原则、合成复用原则、依赖倒置原则、迪米特原则）进行了详细讲解。</span></span></p><p style=\"text-align:start;text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"><span style=\"font-size:16px\">随即由范江林继上次报告会继续讲解字符串匹配算法之kma算法：从另一种角度出发讲解此算法和传统的匹配算法的区别，突出了其算法的高效性。</span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701574138522359.jpg\" width=\"960px\" height=\"720px\" style=\"width:960px;height:720px\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108010701574138506324.jpg\" width=\"960px\" height=\"720px\" style=\"width:960px;height:720px\"/></div><p></p>', 27, 1, 0, '2019-11-19 00:00:00', NULL);
INSERT INTO `article` VALUES (188, '201810804121', 'WEB应用专业团队2019-2020-1学期第九次学术报告会', 5, 13, '2019年12月15日3:00在励志楼四楼会议室召开了第九次学术报告会，本次会议先是由苟雨晴讲解了https加密算法及原理，主要对加密原理，对称加密，非对称加密等进行讲解，然后由林荣杭讲解了Java中死锁现象，分析了产生的原因，以及避免死锁', 'https加密算法   死锁    序列化     dubbo', 'http://img.pzhuweb.cn/2018108041211576570512111.jpg', '{\"blocks\":[{\"key\":\"9ljot\",\"text\":\"2019年12月15日3:00在励志楼四楼会议室召开了第九次学术报告会，本次会议先是由苟雨晴讲解了https加密算法及原理，主要对加密原理，对称加密，非对称加密等进行讲解，然后由林荣杭讲解了Java中死锁现象，分析了产生的原因，以及避免死锁的方法，接着由方顺讲解了序列化与反序列化，主要讲解了用途以及实现，然后由吴涛讲解了dubbo的相关知识。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":172,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":172,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":172,\"style\":\"LETTERSPACING-2\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"3kn5j\",\"text\":\"       最后，由团队指导老师进行总结，本次会议结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":29,\"style\":\"LETTERSPACING-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"c4sa2\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"27v6m\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1dno6\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"aq1l3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108041211576569494431.jpg\",\"type\":\"IMAGE\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108041211576569519398.jpg\",\"type\":\"IMAGE\"}}}}', '<p style=\"text-indent:2em;\"><span style=\"font-size:18px\"><span style=\"line-height:1.75\"><span style=\"letter-spacing:2px\">2019年12月15日3:00在励志楼四楼会议室召开了第九次学术报告会，本次会议先是由苟雨晴讲解了https加密算法及原理，主要对加密原理，对称加密，非对称加密等进行讲解，然后由林荣杭讲解了Java中死锁现象，分析了产生的原因，以及避免死锁的方法，接着由方顺讲解了序列化与反序列化，主要讲解了用途以及实现，然后由吴涛讲解了dubbo的相关知识。</span></span></span></p><p><span style=\"font-size:18px\"><span style=\"line-height:1.75\"><span style=\"letter-spacing:2px\">       最后，由团队指导老师进行总结，本次会议结束。</span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108041211576569494431.jpg\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108041211576569519398.jpg\"/></div><p></p>', 3, 0, 0, '2019-12-17 00:00:00', NULL);
INSERT INTO `article` VALUES (189, '201710803072', '依赖注入（DI）与反转控制(IOC)之我见', 2, 11, '1.1：反转控制（IOC）IOC是一种设计思想，也被认为是一种设计模式，这种设计模式类似于工厂模式（IOC容器就可以理解为一个超级工厂，他可以容纳一切对象），对于一种设计模式的出现必有它出现的意义，那么IOC所解决的主要问题是什么呢？传统应', '反转控制', 'http://img.pzhuweb.cn/2017108030721564450656481.jpg', '{\"blocks\":[{\"key\":\"e45np\",\"text\":\"1.1：反转控制（IOC）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"BOLD\"},{\"offset\":0,\"length\":13,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":13,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":13,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":13,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"64cns\",\"text\":\"IOC是一种设计思想，也被认为是一种设计模式，这种设计模式类似于工厂模式（IOC容器就可以理解为一个超级工厂，他可以容纳一切对象），对于一种设计模式的出现必有它出现的意义，那么IOC所解决的主要问题是什么呢？传统应用程序都是由我们在类内部主动创建依赖对象，从而导致类与类之间高耦合，难于测试；有了IOC容器后，把创建和查找依赖对象的控制权交给了容器，由容器进行注入组合对象，所以对象与对象之间是松散耦合，这样方便测试，利于功能复用，更重要的是使得程序的整个体系结构变得非常灵活。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":239,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":239,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":239,\"style\":\"FONTSIZE-20\"},{\"offset\":32,\"length\":4,\"style\":\"BOLD\"},{\"offset\":52,\"length\":187,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"cjlot\",\"text\":\"1.1.1：理解IOC\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"BOLD\"},{\"offset\":0,\"length\":11,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":11,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":11,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":11,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"36o4k\",\"text\":\"传统的设计中，我们通过new创建对象，这是程序主动创建依赖对象；而IOC设有一个专门的容器来创建并存储这些对象，即由IOC控制对象的创建，所以这里是 由程序IOC控制对象；那么为何做这样的反转，这里很好的体现了一个面向对象法则—好莱坞法则。即无需程序去寻找对象，而是由IOC容器主动给程序需要的对象，举个例子，我要找女朋友，若是我在整个学院（虽然学院女生不多）找符合我要求的女朋友，那将会浪费我极大的精力和时间，于是我找到婚介所（这里的IOC容器），我告诉婚介所我要攀枝花学院数计学院的女孩子，身高170，腰围……，在等待婚介所给我反馈信息前，我还可以做自己的事，到最后我还是可以找到心目中的女神，但是我并没有自己找，只是告诉婚介所我需要什么样的女朋友就可以，当然IOC容器并不局限于限创建一类对象，他可以创建任何程序中存在的对象，你还可以将他理解为 理想的社会主义，物质极大丰富，人们需要什么就拿什么，当然在这之前我们必须为社会主义添砖加瓦，即为IOC容器添加这些对象。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":436,\"style\":\"BOLD\"},{\"offset\":0,\"length\":436,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":436,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":436,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":436,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"4n5be\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":1,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"8uod4\",\"text\":\"1.2：依赖注入（DI）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"BOLD\"},{\"offset\":0,\"length\":12,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":12,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":12,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"13ge3\",\"text\":\"●谁依赖于谁：应用程序依赖于IOC容器中的对象；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"BOLD\"},{\"offset\":0,\"length\":24,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":24,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":24,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"9unee\",\"text\":\"●为什么需要依赖：应用程序需要IOC容器中的对象来提供该对象需要的外部资源；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"BOLD\"},{\"offset\":0,\"length\":38,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":38,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":38,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\"}},{\"key\":\"1h6l3\",\"text\":\"●谁注入谁：IOC容器注入应用程序某个其依赖的对象；\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"BOLD\"},{\"offset\":0,\"length\":26,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":26,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":26,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":26,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\"}},{\"key\":\"d5738\",\"text\":\"●注入了什么：就是注入某个对象所需要的外部资源（包括对象、资源、常量数据）。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"BOLD\"},{\"offset\":0,\"length\":38,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":38,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":38,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":38,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\"}},{\"key\":\"etvph\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":1,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"5pd71\",\"text\":\"DI其实为IOC的另一种说法，DI的实现了动态的为某对象提供其他需要的对象，例如A对象需要操作文件，而这时候我们的A对象就依赖于File对象，而我们的A对象无需知道File何时构造以及如何构造，Spring会在合适的时候将File注入到A对象中，这样就完成了各个对象之间关系的控制；我们的A依赖于File对象，而File对象是由Spring注入给A对象，这就是为何叫依赖注入，在这里拓展一下，Spring是如何实现注入的呢？答案：反射\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":217,\"style\":\"BOLD\"},{\"offset\":0,\"length\":217,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":217,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":217,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":217,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"lv79\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":1,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"cc2d\",\"text\":\"IOC是Spring的核心，理解了IOC与DI之后，我们就只需在Spring框架中做简单的配置就可以实现了。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":54,\"style\":\"BOLD\"},{\"offset\":0,\"length\":54,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":54,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":54,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":54,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}}],\"entityMap\":{}}', '<p class=\"MsoNormal\"><strong><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"color:#000000\">1.1：反转控制（IOC）</span></span></span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\">IOC是一种设计思想，也被认为是一种设计模式，这种设计模式类似于<strong>工厂模式</strong>（IOC容器就可以理解为一个超级<span style=\"color:#000000\">工厂，他可以容纳一切对象），对于一种设计模式的出现必有它出现的意义，那么IOC所解决的主要问题是什么呢？传统应用程序都是由我们在类内部主动创建依赖对象，从而导致类与类之间高耦合，难于测试；有了IOC容器后，把创建和查找依赖对象的控制权交给了容器，由容器进行注入组合对象，所以对象与对象之间是松散耦合，这样方便测试，利于功能复用，更重要的是使得程序的整个体系结构变得非常灵活。</span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"color:#000000\">1.1.1：理解IOC</span></span></span></span></strong></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><strong><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"color:#000000\">传统的设计中，我们通过new创建对象，这是程序主动创建依赖对象；而IOC设有一个专门的容器来创建并存储这些对象，即由IOC控制对象的创建，所以这里是 由程序IOC控制对象；那么为何做这样的反转，这里很好的体现了一个面向对象法则—好莱坞法则。即无需程序去寻找对象，而是由IOC容器主动给程序需要的对象，举个例子，我要找女朋友，若是我在整个学院（虽然学院女生不多）找符合我要求的女朋友，那将会浪费我极大的精力和时间，于是我找到婚介所（这里的IOC容器），我告诉婚介所我要攀枝花学院数计学院的女孩子，身高170，腰围……，在等待婚介所给我反馈信息前，我还可以做自己的事，到最后我还是可以找到心目中的女神，但是我并没有自己找，只是告诉婚介所我需要什么样的女朋友就可以，当然IOC容器并不局限于限创建一类对象，他可以创建任何程序中存在的对象，你还可以将他理解为 理想的社会主义，物质极大丰富，人们需要什么就拿什么，当然在这之前我们必须为社会主义添砖加瓦，即为IOC容器添加这些对象。</span></span></span></span></strong></p><p class=\"MsoNormal\"><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"color:#000000\"> </span></span></span></span></p><p class=\"MsoNormal\"><strong><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"color:#000000\">1.2：依赖注入（DI）</span></span></span></span></strong></p><p><span style=\"color:#000000\"><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><strong>●谁依赖于谁：应用程序依赖于IOC容器中的对象</strong>；</span></span></span></span></p><p style=\"text-align:start;\"><span style=\"color:#000000\"><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><strong>●为什么需要依赖：应用程序需要IOC容器中的对象来提供该对象需要的外部资源</strong>；</span></span></span></span></p><p style=\"text-align:start;\"><span style=\"color:#000000\"><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><strong>●谁注入谁：IOC容器注入应用程序某个其依赖的对象</strong>；</span></span></span></span></p><p style=\"text-align:start;\"><span style=\"color:#000000\"><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><strong>●注入了什么：就是注入某个对象所需要的外部资源（包括对象、资源、常量数据）</strong>。</span></span></span></span></p><p class=\"MsoNormal\"><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"color:#000000\"> </span></span></span></span></p><p class=\"MsoNormal\"><strong><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"color:#000000\">DI其实为IOC的另一种说法，DI的实现了动态的为某对象提供其他需要的对象，例如A对象需要操作文件，而这时候我们的A对象就依赖于File对象，而我们的A对象无需知道File何时构造以及如何构造，Spring会在合适的时候将File注入到A对象中，这样就完成了各个对象之间关系的控制；我们的A依赖于File对象，而File对象是由Spring注入给A对象，这就是为何叫依赖注入，在这里拓展一下，Spring是如何实现注入的呢？答案：反射</span></span></span></span></strong></p><p class=\"MsoNormal\"><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"color:#000000\"> </span></span></span></span></p><p class=\"MsoNormal\"><strong><span style=\"letter-spacing:1px\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"color:#000000\">IOC是Spring的核心，理解了IOC与DI之后，我们就只需在Spring框架中做简单的配置就可以实现了。</span></span></span></span></strong></p>', 58, 1, 0, '2019-07-30 00:00:00', NULL);
INSERT INTO `article` VALUES (190, '201610804032', 'sdfds ', 5, 1, 'sfsdf', 'sdd', 'http://img.pzhuweb.cn/2016108040321591457978796.png', '{\"blocks\":[{\"key\":\"c47pl\",\"text\":\"sfsdf\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}', '<p>sfsdf</p>', 2, 0, 0, '2020-06-06 00:00:00', NULL);
INSERT INTO `article` VALUES (191, '201710803017', 'WEB应用专业团队2019-2020-1学期第五次学术报告会', 5, 13, '2019年11月2日19：40在分册6A-3举行了第五次学术报告会，本次会议先是由伍涛讲解设计原则的作用：可复用性、可读性等，然后对7大设计原则的其中三个（开闭原则、单一职责、接口隔离原则）进行了详细讲解。随即由范江林讲解字符串匹配算法之k', '设计原则 kma算法 递归', 'http://img.pzhuweb.cn/2017108030171573958979130.jpg', '{\"blocks\":[{\"key\":\"cbbqi\",\"text\":\"2019年11月2日19：40在分册6A-3举行了第五次学术报告会，本次会议先是由伍涛讲解设计原则的作用：可复用性、可读性等，然后对7大设计原则的其中三个（开闭原则、单一职责、接口隔离原则）进行了详细讲解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":103,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":28,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":33,\"length\":70,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"5uarq\",\"text\":\"随即由范江林讲解字符串匹配算法之kma算法：主要和传统的匹配算法对比讲解，突出了其算法的高效性。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":48,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":48,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3j7bc\",\"text\":\"紧接着，由曹林对递归进行了复习讲解。主要是对汉诺塔进行了详细的讲解，随后讲解了几个简单的案例便于低年级的熟悉递归。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":57,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":57,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"b4r9p\",\"text\":\"最后，团队指导老师对本次会议进行了总结，团队成员本次会议收获颇深，自此本次团队会议结束\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"2tvdv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d3c34\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"57cbl\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030171573959134174.jpg\",\"name\":\"TIM图片20191117104656.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":206,\"title\":\"2017108030171573959134174.jpg\",\"alt\":\"2017108030171573959134174.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:18px\"><span style=\"line-height:1.75\">2019年11月2日19：40在分册6A-3举行了第五次</span>学术报告会<span style=\"line-height:1.75\">，本次会议先是由伍涛讲解设计原则的作用：可复用性、可读性等，然后对7大设计原则的其中三个（开闭原则、单一职责、接口隔离原则）进行了详细讲解。</span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:18px\"><span style=\"line-height:1.75\">随即由范江林讲解字符串匹配算法之kma算法：主要和传统的匹配算法对比讲解，突出了其算法的高效性。</span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:18px\"><span style=\"line-height:1.75\">紧接着，由曹林对递归进行了复习讲解。主要是对汉诺塔进行了详细的讲解，随后讲解了几个简单的案例便于低年级的熟悉递归。</span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:18px\"><span style=\"line-height:1.75\">最后，团队指导老师对本次会议进行了总结，团队成员本次会议收获颇深，自此本次团队会议结束</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"206\" title=\"2017108030171573959134174.jpg\" alt=\"2017108030171573959134174.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030171573959134174.jpg\"/></div><p></p>', 20, 1, 0, '2019-11-04 00:00:00', NULL);
INSERT INTO `article` VALUES (192, '201710803075', 'WEB应用专业团队2019-2020-1学期第一次全体会议', 5, 13, '2019年9月3日19:40在励志楼会议室举行第一次全体会议，本次会议先进行了一次试题小测试，随即由全体成员分别各自分享自己在假期学习的内容以及完成的项目，其中，伍涛学了node、vue并设计了一个王者荣耀小程序的网站（进行中）；曹林实现了', '学习', 'http://img.pzhuweb.cn/2017108030751567762279938.jpg', '{\"blocks\":[{\"key\":\"2gu1g\",\"text\":\"2019年9月3日19:40在励志楼会议室举行第一次全体会议，本次会议先进行了一次试题小测试，随即由全体成员分别各自分享自己在假期学习的内容以及完成的项目，其中，伍涛学了node、vue并设计了一个王者荣耀小程序的网站（进行中）；曹林实现了一个自己的博客；吴雪学习了Java基础，并实现了五子棋小游戏……\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":152,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":152,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":152,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":152,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9djqh\",\"text\":\"紧接着，由团队指导老师兰全祥老师总结发言，指出团队成员应该努力学习与团队相关的专业知识技术，要摸清楚方向，考研或是想开发其他方向的同学应该选择退出本团队，寻找适合自己的道路。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":87,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":87,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":87,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":87,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"5jpoc\",\"text\":\"最后，团队指导老师兰全祥老师询问了各成员英语四级情况和计算机二级情况。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":35,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":35,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":35,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":35,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"2ss4p\",\"text\":\"团队成员本次会议收获颇深，自此本次团队会议结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"COLOR-24292E\"},{\"offset\":0,\"length\":24,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":24,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"cjcqv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"en6bv\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"581lq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8fekv\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"mm79\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030751567762286048.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"width\":\"600px\",\"meta\":{\"id\":195,\"title\":\"2017108030751567762286048.jpg\",\"alt\":\"2017108030751567762286048.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030751567762288566.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"width\":\"600px\",\"meta\":{\"id\":196,\"title\":\"2017108030751567762288566.jpg\",\"alt\":\"2017108030751567762288566.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#24292e\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\">2019年9月3日19:40在励志楼会议室举行第一次全体会议，本次会议先进行了一次试题小测试，随即由全体成员分别各自分享自己在假期学习的内容以及完成的项目，其中，伍涛学了node、vue并设计了一个王者荣耀小程序的网站（进行中）；曹林实现了一个自己的博客；吴雪学习了Java基础，并实现了五子棋小游戏……</span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#24292e\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\">紧接着，由团队指导老师兰全祥老师总结发言，指出团队成员应该努力学习与团队相关的专业知识技术，要摸清楚方向，考研或是想开发其他方向的同学应该选择退出本团队，寻找适合自己的道路。</span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#24292e\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\">最后，团队指导老师兰全祥老师询问了各成员英语四级情况和计算机二级情况。</span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#24292e\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\">团队成员本次会议收获颇深，自此本次团队会议结束。</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"195\" title=\"2017108030751567762286048.jpg\" alt=\"2017108030751567762286048.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030751567762286048.jpg\" width=\"600px\" style=\"width:600px\"/></div><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"196\" title=\"2017108030751567762288566.jpg\" alt=\"2017108030751567762288566.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030751567762288566.jpg\" width=\"600px\" style=\"width:600px\"/></div><p></p>', 41, 1, 0, '2019-09-06 00:00:00', NULL);
INSERT INTO `article` VALUES (193, '201710804172', 'WEB应用专业团队2019-2020-1学期第二次全体会议', 5, 13, ' 2019年9月16日19:40WEB应用团队成员在分册楼7a-2举行WEB应用专业团队2019-2020-1学期第二次全体会议       本次会议先由兰老师对上次所做的测试题进行了讲述，并以其第二题为例讲述了程序设计方法以及一些知识拓展', '全体会议', 'http://img.pzhuweb.cn/2017108041721568639722552.jpg', '{\"blocks\":[{\"key\":\"6h3ad\",\"text\":\" 2019年9月16日19:40WEB应用团队成员在分册楼7a-2举行WEB应用专业团队2019-2020-1学期第二次全体会议  \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":66,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":66,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":66,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"8mnf5\",\"text\":\"     本次会议先由兰老师对上次所做的测试题进行了讲述，并以其第二题为例讲述了程序设计方法以及一些知识拓展。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":55,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":55,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":55,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dtbp3\",\"text\":\"紧接着，由兰老师对本学期团队工作进行安排，其中安排了实验室卫生打扫，运动打卡，报账(论文，网盘，服务器)，网站迁移资金处理，设备购买，团队项目与论文，大创项目结题等事宜。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":85,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":85,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":85,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"2hl20\",\"text\":\"最后，由团队指导老师兰老师安排了团队活动——报告会的顺序。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":29,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":29,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"90at\",\"text\":\"团队成员通过本次会议，对本学期的安排有了大致了解，以及知道了本学期学习方向，自此本次团队会议结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":49,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":49,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":49,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"e99fj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6oe6n\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"co201\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721568639571714.jpg\",\"type\":\"IMAGE\"}}}}', '<p style=\"text-indent:2em;\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"letter-spacing:1px\"> 2019年9月16日19:40WEB应用团队成员在分册楼7a-2举行WEB应用专业团队2019-2020-1学期第二次全体会议  </span></span></span></p><p><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"letter-spacing:1px\">     本次会议先由兰老师对上次所做的测试题进行了讲述，并以其第二题为例讲述了程序设计方法以及一些知识拓展。</span></span></span></p><p style=\"text-indent:2em;\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"letter-spacing:1px\">紧接着，由兰老师对本学期团队工作进行安排，其中安排了实验室卫生打扫，运动打卡，报账(论文，网盘，服务器)，网站迁移资金处理，设备购买，团队项目与论文，大创项目结题等事宜。</span></span></span></p><p style=\"text-indent:2em;\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"letter-spacing:1px\">最后，由团队指导老师兰老师安排了团队活动——报告会的顺序。</span></span></span></p><p style=\"text-indent:2em;\"><span style=\"line-height:2\"><span style=\"font-size:20px\"><span style=\"letter-spacing:1px\">团队成员通过本次会议，对本学期的安排有了大致了解，以及知道了本学期学习方向，自此本次团队会议结束。</span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2017108041721568639571714.jpg\"/></div><p></p>', 36, 1, 0, '2019-09-16 00:00:00', NULL);
INSERT INTO `article` VALUES (194, '201710804172', 'Javascript中this', 1, 14, '一.this是什么？JavaScript中最复杂的机制之一  this是指包含它的函数作为方法被调用时所属的对象包含它的函数作为方法被调用时所属的对象 function showName(){     console.log(this); ', 'this', 'http://img.pzhuweb.cn/2017108041721574177716934.jpg', '{\"blocks\":[{\"key\":\"3nj4i\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"this\",\"data-line\":\"0\",\"class\":\"code-line\"},\"textAlign\":\"start\"}},{\"key\":\"dlpkf\",\"text\":\"一.this是什么？\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"%E4%B8%80this%E6%98%AF%E4%BB%80%E4%B9%88\",\"data-line\":\"1\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"e8pl4\",\"text\":\"JavaScript中最复杂的机制之一  \",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b8h4h\",\"text\":\"this是指包含它的函数作为方法被调用时所属的对象\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":25,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":25,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":25,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ea8oh\",\"text\":\"包含它的函数\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"53npd\",\"text\":\"作为方法被调用时\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5jdkv\",\"text\":\"所属的对象\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1jbf0\",\"text\":\" function showName(){\\n     console.log(this); //window\\n }\\nshowName();\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":19,\"style\":\"COLOR-DCDCDC\"},{\"offset\":1,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":39,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":27,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":46,\"length\":8,\"style\":\"ITALIC\"},{\"offset\":46,\"length\":8,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2fmt6\",\"text\":\"二.为什么要用this\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"%E4%BA%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%94%A8this\",\"data-line\":\"15\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"em2k7\",\"text\":\"function identify() {\\n  console.log(\\\"Hello,I\'m \\\" + this.name)\\n}\\nlet me = {\\n  name: \\\"Kyle\\\"\\n};\\nlet you = {\\n  name: \\\"Reader\\\"\\n};\\nidentify.call(me); // Hello,I\'m Kyle\\nidentify.call(you); // Hello,I\'m Reader\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":20,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":51,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":64,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":93,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":24,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":36,\"length\":12,\"style\":\"COLOR-D69D85\"},{\"offset\":83,\"length\":6,\"style\":\"COLOR-D69D85\"},{\"offset\":113,\"length\":8,\"style\":\"COLOR-D69D85\"},{\"offset\":77,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":107,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":144,\"length\":17,\"style\":\"ITALIC\"},{\"offset\":182,\"length\":19,\"style\":\"ITALIC\"},{\"offset\":144,\"length\":17,\"style\":\"COLOR-57A64A\"},{\"offset\":182,\"length\":19,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"4g9o\",\"text\":\"this提供了一种更优雅的方法来隐式’传递’一个对象的引用，因此可以将API设计得更加简洁并且易于复用\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":51,\"length\":0,\"style\":\"ITALIC\"},{\"offset\":51,\"length\":0,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3dgrg\",\"text\":\"三.调用位置\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"%E4%B8%89%E8%B0%83%E7%94%A8%E4%BD%8D%E7%BD%AE\",\"data-line\":\"31\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"dp0e6\",\"text\":\"每个函数的this是在调用时被绑定的，完全取决与函数的调用位置（也就是函数的调用方法）\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ao4d\",\"text\":\"函数在代码中被调用的位置(不是声明的位置) \",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":22,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":22,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":22,\"style\":\"BGCOLOR-F1F2F3\"},{\"offset\":0,\"length\":22,\"style\":\"FONTSIZE-inherit\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cbrk0\",\"text\":\"只有仔细分析调用位置才能知道 这个this到底引用的是什么？\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":30,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":30,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":30,\"style\":\"BGCOLOR-F1F2F3\"},{\"offset\":0,\"length\":30,\"style\":\"FONTSIZE-inherit\"},{\"offset\":15,\"length\":15,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fhebe\",\"text\":\"寻找调用位置就是寻找函数被调用的位置 (分析调用栈)\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":10,\"length\":8,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4k68a\",\"text\":\"function baz() {\\n  //当前调用栈是： baz\\n  //因此，当前调用位置是全局作用域\\n  console.log(\\\"baz\\\")\\n  bar()  // <-- bar的调用位置\\n}\\nfunction bar() {\\n  //当前调用栈是 baz -> bar\\n  //因此，当前调用位置在baz中\\n  console.log(\\\"bar\\\")\\n  foo() // <-- foo的调用位置\\n}\\nfunction foo() {\\n  //当前调用栈是 baz -> bar -> foo\\n  //因此，当前调用位置在bar中\\n  console.log(\\\"foo\\\")\\n}\\nbaz() // <-- baz的调用位置\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"COLOR-DCDCDC\"},{\"offset\":101,\"length\":15,\"style\":\"COLOR-DCDCDC\"},{\"offset\":206,\"length\":15,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":101,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":206,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":19,\"length\":13,\"style\":\"ITALIC\"},{\"offset\":35,\"length\":17,\"style\":\"ITALIC\"},{\"offset\":83,\"length\":15,\"style\":\"ITALIC\"},{\"offset\":120,\"length\":19,\"style\":\"ITALIC\"},{\"offset\":142,\"length\":16,\"style\":\"ITALIC\"},{\"offset\":188,\"length\":15,\"style\":\"ITALIC\"},{\"offset\":225,\"length\":26,\"style\":\"ITALIC\"},{\"offset\":254,\"length\":16,\"style\":\"ITALIC\"},{\"offset\":300,\"length\":15,\"style\":\"ITALIC\"},{\"offset\":19,\"length\":13,\"style\":\"COLOR-57A64A\"},{\"offset\":35,\"length\":17,\"style\":\"COLOR-57A64A\"},{\"offset\":83,\"length\":15,\"style\":\"COLOR-57A64A\"},{\"offset\":120,\"length\":19,\"style\":\"COLOR-57A64A\"},{\"offset\":142,\"length\":16,\"style\":\"COLOR-57A64A\"},{\"offset\":188,\"length\":15,\"style\":\"COLOR-57A64A\"},{\"offset\":225,\"length\":26,\"style\":\"COLOR-57A64A\"},{\"offset\":254,\"length\":16,\"style\":\"COLOR-57A64A\"},{\"offset\":300,\"length\":15,\"style\":\"COLOR-57A64A\"},{\"offset\":55,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":161,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":273,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":67,\"length\":5,\"style\":\"COLOR-D69D85\"},{\"offset\":173,\"length\":5,\"style\":\"COLOR-D69D85\"},{\"offset\":285,\"length\":5,\"style\":\"COLOR-D69D85\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"fiehs\",\"text\":\"四.绑定机制\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"%E5%9B%9B%E7%BB%91%E5%AE%9A%E6%9C%BA%E5%88%B6\",\"data-line\":\"59\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"f69h4\",\"text\":\"(一) 默认绑定\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"%E4%B8%80-%E9%BB%98%E8%AE%A4%E7%BB%91%E5%AE%9A\",\"data-line\":\"60\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1lbgq\",\"text\":\"//non-strict mode\\nfunction foo() {\\n  console.log(this.a)\\n}\\nvar a = 2\\nfoo() // 2\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"ITALIC\"},{\"offset\":75,\"length\":4,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":17,\"style\":\"COLOR-57A64A\"},{\"offset\":75,\"length\":4,\"style\":\"COLOR-57A64A\"},{\"offset\":18,\"length\":15,\"style\":\"COLOR-DCDCDC\"},{\"offset\":18,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":49,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":59,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":37,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":67,\"length\":1,\"style\":\"COLOR-B8D7A3\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"289iq\",\"text\":\"调用foo()时，this.a被解析为全局变量a，为什么？函数调用时使用了this的默认绑定，所有this指向全局对象\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":59,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":59,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":59,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":59,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4lttg\",\"text\":\"非严格模式: this默认指向window\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4ldqo\",\"text\":\"严格模式：this默认指向undefined\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cbs6d\",\"text\":\"(二) 隐式绑定\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"%E4%BA%8C-%E9%9A%90%E5%BC%8F%E7%BB%91%E5%AE%9A\",\"data-line\":\"75\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"ehmbk\",\"text\":\"查看调用位置是否有上下文对象\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":14,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":14,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":14,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f8clo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-line\":\"77\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"fq2it\",\"text\":\"function foo() {\\n  console.log( this.a )\\n}\\nvar obj = {\\n  a: 2,\\n  foo: foo\\n}\\nobj.foo() // 2\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":32,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":43,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":19,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":57,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":65,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":60,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":86,\"length\":4,\"style\":\"ITALIC\"},{\"offset\":86,\"length\":4,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"ld8s\",\"text\":\"调用位置会使用 obj 上下文来引用函数，因此可以说函数被调用时 obj 对象“拥 有”或者“包含”它。 当函数引用有上下文对象时，隐式绑定规则会把函数调用中的 this 绑定到这个上下文对象。因为调用 foo() 时 this 被绑定到 obj，因此 this.a 和 obj.a 是一样的\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":146,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":146,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":146,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":146,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"il3s\",\"text\":\"对象属性引用链中只有最顶层或者说最后一层会影响调用位置\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":27,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":27,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":27,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"14jir\",\"text\":\"function foo() {\\n  console.log( this.a )\\n}\\nvar obj3 = {\\n  a: 3,\\n  foo: foo\\n}\\nvar obj2 = {\\n  a: 2,\\n  obj3: obj3\\n}\\nvar obj1 = {\\n  a: 1,\\n  obj2: obj2\\n}\\nobj1.obj2.obj3.foo() // 3\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":32,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":43,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":77,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":113,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":19,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":58,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":66,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":92,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":100,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":128,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":136,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":61,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":95,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":131,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":170,\"length\":4,\"style\":\"ITALIC\"},{\"offset\":170,\"length\":4,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"3ism8\",\"text\":\"隐式丢失\",\"type\":\"header-four\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"%E9%9A%90%E5%BC%8F%E4%B8%A2%E5%A4%B1\",\"data-line\":\"112\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"cciqj\",\"text\":\"隐式丢失就是指隐式绑定的函数丢失绑定对象，从而默认绑定到全局或者undefined（取决于是否使用严格模式）\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":54,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":54,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":54,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":54,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bloj5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-line\":\"113\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4chq1\",\"text\":\"为函数调用创建别名\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9ng66\",\"text\":\"function foo(){\\n  console.log(this.a)\\n}\\nvar obj={\\n   a:2,\\n   foo:foo\\n}\\nvar bar = obj.foo\\nvar a =\\\"window\\\"\\nbar() // window\\n// 虽然bar是obj.foo的一个引用，但是bar引用的是foo函数的本身，此时的bar()其实就是一个不带任何修饰的函数调用，所以应用了默认绑定，this为全局\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":30,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":40,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":71,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":89,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":18,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":53,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":61,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":55,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":96,\"length\":8,\"style\":\"COLOR-D69D85\"},{\"offset\":111,\"length\":9,\"style\":\"ITALIC\"},{\"offset\":121,\"length\":83,\"style\":\"ITALIC\"},{\"offset\":111,\"length\":9,\"style\":\"COLOR-57A64A\"},{\"offset\":121,\"length\":83,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"flfp8\",\"text\":\"传入回调函数\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3vkf6\",\"text\":\"function foo(){\\n   console.log(this.a)\\n}\\nfunction doFoo(fn){\\n   fn()\\n}\\nvar obj={\\n   a:2,\\n   foo:foo\\n}\\nvar a = \\\"window\\\"\\ndoFoo(obj.foo) // window\\n// 参数传递其实就是隐式赋值。相当于var fn=obj.foo，与创建别名的结果一样，应用了默认绑定，应该注意的是，return返回一个函数时，也是应用了默认绑定\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"COLOR-DCDCDC\"},{\"offset\":41,\"length\":18,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":31,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":41,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":71,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":102,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":19,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":84,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":92,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":86,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":110,\"length\":8,\"style\":\"COLOR-D69D85\"},{\"offset\":134,\"length\":9,\"style\":\"ITALIC\"},{\"offset\":144,\"length\":83,\"style\":\"ITALIC\"},{\"offset\":134,\"length\":9,\"style\":\"COLOR-57A64A\"},{\"offset\":144,\"length\":83,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"57knr\",\"text\":\"传入语言内置的函数\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5jqlq\",\"text\":\"function foo(){\\n   console.log(this.a)\\n}\\nvar obj={\\n   a:2, \\n   foo:foo\\n}\\nvar a = \\\"window\\\" // a 是全局对象的属性\\nsetTimeout(obj.foo, 100) // window\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":31,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":41,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":73,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":19,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":54,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":63,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":56,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":124,\"length\":3,\"style\":\"COLOR-B8D7A3\"},{\"offset\":81,\"length\":8,\"style\":\"COLOR-D69D85\"},{\"offset\":90,\"length\":13,\"style\":\"ITALIC\"},{\"offset\":129,\"length\":9,\"style\":\"ITALIC\"},{\"offset\":90,\"length\":13,\"style\":\"COLOR-57A64A\"},{\"offset\":129,\"length\":9,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"51b46\",\"text\":\"JavaScript 环境中内置的 setTimeout() 函数实现和下面的伪代码类似：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-line\":\"156\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"e9oh1\",\"text\":\"function setTimeout(fn,delay) {\\n // 等待 delay 毫秒\\n fn(); // <-- 调用位置！\\n}\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":33,\"length\":14,\"style\":\"ITALIC\"},{\"offset\":55,\"length\":12,\"style\":\"ITALIC\"},{\"offset\":33,\"length\":14,\"style\":\"COLOR-57A64A\"},{\"offset\":55,\"length\":12,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"b1dnu\",\"text\":\"https://blog.csdn.net/YUHUI01/article/details/81430064\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":54,\"key\":0}],\"data\":{\"nodeAttributes\":{\"data-line\":\"163\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"adua5\",\"text\":\"（三） 显示绑定\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"%E4%B8%89-%E6%98%BE%E7%A4%BA%E7%BB%91%E5%AE%9A\",\"data-line\":\"165\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"c9pcj\",\"text\":\"可以直接指定 this 的绑定对象\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":17,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":17,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":17,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b8gip\",\"text\":\"1. 手动实现call\",\"type\":\"header-four\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"1-%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0call-apply\",\"data-line\":\"168\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"fnjjp\",\"text\":\"call() 方法调用一个函数, 其具有一个指定的this值和分别地提供的参数(参数的列表)\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":46,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":46,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":46,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":46,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fas9d\",\"text\":\"var foo = {\\nFunction.prototype.mycall = function(context) {\\n if( typeof this !== \'function\'){\\n throw new TypeError(\\\"error\\\")\\n  }\\n var type = Object.prototype.toString.call(context);\\n switch(type) {\\n case \'[object Function]\':\\n break;\\n case \'[object String]\':\\n context = new String(context);\\n break;\\n case \'[object Number]\':\\n context = new Number(context);\\n break;\\n case \'[object Boolean]\':\\n context = new Boolean(context);\\n break;\\n case \'[object Symbol]\':\\n case \'[object Undefined]\':\\n context = window;\\n break;\\n default:\\n context = window;\\n break;\\n  }\\n var fn = Symbol()\\n context[fn] = this\\n var args = []\\n for(var i = 1, len = arguments.length; i < len; i++){\\n args.push(\'arguments[\' + i + \']\')\\n  }\\n var result = eval(\'context[\' + fn + \'](\' + args + \')\')\\n delete context[fn];\\n return result;\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":40,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":65,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":72,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":101,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":129,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":268,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":333,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":399,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":551,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":584,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":590,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":609,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":626,\"length\":9,\"style\":\"COLOR-569CD6\"},{\"offset\":699,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":755,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":12,\"length\":8,\"style\":\"COLOR-4EC9B0\"},{\"offset\":105,\"length\":9,\"style\":\"COLOR-4EC9B0\"},{\"offset\":140,\"length\":6,\"style\":\"COLOR-4EC9B0\"},{\"offset\":272,\"length\":6,\"style\":\"COLOR-4EC9B0\"},{\"offset\":337,\"length\":6,\"style\":\"COLOR-4EC9B0\"},{\"offset\":403,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":560,\"length\":6,\"style\":\"COLOR-4EC9B0\"},{\"offset\":20,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":30,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":38,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":48,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":56,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":63,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":77,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":91,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":114,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":122,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":124,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":138,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":146,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":156,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":165,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":170,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":178,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":188,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":193,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":222,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":230,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":255,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":266,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":278,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":286,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":295,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":320,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":331,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":343,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":351,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":360,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":386,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":397,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":410,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":418,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":427,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":452,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":480,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":491,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":499,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":507,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":517,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":528,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":536,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":544,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":546,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":558,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":566,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":577,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":580,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":599,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":608,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":615,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":618,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":624,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":635,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":642,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":646,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":651,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":654,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":664,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":669,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":683,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":687,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":692,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":694,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":710,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":716,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":728,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":733,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":740,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":747,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":752,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":769,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":772,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":789,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":791,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":21,\"length\":9,\"style\":\"COLOR-9CDCFE\"},{\"offset\":49,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":133,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":147,\"length\":9,\"style\":\"COLOR-9CDCFE\"},{\"offset\":157,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":171,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":189,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":258,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":279,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":323,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":344,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":389,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":411,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":483,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":493,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":520,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":530,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":555,\"length\":2,\"style\":\"COLOR-9CDCFE\"},{\"offset\":570,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":578,\"length\":2,\"style\":\"COLOR-9CDCFE\"},{\"offset\":594,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":613,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":620,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":636,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":644,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":648,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":653,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":660,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":685,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":703,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":730,\"length\":2,\"style\":\"COLOR-9CDCFE\"},{\"offset\":742,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":762,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":770,\"length\":2,\"style\":\"COLOR-9CDCFE\"},{\"offset\":783,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":31,\"length\":6,\"style\":\"COLOR-DCDCAA\"},{\"offset\":166,\"length\":4,\"style\":\"COLOR-DCDCAA\"},{\"offset\":665,\"length\":4,\"style\":\"COLOR-DCDCAA\"},{\"offset\":712,\"length\":4,\"style\":\"COLOR-DCDCAA\"},{\"offset\":61,\"length\":2,\"style\":\"COLOR-C586C0\"},{\"offset\":95,\"length\":5,\"style\":\"COLOR-C586C0\"},{\"offset\":182,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":198,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":225,\"length\":5,\"style\":\"COLOR-C586C0\"},{\"offset\":233,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":290,\"length\":5,\"style\":\"COLOR-C586C0\"},{\"offset\":298,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":355,\"length\":5,\"style\":\"COLOR-C586C0\"},{\"offset\":363,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":422,\"length\":5,\"style\":\"COLOR-C586C0\"},{\"offset\":430,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":455,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":502,\"length\":5,\"style\":\"COLOR-C586C0\"},{\"offset\":510,\"length\":7,\"style\":\"COLOR-C586C0\"},{\"offset\":539,\"length\":5,\"style\":\"COLOR-C586C0\"},{\"offset\":605,\"length\":3,\"style\":\"COLOR-C586C0\"},{\"offset\":776,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":81,\"length\":10,\"style\":\"COLOR-CE9178\"},{\"offset\":115,\"length\":7,\"style\":\"COLOR-CE9178\"},{\"offset\":203,\"length\":19,\"style\":\"COLOR-CE9178\"},{\"offset\":238,\"length\":17,\"style\":\"COLOR-CE9178\"},{\"offset\":303,\"length\":17,\"style\":\"COLOR-CE9178\"},{\"offset\":368,\"length\":18,\"style\":\"COLOR-CE9178\"},{\"offset\":435,\"length\":17,\"style\":\"COLOR-CE9178\"},{\"offset\":460,\"length\":20,\"style\":\"COLOR-CE9178\"},{\"offset\":670,\"length\":12,\"style\":\"COLOR-CE9178\"},{\"offset\":689,\"length\":3,\"style\":\"COLOR-CE9178\"},{\"offset\":717,\"length\":10,\"style\":\"COLOR-CE9178\"},{\"offset\":735,\"length\":4,\"style\":\"COLOR-CE9178\"},{\"offset\":749,\"length\":3,\"style\":\"COLOR-CE9178\"},{\"offset\":617,\"length\":1,\"style\":\"COLOR-B5CEA8\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"emafm\",\"text\":\"2. 硬绑定\",\"type\":\"header-four\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"2-%E7%A1%AC%E7%BB%91%E5%AE%9A\",\"data-line\":\"408\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"1n5u4\",\"text\":\"function foo() {\\n console.log( this.a );\\n}\\nvar obj = {\\n a:2\\n};\\nvar bar = function() {\\n foo.call( obj );\\n};\\nbar(); // 2\\nsetTimeout( bar, 100 ); // 2\\n// 硬绑定的 bar 不可能再修改它的 this\\nbar.call( window ); // 2\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"COLOR-DCDCDC\"},{\"offset\":73,\"length\":11,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":31,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":43,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":63,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":73,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":18,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":184,\"length\":6,\"style\":\"COLOR-4EC9B0\"},{\"offset\":56,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":58,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":136,\"length\":3,\"style\":\"COLOR-B8D7A3\"},{\"offset\":114,\"length\":4,\"style\":\"ITALIC\"},{\"offset\":143,\"length\":4,\"style\":\"ITALIC\"},{\"offset\":148,\"length\":25,\"style\":\"ITALIC\"},{\"offset\":194,\"length\":4,\"style\":\"ITALIC\"},{\"offset\":114,\"length\":4,\"style\":\"COLOR-57A64A\"},{\"offset\":143,\"length\":4,\"style\":\"COLOR-57A64A\"},{\"offset\":148,\"length\":25,\"style\":\"COLOR-57A64A\"},{\"offset\":194,\"length\":4,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"941pc\",\"text\":\"硬绑定的典型应用场景就是创建一个包裹函数，传入所有的参数并返回接收到的所有值\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":38,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":38,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":38,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":38,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bdsso\",\"text\":\"function foo(something) {\\n console.log( this.a, something );\\n return this.a + something;\\n}\\nvar obj = {\\n a:2\\n};\\nvar bar = function() {\\n return foo.apply( obj, arguments );\\n};\\nvar b = bar( 3 ); // 2 3\\nconsole.log( b ); // 5\\n\\n//------------------------------\\n//另一种使用方法是创建一个 i 可以重复使用的辅助函数：\\nfunction foo(something) {\\n console.log( this.a, something );\\n return this.a + something;\\n}\\n// 简单的辅助绑定函数\\nfunction bind(fn, obj) {\\n return function() {\\n return fn.apply( obj, arguments );\\n };\\n}\\nvar obj = {\\n a:2\\n};\\nvar bar = bind( foo, obj );\\nvar b = bar( 3 ); // 2 3\\nconsole.log( b ); // 5\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"COLOR-DCDCDC\"},{\"offset\":121,\"length\":11,\"style\":\"COLOR-DCDCDC\"},{\"offset\":286,\"length\":24,\"style\":\"COLOR-DCDCDC\"},{\"offset\":390,\"length\":23,\"style\":\"COLOR-DCDCDC\"},{\"offset\":423,\"length\":11,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":40,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":62,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":69,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":91,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":111,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":121,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":135,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":174,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":286,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":326,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":348,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":355,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":390,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":416,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":423,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":437,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":478,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":498,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":526,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":27,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":158,\"length\":9,\"style\":\"COLOR-4EC9B0\"},{\"offset\":199,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":313,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":459,\"length\":9,\"style\":\"COLOR-4EC9B0\"},{\"offset\":551,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":104,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":491,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":106,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":187,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":493,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":539,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":192,\"length\":6,\"style\":\"ITALIC\"},{\"offset\":217,\"length\":4,\"style\":\"ITALIC\"},{\"offset\":223,\"length\":32,\"style\":\"ITALIC\"},{\"offset\":256,\"length\":29,\"style\":\"ITALIC\"},{\"offset\":377,\"length\":12,\"style\":\"ITALIC\"},{\"offset\":544,\"length\":6,\"style\":\"ITALIC\"},{\"offset\":569,\"length\":4,\"style\":\"ITALIC\"},{\"offset\":192,\"length\":6,\"style\":\"COLOR-57A64A\"},{\"offset\":217,\"length\":4,\"style\":\"COLOR-57A64A\"},{\"offset\":223,\"length\":32,\"style\":\"COLOR-57A64A\"},{\"offset\":256,\"length\":29,\"style\":\"COLOR-57A64A\"},{\"offset\":377,\"length\":12,\"style\":\"COLOR-57A64A\"},{\"offset\":544,\"length\":6,\"style\":\"COLOR-57A64A\"},{\"offset\":569,\"length\":4,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"1r2ls\",\"text\":\"由于硬绑定是一种非常常用的模式，所以在 ES5 中提供了内置的方法 Function.prototype.bind\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":57,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":57,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":57,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":57,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6kn95\",\"text\":\"function foo(something) {\\n console.log( this.a, something );\\n return this.a + something;\\n}\\nvar obj = {\\n a:2\\n};\\nvar bar = foo.bind( obj );\\nvar b = bar( 3 ); // 2 3\\nconsole.log( b ); // 5\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":40,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":62,\"length\":6,\"style\":\"COLOR-569CD6\"},{\"offset\":69,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":91,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":111,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":138,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":27,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":163,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":104,\"length\":1,\"style\":\"COLOR-9CDCFE\"},{\"offset\":106,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":151,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":156,\"length\":6,\"style\":\"ITALIC\"},{\"offset\":181,\"length\":4,\"style\":\"ITALIC\"},{\"offset\":156,\"length\":6,\"style\":\"COLOR-57A64A\"},{\"offset\":181,\"length\":4,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"49lo8\",\"text\":\"bind(..) 会返回一个硬编码的新函数，它会把参数设置为 this 的上下文并调用原始函数\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":47,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":47,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":47,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":47,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dbmu9\",\"text\":\"3. API调用的“上下文”\",\"type\":\"header-four\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"3-api%E8%B0%83%E7%94%A8%E7%9A%84%E4%B8%8A%E4%B8%8B%E6%96%87\",\"data-line\":\"473\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"7qb31\",\"text\":\"第三方库的许多函数，以及 JavaScript 语言和宿主环境中许多新的内置函数，都提供了一 个可选的参数，通常被称为“上下文”（context），其作用和 bind(..) 一样，确保你的回调 函数使用指定的 this。\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":111,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":111,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":111,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":111,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8c7p\",\"text\":\"function foo(el) {\\n console.log( el, this.id );\\n}\\nvar obj = {\\n id: \\\"awesome\\\"\\n};\\n// 调用 foo(..) 时把 this 绑定到 obj\\n[1, 2, 3].forEach( foo, obj );\\n// 1 awesome 2 awesome 3 awesome\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":37,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":50,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":20,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":63,\"length\":2,\"style\":\"COLOR-9CDCFE\"},{\"offset\":67,\"length\":9,\"style\":\"COLOR-D69D85\"},{\"offset\":80,\"length\":29,\"style\":\"ITALIC\"},{\"offset\":141,\"length\":32,\"style\":\"ITALIC\"},{\"offset\":80,\"length\":29,\"style\":\"COLOR-57A64A\"},{\"offset\":141,\"length\":32,\"style\":\"COLOR-57A64A\"},{\"offset\":111,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":114,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":117,\"length\":1,\"style\":\"COLOR-B8D7A3\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"crt6l\",\"text\":\"（四）new绑定\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"%E5%9B%9Bnew%E7%BB%91%E5%AE%9A\",\"data-line\":\"488\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"faoou\",\"text\":\"关于new，有一个重要的点：实际上并不存在所谓的“构造函数”，只有对于函数的“构造调用”。\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":45,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":45,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":45,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":45,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5cdma\",\"text\":\"\\n使用new来调用函数，或者说发生构造函数调用时，会执行下列操作：\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":32,\"style\":\"ITALIC\"},{\"offset\":1,\"length\":32,\"style\":\"COLOR-666666\"},{\"offset\":1,\"length\":32,\"style\":\"FONTSIZE-16\"},{\"offset\":1,\"length\":32,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b8fcv\",\"text\":\"创建一个全新的对象 \",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e7ej\",\"text\":\"这个新对象会被执行[[Prototype]]连接\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"adl9\",\"text\":\"这个新对象会绑定到函数调用的this \",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"696p0\",\"text\":\"如果函数没有返回其他对象，那么new表达式中的函数会自动返回这个新对象\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7lhih\",\"text\":\"function foo(a){\\n    this.a=a;\\n}\\n\\nvar bar=new foo(2);\\nconsole.log(bar.a);//2\\n\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"COLOR-DCDCDC\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":21,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":34,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":42,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":50,\"length\":1,\"style\":\"COLOR-B8D7A3\"},{\"offset\":54,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":73,\"length\":3,\"style\":\"ITALIC\"},{\"offset\":73,\"length\":3,\"style\":\"COLOR-57A64A\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"2gnic\",\"text\":\"使用new来调用foo()时，我们会构造一个新对象并把它绑定到foo()调用的this上。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-line\":\"504\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"bc6qn\",\"text\":\"五.优先级\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"id\":\"%E4%BA%94%E4%BC%98%E5%85%88%E7%BA%A7\",\"data-line\":\"506\",\"class\":\"code-line\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"73jpf\",\"text\":\"函数是否在 new 中调用（new 绑定）？如果是的话 this 绑定的是新创建的对象。\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"da6ou\",\"text\":\"var bar = new foo()\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":19,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":19,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":19,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":19,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"421mn\",\"text\":\"函数是否通过 call、apply（显式绑定）或者硬绑定调用？如果是的话，this 绑定的是指定的对象。\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d4imk\",\"text\":\"var bar = foo.call(obj2)\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":24,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":24,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":24,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8vv86\",\"text\":\"函数是否在某个上下文对象中调用（隐式绑定）？如果是的话,this 绑定的是那个上下文对象。\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6i26k\",\"text\":\"var bar = obj1.foo()\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":20,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":20,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":20,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":20,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4rnoj\",\"text\":\"如果都不是的话，使用默认绑定。如果在严格模式下，就绑定到 undefined，否则绑定到全局对象。\",\"type\":\"ordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6b5vs\",\"text\":\"var bar = foo()\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"ITALIC\"},{\"offset\":0,\"length\":15,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":15,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":15,\"style\":\"BGCOLOR-F1F2F3\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://blog.csdn.net/YUHUI01/article/details/81430064\",\"target\":null,\"nodeAttributes\":{\"data-href\":\"https://blog.csdn.net/YUHUI01/article/details/81430064\"}}}}}', '<p style=\"text-align:start;\" size=\"3\" _root=\"[object Object]\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"></p><h2 style=\"text-align:start;text-indent:2em;\" id=\"%E4%B8%80this%E6%98%AF%E4%BB%80%E4%B9%88\" data-line=\"1\" class=\"code-line\">一.this是什么？</h2><blockquote>JavaScript中最复杂的机制之一  </blockquote><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">this是指包含它的函数作为方法被调用时所属的对象</span></span></span></em></blockquote><ol><li>包含它的函数</li><li>作为方法被调用时</li><li>所属的对象</li></ol><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"> <span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> showName()</span>{<br/>     <span style=\"color:#4ec9b0\">console</span>.log(<span style=\"color:#569cd6\">this</span>); <em><span style=\"color:#57a64a\">//window</span></em><br/> }<br/>showName();<br/></code></pre><h2 style=\"text-align:start;text-indent:2em;\" id=\"%E4%BA%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E7%94%A8this\" data-line=\"15\" class=\"code-line\">二.为什么要用this</h2><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> identify() </span>{<br/>  <span style=\"color:#4ec9b0\">console</span>.log(<span style=\"color:#d69d85\">&quot;Hello,I&#x27;m &quot;</span> + <span style=\"color:#569cd6\">this</span>.name)<br/>}<br/><span style=\"color:#569cd6\">let</span> me = {<br/>  <span style=\"color:#9cdcfe\">name</span>: <span style=\"color:#d69d85\">&quot;Kyle&quot;</span><br/>};<br/><span style=\"color:#569cd6\">let</span> you = {<br/>  <span style=\"color:#9cdcfe\">name</span>: <span style=\"color:#d69d85\">&quot;Reader&quot;</span><br/>};<br/>identify.call(me); <em><span style=\"color:#57a64a\">// Hello,I&#x27;m Kyle</span></em><br/>identify.call(you); <em><span style=\"color:#57a64a\">// Hello,I&#x27;m Reader</span></em></code></pre><blockquote>this提供了一种更优雅的方法来隐式’传递’一个对象的引用，因此可以将API设计得更加简洁并且易于复用</blockquote><h2 style=\"text-align:start;text-indent:2em;\" id=\"%E4%B8%89%E8%B0%83%E7%94%A8%E4%BD%8D%E7%BD%AE\" data-line=\"31\" class=\"code-line\">三.调用位置</h2><blockquote>每个函数的this是在调用时被绑定的，完全取决与函数的调用位置（也就是函数的调用方法）</blockquote><blockquote><em><span style=\"font-size:16px\"><span style=\"color:#666666\"><span style=\"background-color:#f1f2f3\"><span style=\"font-size:inheritpx\">函数在代码中被调用的位置(不是声明的位置) </span></span></span></span></em></blockquote><blockquote><em><span style=\"font-size:16px\"><span style=\"color:#666666\"><span style=\"background-color:#f1f2f3\"><span style=\"font-size:inheritpx\">只有仔细分析调用位置才能知道 <strong>这个this到底引用的是什么？</strong></span></span></span></span></em></blockquote><ul><li>寻找调用位置就是寻找<strong>函数被调用的位置</strong> (分析调用栈)</li></ul><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> baz() </span>{<br/>  <em><span style=\"color:#57a64a\">//当前调用栈是： baz</span></em><br/>  <em><span style=\"color:#57a64a\">//因此，当前调用位置是全局作用域</span></em><br/>  <span style=\"color:#4ec9b0\">console</span>.log(<span style=\"color:#d69d85\">&quot;baz&quot;</span>)<br/>  bar()  <em><span style=\"color:#57a64a\">// &lt;-- bar的调用位置</span></em><br/>}<br/><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> bar() </span>{<br/>  <em><span style=\"color:#57a64a\">//当前调用栈是 baz -&gt; bar</span></em><br/>  <em><span style=\"color:#57a64a\">//因此，当前调用位置在baz中</span></em><br/>  <span style=\"color:#4ec9b0\">console</span>.log(<span style=\"color:#d69d85\">&quot;bar&quot;</span>)<br/>  foo() <em><span style=\"color:#57a64a\">// &lt;-- foo的调用位置</span></em><br/>}<br/><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo() </span>{<br/>  <em><span style=\"color:#57a64a\">//当前调用栈是 baz -&gt; bar -&gt; foo</span></em><br/>  <em><span style=\"color:#57a64a\">//因此，当前调用位置在bar中</span></em><br/>  <span style=\"color:#4ec9b0\">console</span>.log(<span style=\"color:#d69d85\">&quot;foo&quot;</span>)<br/>}<br/>baz() <em><span style=\"color:#57a64a\">// &lt;-- baz的调用位置</span></em><br/></code></pre><h2 style=\"text-align:start;text-indent:2em;\" id=\"%E5%9B%9B%E7%BB%91%E5%AE%9A%E6%9C%BA%E5%88%B6\" data-line=\"59\" class=\"code-line\">四.绑定机制</h2><h3 style=\"text-align:start;text-indent:2em;\" id=\"%E4%B8%80-%E9%BB%98%E8%AE%A4%E7%BB%91%E5%AE%9A\" data-line=\"60\" class=\"code-line\">(一) 默认绑定</h3><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><em><span style=\"color:#57a64a\">//non-strict mode</span></em><br/><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo() </span>{<br/>  <span style=\"color:#4ec9b0\">console</span>.log(<span style=\"color:#569cd6\">this</span>.a)<br/>}<br/><span style=\"color:#569cd6\">var</span> a = <span style=\"color:#b8d7a3\">2</span><br/>foo() <em><span style=\"color:#57a64a\">// 2</span></em><br/></code></pre><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">调用foo()时，this.a被解析为全局变量a，为什么？函数调用时使用了this的默认绑定，所有this指向全局对象</span></span></span></em></blockquote><ol><li>非严格模式: this默认指向window</li><li>严格模式：this默认指向undefined</li></ol><h3 style=\"text-align:start;text-indent:2em;\" id=\"%E4%BA%8C-%E9%9A%90%E5%BC%8F%E7%BB%91%E5%AE%9A\" data-line=\"75\" class=\"code-line\">(二) 隐式绑定</h3><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">查看调用位置是否有上下文对象</span></span></span></em></blockquote><p style=\"text-align:start;text-indent:2em;\" data-line=\"77\" class=\"code-line\"></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo() </span>{<br/>  <span style=\"color:#4ec9b0\">console</span>.log( <span style=\"color:#569cd6\">this</span>.a )<br/>}<br/><span style=\"color:#569cd6\">var</span> obj = {<br/>  <span style=\"color:#9cdcfe\">a</span>: <span style=\"color:#b8d7a3\">2</span>,<br/>  <span style=\"color:#9cdcfe\">foo</span>: foo<br/>}<br/>obj.foo() <em><span style=\"color:#57a64a\">// 2</span></em><br/></code></pre><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">调用位置会使用 obj 上下文来引用函数，因此可以说函数被调用时 obj 对象“拥 有”或者“包含”它。 当函数引用有上下文对象时，隐式绑定规则会把函数调用中的 this 绑定到这个上下文对象。因为调用 foo() 时 this 被绑定到 obj，因此 this.a 和 obj.a 是一样的</span></span></span></em></blockquote><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">对象属性引用链中只有最顶层或者说最后一层会影响调用位置</span></span></span></em></blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo() </span>{<br/>  <span style=\"color:#4ec9b0\">console</span>.log( <span style=\"color:#569cd6\">this</span>.a )<br/>}<br/><span style=\"color:#569cd6\">var</span> obj3 = {<br/>  <span style=\"color:#9cdcfe\">a</span>: <span style=\"color:#b8d7a3\">3</span>,<br/>  <span style=\"color:#9cdcfe\">foo</span>: foo<br/>}<br/><span style=\"color:#569cd6\">var</span> obj2 = {<br/>  <span style=\"color:#9cdcfe\">a</span>: <span style=\"color:#b8d7a3\">2</span>,<br/>  <span style=\"color:#9cdcfe\">obj3</span>: obj3<br/>}<br/><span style=\"color:#569cd6\">var</span> obj1 = {<br/>  <span style=\"color:#9cdcfe\">a</span>: <span style=\"color:#b8d7a3\">1</span>,<br/>  <span style=\"color:#9cdcfe\">obj2</span>: obj2<br/>}<br/>obj1.obj2.obj3.foo() <em><span style=\"color:#57a64a\">// 3</span></em><br/></code></pre><h4 style=\"text-align:start;text-indent:2em;\" id=\"%E9%9A%90%E5%BC%8F%E4%B8%A2%E5%A4%B1\" data-line=\"112\" class=\"code-line\">隐式丢失</h4><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">隐式丢失就是指隐式绑定的函数丢失绑定对象，从而默认绑定到全局或者undefined（取决于是否使用严格模式）</span></span></span></em></blockquote><p style=\"text-align:start;text-indent:2em;\" data-line=\"113\" class=\"code-line\"></p><ol><li>为函数调用创建别名</li></ol><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo()</span>{<br/>  <span style=\"color:#4ec9b0\">console</span>.log(<span style=\"color:#569cd6\">this</span>.a)<br/>}<br/><span style=\"color:#569cd6\">var</span> obj={<br/>   <span style=\"color:#9cdcfe\">a</span>:<span style=\"color:#b8d7a3\">2</span>,<br/>   <span style=\"color:#9cdcfe\">foo</span>:foo<br/>}<br/><span style=\"color:#569cd6\">var</span> bar = obj.foo<br/><span style=\"color:#569cd6\">var</span> a =<span style=\"color:#d69d85\">&quot;window&quot;</span><br/>bar() <em><span style=\"color:#57a64a\">// window</span></em><br/><em><span style=\"color:#57a64a\">// 虽然bar是obj.foo的一个引用，但是bar引用的是foo函数的本身，此时的bar()其实就是一个不带任何修饰的函数调用，所以应用了默认绑定，this为全局</span></em><br/></code></pre><ol><li>传入回调函数</li></ol><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo()</span>{<br/>   <span style=\"color:#4ec9b0\">console</span>.log(<span style=\"color:#569cd6\">this</span>.a)<br/>}<br/><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> doFoo(fn)</span>{<br/>   fn()<br/>}<br/><span style=\"color:#569cd6\">var</span> obj={<br/>   <span style=\"color:#9cdcfe\">a</span>:<span style=\"color:#b8d7a3\">2</span>,<br/>   <span style=\"color:#9cdcfe\">foo</span>:foo<br/>}<br/><span style=\"color:#569cd6\">var</span> a = <span style=\"color:#d69d85\">&quot;window&quot;</span><br/>doFoo(obj.foo) <em><span style=\"color:#57a64a\">// window</span></em><br/><em><span style=\"color:#57a64a\">// 参数传递其实就是隐式赋值。相当于var fn=obj.foo，与创建别名的结果一样，应用了默认绑定，应该注意的是，return返回一个函数时，也是应用了默认绑定</span></em><br/></code></pre><ol><li>传入语言内置的函数</li></ol><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo()</span>{<br/>   <span style=\"color:#4ec9b0\">console</span>.log(<span style=\"color:#569cd6\">this</span>.a)<br/>}<br/><span style=\"color:#569cd6\">var</span> obj={<br/>   <span style=\"color:#9cdcfe\">a</span>:<span style=\"color:#b8d7a3\">2</span>, <br/>   <span style=\"color:#9cdcfe\">foo</span>:foo<br/>}<br/><span style=\"color:#569cd6\">var</span> a = <span style=\"color:#d69d85\">&quot;window&quot;</span> <em><span style=\"color:#57a64a\">// a 是全局对象的属性</span></em><br/>setTimeout(obj.foo, <span style=\"color:#b8d7a3\">100</span>) <em><span style=\"color:#57a64a\">// window</span></em><br/></code></pre><p style=\"text-align:start;text-indent:2em;\" data-line=\"156\" class=\"code-line\">JavaScript 环境中内置的 setTimeout() 函数实现和下面的伪代码类似：</p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> setTimeout(fn,delay) </span>{<br/> <em><span style=\"color:#57a64a\">// 等待 delay 毫秒</span></em><br/> fn(); <em><span style=\"color:#57a64a\">// &lt;-- 调用位置！</span></em><br/>}<br/></code></pre><p style=\"text-align:start;text-indent:2em;\" data-line=\"163\" class=\"code-line\"><a href=\"https://blog.csdn.net/YUHUI01/article/details/81430064\" data-href=\"https://blog.csdn.net/YUHUI01/article/details/81430064\">https://blog.csdn.net/YUHUI01/article/details/81430064</a></p><h3 style=\"text-align:start;text-indent:2em;\" id=\"%E4%B8%89-%E6%98%BE%E7%A4%BA%E7%BB%91%E5%AE%9A\" data-line=\"165\" class=\"code-line\">（三） 显示绑定</h3><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">可以直接指定 this 的绑定对象</span></span></span></em></blockquote><h4 style=\"text-align:start;text-indent:2em;\" id=\"1-%E6%89%8B%E5%8A%A8%E5%AE%9E%E7%8E%B0call-apply\" data-line=\"168\" class=\"code-line\">1. 手动实现call</h4><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">call() 方法调用一个函数, 其具有一个指定的this值和分别地提供的参数(参数的列表)</span></span></span></em></blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#569cd6\">var</span> foo = {<br/><span style=\"color:#4ec9b0\">Function</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">prototype</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">mycall</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#569cd6\">function</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">context</span><span style=\"color:#d4d4d4\">) {</span><br/> <span style=\"color:#c586c0\">if</span><span style=\"color:#d4d4d4\">( </span><span style=\"color:#569cd6\">typeof</span> <span style=\"color:#569cd6\">this</span> <span style=\"color:#d4d4d4\">!==</span> <span style=\"color:#ce9178\">&#x27;function&#x27;</span><span style=\"color:#d4d4d4\">){</span><br/> <span style=\"color:#c586c0\">throw</span> <span style=\"color:#569cd6\">new</span> <span style=\"color:#4ec9b0\">TypeError</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&quot;error&quot;</span><span style=\"color:#d4d4d4\">)</span><br/><span style=\"color:#d4d4d4\">  }</span><br/> <span style=\"color:#569cd6\">var</span> <span style=\"color:#9cdcfe\">type</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#4ec9b0\">Object</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">prototype</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">toString</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">call</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">context</span><span style=\"color:#d4d4d4\">);</span><br/> <span style=\"color:#c586c0\">switch</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">type</span><span style=\"color:#d4d4d4\">) {</span><br/> <span style=\"color:#c586c0\">case</span> <span style=\"color:#ce9178\">&#x27;[object Function]&#x27;</span><span style=\"color:#d4d4d4\">:</span><br/> <span style=\"color:#c586c0\">break</span><span style=\"color:#d4d4d4\">;</span><br/> <span style=\"color:#c586c0\">case</span> <span style=\"color:#ce9178\">&#x27;[object String]&#x27;</span><span style=\"color:#d4d4d4\">:</span><br/> <span style=\"color:#9cdcfe\">context</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#569cd6\">new</span> <span style=\"color:#4ec9b0\">String</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">context</span><span style=\"color:#d4d4d4\">);</span><br/> <span style=\"color:#c586c0\">break</span><span style=\"color:#d4d4d4\">;</span><br/> <span style=\"color:#c586c0\">case</span> <span style=\"color:#ce9178\">&#x27;[object Number]&#x27;</span><span style=\"color:#d4d4d4\">:</span><br/> <span style=\"color:#9cdcfe\">context</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#569cd6\">new</span> <span style=\"color:#4ec9b0\">Number</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">context</span><span style=\"color:#d4d4d4\">);</span><br/> <span style=\"color:#c586c0\">break</span><span style=\"color:#d4d4d4\">;</span><br/> <span style=\"color:#c586c0\">case</span> <span style=\"color:#ce9178\">&#x27;[object Boolean]&#x27;</span><span style=\"color:#d4d4d4\">:</span><br/> <span style=\"color:#9cdcfe\">context</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#569cd6\">new</span> <span style=\"color:#4ec9b0\">Boolean</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">context</span><span style=\"color:#d4d4d4\">);</span><br/> <span style=\"color:#c586c0\">break</span><span style=\"color:#d4d4d4\">;</span><br/> <span style=\"color:#c586c0\">case</span> <span style=\"color:#ce9178\">&#x27;[object Symbol]&#x27;</span><span style=\"color:#d4d4d4\">:</span><br/> <span style=\"color:#c586c0\">case</span> <span style=\"color:#ce9178\">&#x27;[object Undefined]&#x27;</span><span style=\"color:#d4d4d4\">:</span><br/> <span style=\"color:#9cdcfe\">context</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#9cdcfe\">window</span><span style=\"color:#d4d4d4\">;</span><br/> <span style=\"color:#c586c0\">break</span><span style=\"color:#d4d4d4\">;</span><br/> <span style=\"color:#c586c0\">default</span><span style=\"color:#d4d4d4\">:</span><br/> <span style=\"color:#9cdcfe\">context</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#9cdcfe\">window</span><span style=\"color:#d4d4d4\">;</span><br/> <span style=\"color:#c586c0\">break</span><span style=\"color:#d4d4d4\">;</span><br/><span style=\"color:#d4d4d4\">  }</span><br/> <span style=\"color:#569cd6\">var</span> <span style=\"color:#9cdcfe\">fn</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#4ec9b0\">Symbol</span><span style=\"color:#d4d4d4\">()</span><br/> <span style=\"color:#9cdcfe\">context</span><span style=\"color:#d4d4d4\">[</span><span style=\"color:#9cdcfe\">fn</span><span style=\"color:#d4d4d4\">] =</span> <span style=\"color:#569cd6\">this</span><br/> <span style=\"color:#569cd6\">var</span> <span style=\"color:#9cdcfe\">args</span> <span style=\"color:#d4d4d4\">= []</span><br/> <span style=\"color:#c586c0\">for</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#569cd6\">var</span> <span style=\"color:#9cdcfe\">i</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#b5cea8\">1</span><span style=\"color:#d4d4d4\">, </span><span style=\"color:#9cdcfe\">len</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#569cd6\">arguments</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">length</span><span style=\"color:#d4d4d4\">; </span><span style=\"color:#9cdcfe\">i</span> <span style=\"color:#d4d4d4\">&lt;</span> <span style=\"color:#9cdcfe\">len</span><span style=\"color:#d4d4d4\">; </span><span style=\"color:#9cdcfe\">i</span><span style=\"color:#d4d4d4\">++){</span><br/> <span style=\"color:#9cdcfe\">args</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">push</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&#x27;arguments[&#x27;</span> <span style=\"color:#d4d4d4\">+</span> <span style=\"color:#9cdcfe\">i</span> <span style=\"color:#d4d4d4\">+</span> <span style=\"color:#ce9178\">&#x27;]&#x27;</span><span style=\"color:#d4d4d4\">)</span><br/><span style=\"color:#d4d4d4\">  }</span><br/> <span style=\"color:#569cd6\">var</span> <span style=\"color:#9cdcfe\">result</span> <span style=\"color:#d4d4d4\">=</span> <span style=\"color:#dcdcaa\">eval</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&#x27;context[&#x27;</span> <span style=\"color:#d4d4d4\">+</span> <span style=\"color:#9cdcfe\">fn</span> <span style=\"color:#d4d4d4\">+</span> <span style=\"color:#ce9178\">&#x27;](&#x27;</span> <span style=\"color:#d4d4d4\">+</span> <span style=\"color:#9cdcfe\">args</span> <span style=\"color:#d4d4d4\">+</span> <span style=\"color:#ce9178\">&#x27;)&#x27;</span><span style=\"color:#d4d4d4\">)</span><br/> <span style=\"color:#569cd6\">delete</span> <span style=\"color:#9cdcfe\">context</span><span style=\"color:#d4d4d4\">[</span><span style=\"color:#9cdcfe\">fn</span><span style=\"color:#d4d4d4\">];</span><br/> <span style=\"color:#c586c0\">return</span> <span style=\"color:#9cdcfe\">result</span><span style=\"color:#d4d4d4\">;</span><br/><span style=\"color:#d4d4d4\">}</span></code></pre><h4 style=\"text-align:start;text-indent:2em;\" id=\"2-%E7%A1%AC%E7%BB%91%E5%AE%9A\" data-line=\"408\" class=\"code-line\">2. 硬绑定</h4><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo() </span>{<br/> <span style=\"color:#4ec9b0\">console</span>.log( <span style=\"color:#569cd6\">this</span>.a );<br/>}<br/><span style=\"color:#569cd6\">var</span> obj = {<br/> <span style=\"color:#9cdcfe\">a</span>:<span style=\"color:#b8d7a3\">2</span><br/>};<br/><span style=\"color:#569cd6\">var</span> bar = <span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span>() </span>{<br/> foo.call( obj );<br/>};<br/>bar(); <em><span style=\"color:#57a64a\">// 2</span></em><br/>setTimeout( bar, <span style=\"color:#b8d7a3\">100</span> ); <em><span style=\"color:#57a64a\">// 2</span></em><br/><em><span style=\"color:#57a64a\">// 硬绑定的 bar 不可能再修改它的 this</span></em><br/>bar.call( <span style=\"color:#4ec9b0\">window</span> ); <em><span style=\"color:#57a64a\">// 2</span></em><br/></code></pre><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">硬绑定的典型应用场景就是创建一个包裹函数，传入所有的参数并返回接收到的所有值</span></span></span></em></blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo(something) </span>{<br/> <span style=\"color:#4ec9b0\">console</span>.log( <span style=\"color:#569cd6\">this</span>.a, something );<br/> <span style=\"color:#569cd6\">return</span> <span style=\"color:#569cd6\">this</span>.a + something;<br/>}<br/><span style=\"color:#569cd6\">var</span> obj = {<br/> <span style=\"color:#9cdcfe\">a</span>:<span style=\"color:#b8d7a3\">2</span><br/>};<br/><span style=\"color:#569cd6\">var</span> bar = <span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span>() </span>{<br/> <span style=\"color:#569cd6\">return</span> foo.apply( obj, <span style=\"color:#4ec9b0\">arguments</span> );<br/>};<br/><span style=\"color:#569cd6\">var</span> b = bar( <span style=\"color:#b8d7a3\">3</span> ); <em><span style=\"color:#57a64a\">// 2 3</span></em><br/><span style=\"color:#4ec9b0\">console</span>.log( b ); <em><span style=\"color:#57a64a\">// 5</span></em><br/><br/><em><span style=\"color:#57a64a\">//------------------------------</span></em><br/><em><span style=\"color:#57a64a\">//另一种使用方法是创建一个 i 可以重复使用的辅助函数：</span></em><br/><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo(something) </span>{<br/> <span style=\"color:#4ec9b0\">console</span>.log( <span style=\"color:#569cd6\">this</span>.a, something );<br/> <span style=\"color:#569cd6\">return</span> <span style=\"color:#569cd6\">this</span>.a + something;<br/>}<br/><em><span style=\"color:#57a64a\">// 简单的辅助绑定函数</span></em><br/><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> bind(fn, obj) </span>{<br/> <span style=\"color:#569cd6\">return</span> <span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span>() </span>{<br/> <span style=\"color:#569cd6\">return</span> fn.apply( obj, <span style=\"color:#4ec9b0\">arguments</span> );<br/> };<br/>}<br/><span style=\"color:#569cd6\">var</span> obj = {<br/> <span style=\"color:#9cdcfe\">a</span>:<span style=\"color:#b8d7a3\">2</span><br/>};<br/><span style=\"color:#569cd6\">var</span> bar = bind( foo, obj );<br/><span style=\"color:#569cd6\">var</span> b = bar( <span style=\"color:#b8d7a3\">3</span> ); <em><span style=\"color:#57a64a\">// 2 3</span></em><br/><span style=\"color:#4ec9b0\">console</span>.log( b ); <em><span style=\"color:#57a64a\">// 5</span></em><br/></code></pre><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">由于硬绑定是一种非常常用的模式，所以在 ES5 中提供了内置的方法 Function.prototype.bind</span></span></span></em></blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo(something) </span>{<br/> <span style=\"color:#4ec9b0\">console</span>.log( <span style=\"color:#569cd6\">this</span>.a, something );<br/> <span style=\"color:#569cd6\">return</span> <span style=\"color:#569cd6\">this</span>.a + something;<br/>}<br/><span style=\"color:#569cd6\">var</span> obj = {<br/> <span style=\"color:#9cdcfe\">a</span>:<span style=\"color:#b8d7a3\">2</span><br/>};<br/><span style=\"color:#569cd6\">var</span> bar = foo.bind( obj );<br/><span style=\"color:#569cd6\">var</span> b = bar( <span style=\"color:#b8d7a3\">3</span> ); <em><span style=\"color:#57a64a\">// 2 3</span></em><br/><span style=\"color:#4ec9b0\">console</span>.log( b ); <em><span style=\"color:#57a64a\">// 5</span></em><br/></code></pre><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">bind(..) 会返回一个硬编码的新函数，它会把参数设置为 this 的上下文并调用原始函数</span></span></span></em></blockquote><h4 style=\"text-align:start;text-indent:2em;\" id=\"3-api%E8%B0%83%E7%94%A8%E7%9A%84%E4%B8%8A%E4%B8%8B%E6%96%87\" data-line=\"473\" class=\"code-line\">3. API调用的“上下文”</h4><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">第三方库的许多函数，以及 JavaScript 语言和宿主环境中许多新的内置函数，都提供了一 个可选的参数，通常被称为“上下文”（context），其作用和 bind(..) 一样，确保你的回调 函数使用指定的 this。</span></span></span></em></blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo(el) </span>{<br/> <span style=\"color:#4ec9b0\">console</span>.log( el, <span style=\"color:#569cd6\">this</span>.id );<br/>}<br/><span style=\"color:#569cd6\">var</span> obj = {<br/> <span style=\"color:#9cdcfe\">id</span>: <span style=\"color:#d69d85\">&quot;awesome&quot;</span><br/>};<br/><em><span style=\"color:#57a64a\">// 调用 foo(..) 时把 this 绑定到 obj</span></em><br/>[<span style=\"color:#b8d7a3\">1</span>, <span style=\"color:#b8d7a3\">2</span>, <span style=\"color:#b8d7a3\">3</span>].forEach( foo, obj );<br/><em><span style=\"color:#57a64a\">// 1 awesome 2 awesome 3 awesome</span></em><br/></code></pre><h3 style=\"text-align:start;text-indent:2em;\" id=\"%E5%9B%9Bnew%E7%BB%91%E5%AE%9A\" data-line=\"488\" class=\"code-line\">（四）new绑定</h3><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">关于new，有一个重要的点：实际上并不存在所谓的“构造函数”，只有对于函数的“构造调用”。</span></span></span></em></blockquote><blockquote><br/><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">使用new来调用函数，或者说发生构造函数调用时，会执行下列操作：</span></span></span></em></blockquote><ul><li>创建一个全新的对象 </li><li>这个新对象会被执行[[Prototype]]连接</li><li>这个新对象会绑定到函数调用的this </li><li>如果函数没有返回其他对象，那么new表达式中的函数会自动返回这个新对象</li></ul><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"color:#dcdcdc\"><span style=\"color:#569cd6\">function</span> foo(a)</span>{<br/>    <span style=\"color:#569cd6\">this</span>.a=a;<br/>}<br/><br/><span style=\"color:#569cd6\">var</span> bar=<span style=\"color:#569cd6\">new</span> foo(<span style=\"color:#b8d7a3\">2</span>);<br/><span style=\"color:#4ec9b0\">console</span>.log(bar.a);<em><span style=\"color:#57a64a\">//2</span></em><br/></code></pre><p style=\"text-align:start;text-indent:2em;\" data-line=\"504\" class=\"code-line\">使用new来调用foo()时，我们会构造一个新对象并把它绑定到foo()调用的this上。</p><h2 style=\"text-align:start;text-indent:2em;\" id=\"%E4%BA%94%E4%BC%98%E5%85%88%E7%BA%A7\" data-line=\"506\" class=\"code-line\">五.优先级</h2><ol><li>函数是否在 new 中调用（new 绑定）？如果是的话 this 绑定的是新创建的对象。</li></ol><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">var bar = new foo()</span></span></span></em></blockquote><ol><li>函数是否通过 call、apply（显式绑定）或者硬绑定调用？如果是的话，this 绑定的是指定的对象。</li></ol><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">var bar = foo.call(obj2)</span></span></span></em></blockquote><ol><li>函数是否在某个上下文对象中调用（隐式绑定）？如果是的话,this 绑定的是那个上下文对象。</li></ol><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">var bar = obj1.foo()</span></span></span></em></blockquote><ol><li>如果都不是的话，使用默认绑定。如果在严格模式下，就绑定到 undefined，否则绑定到全局对象。</li></ol><blockquote><em><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"background-color:#f1f2f3\">var bar = foo()</span></span></span></em></blockquote>', 12, 1, 0, '2019-11-19 00:00:00', NULL);
INSERT INTO `article` VALUES (195, '201710804035', 'WEB应用专业团队2019-2020-2学期第二次学术报告会', 1, 13, '报告题目：跨域的原理及常用的跨域方法主讲人：苟雨晴记录人：徐岸时间：2020年5月9日地点：企业微信主要内容如下：1、跨域的原理跨域是指浏览器不能执行其他网站的脚本，是因为浏览器的同源策略造成的，是浏览器的安全限制。（注：1、同源：域名、协', '报告会', 'http://img.pzhuweb.cn/2017108040351589030653499.png', '{\"blocks\":[{\"key\":\"3trti\",\"text\":\"报告题目：跨域的原理及常用的跨域方法\\n主讲人：苟雨晴\\n记录人：徐岸\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"FONTSIZE-15pt\"},{\"offset\":19,\"length\":7,\"style\":\"FONTSIZE-15pt\"},{\"offset\":27,\"length\":6,\"style\":\"FONTSIZE-15pt\"},{\"offset\":0,\"length\":18,\"style\":\"COLOR-111111\"},{\"offset\":19,\"length\":7,\"style\":\"COLOR-111111\"},{\"offset\":27,\"length\":6,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":18,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":19,\"length\":7,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":27,\"length\":6,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"67cvb\",\"text\":\"时间：2020年5月9日\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"FONTSIZE-15pt\"},{\"offset\":0,\"length\":12,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":12,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5j8fk\",\"text\":\"地点：企业微信\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"FONTSIZE-15pt\"},{\"offset\":0,\"length\":7,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":7,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4utem\",\"text\":\"主要内容如下：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"FONTSIZE-15pt\"},{\"offset\":0,\"length\":7,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":7,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"31pu9\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"src\":\"https://wdoc-75389.picgzc.qpic.cn/MTY4ODg1Mzc4NTU3NzgwOA_179837_s8WzDgscKpj-wEYE_1589026111?imageView2\",\"width\":\"590\",\"height\":\"316\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"fn65v\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bolog\",\"text\":\"1、跨域的原理\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":7,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":7,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7l3jn\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"785ro\",\"text\":\"跨域是指浏览器不能执行其他网站的脚本，是因为浏览器的同源策略造成的，是浏览器的安全限制。（注：1、同源：域名、协议、端口号均相同；2、同源策略的目的：为了防止XSS等恶意攻击。）\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":89,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":89,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":89,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":89,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"94vgo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6fc13\",\"text\":\"2、跨域方法\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":6,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":6,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":6,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3nl7c\",\"text\":\"Jsonp\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":5,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":5,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2i86g\",\"text\":\"原理：利用javaScrip标签。\\n优点：\\n兼容性好的，在多浏览器运行。\\n缺点：\\n1、只支持get请求，不支持post请求；\\n2、不够安全，因为jsonp是从其他域中加载代码执行；如果其他域不安全，可能会在响应中带有恶意代码；\\n3、不容易确定请求是否失败。\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"FONTSIZE-11pt\"},{\"offset\":18,\"length\":3,\"style\":\"FONTSIZE-11pt\"},{\"offset\":22,\"length\":14,\"style\":\"FONTSIZE-11pt\"},{\"offset\":37,\"length\":3,\"style\":\"FONTSIZE-11pt\"},{\"offset\":41,\"length\":21,\"style\":\"FONTSIZE-11pt\"},{\"offset\":63,\"length\":50,\"style\":\"FONTSIZE-11pt\"},{\"offset\":114,\"length\":14,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":17,\"style\":\"COLOR-111111\"},{\"offset\":18,\"length\":3,\"style\":\"COLOR-111111\"},{\"offset\":22,\"length\":14,\"style\":\"COLOR-111111\"},{\"offset\":37,\"length\":3,\"style\":\"COLOR-111111\"},{\"offset\":41,\"length\":21,\"style\":\"COLOR-111111\"},{\"offset\":63,\"length\":50,\"style\":\"COLOR-111111\"},{\"offset\":114,\"length\":14,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":17,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":18,\"length\":3,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":22,\"length\":14,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":37,\"length\":3,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":41,\"length\":21,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":63,\"length\":50,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":114,\"length\":14,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":129,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"54mei\",\"text\":\"CORS\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":4,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":4,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"f15f1\",\"text\":\"服务器设置Access-Controll-Allow-Origin就可以开启CORS，该属性标识哪些域名可以访问资源。\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":59,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":59,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":59,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":60,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ajeik\",\"text\":\"webSockets\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":10,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":10,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"75umk\",\"text\":\"不受同源策略影响，使用一种自定义的协议，专门传输小数据设计。\\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":30,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":30,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":32,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4j29j\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"nodeAttributes\":{\"src\":\"https://wdoc-75389.picgzc.qpic.cn/MTY4ODg1Mzc4NTU3NzgwOA_361672_P6HOti2tftDXzoOy_1589028089?imageView2\",\"width\":\"639\",\"height\":\"225\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"cha9p\",\"text\":\" \\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":2,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dio38\",\"text\":\"Nginx\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":5,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":5,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":5,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1enuk\",\"text\":\"代理跨域。反向代理跨域。\\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":12,\"style\":\"COLOR-111111\"},{\"offset\":0,\"length\":12,\"style\":\"LETTERSPACING-0.375pt\"},{\"offset\":0,\"length\":14,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7qp7\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{\"nodeAttributes\":{\"src\":\"https://wdoc-75389.picgzc.qpic.cn/MTY4ODg1Mzc4NTU3NzgwOA_933970_eDI-d8t283MsAYee_1589028283?imageView2\",\"width\":\"588\",\"height\":\"216\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"d2fuv\",\"text\":\" \\n\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://wdoc-75389.picgzc.qpic.cn/MTY4ODg1Mzc4NTU3NzgwOA_179837_s8WzDgscKpj-wEYE_1589026111?imageView2\",\"width\":\"590px\",\"height\":\"316px\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://wdoc-75389.picgzc.qpic.cn/MTY4ODg1Mzc4NTU3NzgwOA_361672_P6HOti2tftDXzoOy_1589028089?imageView2\",\"width\":\"639px\",\"height\":\"225px\"}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://wdoc-75389.picgzc.qpic.cn/MTY4ODg1Mzc4NTU3NzgwOA_933970_eDI-d8t283MsAYee_1589028283?imageView2\",\"width\":\"588px\",\"height\":\"216px\"}}}}', '<p><span style=\"line-height:1.75\"><span style=\"font-size:15ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">报告题目：跨域的原理及常用的跨域方法</span></span></span><br/><span style=\"font-size:15ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">主讲人：苟雨晴</span></span></span><br/><span style=\"font-size:15ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">记录人：徐岸</span></span></span></span></p><p><span style=\"font-size:15ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\"><span style=\"line-height:1.75\">时间：2020年5月9日</span></span></span></span></p><p><span style=\"font-size:15ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\"><span style=\"line-height:1.75\">地点：企业微信</span></span></span></span></p><p><span style=\"font-size:15ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\"><span style=\"line-height:1.75\">主要内容如下：</span></span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"https://wdoc-75389.picgzc.qpic.cn/MTY4ODg1Mzc4NTU3NzgwOA_179837_s8WzDgscKpj-wEYE_1589026111?imageView2\" width=\"590px\" height=\"316px\" style=\"width:590px;height:316px\"/></div><p></p><p><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\"><span style=\"line-height:1.75\">1、跨域的原理</span></span></span></span></p><p></p><p><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\"><span style=\"line-height:1.75\">跨域是指浏览器不能执行其他网站的脚本，是因为浏览器的同源策略造成的，是浏览器的安全限制。（注：1、同源：域名、协议、端口号均相同；2、同源策略的目的：为了防止XSS等恶意攻击。）</span></span></span></span></p><p></p><p><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\"><span style=\"line-height:1.75\">2、跨域方法</span></span></span></span></p><ul><li><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\"><span style=\"line-height:1.75\">Jsonp</span></span></span></span></li></ul><p><span style=\"line-height:1.75\"><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">原理：利用javaScrip标签。</span></span></span><br/><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">优点：</span></span></span><br/><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">兼容性好的，在多浏览器运行。</span></span></span><br/><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">缺点：</span></span></span><br/><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">1、只支持get请求，不支持post请求；</span></span></span><br/><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">2、不够安全，因为jsonp是从其他域中加载代码执行；如果其他域不安全，可能会在响应中带有恶意代码；</span></span></span><br/><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">3、不容易确定请求是否失败。</span></span></span><br/></span></p><ul><li><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\"><span style=\"line-height:1.75\">CORS</span></span></span></span></li></ul><p><span style=\"line-height:1.75\"><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">服务器设置Access-Controll-Allow-Origin就可以开启CORS，该属性标识哪些域名可以访问资源。</span></span></span><br/></span></p><ul><li><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\"><span style=\"line-height:1.75\">webSockets</span></span></span></span></li></ul><p><span style=\"line-height:1.75\"><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">不受同源策略影响，使用一种自定义的协议，专门传输小数据设计。</span></span></span><br/> </span></p><div class=\"media-wrap image-wrap\"><img src=\"https://wdoc-75389.picgzc.qpic.cn/MTY4ODg1Mzc4NTU3NzgwOA_361672_P6HOti2tftDXzoOy_1589028089?imageView2\" width=\"639px\" height=\"225px\" style=\"width:639px;height:225px\"/></div><p><span style=\"line-height:1.75\"> <br/></span></p><ul><li><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\"><span style=\"line-height:1.75\">Nginx</span></span></span></span></li></ul><p><span style=\"line-height:1.75\"><span style=\"font-size:11ptpx\"><span style=\"color:#111111\"><span style=\"letter-spacing:0.375ptpx\">代理跨域。反向代理跨域。</span></span></span><br/> </span></p><div class=\"media-wrap image-wrap\"><img src=\"https://wdoc-75389.picgzc.qpic.cn/MTY4ODg1Mzc4NTU3NzgwOA_933970_eDI-d8t283MsAYee_1589028283?imageView2\" width=\"588px\" height=\"216px\" style=\"width:588px;height:216px\"/></div><p><span style=\"line-height:1.75\"> <br/><br/><br/></span></p>', 36, 1, 0, '2020-05-09 00:00:00', NULL);
INSERT INTO `article` VALUES (196, '201710803072', 'WEB应用专业团队2019-2020-1学期第二次学术报告会', 5, 13, '  攀枝花学院WEB应用专业团队第二次团队报告会于2019年10月7日在励志楼四楼会议室召开，出席本次报告会的成员有WEB应用专业团队指导老师兰全祥老师以及WEB应用专业团队全体成员。  会议开始前，兰全祥老师为大一新成员介绍WEB专业应用', '报告会', 'http://img.pzhuweb.cn/2017108030721571058525465.jpg', '{\"blocks\":[{\"key\":\"71fi6\",\"text\":\"  攀枝花学院WEB专业应用团队第二次团队报告会于2019年10月7日在励志楼四楼会议室召开，出席本次报告会的成员有WEB专业应用团队指导老师兰全祥老师以及WEB专业应用团队全体成员。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":92,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":92,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":92,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7l38u\",\"text\":\"  会议开始前，兰全祥老师为大一新成员介绍WEB专业应用团队的团队活动以及团队相关规章制度；随后，兰全祥老师就本周团队成员提交的周报内容进行抽查与提问，提醒团队成员时刻保持坚持不懈的学习精神，积极参与团队学习活动；兰全祥老师对各专业《人才培养方案》进行介绍与讲解，指导大一新成员结合《人才培养方案》选择专业团队；紧接着，团队大二成员罗芯汭同学进行了const与指针相关学习内容的总结与分析，团队所有成员就此学习内容进行讨论与提问，罗芯汭同学与兰全祥老师对相关问题进行分析与解答，最后兰全祥老师对本次会议进行了总结。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":257,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":257,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":257,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{}}},{\"key\":\"30v8o\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d60bo\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"4bqau\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a3c8s\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"3rosa\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030721571058488437.jpg\",\"name\":\"4C41A4DEC304C227D588D6DD51F83EE8.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":200,\"title\":\"2017108030721571058488437.jpg\",\"alt\":\"2017108030721571058488437.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030721571058488489.jpg\",\"name\":\"FA890E8C62C244CE5D66DBF91E4B283C.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":201,\"title\":\"2017108030721571058488489.jpg\",\"alt\":\"2017108030721571058488489.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"letter-spacing:1px\"><span style=\"font-size:16px\"><span style=\"line-height:1.75\">  攀枝花学院WEB专业应用团队第二次团队报告会于2019年10月7日在励志楼四楼会议室召开，出席本次报告会的成员有WEB专业应用团队指导老师兰全祥老师以及WEB专业应用团队全体成员。</span></span></span></p><p><span style=\"letter-spacing:1px\"><span style=\"font-size:16px\"><span style=\"line-height:1.75\">  会议开始前，兰全祥老师为大一新成员介绍WEB专业应用团队的团队活动以及团队相关规章制度；随后，兰全祥老师就本周团队成员提交的周报内容进行抽查与提问，提醒团队成员时刻保持坚持不懈的学习精神，积极参与团队学习活动；兰全祥老师对各专业《人才培养方案》进行介绍与讲解，指导大一新成员结合《人才培养方案》选择专业团队；紧接着，团队大二成员罗芯汭同学进行了const与指针相关学习内容的总结与分析，团队所有成员就此学习内容进行讨论与提问，罗芯汭同学与兰全祥老师对相关问题进行分析与解答，最后兰全祥老师对本次会议进行了总结。</span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"200\" title=\"2017108030721571058488437.jpg\" alt=\"2017108030721571058488437.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030721571058488437.jpg\"/></div><p></p><div class=\"media-wrap image-wrap\"><img id=\"201\" title=\"2017108030721571058488489.jpg\" alt=\"2017108030721571058488489.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030721571058488489.jpg\"/></div><p></p>', 20, 1, 0, '2019-10-07 00:00:00', NULL);
INSERT INTO `article` VALUES (197, '201710803072', 'WEB应用专业团队2019-2020-1学期第三次学术报告会', 5, 13, '  攀枝花学院WEB应用专业团队于2019年10月20日在励志楼四楼会议室召开了WEB应用专业团队地三次报告会，本次报告会的主讲人是2018级团队成员吴雪同学，主讲的内容是哈希表与平衡二叉树，会议的参与者为WEB应用专业团队2017级及20', '报告会', 'http://img.pzhuweb.cn/2017108030721571714085860.jpg', '{\"blocks\":[{\"key\":\"d90dn\",\"text\":\"  攀枝花学院WEB专业应用团队于2019年10月20日在励志楼四楼会议室召开了WEB专业应用团队地三次报告会，本次报告会的主讲人是2018级团队成员吴雪同学，主讲的内容是哈希表与平衡二叉树，会议的参与者为WEB专业应用团队2017级及2018级团队成员。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":128,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":128,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":128,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"951q3\",\"text\":\"  首先吴雪同学介绍了哈希表与哈希函数，对哈希函数的六种构造方法做出了简单讲解，第一种：直接地址法，在讲解中他提到此方法适用于查找表较小且值连续情况；第二种：数字分析法，他讲解到，此方法适用于例如电话号码，存在部分相同且不同部分不重复的情况；第三种：平方取中法，此方法适用于值排列分散不集中，将原值平方使取值与原值全关联，取中间几个值缩小范围；第四种：折叠发，此方法将原值分为几部分再将及部分累加的值作为f（key）；第五种：除留余数法，此方法使用较多没有进行细讲，第六种：随机数法，此方法将原始值与特定值为种子产生的随机数相加作为f（key）；随后吴雪同学简要讲解了二叉树与平衡二叉树；最后，指导老师兰全祥老师对此次会议做出了总结，呼吁队员们要努力学习，积极培养演讲能力，重视专业学习；至此会议结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":351,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":351,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":351,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1e4ca\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"958p2\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"1fi23\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030721571714101645.jpg\",\"name\":\"IMG_20191020_201606.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":203,\"title\":\"2017108030721571714101645.jpg\",\"alt\":\"2017108030721571714101645.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"font-size:18px\"><span style=\"line-height:1.75\"><span style=\"letter-spacing:1px\">  攀枝花学院WEB专业应用团队于2019年10月20日在励志楼四楼会议室召开了WEB专业应用团队地三次报告会，本次报告会的主讲人是2018级团队成员吴雪同学，主讲的内容是哈希表与平衡二叉树，会议的参与者为WEB专业应用团队2017级及2018级团队成员。</span></span></span></p><p><span style=\"font-size:18px\"><span style=\"line-height:1.75\"><span style=\"letter-spacing:1px\">  首先吴雪同学介绍了哈希表与哈希函数，对哈希函数的六种构造方法做出了简单讲解，第一种：直接地址法，在讲解中他提到此方法适用于查找表较小且值连续情况；第二种：数字分析法，他讲解到，此方法适用于例如电话号码，存在部分相同且不同部分不重复的情况；第三种：平方取中法，此方法适用于值排列分散不集中，将原值平方使取值与原值全关联，取中间几个值缩小范围；第四种：折叠发，此方法将原值分为几部分再将及部分累加的值作为f（key）；第五种：除留余数法，此方法使用较多没有进行细讲，第六种：随机数法，此方法将原始值与特定值为种子产生的随机数相加作为f（key）；随后吴雪同学简要讲解了二叉树与平衡二叉树；最后，指导老师兰全祥老师对此次会议做出了总结，呼吁队员们要努力学习，积极培养演讲能力，重视专业学习；至此会议结束。</span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"203\" title=\"2017108030721571714101645.jpg\" alt=\"2017108030721571714101645.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030721571714101645.jpg\"/></div><p></p>', 11, 1, 0, '2019-10-20 00:00:00', NULL);
INSERT INTO `article` VALUES (198, '201810804059', 'WEB应用专业团队2019-2020-1学期第三次全体会议', 5, 13, '2019年10月14日19:40WEB应用团队成员在分册楼7a-2举行WEB应用专业团队2019-2020-1学期第三次全体会议。本次会议先由团队指导老师兰全祥老师兰老师讲述团队周报的内容编写的要求和报告会的主要目的及意义。然后兰老师讲解如', '学习', 'http://img.pzhuweb.cn/2018108040591571227540389.jpg', '{\"blocks\":[{\"key\":\"88jkd\",\"text\":\"2019年10月14日19:40WEB应用团队成员在分册楼7a-2举行WEB应用专业团队2019-2020-1学期第三次全体会议。本次会议先由团队指导老师兰全祥老师兰老师讲述团队周报的内容编写的要求和报告会的主要目的及意义。然后兰老师讲解如何选择论文发布的杂志并且要求团队成员自己先对论文做一些前期修改工作。最后由兰老师带领团队成员讨论大一和大二的团队成员的学习路线。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":71,\"style\":\"LINEHEIGHT-2\"},{\"offset\":82,\"length\":102,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":184,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":71,\"style\":\"LETTERSPACING-1\"},{\"offset\":82,\"length\":102,\"style\":\"LETTERSPACING-1\"},{\"offset\":71,\"length\":11,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":71,\"length\":11,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":71,\"length\":11,\"style\":\"COLOR-666666\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fieu\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"ftcl\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040591571227656290.jpg\",\"type\":\"IMAGE\"}}}}', '<p><span style=\"font-size:20px\"><span style=\"line-height:2\"><span style=\"letter-spacing:1px\">2019年10月14日19:40WEB应用团队成员在分册楼7a-2举行WEB应用专业团队2019-2020-1学期第三次全体会议。本次会议先由</span></span><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\"><span style=\"color:#666666\">团队指导老师兰全祥老师</span></span></span><span style=\"line-height:2\"><span style=\"letter-spacing:1px\">兰老师讲述团队周报的内容编写的要求和报告会的主要目的及意义。然后兰老师讲解如何选择论文发布的杂志并且要求团队成员自己先对论文做一些前期修改工作。最后由兰老师带领团队成员讨论大一和大二的团队成员的学习路线。</span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108040591571227656290.jpg\"/></div><p></p>', 24, 1, 0, '2019-10-16 00:00:00', NULL);
INSERT INTO `article` VALUES (199, '201710804105', 'WEB应用专业团队2019-2020-2学期第四次学术报告会', 2, 13, '2020年5月23日晚上8点攀枝花学院数学与计算机学院WEB应用专业团队召开了2019-2020-2学期第四次学术报告会，WEB专业团队指导老师兰老师和全体团队成员出席此次会议。首先由指导老师兰老师先安排了大一大二的报告会内容（接口、继承和', '高并发', 'http://img.pzhuweb.cn/2017108041051590246488870.png', '{\"blocks\":[{\"key\":\"jb1e\",\"text\":\"2020年5月23日晚上8点攀枝花学院数学与计算机学院WEB专业应用团队召开了2019-2020-2学期第四次学术报告会，WEB专业团队指导老师兰老师和全体团队成员出席此次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":89,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":89,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":89,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":89,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"8t3t4\",\"text\":\"首先由指导老师兰老师先安排了大一大二的报告会内容（接口、继承和多态、泛型、List、HashSet、HashMap、TreeSet、TreeMap、输入输出流、JDBC、UDP编程、TCP编程、异常、网络基础（网络层和传输层）ip地址）。然后由赵泽忠讲解了高并发编程，讲解了什么是多线程，为什么要使用，讲解了线程的生命周期、Java的线程的实现方法以及他们的优缺点，最后讲解了线程中断的相关概念，本次会议至此结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":117,\"length\":90,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":207,\"style\":\"LINEHEIGHT-2\"},{\"offset\":0,\"length\":207,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":207,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"3p16b\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"textIndent\":2}},{\"key\":\"97q5v\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"cid\":\"n146\",\"mdtype\":\"paragraph\",\"class\":\"md-end-block md-p\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"4ossr\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"8r49n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041051590245536678.png\",\"name\":\"image-20200523204101703.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":260,\"title\":\"2017108041051590245536678.png\",\"alt\":\"2017108041051590245536678.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\"><span style=\"letter-spacing:1px\"><span style=\"font-size:18px\">2020年5月23日晚上8点攀枝花学院数学与计算机学院WEB专业应用团队召开了2019-2020-2学期第四次学术报告会，WEB专业团队指导老师兰老师和全体团队成员出席此次会议。</span></span></span></span></p><p style=\"text-indent:2em;\"><span style=\"line-height:2\"><span style=\"letter-spacing:1px\"><span style=\"font-size:18px\"><span style=\"background-color:#ffffff\">首先由指导老师兰老师先安排了大一大二的报告会内容（接口、继承和多态、泛型、</span>List、HashSet、HashMap、TreeSet、TreeMap、输入输出流、JDBC、UDP编程、TCP编程、异常、网络基础（网络层和传输层）ip地址<span style=\"background-color:#ffffff\">）。然后由赵泽忠讲解了高并发编程，讲解了什么是多线程，为什么要使用，讲解了线程的生命周期、Java的线程的实现方法以及他们的优缺点，最后讲解了线程中断的相关概念，本次会议至此结束。</span></span></span></span></p><p style=\"text-indent:4em;\"></p><p style=\"text-align:start;text-indent:2em;\" cid=\"n146\" mdtype=\"paragraph\" class=\"md-end-block md-p\"></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"260\" title=\"2017108041051590245536678.png\" alt=\"2017108041051590245536678.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041051590245536678.png\"/></div><p></p>', 38, 1, 0, '2020-05-23 00:00:00', NULL);
INSERT INTO `article` VALUES (200, '201710804172', 'JavaScript之函数(一)', 5, 14, 'JavaScript之函数(一)在JavaScript中，函数是一种对象，所以可以说函数是JavaScript里的一等公民一.函数的三种定义方式1.函数声明// ES5function getSon(){}function (){} // ', 'JavaScript 函数', 'http://img.pzhuweb.cn/2017108041721574814860333.jpg', '{\"blocks\":[{\"key\":\"5kab1\",\"text\":\"JavaScript之函数(一)\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":16,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6geai\",\"text\":\"在JavaScript中，函数是一种对象，所以可以说函数是JavaScript里的一等公民\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3d9cj\",\"text\":\"一.函数的三种定义方式\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":11,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"el112\",\"text\":\"1.函数声明\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8qq3b\",\"text\":\"// ES5\\nfunction getSon(){}\\nfunction (){} // 匿名函数\\n\\n// ES6\\n() => {} // 如果{}内容只有一行，则{}与return都可以省略\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"68hb1\",\"text\":\"2.函数表达式（函数字面量）\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5tc6s\",\"text\":\"// ES5\\nvar son = function(){}\\n\\n// ES6\\nlet son = () => {} // 如果{}内容只有一行，则{}与return都可以省略\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"11o0s\",\"text\":\"两者的区别：解析器会先读取函数声明，并使其在执行任何代码之前可以访问；而函数表达式则必须等到解析器执行到它所在的代码行才会真正被解释执行。\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"64qqf\",\"text\":\"3.构造函数\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ej7g0\",\"text\":\"参数必须加引号\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dlaih\",\"text\":\"var sum = new Function(\'a\', \'b\', \'return a + b\');\\nconsole.log(sum(2, 3)); // 5\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6l64o\",\"text\":\"4.三者区别\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":6,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"15c5g\",\"text\":\"1. 函数声明有预解析,而且函数声明的优先级高于变量;   \\n\\n2. 使用Function构造函数定义函数的方式是一个函数表达式,这种方式会导致解析两次代码，影响性能。第一次解析常规的JavaScript代码，第二次解析传入构造函数的字符串\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6kvf2\",\"text\":\"function f(){ return 1 }  \\nconsole.log( f() )   // 第四个函数把第一个函数覆盖\\nvar f = new Function( \\\"return 2\\\" )\\nconsole.log( f() )   // 第二个函数把第四个函数覆盖\\nvar f = function() { return 3 }\\nconsole.log( f() )   // 第三个函数把第二个函数覆盖\\nfunction f(){ return 4 }\\nconsole.log( f() )   // 第四个函数已经被覆盖\\nvar f = new Function(\\\"return 5;\\\");\\nconsole.log( f() )   // 第五个函数把第三个函数覆盖\\nvar f = function(){ return 6 }\\nconsole.log( f() )   // 第六个函数把第五个函数覆盖\\n\\n// 输出：4 2 3 3 5 6\\n// 先找出函数声明，“返回值是4的函数声明”覆盖了“返回值是1的函数声明”，所以第一个f()的结果是4\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2leqs\",\"text\":\"二.函数的四种调用方式\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":11,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"eaugj\",\"text\":\"在ES5中函数内容的this指向和调用方法有关\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b91kb\",\"text\":\"1.函数调用模式\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dkddm\",\"text\":\"包括函数名()和匿名函数调用,this指向window\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"na5h\",\"text\":\" function getSon() {\\n console.log(this) // 函数名调用，this指向window\\n }\\n getSon()\\n (function() {\\n console.log(this) // 匿名函数调用，this指向window\\n })()\\n var getSon = function() {\\n console.log(this) // 函数名调用，window\\n }\\n getSon()\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cvm2u\",\"text\":\"单独独立调用的, 就是函数调用模式, 即 函数名( 参数 ), 不加任何其他的东西, 任何自调用函数都是函数调用模式\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e4f4q\",\"text\":\"2.方法调用模式\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9n2f0\",\"text\":\"方法调用，就是用对象的方法调用  \\n对象.方法名()  \\nthis指向对象\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dku42\",\"text\":\"var length = 10;\\nfunction fn() {\\n console.log( this.length ); // 10\\n}\\nvar obj = {\\n length: 5,\\n method: function ( fn ) {\\n fn(); // 10 前面没有引导对象，是函数调用模式\\n arguments[ 0 ](); // 2\\n // 这里 this 就是 指的这个伪数组， 所以 this.length 为 2 (伪数组长度)\\n  }\\n};\\nobj.method( fn, 1 );  // 10 2\\n//obj.method( fn, 1， 2， 3 );  // 10 4\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"256a4\",\"text\":\"对比函数调用模式: \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"13ru5\",\"text\":\"方法调用模式不是独立的，需要宿主，而函数调用模式是独立的\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a155l\",\"text\":\"方法调用模式方式：obj.fuc(); 函数调用模式方式: fuc();\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3ofac\",\"text\":\"法调用模式中，this指宿主; 而函数调用模式中 this 指 全局对象window\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"crpkt\",\"text\":\"3.构造器调用模式\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":9,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7sdrt\",\"text\":\"new 构造函数名(),this指向实例化的对象\\n在使用prototype的方法时，必须实例化该对象才能调用其方法\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2inhl\",\"text\":\"var fun = function(a){\\n this.a = a;\\n}\\nfun.prototype = {\\n show:function(){\\n alert( this.a )\\n  }\\n}\\nvar newFun = new fun( \\\"123123123\\\" )\\nnewFun.show();\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9tq35\",\"text\":\"4.apply,call调用模式\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fdmgi\",\"text\":\"利用call和apply来实现,this就是call和apply对应的第一个参数,如果不传值或者第一个值为null,undefined时this指向window\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eh0f8\",\"text\":\"var obj = {}\\nvar sum = function(a, b){\\n return a + b\\n};\\nvar newSum = sum.call(obj, 10, 30); // var newSum = sum.apply(obj, [10, 30]) \\nalert(newSum)\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"qg3a\",\"text\":\"5.ES6中函数调用\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3quhg\",\"text\":\"箭头函数不可以当作构造函数使用，即不能用new命令实例化一个对象，否则会抛出一个错误\\n箭头函数的this是和定义时有关和调用无关, 调用就是函数调用模式\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9j1ut\",\"text\":\"(() => {\\n console.log(this)// window\\n})()\\n\\nlet fun = () => {\\n console.log(this) // window\\n}\\nfun()\\nlet obj = {\\n arrFun: function() {\\n    (() => {\\n console.log(this) // this指向的是obj对象\\n    })()\\n  }\\n}\\nobj.arrFun(); // obj对象\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}', '<h1><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">JavaScript之函数(一)</span></span></h1><blockquote>在JavaScript中，函数是一种对象，所以可以说函数是JavaScript里的一等公民</blockquote><h2><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\">一.函数的三种定义方式</span></span></h2><h3><strong>1.函数声明</strong></h3><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\">// ES5<br/>function getSon(){}<br/>function (){} // 匿名函数<br/><br/>// ES6<br/>() =&gt; {} // 如果{}内容只有一行，则{}与return都可以省略</code></pre><h3><strong>2.函数表达式（函数字面量）</strong></h3><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\">// ES5<br/>var son = function(){}<br/><br/>// ES6<br/>let son = () =&gt; {} // 如果{}内容只有一行，则{}与return都可以省略</code></pre><blockquote>两者的区别：解析器会先读取函数声明，并使其在执行任何代码之前可以访问；而函数表达式则必须等到解析器执行到它所在的代码行才会真正被解释执行。</blockquote><h3><strong>3.构造函数</strong></h3><blockquote>参数必须加引号</blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\">var sum = new Function(&#x27;a&#x27;, &#x27;b&#x27;, &#x27;return a + b&#x27;);<br/>console.log(sum(2, 3)); // 5</code></pre><h3><strong>4.三者区别</strong></h3><blockquote>1. 函数声明有预解析,而且函数声明的优先级高于变量;   <br/><br/>2. 使用Function构造函数定义函数的方式是一个函数表达式,这种方式会导致解析两次代码，影响性能。第一次解析常规的JavaScript代码，第二次解析传入构造函数的字符串</blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\">function f(){ return 1 }  <br/>console.log( f() )   // 第四个函数把第一个函数覆盖<br/>var f = new Function( &quot;return 2&quot; )<br/>console.log( f() )   // 第二个函数把第四个函数覆盖<br/>var f = function() { return 3 }<br/>console.log( f() )   // 第三个函数把第二个函数覆盖<br/>function f(){ return 4 }<br/>console.log( f() )   // 第四个函数已经被覆盖<br/>var f = new Function(&quot;return 5;&quot;);<br/>console.log( f() )   // 第五个函数把第三个函数覆盖<br/>var f = function(){ return 6 }<br/>console.log( f() )   // 第六个函数把第五个函数覆盖<br/><br/>// 输出：4 2 3 3 5 6<br/>// 先找出函数声明，“返回值是4的函数声明”覆盖了“返回值是1的函数声明”，所以第一个f()的结果是4</code></pre><h2><strong>二.函数的四种调用方式</strong></h2><blockquote>在ES5中函数内容的this指向和调用方法有关</blockquote><h3><strong>1.函数调用模式</strong></h3><blockquote>包括函数名()和匿名函数调用,this指向window</blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"> function getSon() {<br/> console.log(this) // 函数名调用，this指向window<br/> }<br/> getSon()<br/> (function() {<br/> console.log(this) // 匿名函数调用，this指向window<br/> })()<br/> var getSon = function() {<br/> console.log(this) // 函数名调用，window<br/> }<br/> getSon()</code></pre><blockquote>单独独立调用的, 就是函数调用模式, 即 函数名( 参数 ), 不加任何其他的东西, 任何自调用函数都是函数调用模式</blockquote><h3><strong>2.方法调用模式</strong></h3><blockquote>方法调用，就是用对象的方法调用  <br/>对象.方法名()  <br/>this指向对象</blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\">var length = 10;<br/>function fn() {<br/> console.log( this.length ); // 10<br/>}<br/>var obj = {<br/> length: 5,<br/> method: function ( fn ) {<br/> fn(); // 10 前面没有引导对象，是函数调用模式<br/> arguments[ 0 ](); // 2<br/> // 这里 this 就是 指的这个伪数组， 所以 this.length 为 2 (伪数组长度)<br/>  }<br/>};<br/>obj.method( fn, 1 );  // 10 2<br/>//obj.method( fn, 1， 2， 3 );  // 10 4</code></pre><p>对比函数调用模式: </p><ul><li>方法调用模式不是独立的，需要宿主，而函数调用模式是独立的</li><li>方法调用模式方式：obj.fuc(); 函数调用模式方式: fuc();</li><li>法调用模式中，this指宿主; 而函数调用模式中 this 指 全局对象window</li></ul><h3><strong>3.构造器调用模式</strong></h3><blockquote>new 构造函数名(),this指向实例化的对象<br/>在使用prototype的方法时，必须实例化该对象才能调用其方法</blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\">var fun = function(a){<br/> this.a = a;<br/>}<br/>fun.prototype = {<br/> show:function(){<br/> alert( this.a )<br/>  }<br/>}<br/>var newFun = new fun( &quot;123123123&quot; )<br/>newFun.show();</code></pre><h3><strong>4.apply,call调用模式</strong></h3><blockquote>利用call和apply来实现,this就是call和apply对应的第一个参数,如果不传值或者第一个值为null,undefined时this指向window</blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\">var obj = {}<br/>var sum = function(a, b){<br/> return a + b<br/>};<br/>var newSum = sum.call(obj, 10, 30); // var newSum = sum.apply(obj, [10, 30]) <br/>alert(newSum)</code></pre><h3><strong>5.ES6中函数调用</strong></h3><blockquote>箭头函数不可以当作构造函数使用，即不能用new命令实例化一个对象，否则会抛出一个错误<br/>箭头函数的this是和定义时有关和调用无关, 调用就是函数调用模式</blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\">(() =&gt; {<br/> console.log(this)// window<br/>})()<br/><br/>let fun = () =&gt; {<br/> console.log(this) // window<br/>}<br/>fun()<br/>let obj = {<br/> arrFun: function() {<br/>    (() =&gt; {<br/> console.log(this) // this指向的是obj对象<br/>    })()<br/>  }<br/>}<br/>obj.arrFun(); // obj对象</code></pre>', 16, 1, 0, '2019-11-27 00:00:00', NULL);
INSERT INTO `article` VALUES (201, '201610803025', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (202, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (203, '201710804172', 'JavaScript之函数（二）函数防抖与节流', 5, 14, '函数防抖与节流为了防止事件在短时间内被多次触发的两种解决方案函数防抖与节流的意义在绑定 scroll 、resize 这类事件时，当它发生时，它被触发的频次非常高，间隔很近。如果事件中涉及到大量的位置计算、DOM 操作、元素重绘等工作且这些', '防抖 节流', 'http://img.pzhuweb.cn/2017108041721575386970448.jpg', '{\"blocks\":[{\"key\":\"13h4b\",\"text\":\"函数防抖与节流\",\"type\":\"header-two\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"BOLD\"},{\"offset\":0,\"length\":7,\"style\":\"COLOR-569CD6\"},{\"offset\":0,\"length\":7,\"style\":\"FONTSIZE-24\"},{\"offset\":0,\"length\":7,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":7,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9vq0l\",\"text\":\"为了防止事件在短时间内被多次触发的两种解决方案\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":23,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":23,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":23,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b9tag\",\"text\":\"函数防抖与节流的意义\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"BOLD\"},{\"offset\":0,\"length\":10,\"style\":\"COLOR-569CD6\"},{\"offset\":0,\"length\":10,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":10,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":10,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"75fdj\",\"text\":\"在绑定 scroll 、resize 这类事件时，当它发生时，它被触发的频次非常高，间隔很近。如果事件中涉及到大量的位置计算、DOM 操作、元素重绘等工作且这些工作无法在下一个 scroll 事件触发前完成，就会造成浏览器掉帧。加之用户鼠标滚动往往是连续的，就会持续触发 scroll 事件导致掉帧扩大、浏览器 CPU 使用率增加、用户体验受到影响。\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":175,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":175,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":175,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":175,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"615j2\",\"text\":\"简单说就是：事件触发太频繁，浏览器来不及处理，导致页面出现卡顿\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":31,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":31,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":31,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":31,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1f46\",\"text\":\"函数防抖（debounce ）\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"BOLD\"},{\"offset\":0,\"length\":15,\"style\":\"COLOR-569CD6\"},{\"offset\":0,\"length\":15,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":15,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"95kjp\",\"text\":\"规定函数至少间隔多久执行\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":12,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":12,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"ct2td\",\"text\":\"函数执行一次后，在 n 秒内不能再次执行，否则将推迟函数执行\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":30,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":30,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":30,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":30,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5fgl9\",\"text\":\"下一次函数调用将会清除上一次的定时器，并重新计时\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":24,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":24,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":24,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":24,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"294ks\",\"text\":\"基本思想：策略是当事件触发时，设定一个周期延迟执行动作，若期间又被触发，则重新设定周期，知道周期结束，执行动作\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"COLOR-000000\"},{\"offset\":5,\"length\":50,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":4,\"style\":\"BOLD\"},{\"offset\":0,\"length\":55,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":55,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":55,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fimbo\",\"text\":\"后期拓展出前缘debounce，即执行动作在前，然后设定周期，周期内有事件被触发，不执行动作，且周期重新设定\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":54,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":54,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":54,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":54,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"2dl49\",\"text\":\"延迟debounce 示意图：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":15,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":15,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"38smg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6vm1j\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":1,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"24as1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bp9fo\",\"text\":\"前缘debounce 示意图：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":15,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":15,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9l195\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4ig4e\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":1,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"5ba88\",\"text\":\"debounce的特点是当事件快速连续不断触发时，动作只会执行一次，但当触发有间断，且间断时间大于设定的延迟时间间隔时，动作就会被执行多次\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":69,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":69,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":69,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":69,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1pdag\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"689jj\",\"text\":\"例子 | 未使用函数防抖 | 使用函数防抖  \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":23,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":23,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":23,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":23,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7jlc7\",\"text\":\":---:| :---:|:---:  \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":20,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":20,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":20,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":20,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"92h4f\",\"text\":\"验证用户输入信息 | 用户每输入一个字符就进行一次验证 | 用户输入完成后进行验证  \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":43,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":43,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1dknb\",\"text\":\"窗口大小发生变化时重新计算新窗口大小 | 窗口大小改变就计算一次大小 | 窗口大小改变完成后计算大小\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":50,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":50,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":50,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":50,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9kv6v\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cr7c4\",\"text\":\"实例：模拟验证用户输入信息\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":13,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":13,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":13,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"414a4\",\"text\":\"验证用户信息：<input type=\\\"text\\\" name=\\\"\\\" id=\\\"username\\\">\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"COLOR-D4D4D4\"},{\"offset\":18,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":30,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":36,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":0,\"length\":48,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":48,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":48,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":7,\"length\":1,\"style\":\"COLOR-808080\"},{\"offset\":47,\"length\":1,\"style\":\"COLOR-808080\"},{\"offset\":8,\"length\":5,\"style\":\"COLOR-569CD6\"},{\"offset\":14,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":26,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":34,\"length\":2,\"style\":\"COLOR-9CDCFE\"},{\"offset\":19,\"length\":6,\"style\":\"COLOR-CE9178\"},{\"offset\":31,\"length\":2,\"style\":\"COLOR-CE9178\"},{\"offset\":37,\"length\":10,\"style\":\"COLOR-CE9178\"}],\"entityRanges\":[],\"data\":{\"syntax\":\"html\"}},{\"key\":\"2d4vm\",\"text\":\"\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"language\":\"javascript\"}},{\"key\":\"emont\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"float\":\"left\",\"alignment\":null}},{\"key\":\"2ropj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fanjk\",\"text\":\"var username = document.getElementById(\\\"username\\\");\\nbtn.addEventListener(\\\"keyup\\\", fun)\\nfunction fun(){\\n console.log(username.value)\\n}\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":12,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":23,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":38,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":49,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":55,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":72,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":80,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":85,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":99,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":111,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":115,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":124,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":130,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":132,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":104,\"length\":7,\"style\":\"COLOR-4EC9B0\"},{\"offset\":0,\"length\":133,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":133,\"style\":\"FONTSIZE-18\"},{\"offset\":39,\"length\":10,\"style\":\"COLOR-CE9178\"},{\"offset\":73,\"length\":7,\"style\":\"COLOR-CE9178\"},{\"offset\":0,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":87,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":24,\"length\":14,\"style\":\"COLOR-DCDCAA\"},{\"offset\":56,\"length\":16,\"style\":\"COLOR-DCDCAA\"},{\"offset\":96,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":112,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":0,\"length\":133,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":4,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":15,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":52,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":82,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":116,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":125,\"length\":5,\"style\":\"COLOR-9CDCFE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1fmml\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cnss8\",\"text\":\"每当用户在输入框输入一个字符控制台就会输出，这种不仅从资源上来说是很浪费的行为，而且实际应用中，用户也是输出完整的字符后才会进行验证信息\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":68,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":68,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":68,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":68,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4993t\",\"text\":\"改进：简单的防抖\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"BOLD\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":8,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":8,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":8,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"d4q5a\",\"text\":\"var username = document.getElementById(\\\"username\\\");\\nfunction debounce(action, delay){\\n let timer = null // 定时器变量\\n return function(){\\n let self = this\\n args = arguments\\n clearTimeout(timer) // 触发时先清理上一次的定时器，然后重新计时\\n timer = setTimeout(function(){\\n action.apply(self, args)\\n    }, delay) // 设置定时器\\n  }\\n}\\n// 事件处理函数\\nfunction fun(){\\n console.log(username.value)\\n}\\nusername.addEventListener(\\\"keyup\\\", debounce(fun, 500)) // 触发事件500毫秒后执行\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":104,\"length\":8,\"style\":\"COLOR-6A9955\"},{\"offset\":189,\"length\":23,\"style\":\"COLOR-6A9955\"},{\"offset\":285,\"length\":8,\"style\":\"COLOR-6A9955\"},{\"offset\":300,\"length\":9,\"style\":\"COLOR-6A9955\"},{\"offset\":412,\"length\":15,\"style\":\"COLOR-6A9955\"},{\"offset\":0,\"length\":427,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":427,\"style\":\"FONTSIZE-18\"},{\"offset\":39,\"length\":10,\"style\":\"COLOR-CE9178\"},{\"offset\":383,\"length\":7,\"style\":\"COLOR-CE9178\"},{\"offset\":114,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":0,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":52,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":87,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":99,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":121,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":134,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":145,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":158,\"length\":9,\"style\":\"COLOR-569CD6\"},{\"offset\":233,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":310,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":24,\"length\":14,\"style\":\"COLOR-DCDCAA\"},{\"offset\":61,\"length\":8,\"style\":\"COLOR-DCDCAA\"},{\"offset\":169,\"length\":12,\"style\":\"COLOR-DCDCAA\"},{\"offset\":222,\"length\":10,\"style\":\"COLOR-DCDCAA\"},{\"offset\":253,\"length\":5,\"style\":\"COLOR-DCDCAA\"},{\"offset\":319,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":335,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":366,\"length\":16,\"style\":\"COLOR-DCDCAA\"},{\"offset\":392,\"length\":8,\"style\":\"COLOR-DCDCAA\"},{\"offset\":0,\"length\":427,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":4,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":15,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":70,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":78,\"length\":5,\"style\":\"COLOR-9CDCFE\"},{\"offset\":91,\"length\":5,\"style\":\"COLOR-9CDCFE\"},{\"offset\":138,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":151,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":182,\"length\":5,\"style\":\"COLOR-9CDCFE\"},{\"offset\":214,\"length\":5,\"style\":\"COLOR-9CDCFE\"},{\"offset\":246,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":259,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":265,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":278,\"length\":5,\"style\":\"COLOR-9CDCFE\"},{\"offset\":339,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":348,\"length\":5,\"style\":\"COLOR-9CDCFE\"},{\"offset\":357,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":401,\"length\":3,\"style\":\"COLOR-9CDCFE\"},{\"offset\":406,\"length\":3,\"style\":\"COLOR-B5CEA8\"},{\"offset\":12,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":23,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":38,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":49,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":69,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":76,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":83,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":96,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":129,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":142,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":155,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":181,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":187,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":219,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":232,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":241,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":252,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":258,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":263,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":269,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":271,\"length\":7,\"style\":\"COLOR-D4D4D4\"},{\"offset\":283,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":294,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":298,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":322,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":334,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":338,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":347,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":353,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":355,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":365,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":382,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":390,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":400,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":404,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":409,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":327,\"length\":7,\"style\":\"COLOR-4EC9B0\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"43t0h\",\"text\":\"函数节流（throttling）\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"BOLD\"},{\"offset\":0,\"length\":16,\"style\":\"COLOR-569CD6\"},{\"offset\":0,\"length\":16,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":16,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5chts\",\"text\":\"函数在n秒内最多执行一次\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":12,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":12,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"d3fp\",\"text\":\"下一次函数调用将清除上一次的定时器\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":17,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":17,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6bn0r\",\"text\":\"若函数执行的时间间隔小于等于规定时间间隔，用setTimeout在规定时间后再执行\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":41,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":41,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":41,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9hrqh\",\"text\":\"若函数执行的时间间隔大于规定时间间隔则执行函数，并重新计时\",\"type\":\"unordered-list-item\",\"depth\":1,\"inlineStyleRanges\":[{\"offset\":0,\"length\":29,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":29,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":29,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":29,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"aep27\",\"text\":\"基本思想：策略是固定周期内，只执行一次动作，若有新事件触发，不执行。周期结束后，又有事件触发，开始新的周期。 节流策略也分为前缘和延迟两种。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":4,\"style\":\"BOLD\"},{\"offset\":0,\"length\":70,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":70,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":70,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":70,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":70,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bti6f\",\"text\":\"延迟是指周期结束后执行动作\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":13,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":13,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":13,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":13,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"729cn\",\"text\":\"前缘是指执行动作后再开始周期.\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":15,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":15,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":15,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"n4e4\",\"text\":\"延迟throttling 示意图\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":16,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":16,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":16,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":16,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9j6dd\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"afhnd\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4hqbi\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":1,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"b5hue\",\"text\":\"\\n前缘throttling 示意图\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":17,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":17,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":17,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bujq1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"27qge\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":1,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"o5pi\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8s0tp\",\"text\":\"throttling的特点在连续高频触发事件时，动作会被定期执行，响应平滑\\n\\n例子 | 未使用函数节流 | 使用函数节流\\n:---:| :---:|:---:\\n页面滚动图片懒加载 | 每次都会执行事件处理程序  | 指定事件处理程序的执行频率\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":121,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":121,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":121,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":121,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4iihn\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fl10e\",\"text\":\"function throttle(func, interval){\\n let timer = null\\n let startTime = new Date()\\n return function(){\\n clearTimeout(timer)\\n let curTime = new Date()\\n if(curTime - startTime <= interval){\\n //小于规定事件间隔，用setTimeout在指定时间后再执行\\n timeout = setTimeout(() => {\\n func()\\n      }, interval)\\n    }else {\\n //重新计时并执行函数\\n startTime = curTime\\n func()\\n    }\\n  }\\n}\\n//事件处理函数\\nfunction realFunc(){\\n console.log(\\\"success\\\")\\n}\\nwindow.addEventListener(\'scroll\', throttle(realFunc, 100))\",\"type\":\"code-block\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":187,\"length\":31,\"style\":\"COLOR-6A9955\"},{\"offset\":289,\"length\":11,\"style\":\"COLOR-6A9955\"},{\"offset\":342,\"length\":8,\"style\":\"COLOR-6A9955\"},{\"offset\":0,\"length\":456,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":456,\"style\":\"FONTSIZE-18\"},{\"offset\":385,\"length\":9,\"style\":\"COLOR-CE9178\"},{\"offset\":422,\"length\":8,\"style\":\"COLOR-CE9178\"},{\"offset\":82,\"length\":6,\"style\":\"COLOR-C586C0\"},{\"offset\":149,\"length\":2,\"style\":\"COLOR-C586C0\"},{\"offset\":281,\"length\":4,\"style\":\"COLOR-C586C0\"},{\"offset\":0,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":36,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":48,\"length\":4,\"style\":\"COLOR-569CD6\"},{\"offset\":54,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":70,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":89,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":123,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":137,\"length\":3,\"style\":\"COLOR-569CD6\"},{\"offset\":244,\"length\":2,\"style\":\"COLOR-569CD6\"},{\"offset\":351,\"length\":8,\"style\":\"COLOR-569CD6\"},{\"offset\":9,\"length\":8,\"style\":\"COLOR-DCDCAA\"},{\"offset\":102,\"length\":12,\"style\":\"COLOR-DCDCAA\"},{\"offset\":230,\"length\":10,\"style\":\"COLOR-DCDCAA\"},{\"offset\":250,\"length\":4,\"style\":\"COLOR-DCDCAA\"},{\"offset\":323,\"length\":4,\"style\":\"COLOR-DCDCAA\"},{\"offset\":360,\"length\":8,\"style\":\"COLOR-DCDCAA\"},{\"offset\":381,\"length\":3,\"style\":\"COLOR-DCDCAA\"},{\"offset\":405,\"length\":16,\"style\":\"COLOR-DCDCAA\"},{\"offset\":432,\"length\":8,\"style\":\"COLOR-DCDCAA\"},{\"offset\":0,\"length\":456,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":18,\"length\":4,\"style\":\"COLOR-9CDCFE\"},{\"offset\":24,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":40,\"length\":5,\"style\":\"COLOR-9CDCFE\"},{\"offset\":58,\"length\":9,\"style\":\"COLOR-9CDCFE\"},{\"offset\":115,\"length\":5,\"style\":\"COLOR-9CDCFE\"},{\"offset\":127,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":152,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":162,\"length\":9,\"style\":\"COLOR-9CDCFE\"},{\"offset\":175,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":220,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":266,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":302,\"length\":9,\"style\":\"COLOR-9CDCFE\"},{\"offset\":314,\"length\":7,\"style\":\"COLOR-9CDCFE\"},{\"offset\":398,\"length\":6,\"style\":\"COLOR-9CDCFE\"},{\"offset\":441,\"length\":8,\"style\":\"COLOR-9CDCFE\"},{\"offset\":451,\"length\":3,\"style\":\"COLOR-B5CEA8\"},{\"offset\":17,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":22,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":32,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":45,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":67,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":78,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":97,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":114,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":120,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":134,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":145,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":151,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":159,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":171,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":183,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":227,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":240,\"length\":4,\"style\":\"COLOR-D4D4D4\"},{\"offset\":246,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":254,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":257,\"length\":9,\"style\":\"COLOR-D4D4D4\"},{\"offset\":274,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":276,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":285,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":311,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":327,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":330,\"length\":5,\"style\":\"COLOR-D4D4D4\"},{\"offset\":336,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":340,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":368,\"length\":3,\"style\":\"COLOR-D4D4D4\"},{\"offset\":380,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":384,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":394,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":396,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":404,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":421,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":430,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":440,\"length\":1,\"style\":\"COLOR-D4D4D4\"},{\"offset\":449,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":454,\"length\":2,\"style\":\"COLOR-D4D4D4\"},{\"offset\":74,\"length\":4,\"style\":\"COLOR-4EC9B0\"},{\"offset\":141,\"length\":4,\"style\":\"COLOR-4EC9B0\"},{\"offset\":373,\"length\":7,\"style\":\"COLOR-4EC9B0\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b7h94\",\"text\":\"函数防抖与函数节流的对比\",\"type\":\"header-three\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":12,\"style\":\"BOLD\"},{\"offset\":0,\"length\":12,\"style\":\"COLOR-569CD6\"},{\"offset\":0,\"length\":12,\"style\":\"FONTSIZE-20\"},{\"offset\":0,\"length\":12,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":12,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5mhs6\",\"text\":\"不管是函数防抖还是函数节流，减少的都是事件处理程序的调用频率，而不是事件的调用频率。如上面的例子，每一次滚动，每一次输入都会触发事件\",\"type\":\"blockquote\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":66,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":66,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":66,\"style\":\"COLOR-666666\"},{\"offset\":0,\"length\":66,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5kspl\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"data-line\":\"114\",\"class\":\"code-line        \"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"2og48\",\"text\":\"函数防抖和函数节流都用了闭包封装\\n何时使用函数防抖，函数节流需要看需求：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":36,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":36,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":36,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"69c2j\",\"text\":\"当只需要处理最后一次触发事件时，用函数防抖。如窗口大小值变化时并不需要计算中间变化的过程，只需要窗口大小改变完成后的值\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":59,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":59,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":59,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":59,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"3opla\",\"text\":\"当事件触发过于频繁，需要限制事件处理程序的调用频率时，用函数节流\",\"type\":\"unordered-list-item\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":32,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":32,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":32,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":32,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"da52j\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721575385359090.png\",\"type\":\"IMAGE\",\"width\":822,\"height\":460.140625}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721575385362906.png\",\"type\":\"IMAGE\",\"width\":828,\"height\":374.953125}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721575385370741.png\",\"type\":\"IMAGE\",\"width\":758,\"height\":649.03125}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721575385373950.png\",\"type\":\"IMAGE\",\"width\":755,\"height\":628.34375}}}}', '<h2><strong><span style=\"color:#569cd6\"><span style=\"font-size:24px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">函数防抖与节流</span></span></span></span></strong></h2><blockquote><span style=\"letter-spacing:2px\"><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"line-height:1.75\">为了防止事件在短时间内被多次触发的两种解决方案</span></span></span></span></blockquote><h3><strong><span style=\"color:#569cd6\"><span style=\"font-size:20px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">函数防抖与节流的意义</span></span></span></span></strong></h3><blockquote><span style=\"letter-spacing:2px\"><span style=\"font-size:16px\"><span style=\"color:#666666\"><span style=\"line-height:1.75\">在绑定 scroll 、resize 这类事件时，当它发生时，它被触发的频次非常高，间隔很近。如果事件中涉及到大量的位置计算、DOM 操作、元素重绘等工作且这些工作无法在下一个 scroll 事件触发前完成，就会造成浏览器掉帧。加之用户鼠标滚动往往是连续的，就会持续触发 scroll 事件导致掉帧扩大、浏览器 CPU 使用率增加、用户体验受到影响。</span></span></span></span></blockquote><p><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">简单说就是：事件触发太频繁，浏览器来不及处理，导致页面出现卡顿</span></span></span></span></p><h3><strong><span style=\"color:#569cd6\"><span style=\"font-size:20px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">函数防抖（debounce ）</span></span></span></span></strong></h3><blockquote><span style=\"letter-spacing:2px\"><span style=\"font-size:16px\"><span style=\"color:#666666\"><span style=\"line-height:1.75\">规定函数至少间隔多久执行</span></span></span></span></blockquote><ul><li><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">函数执行一次后，在 n 秒内不能再次执行，否则将推迟函数执行</span></span></span></span></li><li><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">下一次函数调用将会清除上一次的定时器，并重新计时</span></span></span></span></li></ul><p><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\"><span style=\"color:#000000\"><strong>基本思想</strong></span>：<span style=\"color:#000000\">策略是当事件触发时，设定一个周期延迟执行动作，若期间又被触发，则重新设定周期，知道周期结束，执行动作</span></span></span></span></p><blockquote><span style=\"color:#333333\"><span style=\"letter-spacing:2px\"><span style=\"font-size:16px\"><span style=\"line-height:1.75\">后期拓展出前缘debounce，即执行动作在前，然后设定周期，周期内有事件被触发，不执行动作，且周期重新设定</span></span></span></span></blockquote><p><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">延迟debounce 示意图：</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2017108041721575385359090.png\" width=\"822\" height=\"460.140625\" style=\"width:822px;height:460.140625px\"/></div><p></p><p><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">前缘debounce 示意图：</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2017108041721575385362906.png\" width=\"828\" height=\"374.953125\" style=\"width:828px;height:374.953125px\"/></div><p><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">debounce的特点是当事件快速连续不断触发时，动作只会执行一次，但当触发有间断，且间断时间大于设定的延迟时间间隔时，动作就会被执行多次</span></span></span></span></p><p></p><p><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">例子 | 未使用函数防抖 | 使用函数防抖  </span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">:---:| :---:|:---:  </span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">验证用户输入信息 | 用户每输入一个字符就进行一次验证 | 用户输入完成后进行验证  </span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">窗口大小发生变化时重新计算新窗口大小 | 窗口大小改变就计算一次大小 | 窗口大小改变完成后计算大小</span></span></span></span></p><p></p><blockquote><span style=\"letter-spacing:2px\"><span style=\"color:#666666\"><span style=\"font-size:16px\"><span style=\"line-height:1.75\">实例：模拟验证用户输入信息</span></span></span></span></blockquote><pre data-lang=\"html\" class=\"lang-html\"><code class=\"lang-html\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\"><span style=\"color:#d4d4d4\">验证用户信息：</span><span style=\"color:#808080\">&lt;</span><span style=\"color:#569cd6\">input</span> <span style=\"color:#9cdcfe\">type</span><span style=\"color:#d4d4d4\">=</span><span style=\"color:#ce9178\">&quot;text&quot;</span> <span style=\"color:#9cdcfe\">name</span><span style=\"color:#d4d4d4\">=</span><span style=\"color:#ce9178\">&quot;&quot;</span> <span style=\"color:#9cdcfe\">id</span><span style=\"color:#d4d4d4\">=</span><span style=\"color:#ce9178\">&quot;username&quot;</span><span style=\"color:#808080\">&gt;</span></span></span></span><br/></code></pre><p></p><p></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\"><span style=\"line-height:1.75\"><span style=\"color:#569cd6\">var</span> <span style=\"color:#9cdcfe\">username</span><span style=\"color:#d4d4d4\"> = </span><span style=\"color:#9cdcfe\">document</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">getElementById</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&quot;username&quot;</span><span style=\"color:#d4d4d4\">);</span><br/><span style=\"color:#9cdcfe\">btn</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">addEventListener</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&quot;keyup&quot;</span><span style=\"color:#d4d4d4\">, </span><span style=\"color:#9cdcfe\">fun</span><span style=\"color:#d4d4d4\">)</span><br/><span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">fun</span><span style=\"color:#d4d4d4\">(){</span><br/> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">username</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">value</span><span style=\"color:#d4d4d4\">)</span><br/><span style=\"color:#d4d4d4\">}</span></span></span></span></code></pre><p></p><ul><li><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">每当用户在输入框输入一个字符控制台就会输出，这种不仅从资源上来说是很浪费的行为，而且实际应用中，用户也是输出完整的字符后才会进行验证信息</span></span></span></span></li></ul><blockquote><strong><span style=\"color:#333333\"><span style=\"letter-spacing:2px\"><span style=\"font-size:16px\"><span style=\"line-height:1.75\">改进：简单的防抖</span></span></span></span></strong></blockquote><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\"><span style=\"line-height:1.75\"><span style=\"color:#569cd6\">var</span> <span style=\"color:#9cdcfe\">username</span><span style=\"color:#d4d4d4\"> = </span><span style=\"color:#9cdcfe\">document</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">getElementById</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&quot;username&quot;</span><span style=\"color:#d4d4d4\">);</span><br/><span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">debounce</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">action</span><span style=\"color:#d4d4d4\">, </span><span style=\"color:#9cdcfe\">delay</span><span style=\"color:#d4d4d4\">){</span><br/> <span style=\"color:#569cd6\">let</span> <span style=\"color:#9cdcfe\">timer</span><span style=\"color:#d4d4d4\"> = </span><span style=\"color:#569cd6\">null</span> <span style=\"color:#6a9955\">// 定时器变量</span><br/> <span style=\"color:#c586c0\">return</span> <span style=\"color:#569cd6\">function</span><span style=\"color:#d4d4d4\">(){</span><br/> <span style=\"color:#569cd6\">let</span> <span style=\"color:#9cdcfe\">self</span><span style=\"color:#d4d4d4\"> = </span><span style=\"color:#569cd6\">this</span><br/> <span style=\"color:#9cdcfe\">args</span><span style=\"color:#d4d4d4\"> = </span><span style=\"color:#569cd6\">arguments</span><br/> <span style=\"color:#dcdcaa\">clearTimeout</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">timer</span><span style=\"color:#d4d4d4\">) </span><span style=\"color:#6a9955\">// 触发时先清理上一次的定时器，然后重新计时</span><br/> <span style=\"color:#9cdcfe\">timer</span><span style=\"color:#d4d4d4\"> = </span><span style=\"color:#dcdcaa\">setTimeout</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#569cd6\">function</span><span style=\"color:#d4d4d4\">(){</span><br/> <span style=\"color:#9cdcfe\">action</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">apply</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">self</span><span style=\"color:#d4d4d4\">, </span><span style=\"color:#9cdcfe\">args</span><span style=\"color:#d4d4d4\">)</span><br/><span style=\"color:#d4d4d4\">    }, </span><span style=\"color:#9cdcfe\">delay</span><span style=\"color:#d4d4d4\">) </span><span style=\"color:#6a9955\">// 设置定时器</span><br/><span style=\"color:#d4d4d4\">  }</span><br/><span style=\"color:#d4d4d4\">}</span><br/><span style=\"color:#6a9955\">// 事件处理函数</span><br/><span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">fun</span><span style=\"color:#d4d4d4\">(){</span><br/> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">username</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#9cdcfe\">value</span><span style=\"color:#d4d4d4\">)</span><br/><span style=\"color:#d4d4d4\">}</span><br/><span style=\"color:#9cdcfe\">username</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">addEventListener</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&quot;keyup&quot;</span><span style=\"color:#d4d4d4\">, </span><span style=\"color:#dcdcaa\">debounce</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">fun</span><span style=\"color:#d4d4d4\">, </span><span style=\"color:#b5cea8\">500</span><span style=\"color:#d4d4d4\">)) </span><span style=\"color:#6a9955\">// 触发事件500毫秒后执行</span></span></span></span></code></pre><h3><strong><span style=\"color:#569cd6\"><span style=\"font-size:20px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">函数节流（throttling）</span></span></span></span></strong></h3><ul><li><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">函数在n秒内最多执行一次</span></span></span></span></li><li><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">下一次函数调用将清除上一次的定时器</span></span></span></span></li><ul><li><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">若函数执行的时间间隔小于等于规定时间间隔，用setTimeout在规定时间后再执行</span></span></span></span></li><li><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">若函数执行的时间间隔大于规定时间间隔则执行函数，并重新计时</span></span></span></span></li></ul></ul><p><span style=\"color:#000000\"><span style=\"background-color:#ffffff\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\"><strong>基本思想</strong>：策略是固定周期内，只执行一次动作，若有新事件触发，不执行。周期结束后，又有事件触发，开始新的周期。 节流策略也分为前缘和延迟两种。</span></span></span></span></span></p><ul><li><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">延迟是指周期结束后执行动作</span></span></span></span></li><li><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\"><span style=\"color:#000000\">前缘是指执行动作后再开始周期</span>.</span></span></span></li></ul><p><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">延迟throttling 示意图</span></span></span></span></p><p></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2017108041721575385370741.png\" width=\"758\" height=\"649.03125\" style=\"width:758px;height:649.03125px\"/></div><p><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\"><br/>前缘throttling 示意图</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2017108041721575385373950.png\" width=\"755\" height=\"628.34375\" style=\"width:755px;height:628.34375px\"/></div><p></p><p><span style=\"color:#000000\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">throttling的特点在连续高频触发事件时，动作会被定期执行，响应平滑<br/><br/>例子 | 未使用函数节流 | 使用函数节流<br/>:---:| :---:|:---:<br/>页面滚动图片懒加载 | 每次都会执行事件处理程序  | 指定事件处理程序的执行频率</span></span></span></span></p><p></p><pre data-lang=\"javascript\" class=\"lang-javascript\"><code class=\"lang-javascript\"><span style=\"letter-spacing:2px\"><span style=\"font-size:18px\"><span style=\"line-height:1.75\"><span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">throttle</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">func</span><span style=\"color:#d4d4d4\">, </span><span style=\"color:#9cdcfe\">interval</span><span style=\"color:#d4d4d4\">){</span><br/> <span style=\"color:#569cd6\">let</span> <span style=\"color:#9cdcfe\">timer</span><span style=\"color:#d4d4d4\"> = </span><span style=\"color:#569cd6\">null</span><br/> <span style=\"color:#569cd6\">let</span> <span style=\"color:#9cdcfe\">startTime</span><span style=\"color:#d4d4d4\"> = </span><span style=\"color:#569cd6\">new</span> <span style=\"color:#4ec9b0\">Date</span><span style=\"color:#d4d4d4\">()</span><br/> <span style=\"color:#c586c0\">return</span> <span style=\"color:#569cd6\">function</span><span style=\"color:#d4d4d4\">(){</span><br/> <span style=\"color:#dcdcaa\">clearTimeout</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">timer</span><span style=\"color:#d4d4d4\">)</span><br/> <span style=\"color:#569cd6\">let</span> <span style=\"color:#9cdcfe\">curTime</span><span style=\"color:#d4d4d4\"> = </span><span style=\"color:#569cd6\">new</span> <span style=\"color:#4ec9b0\">Date</span><span style=\"color:#d4d4d4\">()</span><br/> <span style=\"color:#c586c0\">if</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">curTime</span><span style=\"color:#d4d4d4\"> - </span><span style=\"color:#9cdcfe\">startTime</span><span style=\"color:#d4d4d4\"> &lt;= </span><span style=\"color:#9cdcfe\">interval</span><span style=\"color:#d4d4d4\">){</span><br/> <span style=\"color:#6a9955\">//小于规定事件间隔，用setTimeout在指定时间后再执行</span><br/> <span style=\"color:#9cdcfe\">timeout</span><span style=\"color:#d4d4d4\"> = </span><span style=\"color:#dcdcaa\">setTimeout</span><span style=\"color:#d4d4d4\">(() </span><span style=\"color:#569cd6\">=&gt;</span><span style=\"color:#d4d4d4\"> {</span><br/> <span style=\"color:#dcdcaa\">func</span><span style=\"color:#d4d4d4\">()</span><br/><span style=\"color:#d4d4d4\">      }, </span><span style=\"color:#9cdcfe\">interval</span><span style=\"color:#d4d4d4\">)</span><br/><span style=\"color:#d4d4d4\">    }</span><span style=\"color:#c586c0\">else</span><span style=\"color:#d4d4d4\"> {</span><br/> <span style=\"color:#6a9955\">//重新计时并执行函数</span><br/> <span style=\"color:#9cdcfe\">startTime</span><span style=\"color:#d4d4d4\"> = </span><span style=\"color:#9cdcfe\">curTime</span><br/> <span style=\"color:#dcdcaa\">func</span><span style=\"color:#d4d4d4\">()</span><br/><span style=\"color:#d4d4d4\">    }</span><br/><span style=\"color:#d4d4d4\">  }</span><br/><span style=\"color:#d4d4d4\">}</span><br/><span style=\"color:#6a9955\">//事件处理函数</span><br/><span style=\"color:#569cd6\">function</span> <span style=\"color:#dcdcaa\">realFunc</span><span style=\"color:#d4d4d4\">(){</span><br/> <span style=\"color:#4ec9b0\">console</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">log</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&quot;success&quot;</span><span style=\"color:#d4d4d4\">)</span><br/><span style=\"color:#d4d4d4\">}</span><br/><span style=\"color:#9cdcfe\">window</span><span style=\"color:#d4d4d4\">.</span><span style=\"color:#dcdcaa\">addEventListener</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#ce9178\">&#x27;scroll&#x27;</span><span style=\"color:#d4d4d4\">, </span><span style=\"color:#dcdcaa\">throttle</span><span style=\"color:#d4d4d4\">(</span><span style=\"color:#9cdcfe\">realFunc</span><span style=\"color:#d4d4d4\">, </span><span style=\"color:#b5cea8\">100</span><span style=\"color:#d4d4d4\">))</span></span></span></span></code></pre><h3><strong><span style=\"color:#569cd6\"><span style=\"font-size:20px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">函数防抖与函数节流的对比</span></span></span></span></strong></h3><blockquote><span style=\"letter-spacing:2px\"><span style=\"font-size:16px\"><span style=\"color:#666666\"><span style=\"line-height:1.75\">不管是函数防抖还是函数节流，减少的都是事件处理程序的调用频率，而不是事件的调用频率。如上面的例子，每一次滚动，每一次输入都会触发事件</span></span></span></span></blockquote><p style=\"text-align:start;text-indent:2em;\" data-line=\"114\" class=\"code-line        \"></p><p><span style=\"font-size:18px\"><span style=\"color:#000000\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">函数防抖和函数节流都用了闭包封装<br/>何时使用函数防抖，函数节流需要看需求：</span></span></span></span></p><ul><li><span style=\"font-size:18px\"><span style=\"color:#000000\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">当只需要处理最后一次触发事件时，用函数防抖。如窗口大小值变化时并不需要计算中间变化的过程，只需要窗口大小改变完成后的值</span></span></span></span></li><li><span style=\"font-size:18px\"><span style=\"color:#000000\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.75\">当事件触发过于频繁，需要限制事件处理程序的调用频率时，用函数节流</span></span></span></span></li></ul><p></p>', 17, 1, 0, '2019-12-03 00:00:00', NULL);
INSERT INTO `article` VALUES (204, '201810801070', 'WEB应用专业团队2019-2020-1学期第七次学术报告会', 2, 2, '2019年11月23日19：40在分册楼6a-3举行了第七次学术报告会，本次会议先是由赵泽忠讲解Java中的反射，报告人主要从四个方面进行讲解（是什么？反射原理，反射优缺点，反射实例）。深刻突出了反射的优点与缺点。随即由徐岸讲解代理设计模式', '反射与代理设计模式', 'http://img.pzhuweb.cn/2018108010701575193801406.jpg', '{\"blocks\":[{\"key\":\"v9un\",\"text\":\"2019年11月23日19：40在分册楼6a-3举行了第七次学术报告会，本次会议先是由赵泽忠讲解Java中的反射，报告人主要从四个方面进行讲解（是什么？反射原理，反射优缺点，反射实例）。深刻突出了反射的优点与缺点。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":27,\"style\":\"FONTSIZE-inherit\"},{\"offset\":35,\"length\":72,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":27,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":35,\"length\":72,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":27,\"style\":\"FONTSIZE-16\"},{\"offset\":35,\"length\":72,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"b4lv5\",\"text\":\"随即由徐岸讲解代理设计模式（静态代理，动态代理），报告人主要从设计模式的分类、代理设计模式的定义、优缺点、实例等四个方面进行深刻地讲解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":68,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":68,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":68,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"a0sh0\",\"text\":\"最后由全体成员对上几次报告会做出了评价，并由兰老师对其做出了总结。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":33,\"style\":\"FONTSIZE-inherit\"},{\"offset\":0,\"length\":33,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":33,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"293j9\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"dtsl0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"33g4r\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"2j2bh\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701575193810984.jpg\",\"name\":\"35F4B0C976BC2892250D7A1DDC9AA460.jpg\",\"type\":\"IMAGE\",\"width\":\"960px\",\"height\":\"700px\",\"meta\":{\"id\":210,\"title\":\"2018108010701575193810984.jpg\",\"alt\":\"2018108010701575193810984.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108010701575193814882.jpg\",\"name\":\"AD4E769EBBE82C9F6A2BF9875DFBA5D4.jpg\",\"type\":\"IMAGE\",\"width\":\"960px\",\"height\":\"700px\",\"meta\":{\"id\":211,\"title\":\"2018108010701575193814882.jpg\",\"alt\":\"2018108010701575193814882.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:start;text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\"><span style=\"font-size:16px\">2019年11月23日19：40在分册楼6a-3举行了</span></span></span>第七次学术报告会<span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\"><span style=\"font-size:16px\">，本次会议先是由赵泽忠讲解Java中的反射，报告人主要从四个方面进行讲解（是什么？反射原理，反射优缺点，反射实例）。深刻突出了反射的优点与缺点。</span></span></span></p><p style=\"text-align:start;text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\"><span style=\"font-size:16px\">随即由徐岸讲解代理设计模式（静态代理，动态代理），报告人主要从设计模式的分类、代理设计模式的定义、优缺点、实例等四个方面进行深刻地讲解。</span></span></span></p><p style=\"text-indent:2em;\"><span style=\"font-size:inheritpx\"><span style=\"line-height:1.75\"><span style=\"font-size:16px\">最后由全体成员对上几次报告会做出了评价，并由兰老师对其做出了总结。</span></span></span></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"210\" title=\"2018108010701575193810984.jpg\" alt=\"2018108010701575193810984.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108010701575193810984.jpg\" width=\"960px\" height=\"700px\" style=\"width:960px;height:700px\"/></div><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"211\" title=\"2018108010701575193814882.jpg\" alt=\"2018108010701575193814882.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108010701575193814882.jpg\" width=\"960px\" height=\"700px\" style=\"width:960px;height:700px\"/></div><p></p>', 17, 1, 0, '2019-11-23 00:00:00', NULL);
INSERT INTO `article` VALUES (205, '201710804172', 'WEB应用专业团队2019-2020-2学期第一次学术报告会', 5, 13, '2020年5月3日20:00举行WEB应用专业团队2019-2020-2线上学术报告交流会。WEB应用专业团队指导老师兰全祥和全体团队成员出席了此次会议。本次会议开始，首先由曹林讲解了Token的相关技术。为我们讲解了使用cookie、se', 'token 分布式共识机制', 'http://img.pzhuweb.cn/2017108041721588907154299.jpg', '{\"blocks\":[{\"key\":\"a87tf\",\"text\":\"2020年5月3日20:00举行WEB专业应用团队2019-2020-2线上学术报告交流会。WEB专业应用团队指导老师兰全祥和全体团队成员出席了此次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":77,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":77,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":77,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":77,\"style\":\"LINEHEIGHT-1.5\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"distr\",\"text\":\"本次会议开始，首先由曹林讲解了Token的相关技术。为我们讲解了使用cookie、session保存状态存在的缺点，什么是token，为什么要用token，如何使用token，分析了token的有效时间设置，最后通过jwt举例token验证。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":121,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":121,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":121,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":121,\"style\":\"LINEHEIGHT-1.5\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"dv42q\",\"text\":\"紧接着，由徐岸讲解了基于分布式共识机制的唯一标识符生成算法。为我们讲解了分布式共识机制的历史，Raft算法，如何设置唯一标识符。之后为我们分享了如何在家免费下载知网论文。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":85,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":85,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":85,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":85,\"style\":\"LINEHEIGHT-1.5\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"dlhmb\",\"text\":\"最后，由兰全祥导师总结了两位主讲人所讲解的内容，并提出了两个课上遇到的前端小问题： event = window.event 发生了什么， js事件绑定区别。自此本次团队会议结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":25,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":90,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":90,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":90,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":9,\"length\":14,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"6ri8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dl50c\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"9c4p3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108041721588907120733.jpg\",\"name\":\"Cache_-187378b7835eef1e..jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":233,\"title\":\"2017108041721588907120733.jpg\",\"alt\":\"2017108041721588907120733.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"color:#000000\"><span style=\"font-size:16px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.5\">2020年5月3日20:00举行WEB专业应用团队2019-2020-2线上学术报告交流会。WEB专业应用团队指导老师兰全祥和全体团队成员出席了此次会议。</span></span></span></span></p><p style=\"text-indent:2em;\"><span style=\"color:#000000\"><span style=\"font-size:16px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.5\">本次会议开始，首先由曹林讲解了Token的相关技术。为我们讲解了使用cookie、session保存状态存在的缺点，什么是token，为什么要用token，如何使用token，分析了token的有效时间设置，最后通过jwt举例token验证。</span></span></span></span></p><p style=\"text-indent:2em;\"><span style=\"color:#000000\"><span style=\"font-size:16px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.5\">紧接着，由徐岸讲解了基于分布式共识机制的唯一标识符生成算法。为我们讲解了分布式共识机制的历史，Raft算法，如何设置唯一标识符。之后为我们分享了如何在家免费下载知网论文。</span></span></span></span></p><p style=\"text-indent:2em;\"><span style=\"font-size:16px\"><span style=\"letter-spacing:2px\"><span style=\"line-height:1.5\"><span style=\"color:#000000\">最后，由兰全祥导师<span style=\"background-color:#ffffff\">总结了两位主讲人所讲解的内容</span>，并</span>提出了两个课上遇到的前端小问题： event = window.event 发生了什么， js事件绑定区别。自此本次团队会议结束。</span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"233\" title=\"2017108041721588907120733.jpg\" alt=\"2017108041721588907120733.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108041721588907120733.jpg\"/></div><p></p>', 34, 1, 0, '2020-05-06 00:00:00', NULL);
INSERT INTO `article` VALUES (206, '201810804034', 'WEB应用专业团队2019-2020-1学期第八次全体会议', 5, 13, '2019年12月1日19：40在砺志楼四楼会议室举行了以排序算法为主题的报告会，主讲人为苗海洋、彭治皓。本次会议先由苗海洋讲解了计数排序、桶排序、基数排序算法。随即由彭治皓讲解了三种排序算法，分别是：归并排序、希尔排序、推排序。两位主讲人讲', '排序算法', 'http://img.pzhuweb.cn/2018108040341575557751264.png', '{\"blocks\":[{\"key\":\"5konh\",\"text\":\"2019年12月1日19：40在砺志楼四楼会议室举行了以排序算法为主题的报告会，主讲人为苗海洋、彭治皓。本次会议先由苗海洋讲解了计数排序、桶排序、基数排序算法。随即由彭治皓讲解了三种排序算法，分别是：归并排序、希尔排序、推排序。两位主讲人讲解时都分别从算法思想、算法实现、算法优缺点以及算法的应用方面进行讲解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":155,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":155,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":155,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":155,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"1f8j7\",\"text\":\"其后，团队指导老师对本次会议的参会成员进行了提问，成员们积极思考并作出了回答。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":39,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":39,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":39,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":39,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"78cvo\",\"text\":\"最后，团队指导老师对本次会议进行总结，团队成员们在本次会议中都得到了与自己不同的思考思路，感受颇深。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":50,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":50,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":50,\"style\":\"LETTERSPACING-2\"},{\"offset\":0,\"length\":50,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}}],\"entityMap\":{}}', '<p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"color:#000000\"><span style=\"line-height:1.75\"><span style=\"letter-spacing:2px\"><span style=\"font-size:16px\">2019年12月1日19：40在砺志楼四楼会议室举行了以排序算法为主题的报告会，主讲人为苗海洋、彭治皓。本次会议先由苗海洋讲解了计数排序、桶排序、基数排序算法。随即由彭治皓讲解了三种排序算法，分别是：归并排序、希尔排序、推排序。两位主讲人讲解时都分别从算法思想、算法实现、算法优缺点以及算法的应用方面进行讲解。</span></span></span></span></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"color:#000000\"><span style=\"line-height:1.75\"><span style=\"letter-spacing:2px\"><span style=\"font-size:16px\">其后，团队指导老师对本次会议的参会成员进行了提问，成员们积极思考并作出了回答。</span></span></span></span></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"color:#000000\"><span style=\"line-height:1.75\"><span style=\"letter-spacing:2px\"><span style=\"font-size:16px\">最后，团队指导老师对本次会议进行总结，团队成员们在本次会议中都得到了与自己不同的思考思路，感受颇深。</span></span></span></span></p>', 32, 1, 0, '2019-12-01 00:00:00', NULL);
INSERT INTO `article` VALUES (207, '201810804034', 'WEB应用专业团队2019-2020-2学期第六次学术报告会', 5, 13, 'WEB应用专业团队于2020年6月7日20:00在企业微信线上开展了主题为“学术交流会”的团队活动。本次团队活动由指导老师兰全祥主持，2019级软件工程胡森宇、王乐帅主讲。首先由胡森宇介绍了java的异常体系，讲解了其中的运行时异常和编译时', '学术交流会', 'http://img.pzhuweb.cn/2018108040341591577371615.png', '{\"blocks\":[{\"key\":\"83tbb\",\"text\":\"WEB专业应用团队于2020年6月7日20:00在企业微信线上开展了主题为“学术交流会”的团队活动。本次团队活动由指导老师兰全祥主持，2019级软件工程胡森宇、王乐帅主讲。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":86,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":86,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":86,\"style\":\"LETTERSPACING-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"fjqp0\",\"text\":\"首先由胡森宇介绍了java的异常体系，讲解了其中的运行时异常和编译时异常中的各种情况。其次由王乐帅介绍继承、接口，讲解了其中super关键字的作用、讲述了方法的重写和重载之间的对比等。在此过程中，指导老师兰全祥老师根据主讲人的主题内容进行提问，在团队成员们积极地交流回答下，团队成员们总结到了每个问题的最佳答案。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":156,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":156,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":156,\"style\":\"LETTERSPACING-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"349na\",\"text\":\"活动最后，兰全祥老师对本期活动做了归纳总结，团队成员们收获颇丰。最重要的两点是学术报告交流会的目的是交流，我们应该有自己的想法，才能碰撞出更精彩的火花；分析一个知识点时，我们更要注重层层剖析。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":96,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":96,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":96,\"style\":\"LETTERSPACING-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"6gcmd\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"1nmjm\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040341591576926409.png\",\"type\":\"IMAGE\"}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:16px\"><span style=\"line-height:1.75\"><span style=\"letter-spacing:2px\">WEB专业应用团队于2020年6月7日20:00在企业微信线上开展了主题为“学术交流会”的团队活动。本次团队活动由指导老师兰全祥主持，2019级软件工程胡森宇、王乐帅主讲。</span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:16px\"><span style=\"line-height:1.75\"><span style=\"letter-spacing:2px\">首先由胡森宇介绍了java的异常体系，讲解了其中的运行时异常和编译时异常中的各种情况。其次由王乐帅介绍继承、接口，讲解了其中super关键字的作用、讲述了方法的重写和重载之间的对比等。在此过程中，指导老师兰全祥老师根据主讲人的主题内容进行提问，在团队成员们积极地交流回答下，团队成员们总结到了每个问题的最佳答案。</span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:16px\"><span style=\"line-height:1.75\"><span style=\"letter-spacing:2px\">活动最后，兰全祥老师对本期活动做了归纳总结，团队成员们收获颇丰。最重要的两点是学术报告交流会的目的是交流，我们应该有自己的想法，才能碰撞出更精彩的火花；分析一个知识点时，我们更要注重层层剖析。</span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108040341591576926409.png\"/></div><p></p>', 19, 1, 0, '2020-06-08 00:00:00', NULL);
INSERT INTO `article` VALUES (208, '201810804121', 'WEB应用专业团队2019-2020-1学期第九次学术报告会', 5, 13, '2019年12月15日3:00在励志楼四楼会议室召开了第九次学术报告会，本次会议先是由苟雨晴讲解了https加密算法及原理，主要对加密原理，对称加密，非对称加密等进行讲解，然后由林荣杭讲解了Java中死锁现象，分析了产生的原因，以及避免死锁', 'https加密算法   序列化   死锁  dubbo', 'http://img.pzhuweb.cn/2018108041211576570702350.jpg', '{\"blocks\":[{\"key\":\"dqs96\",\"text\":\"2019年12月15日3:00在励志楼四楼会议室召开了第九次学术报告会，本次会议先是由苟雨晴讲解了https加密算法及原理，主要对加密原理，对称加密，非对称加密等进行讲解，然后由林荣杭讲解了Java中死锁现象，分析了产生的原因，以及避免死锁的方法，接着由方顺讲解了序列化与反序列化，主要讲解了用途以及实现，然后由吴涛讲解了dubbo的相关知识。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":172,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":172,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":172,\"style\":\"LETTERSPACING-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"6300d\",\"text\":\"最后，由团队指导老师进行总结，本次会议结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":22,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":0,\"length\":22,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":22,\"style\":\"LETTERSPACING-2\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"fjkj7\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"f590n\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a77i1\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"apa52\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108041211576569494431.jpg\",\"type\":\"IMAGE\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108041211576569519398.jpg\",\"type\":\"IMAGE\"}}}}', '<p style=\"text-align:start;text-indent:2em;\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\">2019年12月15日3:00在励志楼四楼会议室召开了第九次学术报告会，本次会议先是由苟雨晴讲解了https加密算法及原理，主要对加密原理，对称加密，非对称加密等进行讲解，然后由林荣杭讲解了Java中死锁现象，分析了产生的原因，以及避免死锁的方法，接着由方顺讲解了序列化与反序列化，主要讲解了用途以及实现，然后由吴涛讲解了dubbo的相关知识。</span></span></span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\"><span style=\"font-size:18px\"><span style=\"letter-spacing:2px\">最后，由团队指导老师进行总结，本次会议结束。</span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108041211576569494431.jpg\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108041211576569519398.jpg\"/></div><p></p>', 16, 1, 0, '2019-12-17 00:00:00', NULL);
INSERT INTO `article` VALUES (209, '201810801026', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (210, '201810804079', 'WEB应用专业团队2019-2020-1学期第十二次学术报告会', 5, 13, '2020年1月7日19:40在砺志楼四楼会议室召开了第十二次学术报告会，本次会议由吴雪讲解hash查找的相关内容。并且说明了什么是hash查找、什么时候用hash查找、怎么用hash查找、为什么要用hash查找，以及用连续数据和非连续数据数', '学术报告会', 'http://img.pzhuweb.cn/2018108040791578892270313.jpg', '{\"blocks\":[{\"key\":\"8ag6u\",\"text\":\"2020年1月7日19:40在砺志楼四楼会议室召开了第十二次学术报告会，本次会议由吴雪讲解hash查找的相关内容。并且说明了什么是hash查找、什么时候用hash查找、怎么用hash查找、为什么要用hash查找，以及用连续数据和非连续数据数列进行说明，让我们深入的了解了动态规划。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"d828f\",\"text\":\"紧接着，由罗芯汭讲解了指针，说明了什么是指针，如何使用指针，什么时候使用指针，指针的具体作用。最后由指导老师兰全祥老师向大家具体的总结了两位主讲人所讲解的内容。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}}],\"entityMap\":{}}', '<p style=\"text-align:start;text-indent:2em;\">2020年1月7日19:40在砺志楼四楼会议室召开了第十二次学术报告会，本次会议由吴雪讲解hash查找的相关内容。并且说明了什么是hash查找、什么时候用hash查找、怎么用hash查找、为什么要用hash查找，以及用连续数据和非连续数据数列进行说明，让我们深入的了解了动态规划。</p><p style=\"text-align:start;text-indent:2em;\">紧接着，由罗芯汭讲解了指针，说明了什么是指针，如何使用指针，什么时候使用指针，指针的具体作用。最后由指导老师兰全祥老师向大家具体的总结了两位主讲人所讲解的内容。</p>', 26, 1, 0, '2020-01-07 00:00:00', NULL);
INSERT INTO `article` VALUES (211, '201810804072', 'WEB应用专业团队2019-2020-1学期第十四次学术报告会', 3, 13, '2020年1月9日19:40在砺志楼四楼会议室召开了第十四次学术报告会，本次会议由朱守平讲解动态规划的相关内容。并且说明了什么是动态规划、什么时候用动态规划、怎么用动态规划、为什么要用动态规划，以及用斐波那契数列进行说明，让我们深入的了解了', '报告会', 'http://img.pzhuweb.cn/2018108040721578886644162.JPG', '{\"blocks\":[{\"key\":\"992co\",\"text\":\"2020年1月9日19:40在砺志楼四楼会议室召开了第十四次学术报告会，本次会议由朱守平讲解动态规划的相关内容。并且说明了什么是动态规划、什么时候用动态规划、怎么用动态规划、为什么要用动态规划，以及用斐波那契数列进行说明，让我们深入的了解了动态规划。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"4mn2m\",\"text\":\"紧接着，由团队指导老师进行年度总结，指导老师列举了团队这一年里我们取得的成就，以及在假期里面不同年级的成员应该做些什么，本次会议结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"1d8d0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ed7f5\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"f6ldq\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f51q3\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"d7j5u\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040721578886582511.JPG\",\"name\":\"IMG_3312.JPG\",\"type\":\"IMAGE\",\"meta\":{\"id\":225,\"title\":\"2018108040721578886582511.JPG\",\"alt\":\"2018108040721578886582511.JPG\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040721578886582552.JPG\",\"name\":\"IMG_3314.JPG\",\"type\":\"IMAGE\",\"meta\":{\"id\":224,\"title\":\"2018108040721578886582552.JPG\",\"alt\":\"2018108040721578886582552.JPG\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\">2020年1月9日19:40在砺志楼四楼会议室召开了第十四次学术报告会，本次会议由朱守平讲解动态规划的相关内容。并且说明了什么是动态规划、什么时候用动态规划、怎么用动态规划、为什么要用动态规划，以及用斐波那契数列进行说明，让我们深入的了解了动态规划。</p><p style=\"text-indent:2em;\">紧接着，由团队指导老师进行年度总结，指导老师列举了团队这一年里我们取得的成就，以及在假期里面不同年级的成员应该做些什么，本次会议结束。</p><p></p><div class=\"media-wrap image-wrap\"><img id=\"225\" title=\"2018108040721578886582511.JPG\" alt=\"2018108040721578886582511.JPG\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040721578886582511.JPG\"/></div><p></p><div class=\"media-wrap image-wrap\"><img id=\"224\" title=\"2018108040721578886582552.JPG\" alt=\"2018108040721578886582552.JPG\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040721578886582552.JPG\"/></div><p></p>', 24, 1, 0, '2020-01-09 00:00:00', NULL);
INSERT INTO `article` VALUES (212, '201810804079', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (213, '201710803017', 'WEB应用专业团队2019-2020-2学期第五次学术报告会', 5, 13, '2020年5月31日20:00举行WEB应用专业团队2019-2020-2第五次全体线上学术报告会。WEB应用专业团队指导老师兰全祥和全体团队成员出席了此次会议。本次会议开始，朱守平对原型的关系进行了简单介绍后，任云宏和兰老师对于报告会应该', 'js原型 java的垃圾回收机制', 'http://img.pzhuweb.cn/2017108030171591357635134.png', '{\"blocks\":[{\"key\":\"10qu4\",\"text\":\"2020年5月31日20:00举行WEB专业应用团队2019-2020-2第五次全体线上学术报告会。WEB专业应用团队指导老师兰全祥和全体团队成员出席了此次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":81,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":44,\"style\":\"FONTSIZE-medium\"},{\"offset\":49,\"length\":32,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":44,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":49,\"length\":32,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":44,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":49,\"length\":32,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"5ir1k\",\"text\":\"本次会议开始，朱守平对原型的关系进行了简单介绍后，任云宏和兰老师对于报告会应该如何准备提出了看法。随后罗芯汭对于java的垃圾回收机制进行讲解。最后兰老师对于此次报告会做出总结，并为大一的成员安排报告会主题。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":104,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":51,\"style\":\"FONTSIZE-medium\"},{\"offset\":54,\"length\":50,\"style\":\"FONTSIZE-medium\"},{\"offset\":0,\"length\":104,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":51,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":54,\"length\":50,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":51,\"length\":3,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5poic\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"sbtm\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"8goht\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030171591357414853.png\",\"name\":\"news.png\",\"type\":\"IMAGE\",\"width\":468,\"height\":500,\"meta\":{\"id\":264,\"title\":\"2017108030171591357414853.png\",\"alt\":\"2017108030171591357414853.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"color:#000000\"><span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">2020年5月31日20:00举行WEB专业应用团队2019-2020-2第五次全体线上</span></span></span>学术报告会<span style=\"font-size:mediumpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">。WEB专业应用团队指导老师兰全祥和全体团队成员出席了此次会议。</span></span></span></span></p><p><span style=\"color:#000000\"><span style=\"background-color:#ffffff\"><span style=\"font-size:mediumpx\"><span style=\"line-height:1.75\">本次会议开始，朱守平对原型的关系进行了简单介绍后，任云宏和兰老师对于报告会应该如何准备提出了看法。随后</span></span><span style=\"font-size:16px\">罗芯汭</span><span style=\"font-size:mediumpx\"><span style=\"line-height:1.75\">对于java的垃圾回收机制进行讲解。最后兰老师对于此次报告会做出总结，并为大一的成员安排报告会主题。</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"264\" title=\"2017108030171591357414853.png\" alt=\"2017108030171591357414853.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030171591357414853.png\" width=\"468\" height=\"500\" style=\"width:468px;height:500px\"/></div><p></p>', 17, 1, 0, '2020-05-31 00:00:00', NULL);
INSERT INTO `article` VALUES (214, '201810804115', 'WEB应用专业团队2019-2020-2开学见面会线上会议', 5, 13, '2020年2月21日15:00举行WEB应用专业团队2019-2020-2开学见面会线上会议。WEB应用专业团队指导老师兰全祥和全体团队成员出席了此次会议。本次会议开始，兰老师对团队成员的上学期专业成绩、四六级成绩以及计算机二级情况进行了了', '新闻', 'http://img.pzhuweb.cn/2018108041151582279906899.jpg', '{\"blocks\":[{\"key\":\"5bcg1\",\"text\":\"2020年2月21日15:00举行WEB专业应用团队2019-2020-2开学见面会线上会议。WEB专业应用团队指导老师兰全祥和全体团队成员出席了此次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"40h2a\",\"text\":\"本次会议开始，兰老师对团队成员的上学期专业成绩、四六级成绩以及计算机二级情况进行了了解，同时组织团队成员依次分享了自己的假期学习情况。随后，由兰老师对本学期团队工作进行安排，确定团队的各项工作（打卡、汇报、会议等）都转移到企业微信平台。报告会待开学之后再组织，但团队成员需提前确定报告会内容，并提交至企业微信-工作台-微文档审核确定。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"5109v\",\"text\":\"通过本次会议，开启了WEB专业应用团队的新学期学习生活。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"1u7pv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6l27i\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"7tqs4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108041151582279869926.png\",\"name\":\"W5N{5U8PAU8QTY{MW5[O3)1.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":231,\"title\":\"2018108041151582279869926.png\",\"alt\":\"2018108041151582279869926.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\">2020年2月21日15:00举行WEB专业应用团队2019-2020-2开学见面会线上会议。WEB专业应用团队指导老师兰全祥和全体团队成员出席了此次会议。</p><p style=\"text-indent:2em;\">本次会议开始，兰老师对团队成员的上学期专业成绩、四六级成绩以及计算机二级情况进行了了解，同时组织团队成员依次分享了自己的假期学习情况。随后，由兰老师对本学期团队工作进行安排，确定团队的各项工作（打卡、汇报、会议等）都转移到企业微信平台。报告会待开学之后再组织，但团队成员需提前确定报告会内容，并提交至企业微信-工作台-微文档审核确定。</p><p style=\"text-indent:2em;\">通过本次会议，开启了WEB专业应用团队的新学期学习生活。</p><p></p><div class=\"media-wrap image-wrap\"><img id=\"231\" title=\"2018108041151582279869926.png\" alt=\"2018108041151582279869926.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108041151582279869926.png\"/></div><p></p>', 49, 1, 0, '2020-02-21 00:00:00', NULL);
INSERT INTO `article` VALUES (215, '201810804088', 'WEB应用专业团队2019-2020-1学期第十三次学术报告会', 3, 13, '2020年1月8日19:40在砺志楼四楼会议室召开了第十三次学术报告会，本次会议先由苟雨晴讲解https的相关内容。为我们讲解了https的相关概念和组成。对数字证书的形成过程和相关方法进行了进一步的讲解，让我们深入的了解https。紧接着', '报告会', 'http://img.pzhuweb.cn/2018108040881582277118232.jpg', '{\"blocks\":[{\"key\":\"dm14r\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7kd1e\",\"text\":\"2020年1月8日19:40在砺志楼四楼会议室召开了第十三次学术报告会，本次会议先由苟雨晴讲解https的相关内容。为我们讲解了https的相关概念和组成。对数字证书的形成过程和相关方法进行了进一步的讲解，让我们深入的了解https。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"bh34f\",\"text\":\"紧接着，由陈江涛讲解了贪心算法，说明了什么是贪心算法，贪心算法的特点，以及什么时候使用贪心算法，并总结贪心算法出贪心算法的概念和具体用途。最后由指导老师兰全祥老师向大家具体的总结了两位主讲人所讲解的内容。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"95pq8\",\"text\":\"\\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"80vr0\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"7q6mu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5vcft\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"92phd\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040881582277030277.jpg\",\"name\":\"4935087E4470FC2D36463DF343B7656E.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":226,\"title\":\"2018108040881582277030277.jpg\",\"alt\":\"2018108040881582277030277.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040881582277035629.jpg\",\"name\":\"7128BF25A4C98DC3F90B569DD5F54EB3.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":227,\"title\":\"2018108040881582277035629.jpg\",\"alt\":\"2018108040881582277035629.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p></p><p style=\"text-align:start;text-indent:2em;\">2020年1月8日19:40在砺志楼四楼会议室召开了第十三次学术报告会，本次会议先由苟雨晴讲解https的相关内容。为我们讲解了https的相关概念和组成。对数字证书的形成过程和相关方法进行了进一步的讲解，让我们深入的了解https。</p><p style=\"text-align:start;text-indent:2em;\">紧接着，由陈江涛讲解了贪心算法，说明了什么是贪心算法，贪心算法的特点，以及什么时候使用贪心算法，并总结贪心算法出贪心算法的概念和具体用途。最后由指导老师兰全祥老师向大家具体的总结了两位主讲人所讲解的内容。</p><p><br/> </p><div class=\"media-wrap image-wrap\"><img id=\"226\" title=\"2018108040881582277030277.jpg\" alt=\"2018108040881582277030277.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040881582277030277.jpg\"/></div><p></p><div class=\"media-wrap image-wrap\"><img id=\"227\" title=\"2018108040881582277035629.jpg\" alt=\"2018108040881582277035629.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040881582277035629.jpg\"/></div><p></p>', 26, 1, 0, '2020-01-08 00:00:00', NULL);
INSERT INTO `article` VALUES (216, '201710803075', 'WEB应用专业团队2019-2020-2第一次全体线上会议', 5, 13, '2020年4月15日20:00举行WEB应用专业团队2019-2020-2第一次全体线上会议。WEB应用专业团队指导老师兰全祥和全体团队成员出席了此次会议。本次会议开始，兰全祥导师首先对往后是否进行在线报告会进行商讨，并对各年级成员分配在线', '会议', 'http://img.pzhuweb.cn/2017108030751587434718844.jpg', '{\"blocks\":[{\"key\":\"4p1fh\",\"text\":\"2020年4月15日20:00举行WEB专业应用团队2019-2020-2第一次全体线上会议。WEB专业应用团队指导老师兰全祥和全体团队成员出席了此次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":78,\"style\":\"FONTSIZE-13.5pt\"},{\"offset\":0,\"length\":78,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":78,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"ctndd\",\"text\":\"本次会议开始，兰全祥导师首先对往后是否进行在线报告会进行商讨，并对各年级成员分配在线报告会任务；随后提及到团队官网2.0的论文攥写问题，并将其分配给团队某成员进行攥写；最后询问到各年级学习情况以及即将大四的成员的工作打算，并给予学习资源的补给以及工作的建议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":129,\"style\":\"FONTSIZE-13.5pt\"},{\"offset\":0,\"length\":129,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":129,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"start\",\"textIndent\":1}},{\"key\":\"c173h\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}},{\"key\":\"4ev61\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"33uam\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"textAlign\":\"center\"}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030751587434753326.jpg\",\"name\":\"TIM图片20200421093516.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":232,\"title\":\"2017108030751587434753326.jpg\",\"alt\":\"2017108030751587434753326.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"font-size:13.5ptpx\"><span style=\"color:#000000\"><span style=\"line-height:1.75\">2020年4月15日20:00举行WEB专业应用团队2019-2020-2第一次全体线上会议。WEB专业应用团队指导老师兰全祥和全体团队成员出席了此次会议。</span></span></span></p><p style=\"text-align:start;text-indent:2em;\"><span style=\"font-size:13.5ptpx\"><span style=\"color:#000000\"><span style=\"line-height:1.75\">本次会议开始，兰全祥导师首先对往后是否进行在线报告会进行商讨，并对各年级成员分配在线报告会任务；随后提及到团队官网2.0的论文攥写问题，并将其分配给团队某成员进行攥写；最后询问到各年级学习情况以及即将大四的成员的工作打算，并给予学习资源的补给以及工作的建议。</span></span></span></p><p class=\"MsoNormal\"> </p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"232\" title=\"2017108030751587434753326.jpg\" alt=\"2017108030751587434753326.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030751587434753326.jpg\"/></div><p style=\"text-align:center;\"></p>', 45, 1, 1, '2020-04-21 00:00:00', NULL);
INSERT INTO `article` VALUES (217, '201810804085', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (218, '201710803072', 'WEB应用专业团队2019-2020-2学期第三次学术报告会', 5, 13, ' 2020年5月17日晚上8点攀枝花学院数学与计算机学院WEB应用专业团队召开了2019-2020-2学期第三次学术报告会；会议开始团队指导老师兰全祥就大三同学实习问题提出建议，让队员们要充分准备、抓住机会，多深入学习基础知识，多向已毕业团', 'redis 浏览器渲染', 'http://img.pzhuweb.cn/2017108030721589760848307.png', '{\"blocks\":[{\"key\":\"ecl7q\",\"text\":\" 2020年5月17日晚上8点攀枝花学院数学与计算机学院WEB专业应用团队召开了2019-2020-2学期第三次学术报告会；会议开始团队指导老师兰全祥就大三同学实习问题提出建议，让队员们要充分准备、抓住机会，多深入学习基础知识，多向已毕业团队成员寻求意见；然后由团队成员赵修俊进行redis相关知识的分享，伍涛同学进行浏览器渲染原理相关知识的讲解，最后兰全祥老师对讲解内容进行分析，指出队员在分享过程中存在的不足并提出改正。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":212,\"style\":\"COLOR-000000\"},{\"offset\":0,\"length\":212,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":212,\"style\":\"FONTSIZE-20\"},{\"offset\":131,\"length\":81,\"style\":\"LETTERSPACING-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6eak7\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"width\":\"369\",\"height\":\"525\",\"src\":\"file:///C:/Users/℃/AppData/Local/Temp/msohtmlclip1/01/clip_image002.jpg\",\"v:shapes\":\"图片_x0020_1\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"dis8g\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a4d7t\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"348km\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fttjj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"file:///C:/Users/℃/AppData/Local/Temp/msohtmlclip1/01/clip_image002.jpg\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2017108030721589760728518.png\",\"name\":\"1.jpg.png\",\"type\":\"IMAGE\",\"width\":951,\"height\":464,\"meta\":{\"id\":234,\"title\":\"2017108030721589760728518.png\",\"alt\":\"2017108030721589760728518.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p><span style=\"color:#000000\"><span style=\"background-color:#ffffff\"><span style=\"font-size:20px\"> 2020年5月17日晚上8点攀枝花学院数学与计算机学院WEB专业应用团队召开了2019-2020-2学期第三次学术报告会；会议开始团队指导老师兰全祥就大三同学实习问题提出建议，让队员们要充分准备、抓住机会，多深入学习基础知识，多向已毕业团队成员寻求意见；然后由<span style=\"letter-spacing:2px\">团队成员赵修俊进行redis相关知识的分享，伍涛同学进行浏览器渲染原理相关知识的讲解，最后兰全祥老师对讲解内容进行分析，指出队员在分享过程中存在的不足并提出改正。</span></span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"file:///C:/Users/℃/AppData/Local/Temp/msohtmlclip1/01/clip_image002.jpg\" v:shapes=\"图片_x0020_1\"/></div><p></p><div class=\"media-wrap image-wrap\"><img id=\"234\" title=\"2017108030721589760728518.png\" alt=\"2017108030721589760728518.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2017108030721589760728518.png\" width=\"951\" height=\"464\" style=\"width:951px;height:464px\"/></div><p></p><p class=\"MsoNormal\"></p>', 28, 1, 0, '2020-05-17 00:00:00', NULL);
INSERT INTO `article` VALUES (219, '201710804105', NULL, NULL, NULL, NULL, NULL, 'http://img.pzhuweb.cn/2017108041051591718534086.png', NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (220, '201710803072', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (221, '201510804021', NULL, NULL, NULL, NULL, NULL, 'http://img.pzhuweb.cn/2015108040211591457595437.jpg', NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (222, '201610804032', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (223, '201810804034', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (224, '201810801070', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (225, '0002250', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (226, '201810804093', '杨新宇同学参加华为软件精英挑战赛获奖', 5, 13, '​华为软件精英挑战赛是华为公司面向在校大学生举办的大型软件竞赛，从2015年开始举办。在软件精英挑战赛的舞台上，我们相信您可以充分展示软件设计与编程的能力、享受coding解决问题的乐趣、感受软件改变世界的魅力。2020年是华为软件精英挑战', '成果', 'http://img.pzhuweb.cn/2018108040931592225150956.jpg', '{\"blocks\":[{\"key\":\"f9tbi\",\"text\":\"​华为软件精英挑战赛是华为公司面向在校大学生举办的大型软件竞赛，从2015年开始举办。在软件精英挑战赛的舞台上，我们相信您可以充分展示软件设计与编程的能力、享受coding解决问题的乐趣、感受软件改变世界的魅力。2020年是华为软件精英挑战赛第六届，挑战赛赛题为“智能世界•鲲鹏”，鲲鹏展翅，开创计算新时代!\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":154,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"77lpi\",\"text\":\"根据挑战赛赛制，WEB应用专业团队杨新宇同学在2020年3月至5月分别参加了高校热身赛，线上初赛和线上复赛，以第3名的好成绩成为了成渝赛区4强，并顺利进入了全国总决赛。2020年5月30日，与来自全国8个赛区的32支队伍进行了总决赛角逐，最终取得了总决赛第9名的优异成绩。\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":136,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"4nfud\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"center\",\"textIndent\":1}},{\"key\":\"jgks\",\"text\":\"a\",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"nodeAttributes\":{\"class\":\"rich_pages js_insertlocalimg\",\"data-ratio\":\"0.7037037037037037\",\"data-s\":\"300,640\",\"src\":\"https://mmbiz.qpic.cn/mmbiz_jpg/ZrDibf0iabM4akU0WppfnmwVZBVnWKVDVchEjCAx0tCaM9lBfMJp71eOldLF3KmqkxRxwRzZN20x4vqdGr1BMS4Q/640?wx_fmt=jpeg\",\"data-type\":\"jpeg\",\"data-w\":\"1026\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"a8c6p\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2oa1\",\"text\":\"经过此次大赛，杨新宇同学说：参加此次大赛的包含全国各高校的优秀学生，其中大部分都是研究生，真的是“山外青山楼外楼，强中更有强中手”，永远不要局限在自己的小圈子里面，不要骄傲自满，要不断奋进、努力学习。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":100,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"meta\":{},\"url\":\"https://mmbiz.qpic.cn/mmbiz_jpg/ZrDibf0iabM4akU0WppfnmwVZBVnWKVDVchEjCAx0tCaM9lBfMJp71eOldLF3KmqkxRxwRzZN20x4vqdGr1BMS4Q/640?wx_fmt=jpeg\",\"height\":\"auto\"}}}}', '<p style=\"text-align:justify;text-indent:2em;\"><span style=\"line-height:1.75\">​华为软件精英挑战赛是华为公司面向在校大学生举办的大型软件竞赛，从2015年开始举办。在软件精英挑战赛的舞台上，我们相信您可以充分展示软件设计与编程的能力、享受coding解决问题的乐趣、感受软件改变世界的魅力。2020年是华为软件精英挑战赛第六届，挑战赛赛题为“智能世界•鲲鹏”，鲲鹏展翅，开创计算新时代!</span></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"line-height:1.75\">根据挑战赛赛制，WEB应用专业团队杨新宇同学在2020年3月至5月分别参加了高校热身赛，线上初赛和线上复赛，以第3名的好成绩成为了成渝赛区4强，并顺利进入了全国总决赛。2020年5月30日，与来自全国8个赛区的32支队伍进行了总决赛角逐，最终取得了总决赛第9名的优异成绩。</span><br/></p><p style=\"text-align:center;text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img data-ratio=\"0.7037037037037037\" data-s=\"300,640\" src=\"https://mmbiz.qpic.cn/mmbiz_jpg/ZrDibf0iabM4akU0WppfnmwVZBVnWKVDVchEjCAx0tCaM9lBfMJp71eOldLF3KmqkxRxwRzZN20x4vqdGr1BMS4Q/640?wx_fmt=jpeg\" data-type=\"jpeg\" data-w=\"1026\" class=\"rich_pages js_insertlocalimg\" height=\"auto\" style=\"height:auto\"/></div><p></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"line-height:1.75\">经过此次大赛，杨新宇同学说：参加此次大赛的包含全国各高校的优秀学生，其中大部分都是研究生，真的是“山外青山楼外楼，强中更有强中手”，永远不要局限在自己的小圈子里面，不要骄傲自满，要不断奋进、努力学习。</span></p>', 7, 1, 0, '2020-06-15 00:00:00', NULL);
INSERT INTO `article` VALUES (227, '201810804093', 'WEB应用专业团队2019-2020-2学期第七次学术报告会', 5, 13, 'WEB应用专业团队于2020年6月14日20:00在企业微信上开展了以“List集合的常用方法”和“JDBC的使用”为主题的团队学术报告会。本次团队活动由指导老师兰全祥主持，2019级黄铖和2019级陈江涛主讲，专业团队全体成员参加交流会。', '报告会', 'http://img.pzhuweb.cn/2018108040931595558462422.jpg', '{\"blocks\":[{\"key\":\"94uos\",\"text\":\"WEB应用专业团队于2020年6月14日20:00在企业微信上开展了以“List集合的常用方法”和“JDBC的使用”为主题的团队学术报告会。本次团队活动由指导老师兰全祥主持，2019级黄铖和2019级陈江涛主讲，专业团队全体成员参加交流会。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":120,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":92,\"length\":2,\"style\":\"FONTSIZE-10.5pt\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"2hqb1\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"fkink\",\"text\":\"首先由黄铖介绍了List集合，主要讲解了List集合的增删改查等基本方法和三种迭代方式以及泛型的使用。然后，由陈江涛介绍了JDBC，主要介绍了JDBC的功能和使用步骤。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":84,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"42jmm\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bnf7e\",\"text\":\"活动最后，由兰全祥老师为下周的报告会做安排，提醒大家在家里也要自主学习。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":36,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/1595559492136.jpg\",\"name\":\"123.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":279,\"title\":\"1595559492136.jpg\",\"alt\":\"1595559492136.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年6月14日20:00在企业微信上开展了以“List集合的常用方法”和“JDBC的使用”为主题的团队学术报告会。本次团队活动由指导老师兰全祥主持，2019级<span style=\"font-size:10.5ptpx\">黄铖</span>和2019级陈江涛主讲，专业团队全体成员参加交流会。</span></p><div class=\"media-wrap image-wrap\"><img id=\"279\" title=\"1595559492136.jpg\" alt=\"1595559492136.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/1595559492136.jpg\"/></div><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">首先由黄铖介绍了List集合，主要讲解了List集合的增删改查等基本方法和三种迭代方式以及泛型的使用。然后，由陈江涛介绍了JDBC，主要介绍了JDBC的功能和使用步骤。</span></p><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">活动最后，由兰全祥老师为下周的报告会做安排，提醒大家在家里也要自主学习。</span></p>', 11, 1, 0, '2020-06-15 00:00:00', NULL);
INSERT INTO `article` VALUES (228, '201810804093', 'WEB应用专业团队2019-2020-2学期第八次学术报告会', 5, 13, 'WEB应用专业团队于2020年6月21日20:00在企业微信上开展了以“差错检验和校正”为主题的团队学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员王立涛主讲。首先由王立涛介绍了用于保证数据传输的准确性和有效性的差错检验和校正，', '报告会', 'http://img.pzhuweb.cn/1595559704520.jpg', '{\"blocks\":[{\"key\":\"nsa9\",\"text\":\"WEB应用专业团队于2020年6月21日20:00在企业微信上开展了以“差错检验和校正”为主题的团队学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员王立涛主讲。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":86,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"6ff5\",\"text\":\"首先由王立涛介绍了用于保证数据传输的准确性和有效性的差错检验和校正，讲述了循环冗余码（CRC）和奇偶校验码两种方式，在此过程中杨新宇同学为其指出了纰漏并纠正了错误。分享过程结束后，指导老师兰全祥总结指出报告会能够基本讲清楚差错检验和校正，能够了解CRC的基本原理，但报告会不要太过于概念化、理论化，应该多结合实际运用示例，让内容更具体。其次，合理安排报告内容及顺序有利于听众理解和掌握，一般应该按照由简到难的顺序安排。最后，学术报告会中讲知识只是一方面，最重要的是分享遇到问题时思考的过程，应加入自身理解，针对难点、重点问题进行交流和讨论。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":270,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"2jfio\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1h4j0\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"7cm3l\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c54ms\",\"text\":\" 活动最后，由兰全祥老师为下周的报告会做安排，询问了大三的同学找实习岗位的情况，关心了杨新宇同学和徐岸同学的论文进度，并和大家一起商讨往后的团队管理方式和常规工作的梳理。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":85,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/1595559792152.jpg\",\"name\":\"641.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":280,\"title\":\"1595559792152.jpg\",\"alt\":\"1595559792152.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年6月21日20:00在企业微信上开展了以“差错检验和校正”为主题的团队学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员王立涛主讲。</span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">首先由王立涛介绍了用于保证数据传输的准确性和有效性的差错检验和校正，讲述了循环冗余码（CRC）和奇偶校验码两种方式，在此过程中杨新宇同学为其指出了纰漏并纠正了错误。分享过程结束后，指导老师兰全祥总结指出报告会能够基本讲清楚差错检验和校正，能够了解CRC的基本原理，但报告会不要太过于概念化、理论化，应该多结合实际运用示例，让内容更具体。其次，合理安排报告内容及顺序有利于听众理解和掌握，一般应该按照由简到难的顺序安排。最后，学术报告会中讲知识只是一方面，最重要的是分享遇到问题时思考的过程，应加入自身理解，针对难点、重点问题进行交流和讨论。</span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"280\" title=\"1595559792152.jpg\" alt=\"1595559792152.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/1595559792152.jpg\"/></div><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\"> 活动最后，由兰全祥老师为下周的报告会做安排，询问了大三的同学找实习岗位的情况，关心了杨新宇同学和徐岸同学的论文进度，并和大家一起商讨往后的团队管理方式和常规工作的梳理。</span></p>', 4, 1, 0, '2020-06-22 00:00:00', NULL);
INSERT INTO `article` VALUES (229, '201810804093', 'WEB应用专业团队2019-2020-2学期第九次学术报告会', 5, 13, 'WEB应用专业团队于2020年6月27日20:00在企业微信上开展了主题为“Java I/O机制”和“计算机网络基础”为主题的团队学术报告会。本次团队活动由指导老师兰全祥主持，特邀2015级软件工程任云宏参加，2019级网络工程罗丹和201', '报告会', 'http://img.pzhuweb.cn/1595560061626.jpg', '{\"blocks\":[{\"key\":\"8ustt\",\"text\":\"WEB应用专业团队于2020年6月27日20:00在企业微信上开展了主题为“Java I/O机制”和“计算机网络基础”为主题的团队学术报告会。本次团队活动由指导老师兰全祥主持，特邀2015级软件工程任云宏参加，2019级网络工程罗丹和2019级网络工程许佳主讲，专业团队全体成员参加交流会。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":145,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"4ct29\",\"text\":\"首先由罗丹介绍了Java IO的基本概念，主要讲解了Java的字符流和字节流相关类库。然后，由许佳介绍了计算机网络中的网络模型，主要讲解了虚电路和数据包服务的区别，IP地址分类以及基本的网络通信知识。在讲解过程中指导教师兰全祥指出学术报告会不能是简单的知识收集和“照本宣科”，需要结合实际问题或个人理解进行讲解和汇报。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":159,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"6ct88\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"br5ho\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"63obp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"95v57\",\"text\":\"然后，指导教师兰全祥安排了下周报告会的主讲人和交流内容，并对报告会提出了新的要求，要认真对待、深入研究、加强交流。会议最后，兰全祥老师了解了团队的学期情况，希望所有成员在疫情期间不要懈怠、不要放松，特别是大一年级，一定要要开一个好头才能更高地后期学习打下坚实基础。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":132,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"d6re4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d7plo\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"fue0c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"am0lo\",\"text\":\"最后，任云宏同学讲了一下自身对团队的认知以及对学习路线的规划，给大三年级的同学讲解了一些面试技巧和面试经验，并指出团队的学习氛围很重要。最后，任云宏同学提醒到面对当前越来越严峻的就业形势，各位同学应该尽快掌握基础，然后尽快进入实践应用，并在实践应用中巩固基础，加强自身竞争力。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":138,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/1595560121024.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":281,\"title\":\"1595560121024.jpg\",\"alt\":\"1595560121024.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/1595560142505.jpg\",\"name\":\"3.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":282,\"title\":\"1595560142505.jpg\",\"alt\":\"1595560142505.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年6月27日20:00在企业微信上开展了主题为“Java I/O机制”和“计算机网络基础”为主题的团队学术报告会。本次团队活动由指导老师兰全祥主持，特邀2015级软件工程任云宏参加，2019级网络工程罗丹和2019级网络工程许佳主讲，专业团队全体成员参加交流会。</span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">首先由罗丹介绍了Java IO的基本概念，主要讲解了Java的字符流和字节流相关类库。然后，由许佳介绍了计算机网络中的网络模型，主要讲解了虚电路和数据包服务的区别，IP地址分类以及基本的网络通信知识。在讲解过程中指导教师兰全祥指出学术报告会不能是简单的知识收集和“照本宣科”，需要结合实际问题或个人理解进行讲解和汇报。</span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"281\" title=\"1595560121024.jpg\" alt=\"1595560121024.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/1595560121024.jpg\"/></div><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">然后，指导教师兰全祥安排了下周报告会的主讲人和交流内容，并对报告会提出了新的要求，要认真对待、深入研究、加强交流。会议最后，兰全祥老师了解了团队的学期情况，希望所有成员在疫情期间不要懈怠、不要放松，特别是大一年级，一定要要开一个好头才能更高地后期学习打下坚实基础。</span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"282\" title=\"1595560142505.jpg\" alt=\"1595560142505.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/1595560142505.jpg\"/></div><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">最后，任云宏同学讲了一下自身对团队的认知以及对学习路线的规划，给大三年级的同学讲解了一些面试技巧和面试经验，并指出团队的学习氛围很重要。最后，任云宏同学提醒到面对当前越来越严峻的就业形势，各位同学应该尽快掌握基础，然后尽快进入实践应用，并在实践应用中巩固基础，加强自身竞争力。</span></p>', 7, 1, 0, '2020-06-28 00:00:00', NULL);
INSERT INTO `article` VALUES (230, '201810804093', 'WEB应用专业团队运行和改革专题讨论会', 5, 13, 'WEB应用专业团队于2020年7月1日21:30在企业微信上开展了团队运行和改革专题讨论会。本次团队活动由指导老师兰全祥主持，2017级、2018级成员参与，特邀2016级任云宏、罗文参加。会议开始，首先指导老师兰全祥对2019年的大创项目', '讨论会', 'http://img.pzhuweb.cn/1595563497680.png', '{\"blocks\":[{\"key\":\"c8pg2\",\"text\":\"WEB应用专业团队于2020年7月1日21:30在企业微信上开展了团队运行和改革专题讨论会。本次团队活动由指导老师兰全祥主持，2017级、2018级成员参与，特邀2016级任云宏、罗文参加。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":95,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"43ngt\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e09k0\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"b7959\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4qkag\",\"text\":\"会议开始，首先指导老师兰全祥对2019年的大创项目结题事项进行安排。然后是2020年的大创项目成员及其工作安排，要求2018级的要积极主动的参与其中。紧接着指导老师兰全祥提出了团队在目前的运行模式下出现的问题，针对如何避免和解决这些问题展开了运行方案改革的讨论。2016级成员任云宏提出可以按照项目制进行推进。通过大家对方案可行性以及执行环节和步骤的大致讨论初步确定项目制的方案。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":190,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"b9sbm\",\"text\":\"本次会议完成了大创项目的结题安排并初步确认了项目制的运行方案。指导老师兰全祥表示团队改革势在必行，从下学期、从2018级开始改革。具体细节安排在下一次总结会中进行安排。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":84,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":40,\"length\":44,\"style\":\"FONTSIZE-10.5pt\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/1595563510772.png\",\"name\":\"111.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":283,\"title\":\"1595563510772.png\",\"alt\":\"1595563510772.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年7月1日21:30在企业微信上开展了团队运行和改革专题讨论会。本次团队活动由指导老师兰全祥主持，2017级、2018级成员参与，特邀2016级任云宏、罗文参加。</span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"283\" title=\"1595563510772.png\" alt=\"1595563510772.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/1595563510772.png\"/></div><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">会议开始，首先指导老师兰全祥对2019年的大创项目结题事项进行安排。然后是2020年的大创项目成员及其工作安排，要求2018级的要积极主动的参与其中。紧接着指导老师兰全祥提出了团队在目前的运行模式下出现的问题，针对如何避免和解决这些问题展开了运行方案改革的讨论。2016级成员任云宏提出可以按照项目制进行推进。通过大家对方案可行性以及执行环节和步骤的大致讨论初步确定项目制的方案。</span></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">本次会议完成了大创项目的结题安排并初步确认了项目制的运行方案。指导老师兰全祥表示<span style=\"font-size:10.5ptpx\">团队改革势在必行，从下学期、从2018级开始改革。具体细节安排在下一次总结会中进行安排。</span></span></p>', 9, 1, 0, '2020-07-02 00:00:00', NULL);
INSERT INTO `article` VALUES (231, '201810804093', 'WEB应用专业团队2019-2020-2学期总结会', 5, 13, 'WEB应用专业团队于2020年7月4日20:00在企业微信上开展了关于本学期各项工作的学期总结会。本次团队活动由指导老师兰全祥主持，2017级、2018级和2019级的全体成员参与，特邀指导老师张俊，2015级刘星、陈波，2016级任云宏、', '总结会', 'http://img.pzhuweb.cn/1595563756974.jpg', '{\"blocks\":[{\"key\":\"anmb9\",\"text\":\"WEB应用专业团队于2020年7月4日20:00在企业微信上开展了关于本学期各项工作的学期总结会。本次团队活动由指导老师兰全祥主持，2017级、2018级和2019级的全体成员参与，特邀指导老师张俊，2015级刘星、陈波，2016级任云宏、罗文参加。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":125,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"65a4a\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ernu\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"6j928\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9fugj\",\"text\":\"会议开始，指导老师兰全祥先将本次学期总结会的大致内容分为工作总结、团队运行方式调整和项目人员确定三个部分。首先队长苟雨晴对本学期工作进行总结，指导老师兰全祥分别对每个年级的情况进行补充，并点出工作中存在的不足。然后对17级将要出去实习的每一个成员单独提出一些建议。然后指导老师张俊进行补充，提到了团队这段时间的运行中出现的问题。\\n       2015级成员刘星根据团队成员之间的交流问题，分享了自己那一届的相处方式。谈了谈自己的成长历程，告诉大家要敢于去做，敢于去尝试，因为面对困难感到难受的时候要跳出自己的舒适圈才能更好的成长。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":266,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"6ea84\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"5o0nu\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"8aik8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1tskk\",\"text\":\"2015级成员陈波提醒大家有时候学的知识看似很多但其实基础不够牢固，这些问题在以后会暴露出来成为拖累。要以合适的态度去学习，不要对目前的情况太过自满。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":75,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"4ks1i\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"52qhf\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"ac49a\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1uh07\",\"text\":\"然后指导老师兰全祥提出了团队在运行过程中渐渐暴露的一些问题，因此我们需要调整团队的运行方式来解决改善这些问题。随后也正式确立了之前经过各成员商讨一致同意的项目制新方案。会议最后，确认了各项目的成员分组。本次学期总结会圆满结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":113,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/1595563788265.jpg\",\"name\":\"指导老师.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":284,\"title\":\"1595563788265.jpg\",\"alt\":\"1595563788265.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/1595563876888.jpg\",\"name\":\"刘星.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":285,\"title\":\"1595563876888.jpg\",\"alt\":\"1595563876888.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/1595563892890.jpg\",\"name\":\"陈波.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":286,\"title\":\"1595563892890.jpg\",\"alt\":\"1595563892890.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年7月4日20:00在企业微信上开展了关于本学期各项工作的学期总结会。本次团队活动由指导老师兰全祥主持，2017级、2018级和2019级的全体成员参与，特邀指导老师张俊，2015级刘星、陈波，2016级任云宏、罗文参加。</span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"284\" title=\"1595563788265.jpg\" alt=\"1595563788265.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/1595563788265.jpg\"/></div><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">会议开始，指导老师兰全祥先将本次学期总结会的大致内容分为工作总结、团队运行方式调整和项目人员确定三个部分。首先队长苟雨晴对本学期工作进行总结，指导老师兰全祥分别对每个年级的情况进行补充，并点出工作中存在的不足。然后对17级将要出去实习的每一个成员单独提出一些建议。然后指导老师张俊进行补充，提到了团队这段时间的运行中出现的问题。<br/>       2015级成员刘星根据团队成员之间的交流问题，分享了自己那一届的相处方式。谈了谈自己的成长历程，告诉大家要敢于去做，敢于去尝试，因为面对困难感到难受的时候要跳出自己的舒适圈才能更好的成长。</span></p><p style=\"text-indent:2em;\"></p><div class=\"media-wrap image-wrap\"><img id=\"285\" title=\"1595563876888.jpg\" alt=\"1595563876888.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/1595563876888.jpg\"/></div><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">2015级成员陈波提醒大家有时候学的知识看似很多但其实基础不够牢固，这些问题在以后会暴露出来成为拖累。要以合适的态度去学习，不要对目前的情况太过自满。</span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"286\" title=\"1595563892890.jpg\" alt=\"1595563892890.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/1595563892890.jpg\"/></div><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">然后指导老师兰全祥提出了团队在运行过程中渐渐暴露的一些问题，因此我们需要调整团队的运行方式来解决改善这些问题。随后也正式确立了之前经过各成员商讨一致同意的项目制新方案。会议最后，确认了各项目的成员分组。本次学期总结会圆满结束。</span></p>', 52, 1, 1, '2020-07-05 00:00:00', NULL);
INSERT INTO `article` VALUES (232, '201810804093', 'WEB应用专业团队2020-2021-1学期见面会', 5, 13, 'WEB应用专业团队于2020年9月13日20:00在分册7a-2开展了本学期的开学见面会。本次团队活动由队长吴涛主持，专业团队已到校成员参与。首先确定了大二成员开学小测试的时间为周天晚上，提醒大家开会时记得带上纸笔。提出本学期的学习报告会方', '见面会', 'http://img.pzhuweb.cn/2018108040931602205909046.jpg', '{\"blocks\":[{\"key\":\"e132j\",\"text\":\"WEB应用专业团队于2020年9月13日20:00在分册7a-2开展了本学期的开学见面会。本次团队活动由队长吴涛主持，专业团队已到校成员参与。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":71,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":71,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"f3q9b\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1ltqk\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"97gjd\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1nevm\",\"text\":\"首先确定了大二成员开学小测试的时间为周天晚上，提醒大家开会时记得带上纸笔。提出本学期的学习报告会方式为由高年级的成员挑选重点知识给低年级的讲，项目组可以穿插一些东西在报告会上分享，报告会题目由下次会议确定。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":103,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":103,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"cqrne\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3q4mg\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"cihk3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"akjs1\",\"text\":\"然后，初步确定本学期的团队会议地点为励志楼会议室，时间为每周五晚。确定本学期大二和大三成员的学习目标，并提醒大家开始填写实验室申请表。最后安排了实验室的执勤打扫方案。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":83,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":83,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602205648302.jpg\",\"type\":\"IMAGE\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602205689324.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":288,\"title\":\"2018108040931602205689324.jpg\",\"alt\":\"2018108040931602205689324.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年9月13日20:00在分册7a-2开展了本学期的开学见面会。本次团队活动由队长吴涛主持，专业团队已到校成员参与。</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108040931602205648302.jpg\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.75\">首先确定了大二成员开学小测试的时间为周天晚上，提醒大家开会时记得带上纸笔。提出本学期的学习报告会方式为由高年级的成员挑选重点知识给低年级的讲，项目组可以穿插一些东西在报告会上分享，报告会题目由下次会议确定。</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"288\" title=\"2018108040931602205689324.jpg\" alt=\"2018108040931602205689324.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931602205689324.jpg\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"></p><p style=\"text-indent:2em;\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.75\">然后，初步确定本学期的团队会议地点为励志楼会议室，时间为每周五晚。确定本学期大二和大三成员的学习目标，并提醒大家开始填写实验室申请表。最后安排了实验室的执勤打扫方案。</span></span></p>', 6, 1, 0, '2020-09-14 00:00:00', NULL);
INSERT INTO `article` VALUES (233, '201810804093', 'WEB应用专业团队2020-2021-1学期第一次全体会议', 5, 13, 'WEB应用专业团队于2020年9月20日17：00在分册7a-2开展了本学期的第一次全体会议。本次团队活动由指导老师兰全祥主持，专业团队全体成员参与。首先对大二成员进行了开学测试，检测上学期在家线上学习的知识掌握情况。在测试结束后开始对本学', '全体会议', 'http://img.pzhuweb.cn/2018108040931602206321354.jpg', '{\"blocks\":[{\"key\":\"fd45a\",\"text\":\"WEB应用专业团队于2020年9月20日17：00在分册7a-2开展了本学期的第一次全体会议。本次团队活动由指导老师兰全祥主持，专业团队全体成员参与。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":75,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":75,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":75,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":75,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":75,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"6kpp7\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"f9dpp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"702jq\",\"text\":\"首先对大二成员进行了开学测试，检测上学期在家线上学习的知识掌握情况。在测试结束后开始对本学期的实验室考勤打卡时间进行讨论，最终敲定每周累计不低于十二小时，单次未满四十五分钟视为无效打卡。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":93,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":93,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":93,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":93,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":93,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"7s1b0\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"3jm0j\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ealb\",\"text\":\"然后指导老师兰全祥带领各项目组进行项目目标确定，并向大二成员介绍每个项目大致方向，让其自己根据自己的学习方向选择加入相应项目组。接着确定了报告会的选题，并提出本学期的每个报告会需要准备好与该次报告会内容相关的测试题。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":108,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":108,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":108,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":108,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"4e6bv\",\"text\":\"会议的最后，团队商讨决定本学期的招新工作将通过群内招新宣传和参与学习报告会自我淘汰制模式展开。\\n \\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":47,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":47,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":47,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":47,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602206212016.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":289,\"title\":\"2018108040931602206212016.jpg\",\"alt\":\"2018108040931602206212016.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602206234486.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":290,\"title\":\"2018108040931602206234486.jpg\",\"alt\":\"2018108040931602206234486.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年9月20日17：00在分册7a-2开展了本学期的第一次全体会议。本次团队活动由指导老师兰全祥主持，专业团队全体成员参与。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"289\" title=\"2018108040931602206212016.jpg\" alt=\"2018108040931602206212016.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931602206212016.jpg\"/></div><p></p><p style=\"text-indent:2em;\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">首先对大二成员进行了开学测试，检测上学期在家线上学习的知识掌握情况。在测试结束后开始对本学期的实验室考勤打卡时间进行讨论，最终敲定每周累计不低于十二小时，单次未满四十五分钟视为无效打卡。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"290\" title=\"2018108040931602206234486.jpg\" alt=\"2018108040931602206234486.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931602206234486.jpg\"/></div><p></p><p style=\"text-indent:2em;\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"line-height:1.75\">然后指导老师兰全祥带领各项目组进行项目目标确定，并向大二成员介绍每个项目大致方向，让其自己根据自己的学习方向选择加入相应项目组。接着确定了报告会的选题，并提出本学期的每个报告会需要准备好与该次报告会内容相关的测试题。</span></span></span></span></p><p style=\"text-indent:2em;\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"line-height:1.75\">会议的最后，团队商讨决定本学期的招新工作将通过群内招新宣传和参与学习报告会自我淘汰制模式展开。</span></span></span></span><br/> <br/> </p>', 7, 1, 0, '2020-09-21 00:00:00', NULL);
INSERT INTO `article` VALUES (234, '201810804093', 'WEB应用专业团队2020-2021-1学期第一次学术报告会', 5, 13, 'WEB应用专业团队于2020年9月27日19：30在励志楼四楼数计学院会议室开展了本学期的第一次学术报告会暨2020级新生见面会。本次团队活动由指导老师兰全祥主持，2019级成员胡森宇主讲，本次会议的主题为分支语句​，团队全体成员参加会议，', '报告会', 'http://img.pzhuweb.cn/2018108040931602206864995.jpg', '{\"blocks\":[{\"key\":\"39j3p\",\"text\":\"WEB应用专业团队于2020年9月27日19：30在励志楼四楼数计学院会议室开展了本学期的第一次学术报告会暨2020级新生见面会。本次团队活动由指导老师兰全祥主持，2019级成员胡森宇主讲，本次会议的主题为分支语句​，团队全体成员参加会议，2020级新生分组在线上线下参与会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":139,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":139,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":139,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":139,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":139,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3klm4\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"6p08d\",\"text\":\"图1 专业团队成员在会议室参加报告会\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":18,\"style\":\"FONTSIZE-14\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"align\":\"center\"},\"textAlign\":\"center\"}},{\"key\":\"3n5h1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5187q\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"4hr28\",\"text\":\"图2 部分新生在腾讯课堂参加报告会\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":17,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":17,\"style\":\"FONTSIZE-14\"}],\"entityRanges\":[],\"data\":{\"textAlign\":\"center\"}},{\"key\":\"8k4st\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7ej9j\",\"text\":\"会议开始，先由本届团队队长吴涛向新生们分享了自身的学习经验，然后指导老师兰全祥介绍了团队的形式、组成以及运行模式。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":57,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":57,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":57,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":57,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":57,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"61rlb\",\"text\":\"考虑到让新生能听懂能有所收获，本次会议的主题为分支语句。主讲人胡森宇首先解答了新生在招新群里提出遇到的环境安装、项目创建、常量变量等问题。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":69,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":69,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":69,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":69,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":69,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"80tqm\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"fiev0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6okfm\",\"text\":\" 然后，胡森宇同学讲解了什么是分支语句，分支语句的语法以及if-else和switch的使用以及转换规则。并提出由于if-else的大量嵌套会使得程序的后期维护性能变低，面对这样的情况我们需要用到阿里开发规范中提出的卫语句，并讲述了卫语句的使用。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":123,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":122,\"style\":\"FONTSIZE-13pt\"},{\"offset\":1,\"length\":122,\"style\":\"COLOR-333333\"},{\"offset\":1,\"length\":122,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":1,\"length\":122,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"fodeu\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{}},{\"key\":\"boa7o\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3rqsl\",\"text\":\" 最后，指导老师兰全祥让大三成员对此次报告会进行评价。指导老师兰全祥进行总结到：虽然提前准备了很多内容和资料，但是所有的工作都需要抓住重点，报告会讲解的知识体系结构要清晰，更多的图文结合能让别人理解的更清晰，多找找生活中能套用的实际案例可以让知识回归于实际生活。希望大家能再接再厉，通过此次的会议能够有所收获，在各方面提升自我能力。​\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":167,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":166,\"style\":\"FONTSIZE-13pt\"},{\"offset\":1,\"length\":166,\"style\":\"COLOR-333333\"},{\"offset\":1,\"length\":166,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":1,\"length\":166,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"efkhf\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":4}],\"data\":{}},{\"key\":\"6p37l\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602206549837.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":291,\"title\":\"2018108040931602206549837.jpg\",\"alt\":\"2018108040931602206549837.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602206573050.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":292,\"title\":\"2018108040931602206573050.jpg\",\"alt\":\"2018108040931602206573050.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602206601529.jpg\",\"name\":\"3.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":293,\"title\":\"2018108040931602206601529.jpg\",\"alt\":\"2018108040931602206601529.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602206625159.jpg\",\"name\":\"4.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":294,\"title\":\"2018108040931602206625159.jpg\",\"alt\":\"2018108040931602206625159.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"4\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602206637059.jpg\",\"name\":\"5.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":295,\"title\":\"2018108040931602206637059.jpg\",\"alt\":\"2018108040931602206637059.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年9月27日19：30在励志楼四楼数计学院会议室开展了本学期的第一次学术报告会暨2020级新生见面会。本次团队活动由指导老师兰全祥主持，2019级成员胡森宇主讲，本次会议的主题为分支语句​，团队全体成员参加会议，2020级新生分组在线上线下参与会议。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"291\" title=\"2018108040931602206549837.jpg\" alt=\"2018108040931602206549837.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931602206549837.jpg\"/></div><p style=\"text-align:center;\" align=\"center\"><span style=\"color:#333333\"><span style=\"font-size:14px\">图1 专业团队成员在会议室参加报告会</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"292\" title=\"2018108040931602206573050.jpg\" alt=\"2018108040931602206573050.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931602206573050.jpg\"/></div><p style=\"text-align:center;\"><span style=\"color:#333333\"><span style=\"font-size:14px\">图2 部分新生在腾讯课堂参加报告会</span></span></p><p></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">会议开始，先由本届团队队长吴涛向新生们分享了自身的学习经验，然后指导老师兰全祥介绍了团队的形式、组成以及运行模式。</span></span></span></span></span></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">考虑到让新生能听懂能有所收获，本次会议的主题为分支语句。主讲人胡森宇首先解答了新生在招新群里提出遇到的环境安装、项目创建、常量变量等问题。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"293\" title=\"2018108040931602206601529.jpg\" alt=\"2018108040931602206601529.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931602206601529.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> <span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\">然后，胡森宇同学讲解了什么是分支语句，分支语句的语法以及if-else和switch的使用以及转换规则。并提出由于if-else的大量嵌套会使得程序的后期维护性能变低，面对这样的情况我们需要用到阿里开发规范中提出的卫语句，并讲述了卫语句的使用。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"294\" title=\"2018108040931602206625159.jpg\" alt=\"2018108040931602206625159.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931602206625159.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> <span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\">最后，指导老师兰全祥让大三成员对此次报告会进行评价。指导老师兰全祥进行总结到：虽然提前准备了很多内容和资料，但是所有的工作都需要抓住重点，报告会讲解的知识体系结构要清晰，更多的图文结合能让别人理解的更清晰，多找找生活中能套用的实际案例可以让知识回归于实际生活。希望大家能再接再厉，通过此次的会议能够有所收获，在各方面提升自我能力。​</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"295\" title=\"2018108040931602206637059.jpg\" alt=\"2018108040931602206637059.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931602206637059.jpg\"/></div><p></p>', 7, 1, 0, '2020-09-28 00:00:00', NULL);
INSERT INTO `article` VALUES (235, '201810804093', 'WEB应用专业团队2020-2021-1学期第二次学术报告会', 5, 13, 'WEB应用专业团队于2020年10月3日19：30在励志楼四楼数计学院会议室开展了本学期的第二次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员许佳主讲，本次会议的主题为循环语句​，团队全体成员参加会议，2020级新生分组在线上', '报告会', 'http://img.pzhuweb.cn/2018108040931602207108840.jpg', '{\"blocks\":[{\"key\":\"daqeg\",\"text\":\"WEB应用专业团队于2020年10月3日19：30在励志楼四楼数计学院会议室开展了本学期的第二次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员许佳主讲，本次会议的主题为循环语句​，团队全体成员参加会议，2020级新生分组在线上线下参与会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":127,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":127,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":127,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":127,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":127,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"6on5h\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"e27u0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e7bkj\",\"text\":\"首先，队长吴涛对本周的团队成员学习情况进行总结公布，提醒打卡时间未达标的成员。接着指导老师兰全祥说明了大一听报告会的意义和新成员的考核筛选方式。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":72,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":72,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":72,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":72,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":72,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"77s7\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"aog7d\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ap0ho\",\"text\":\"然后，主讲人许佳通过举例引入了为什么要使用循环语句，讲述了while循环、do while循环和for循环的一般形式结构，并通过大三成员和指导老师的提问和补充进行完善，需要注意运行步骤、循环的四大结构等问题。期间还引入了num++和++num以及局部变量全局变量等知识点。最终对while语句、do while语句和for语句，进行分析，从结构到用法进行了全面对比。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":183,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":183,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":183,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":183,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":183,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"bqfg6\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"9rtnn\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a7jv\",\"text\":\" 最后，大三成员对此次报告会进行评价，指导老师兰全祥总结到：内容准备充足，但讲的比较书面，没能转化为自己的东西。需要理清楚自己讲的体系结构，避免混乱。结束前指导老师兰全祥对大一新生的学习进度进行了解，告诫新生不论是学校还是团队都是给你提供环境，最终的成果还是得靠自己。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":134,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":133,\"style\":\"FONTSIZE-13pt\"},{\"offset\":1,\"length\":133,\"style\":\"COLOR-333333\"},{\"offset\":1,\"length\":133,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":1,\"length\":133,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602207058947.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":296,\"title\":\"2018108040931602207058947.jpg\",\"alt\":\"2018108040931602207058947.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602207073500.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":297,\"title\":\"2018108040931602207073500.jpg\",\"alt\":\"2018108040931602207073500.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931602207087311.jpg\",\"name\":\"3.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":298,\"title\":\"2018108040931602207087311.jpg\",\"alt\":\"2018108040931602207087311.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年10月3日19：30在励志楼四楼数计学院会议室开展了本学期的第二次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员许佳主讲，本次会议的主题为循环语句​，团队全体成员参加会议，2020级新生分组在线上线下参与会议。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"296\" title=\"2018108040931602207058947.jpg\" alt=\"2018108040931602207058947.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931602207058947.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">首先，队长吴涛对本周的团队成员学习情况进行总结公布，提醒打卡时间未达标的成员。接着指导老师兰全祥说明了大一听报告会的意义和新成员的考核筛选方式。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"297\" title=\"2018108040931602207073500.jpg\" alt=\"2018108040931602207073500.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931602207073500.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">然后，主讲人许佳通过举例引入了为什么要使用循环语句，讲述了while循环、do while循环和for循环的一般形式结构，并通过大三成员和指导老师的提问和补充进行完善，需要注意运行步骤、循环的四大结构等问题。期间还引入了num++和++num以及局部变量全局变量等知识点。最终对while语句、do while语句和for语句，进行分析，从结构到用法进行了全面对比。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"298\" title=\"2018108040931602207087311.jpg\" alt=\"2018108040931602207087311.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931602207087311.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> <span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\">最后，大三成员对此次报告会进行评价，指导老师兰全祥总结到：内容准备充足，但讲的比较书面，没能转化为自己的东西。需要理清楚自己讲的体系结构，避免混乱。结束前指导老师兰全祥对大一新生的学习进度进行了解，告诫新生不论是学校还是团队都是给你提供环境，最终的成果还是得靠自己。</span></span></span></span></span></p>', 13, 1, 0, '2020-10-04 00:00:00', NULL);
INSERT INTO `article` VALUES (236, '201810804093', 'WEB应用专业团队2020-2021-1学期2020级新生入队测试', 5, 13, 'WEB应用专业团队于2020年10月11日9：00在二教2-2进行了2020级新生的入队测试。本次测试由团队现任队长吴涛出题并组织，指导老师兰全祥和部分2018级成员监考，2020级新生共25人参与测试，2019级成员陪同参与。本次测试旨在', '招新工作', 'http://img.pzhuweb.cn/2018108040931603355738579.jpg', '{\"blocks\":[{\"key\":\"9ijsv\",\"text\":\"WEB应用专业团队于2020年10月11日9：00在二教2-2进行了2020级新生的入队测试。本次测试由团队现任队长吴涛出题并组织，指导老师兰全祥和部分2018级成员监考，2020级新生共25人参与测试，2019级成员陪同参与。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":114,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":114,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":114,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":114,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":114,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"8m155\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"59eg1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8g8qh\",\"text\":\"本次测试旨在筛选新成员，检测新生在听了两次报告会以及经过国庆期间的自主学习后的学习成果，通过卷面成绩进行评估，择优加入​。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":61,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":61,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":61,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":61,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":59,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"7rkt2\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"3nkoh\",\"text\":\"​\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":1,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":1,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":1,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4p0bk\",\"text\":\"最终通过卷面成绩择优以及个人目标选出覃子豪、王凯琪、张凡、周子斌、任雨、霍超宇、吉克伍且​、李思卓8位新成员。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":55,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":55,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":55,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":55,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":55,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931603355650297.jpg\",\"name\":\"111.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":299,\"title\":\"2018108040931603355650297.jpg\",\"alt\":\"2018108040931603355650297.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931603355674776.jpg\",\"name\":\"222.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":300,\"title\":\"2018108040931603355674776.jpg\",\"alt\":\"2018108040931603355674776.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:justify;text-indent:2em;\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年10月11日9：00在二教2-2进行了2020级新生的入队测试。本次测试由团队现任队长吴涛出题并组织，指导老师兰全祥和部分2018级成员监考，2020级新生共25人参与测试，2019级成员陪同参与。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"299\" title=\"2018108040931603355650297.jpg\" alt=\"2018108040931603355650297.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931603355650297.jpg\"/></div><p></p><p style=\"text-align:justify;text-indent:2em;\" size=\"0\" _root=\"undefined\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">本次测试旨在筛选新成员，检测新生在听了两次报告会以及经过国庆期间的自主学习后的学习成果，通过卷面成绩进行评估，择优加入</span>​。</span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"300\" title=\"2018108040931603355674776.jpg\" alt=\"2018108040931603355674776.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931603355674776.jpg\"/></div><p><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\">​</span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">最终通过卷面成绩择优以及个人目标选出覃子豪、王凯琪、张凡、周子斌、任雨、霍超宇、吉克伍且​、李思卓8位新成员。</span></span></span></span></span></p>', 9, 1, 0, '2020-10-11 00:00:00', NULL);
INSERT INTO `article` VALUES (237, '201810804093', 'WEB应用专业团队2020-2021-1学期第三次学术报告会', 5, 13, 'WEB应用专业团队于2020年10月11日19：30在励志楼四楼数计学院会议室开展了本学期的第三次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员黄铖主讲，本次会议的主题为数组和冒泡排序​，团队全体成员参加会议。首先，队长吴涛对', '报告会', 'http://img.pzhuweb.cn/2018108040931603355962136.jpg', '{\"blocks\":[{\"key\":\"4kpss\",\"text\":\"WEB应用专业团队于2020年10月11日19：30在励志楼四楼数计学院会议室开展了本学期的第三次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员黄铖主讲，本次会议的主题为数组和冒泡排序​，团队全体成员参加会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":112,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":112,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":112,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":112,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":112,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"6hqu3\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"faahv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2rjtp\",\"text\":\"首先，队长吴涛对本周的团队成员学习情况进行总结公布，提醒打卡时间未达标的成员。接着指导老师兰全祥为大一新生讲解上午的入队测试题，给新生解释汉罗塔思想。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":75,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":75,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":75,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":75,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":75,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"fajor\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"8tsf5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1et0a\",\"text\":\"然后，主讲人黄铖给大家讲解了数组，并通过与上次报告会讲解的循环语句的知识结合引入了冒泡排序，一步一步的讲解了冒泡排序的算法思想和代码实现。分享结束后大三成员建议大一的成员听完冒泡排序后可以自己去看看其他的九个常用排序算法的思想和代码实现。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":119,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":119,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":119,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":119,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":119,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"fq9lc\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"8onln\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"btbp5\",\"text\":\"最后，大三成员对此次报告会进行评价，指导老师兰全祥总结，并提醒大一成员在通过测试加入到团队后更应该努力学习，多花时间在专业课程方面提升自我编程能力和积累算法思想。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":81,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":81,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":81,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":81,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":81,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931603355887893.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":301,\"title\":\"2018108040931603355887893.jpg\",\"alt\":\"2018108040931603355887893.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931603355909096.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":302,\"title\":\"2018108040931603355909096.jpg\",\"alt\":\"2018108040931603355909096.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931603355930375.jpg\",\"name\":\"3.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":303,\"title\":\"2018108040931603355930375.jpg\",\"alt\":\"2018108040931603355930375.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年10月11日19：30在励志楼四楼数计学院会议室开展了本学期的第三次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员黄铖主讲，本次会议的主题为数组和冒泡排序​，团队全体成员参加会议。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"301\" title=\"2018108040931603355887893.jpg\" alt=\"2018108040931603355887893.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931603355887893.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">首先，队长吴涛对本周的团队成员学习情况进行总结公布，提醒打卡时间未达标的成员。接着指导老师兰全祥为大一新生讲解上午的入队测试题，给新生解释汉罗塔思想。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"302\" title=\"2018108040931603355909096.jpg\" alt=\"2018108040931603355909096.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931603355909096.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">然后，主讲人黄铖给大家讲解了数组，并通过与上次报告会讲解的循环语句的知识结合引入了冒泡排序，一步一步的讲解了冒泡排序的算法思想和代码实现。分享结束后大三成员建议大一的成员听完冒泡排序后可以自己去看看其他的九个常用排序算法的思想和代码实现。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"303\" title=\"2018108040931603355930375.jpg\" alt=\"2018108040931603355930375.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931603355930375.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">最后，大三成员对此次报告会进行评价，指导老师兰全祥总结，并提醒大一成员在通过测试加入到团队后更应该努力学习，多花时间在专业课程方面提升自我编程能力和积累算法思想。</span></span></span></span></span></p>', 7, 1, 0, '2020-10-12 00:00:00', NULL);
INSERT INTO `article` VALUES (238, '201810804093', 'WEB应用专业团队2020-2021-1学期第四次学术报告会', 5, 13, 'WEB应用专业团队于2020年10月18日19：30在励志楼四楼数计学院会议室开展了本学期的第四次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员王乐帅主讲，本次会议的主题为函数和递归思想​，团队全体成员参加会议。首先，队长吴涛', '报告会', 'http://img.pzhuweb.cn/2018108040931603356155494.jpg', '{\"blocks\":[{\"key\":\"7efpg\",\"text\":\"WEB应用专业团队于2020年10月18日19：30在励志楼四楼数计学院会议室开展了本学期的第四次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员王乐帅主讲，本次会议的主题为函数和递归思想​，团队全体成员参加会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":113,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":113,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":113,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":113,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":113,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3ju4e\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"b203r\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cu1ju\",\"text\":\"首先，队长吴涛对本周的团队成员学习打卡情况进行总结公布。接着指导老师兰全祥对成员的学习周报进行提问，了解大家的学习情况。提醒大一成员要多去思考，不能花了时间没学到东西，效率是很重要的。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":92,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":92,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":92,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":92,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":92,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"32pa7\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"ap02v\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5euo1\",\"text\":\"然后，主讲人王乐帅给大家引入了函数的概念，是组织好的，可以重复使用的代码段，可以提高代码段的性能，是整体更具有结构性。在大家对函数有了比较清晰的理解后接着又引入了递归调用的思想，并提出了直接调用和间接调用。通过汉诺塔对递归调用进行理解分析。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":120,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":120,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":120,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":120,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":120,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"2dcih\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"33gsa\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9qrpg\",\"text\":\"最后，大三成员对此次报告会进行评价，指导老师兰全祥总结，并提醒大二成员要加快学习进度，不能因为疫情在家上网课落下太多。给大一、大二成员提出了本学期的学习目标。提醒大三成员快要找工作了，要多在项目实践的过程中查漏补缺，有想法可以考虑写成论文。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":120,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":120,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":120,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":120,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":120,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931603356075617.jpg\",\"name\":\"11.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":304,\"title\":\"2018108040931603356075617.jpg\",\"alt\":\"2018108040931603356075617.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931603356102915.jpg\",\"name\":\"22.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":305,\"title\":\"2018108040931603356102915.jpg\",\"alt\":\"2018108040931603356102915.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931603356133505.jpg\",\"name\":\"33.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":306,\"title\":\"2018108040931603356133505.jpg\",\"alt\":\"2018108040931603356133505.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年10月18日19：30在励志楼四楼数计学院会议室开展了本学期的第四次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员王乐帅主讲，本次会议的主题为函数和递归思想​，团队全体成员参加会议。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"304\" title=\"2018108040931603356075617.jpg\" alt=\"2018108040931603356075617.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931603356075617.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">首先，队长吴涛对本周的团队成员学习打卡情况进行总结公布。接着指导老师兰全祥对成员的学习周报进行提问，了解大家的学习情况。提醒大一成员要多去思考，不能花了时间没学到东西，效率是很重要的。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"305\" title=\"2018108040931603356102915.jpg\" alt=\"2018108040931603356102915.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931603356102915.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">然后，主讲人王乐帅给大家引入了函数的概念，是组织好的，可以重复使用的代码段，可以提高代码段的性能，是整体更具有结构性。在大家对函数有了比较清晰的理解后接着又引入了递归调用的思想，并提出了直接调用和间接调用。通过汉诺塔对递归调用进行理解分析。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"306\" title=\"2018108040931603356133505.jpg\" alt=\"2018108040931603356133505.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931603356133505.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">最后，大三成员对此次报告会进行评价，指导老师兰全祥总结，并提醒大二成员要加快学习进度，不能因为疫情在家上网课落下太多。给大一、大二成员提出了本学期的学习目标。提醒大三成员快要找工作了，要多在项目实践的过程中查漏补缺，有想法可以考虑写成论文。</span></span></span></span></span></p>', 21, 1, 0, '2020-10-19 00:00:00', NULL);
INSERT INTO `article` VALUES (239, '201810804093', 'WEB应用专业团队2020-2021-1学期第五次学术报告会', 5, 13, 'WEB应用专业团队于2020年10月25日19：30在励志楼四楼数计学院会议室开展了本学期的第五次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员陈江涛主讲，本次会议的主题是C和C++中的指针​，团队全体成员参加会议。首先，队长', '报告会', 'http://img.pzhuweb.cn/2018108040931605789919844.jpg', '{\"blocks\":[{\"key\":\"tc2r\",\"text\":\"WEB应用专业团队于2020年10月25日19：30在励志楼四楼数计学院会议室开展了本学期的第五次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员陈江涛主讲，本次会议的主题是C和C++中的指针​，团队全体成员参加会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":115,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":115,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":115,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":115,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":115,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"1ic4r\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"ait7k\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"50s4o\",\"text\":\"首先，队长吴涛对本周的团队成员学习打卡情况进行总结公布。接着指导老师兰全祥对成员的学习周报进行提问，了解大家的学习情况。提醒大一成员指针是c的重点也是难点，需要多多理解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":85,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":85,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":85,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":85,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":85,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"ao8pi\",\"text\":\"然后，主讲人陈江涛给大家讲解了什么是指针，指针的作用，空指针，以及字符串指针的概念。并引入了值传递和地址传递，通过两杯饮料互换杯子来进行举例讲解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":73,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":73,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":73,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":73,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":73,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"akp7d\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"ajr1d\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bmv2c\",\"text\":\" 最后，大三成员对此次报告会进行评价，指导老师兰全祥总结，并提醒大一成员马上将要迎来军训，在军训期间不纳入考勤，但有空也需要多花时间学习。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":69,\"style\":\"LINEHEIGHT-1.75\"},{\"offset\":1,\"length\":68,\"style\":\"FONTSIZE-13pt\"},{\"offset\":1,\"length\":68,\"style\":\"COLOR-333333\"},{\"offset\":1,\"length\":68,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":1,\"length\":68,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931605789986291.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":307,\"title\":\"2018108040931605789986291.jpg\",\"alt\":\"2018108040931605789986291.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931605790012424.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":308,\"title\":\"2018108040931605790012424.jpg\",\"alt\":\"2018108040931605790012424.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年10月25日19：30在励志楼四楼数计学院会议室开展了本学期的第五次学术报告会。本次团队活动由指导老师兰全祥主持，2019级成员陈江涛主讲，本次会议的主题是C和C++中的指针​，团队全体成员参加会议。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"307\" title=\"2018108040931605789986291.jpg\" alt=\"2018108040931605789986291.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931605789986291.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">首先，队长吴涛对本周的团队成员学习打卡情况进行总结公布。接着指导老师兰全祥对成员的学习周报进行提问，了解大家的学习情况。提醒大一成员指针是c的重点也是难点，需要多多理解。</span></span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">然后，主讲人陈江涛给大家讲解了什么是指针，指针的作用，空指针，以及字符串指针的概念。并引入了值传递和地址传递，通过两杯饮料互换杯子来进行举例讲解。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"308\" title=\"2018108040931605790012424.jpg\" alt=\"2018108040931605790012424.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931605790012424.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.75\"> <span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\">最后，大三成员对此次报告会进行评价，指导老师兰全祥总结，并提醒大一成员马上将要迎来军训，在军训期间不纳入考勤，但有空也需要多花时间学习。</span></span></span></span></span></p>', 15, 1, 0, '2020-10-26 00:00:00', NULL);
INSERT INTO `article` VALUES (240, '201810804093', 'WEB应用专业团队2020-2021-1学期第六次学术报告会', 5, 13, 'WEB应用专业团队于2020年11月15日19：30在励志楼四楼数计学院会议室开展了本学期的第六次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级吴涛队长主讲，本次会议讲解多态、接口和继承，团队全体成员参加会议。会议伊始，吴涛提出', '报告会', 'http://img.pzhuweb.cn/2018108040931605790142979.jpg', '{\"blocks\":[{\"key\":\"69u5v\",\"text\":\"WEB应用专业团队于2020年11月15日19：30在励志楼四楼数计学院会议室开展了本学期的第六次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级吴涛队长主讲，本次会议讲解多态、接口和继承，团队全体成员参加会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":111,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":111,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":111,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":111,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":111,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"8266v\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"2rcs0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"aob2s\",\"text\":\"会议伊始，吴涛提出共有七大设计原则，并且让大三的同学每人说出一个原则并解释，他强调设计原则的出现是为了提高系统的可维护性和可复用性，使系统尽可能的实现高内聚、低耦合，之后指导老师兰全祥又对七大设计原则的解释进行了补充说明。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":111,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":111,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":111,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":111,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":111,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"e1ij1\",\"text\":\"紧接着吴涛讲了面向对象的三大特征及其多态的表现形式，并用“计算一段代码的运行时间”为例，采用了模板设计模式、策略设计模式、代理模式等来讲解多态的使用。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":75,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":75,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":75,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":75,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":75,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"auh24\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"30iv8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f3bk0\",\"text\":\"最后，指导老师兰全祥进行总结，并督促20级成员的学习进度，安排学习任务。19级成员应该在本学期内自学web前端相关知识，并能将知识运用到实际，做出一些学习成果。然后提醒18级成员要有紧迫感，以就业为目标，夯实基础，查漏补缺。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":112,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":112,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":112,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":112,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":112,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931605790109465.jpg\",\"name\":\"IMG_20201115_193844.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":309,\"title\":\"2018108040931605790109465.jpg\",\"alt\":\"2018108040931605790109465.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931605790125497.jpg\",\"name\":\"IMG_20201115_193857.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":310,\"title\":\"2018108040931605790125497.jpg\",\"alt\":\"2018108040931605790125497.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年11月15日19：30在励志楼四楼数计学院会议室开展了本学期的第六次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级吴涛队长主讲，本次会议讲解多态、接口和继承，团队全体成员参加会议。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"309\" title=\"2018108040931605790109465.jpg\" alt=\"2018108040931605790109465.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931605790109465.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">会议伊始，吴涛提出共有七大设计原则，并且让大三的同学每人说出一个原则并解释，他强调设计原则的出现是为了提高系统的可维护性和可复用性，使系统尽可能的实现高内聚、低耦合，之后指导老师兰全祥又对七大设计原则的解释进行了补充说明。</span></span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">紧接着吴涛讲了面向对象的三大特征及其多态的表现形式，并用“计算一段代码的运行时间”为例，采用了模板设计模式、策略设计模式、代理模式等来讲解多态的使用。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"310\" title=\"2018108040931605790125497.jpg\" alt=\"2018108040931605790125497.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931605790125497.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">最后，指导老师兰全祥进行总结，并督促20级成员的学习进度，安排学习任务。19级成员应该在本学期内自学web前端相关知识，并能将知识运用到实际，做出一些学习成果。然后提醒18级成员要有紧迫感，以就业为目标，夯实基础，查漏补缺。</span></span></span></span></span></p>', 16, 1, 0, '2020-11-16 00:00:00', NULL);
INSERT INTO `article` VALUES (241, '201810804093', 'WEB应用专业团队2020-2021-1学期第七次学术报告会', 5, 13, 'WEB应用专业团队于2020年11月22日15:00在线上开展了本学期的第七次学术报告会。本次学术报告会由2018级吴涛队长主讲，本次会议讲解认识GIT及其基本使用、论文的格式，团队全体成员参加会议。会议伊始，吴涛对本周的团队成员学习打卡情', '报告会', 'http://img.pzhuweb.cn/2018108040931606117262648.jpg', '{\"blocks\":[{\"key\":\"5hgmd\",\"text\":\"WEB应用专业团队于2020年11月22日15:00在线上开展了本学期的第七次学术报告会。本次学术报告会由2018级吴涛队长主讲，本次会议讲解认识GIT及其基本使用、论文的格式，团队全体成员参加会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":100,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":100,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":100,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":100,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":100,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"8la75\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"ebkg0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1dc79\",\"text\":\"会议伊始，吴涛对本周的团队成员学习打卡情况进行总结公布，并表示希望2020级的成员能多花时间在实验室学习。紧接着介绍了Git的分布式文件管理，本地仓库、远程仓库，以及通过Git需要完成的任务：在本地编辑代码，加载本地库，然后推送到远程仓库。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":120,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":120,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":120,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":120,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":120,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"4mr2q\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"564p7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cfhdh\",\"text\":\"然后通过一篇论文模板讲解了论文格式中的作者署名、目录、摘要、关键词等规范。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":37,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":37,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":37,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":37,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":37,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"8e5q0\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"398gc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8brlv\",\"text\":\"最后，对19级和20级的成员提出两个目标：1、在git的目录下面创建自己的一个分支。2、在寒假需要完成论文的撰写。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":57,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":57,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":57,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":57,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":57,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3gok0\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931606117182183.png\",\"name\":\"1.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":311,\"title\":\"2018108040931606117182183.png\",\"alt\":\"2018108040931606117182183.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931606117195728.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":312,\"title\":\"2018108040931606117195728.jpg\",\"alt\":\"2018108040931606117195728.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931606117207009.jpg\",\"name\":\"3.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":313,\"title\":\"2018108040931606117207009.jpg\",\"alt\":\"2018108040931606117207009.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年11月22日15:00在线上开展了本学期的第七次学术报告会。本次学术报告会由2018级吴涛队长主讲，本次会议讲解认识GIT及其基本使用、论文的格式，团队全体成员参加会议。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"311\" title=\"2018108040931606117182183.png\" alt=\"2018108040931606117182183.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931606117182183.png\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">会议伊始，吴涛对本周的团队成员学习打卡情况进行总结公布，并表示希望2020级的成员能多花时间在实验室学习。紧接着介绍了Git的分布式文件管理，本地仓库、远程仓库，以及通过Git需要完成的任务：在本地编辑代码，加载本地库，然后推送到远程仓库。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"312\" title=\"2018108040931606117195728.jpg\" alt=\"2018108040931606117195728.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931606117195728.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">然后通过一篇论文模板讲解了论文格式中的作者署名、目录、摘要、关键词等规范。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"313\" title=\"2018108040931606117207009.jpg\" alt=\"2018108040931606117207009.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931606117207009.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">最后，对19级和20级的成员提出两个目标：1、在git的目录下面创建自己的一个分支。2、在寒假需要完成论文的撰写。</span></span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"> </p>', 18, 1, 0, '2020-11-23 00:00:00', NULL);
INSERT INTO `article` VALUES (242, '201810804093', 'WEB应用专业团队2020-2021-1学期第八次学术报告会——新闻及论文写作规范', 5, 13, '攀枝花学院WEB应用专业团队于2020年11月29日19：30在砺志楼四楼数学与计算机学院会议室进行了本学期的第八次学术报告会。本次学术报告会由指导老师兰全祥主持， 2018级团队成员彭治皓主讲，会议讲述了新闻消息以及论文的写作，团队全体成', '报告会', 'http://img.pzhuweb.cn/2018108040931606828913566.jpg', '{\"blocks\":[{\"key\":\"d5did\",\"text\":\"攀枝花学院WEB应用专业团队于2020年11月29日19：30在砺志楼四楼数学与计算机学院会议室进行了本学期的第八次学术报告会。本次学术报告会由指导老师兰全祥主持， 2018级团队成员彭治皓主讲，会议讲述了新闻消息以及论文的写作，团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":128,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":128,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":128,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":128,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":128,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"7u6lt\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"1khr7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1gq29\",\"text\":\"会议开始，兰老师对团队成员的本周学习情况及任务完成情况进行了总结和点评，他指出学习需要认真对待，提高学习效率，不要事倍功半。其后，由彭治皓给大家讲解了新闻稿的格式要求并教大家如何撰写新闻稿，黎婷对讲解内容进行了补充。期间兰全祥老师强调新闻稿的学习是为了增强“写”的能力，提升综合素质。随后兰全祥老师对团队成员上传的reference进行了逐一点评，强调了论文参考文献的格式，并对任务中的其他问题进行讲解与纠正，同时也提醒团队成员要善用Git。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":221,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":221,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":221,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":221,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":221,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"2quqh\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"656kf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"lsu8\",\"text\":\"最后，团队中高年级与低年级成员进行了结对，希望能够通过“梯队帮扶”模式让大一新加入团队的成员能够快速融入团队，适应团队学习。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":62,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":62,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":62,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":62,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":62,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"fmjmn\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"c3u1l\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fb2sc\",\"text\":\"本次会议的召开，让大家进一步了解到了新闻、论文的写作要求及规范。在团队中开展结对帮扶，增强了团队的凝聚力，进一步推动了团队的良性持续发展。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":69,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":69,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":69,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":69,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":69,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"9vk0g\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931606828927689.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":314,\"title\":\"2018108040931606828927689.jpg\",\"alt\":\"2018108040931606828927689.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931606828941216.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":315,\"title\":\"2018108040931606828941216.jpg\",\"alt\":\"2018108040931606828941216.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931606828961632.jpg\",\"name\":\"3.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":316,\"title\":\"2018108040931606828961632.jpg\",\"alt\":\"2018108040931606828961632.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">攀枝花学院WEB应用专业团队于2020年11月29日19：30在砺志楼四楼数学与计算机学院会议室进行了本学期的第八次学术报告会。本次学术报告会由指导老师兰全祥主持， 2018级团队成员彭治皓主讲，会议讲述了新闻消息以及论文的写作，团队全体成员参加本次会议。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"314\" title=\"2018108040931606828927689.jpg\" alt=\"2018108040931606828927689.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931606828927689.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">会议开始，兰老师对团队成员的本周学习情况及任务完成情况进行了总结和点评，他指出学习需要认真对待，提高学习效率，不要事倍功半。其后，由彭治皓给大家讲解了新闻稿的格式要求并教大家如何撰写新闻稿，黎婷对讲解内容进行了补充。期间兰全祥老师强调新闻稿的学习是为了增强“写”的能力，提升综合素质。随后兰全祥老师对团队成员上传的reference进行了逐一点评，强调了论文参考文献的格式，并对任务中的其他问题进行讲解与纠正，同时也提醒团队成员要善用Git。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"315\" title=\"2018108040931606828941216.jpg\" alt=\"2018108040931606828941216.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931606828941216.jpg\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">最后，团队中高年级与低年级成员进行了结对，希望能够通过“梯队帮扶”模式让大一新加入团队的成员能够快速融入团队，适应团队学习。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"316\" title=\"2018108040931606828961632.jpg\" alt=\"2018108040931606828961632.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931606828961632.jpg\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">本次会议的召开，让大家进一步了解到了新闻、论文的写作要求及规范。在团队中开展结对帮扶，增强了团队的凝聚力，进一步推动了团队的良性持续发展。</span></span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"></p>', 14, 1, 0, '2020-11-30 00:00:00', NULL);
INSERT INTO `article` VALUES (243, '201810804093', 'WEB应用专业团队2020-2021-1学期第九次学术报告会——代理模式', 5, 13, 'WEB应用专业团队于2020年12月13日19：30在励志楼四楼数计学院会议室开展了本学期的第九次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级成员林荣杭主讲，本次会议讲解设计模式之一的代理模式。会议伊始，由队长吴涛进行点到，之', '报告会', 'http://img.pzhuweb.cn/2018108040931608083410039.jpg', '{\"blocks\":[{\"key\":\"2ib8g\",\"text\":\"WEB应用专业团队于2020年12月13日19：30在励志楼四楼数计学院会议室开展了本学期的第九次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级成员林荣杭主讲，本次会议讲解设计模式之一的代理模式。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":104,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":104,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":104,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":104,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":104,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"1o6n4\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"372k8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ar4s0\",\"text\":\"会议伊始，由队长吴涛进行点到，之后指导老师兰全祥对周报进行检查，并根据填写的周报提问，他强调填写周报要认真对待并对自己所学的知识进行有效的整理。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":72,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":72,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":72,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":72,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":72,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"dgdmv\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"etedn\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1ccrl\",\"text\":\"随后林荣杭提出了代理模式的概念--给某一个对象提供一个代理对象并由代理对象完成对原对象的引用，他首先讲了静态代理，并提出问题-为什么要用到接口。紧接着在此基础提出了动态代理，并例举了动态代理的应用-Spring Aop。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":110,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":110,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":110,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":110,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":110,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"93m17\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"chngo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"efkjl\",\"text\":\"最后由19级成员梳理此次会议学到的知识点，然后兰老师对本次报告会的代理模式进行梳理总结：静态代理的代理类是真实存在的，完成特定的方法增强；动态代理的代理类是抽象的，根据程序运行时的不同情况通过反射机制动态产生；代理中的接口起到规范和实现多态的作用。兰老师还指出：知识是互通的，要掌握学习的方法，不能因为听不懂了就不去听，学会分析问题，如为什么产生这个技术，技术的优缺点以及应用场景等。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":192,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":192,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":192,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":192,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":192,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931608083288671.jpg\",\"type\":\"IMAGE\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931608083380351.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":318,\"title\":\"2018108040931608083380351.jpg\",\"alt\":\"2018108040931608083380351.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931608083391892.jpg\",\"name\":\"QQ图片20201216090023.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":319,\"title\":\"2018108040931608083391892.jpg\",\"alt\":\"2018108040931608083391892.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年12月13日19：30在励志楼四楼数计学院会议室开展了本学期的第九次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级成员林荣杭主讲，本次会议讲解设计模式之一的代理模式。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2018108040931608083288671.jpg\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">会议伊始，由队长吴涛进行点到，之后指导老师兰全祥对周报进行检查，并根据填写的周报提问，他强调填写周报要认真对待并对自己所学的知识进行有效的整理。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"318\" title=\"2018108040931608083380351.jpg\" alt=\"2018108040931608083380351.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931608083380351.jpg\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">随后林荣杭提出了代理模式的概念--给某一个对象提供一个代理对象并由代理对象完成对原对象的引用，他首先讲了静态代理，并提出问题-为什么要用到接口。紧接着在此基础提出了动态代理，并例举了动态代理的应用-Spring Aop。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"319\" title=\"2018108040931608083391892.jpg\" alt=\"2018108040931608083391892.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931608083391892.jpg\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">最后由19级成员梳理此次会议学到的知识点，然后兰老师对本次报告会的代理模式进行梳理总结：静态代理的代理类是真实存在的，完成特定的方法增强；动态代理的代理类是抽象的，根据程序运行时的不同情况通过反射机制动态产生；代理中的接口起到规范和实现多态的作用。兰老师还指出：知识是互通的，要掌握学习的方法，不能因为听不懂了就不去听，学会分析问题，如为什么产生这个技术，技术的优缺点以及应用场景等。</span></span></span></span></span></p>', 17, 1, 0, '2020-12-14 00:00:00', NULL);
INSERT INTO `article` VALUES (244, '201810804093', 'WEB应用专业团队2020-2021-1学期专业学习研讨会', 5, 13, '攀枝花学院WEB应用专业团队于2020年12月6日19：30在攀枝花学院分析测试中心7A-2召开了专业学习研讨会。本次研讨会由团队指导老师兰全祥主持，团队2018级全体成员参加。指导老师兰全祥首先对目前的就业形势、学习方向等方面进行了讲解，', '研讨会', 'http://img.pzhuweb.cn/2018108040931608254082990.jpg', '{\"blocks\":[{\"key\":\"3qrdl\",\"text\":\"攀枝花学院WEB应用专业团队于2020年12月6日19：30在攀枝花学院分析测试中心7A-2召开了专业学习研讨会。本次研讨会由团队指导老师兰全祥主持，团队2018级全体成员参加。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":89,\"style\":\"FONTSIZE-13.5pt\"},{\"offset\":0,\"length\":89,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":89,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":89,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9o8l4\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"cu4uh\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"eq7oa\",\"text\":\"指导老师兰全祥首先对目前的就业形势、学习方向等方面进行了讲解，接着逐个了解了团队中2018级成员的学习进度和计划，大创项目、论文以及软件著作权等相关成果的完成和筹备情况。在了解完相关情况之后，兰老师分别为每个成员提出了针对性的意见和建议，希望大家能够抓紧大三最后的时间、力争上游，争取在明年能够找到一个满意的工作。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":157,\"style\":\"FONTSIZE-13.5pt\"},{\"offset\":0,\"length\":157,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":157,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":157,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"mkjc\",\"text\":\"之后，兰全祥老师对目前团队管理以及存在的问题进行了说明，希望能够通过组队的方法，让高年级带动并监督低年级成员学习，并进行了逐个分组。研讨会之后，根据团队前期工作开展情况，对团队后续工作进行了安排，调整了报告会内容和主讲人，以便能够更好地发挥团队活动的作用和意义，让大家切实能够有所收获。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":143,\"style\":\"FONTSIZE-13.5pt\"},{\"offset\":0,\"length\":143,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":143,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":143,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3pp97\",\"text\":\"本次专业学习研讨会让2018级团队成员进一步了解了自身不足，充分认清了自己现在的学期情况，了解到了就业形势的严峻，并为后续学习计划奠定了基础，同时为推动团队发展起到了积极作用。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":88,\"style\":\"FONTSIZE-13.5pt\"},{\"offset\":0,\"length\":88,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":88,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":88,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931608254072853.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":320,\"title\":\"2018108040931608254072853.jpg\",\"alt\":\"2018108040931608254072853.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13.5ptpx\"><span style=\"color:#333333\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">攀枝花学院WEB应用专业团队于2020年12月6日19：30在攀枝花学院分析测试中心7A-2召开了专业学习研讨会。本次研讨会由团队指导老师兰全祥主持，团队2018级全体成员参加。</span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"320\" title=\"2018108040931608254072853.jpg\" alt=\"2018108040931608254072853.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931608254072853.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13.5ptpx\"><span style=\"color:#333333\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">指导老师兰全祥首先对目前的就业形势、学习方向等方面进行了讲解，接着逐个了解了团队中2018级成员的学习进度和计划，大创项目、论文以及软件著作权等相关成果的完成和筹备情况。在了解完相关情况之后，兰老师分别为每个成员提出了针对性的意见和建议，希望大家能够抓紧大三最后的时间、力争上游，争取在明年能够找到一个满意的工作。</span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13.5ptpx\"><span style=\"color:#333333\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">之后，兰全祥老师对目前团队管理以及存在的问题进行了说明，希望能够通过组队的方法，让高年级带动并监督低年级成员学习，并进行了逐个分组。研讨会之后，根据团队前期工作开展情况，对团队后续工作进行了安排，调整了报告会内容和主讲人，以便能够更好地发挥团队活动的作用和意义，让大家切实能够有所收获。</span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13.5ptpx\"><span style=\"color:#333333\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">本次专业学习研讨会让2018级团队成员进一步了解了自身不足，充分认清了自己现在的学期情况，了解到了就业形势的严峻，并为后续学习计划奠定了基础，同时为推动团队发展起到了积极作用。</span></span></span></span></p>', 9, 1, 0, '2020-12-07 00:00:00', NULL);
INSERT INTO `article` VALUES (245, '201810804093', 'WEB应用专业团队2020-2021-1学期第十次学术报告会——面试题讲解', 5, 13, 'WEB应用专业团队于2020年12月20日19：30在励志楼四楼数计学院会议室开展了本学期的第十次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级吴涛队长主讲，本次会议主要讲解5道面试题。会议伊始，吴涛进行了点到，之后列出了23种', '报告会', 'http://img.pzhuweb.cn/2018108040931608561080959.jpg', '{\"blocks\":[{\"key\":\"8fcfn\",\"text\":\"WEB应用专业团队于2020年12月20日19：30在励志楼四楼数计学院会议室开展了本学期的第十次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级吴涛队长主讲，本次会议主要讲解5道面试题。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":99,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":99,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":99,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":99,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":99,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"f1hpa\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"b69f1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fiv3d\",\"text\":\"会议伊始，吴涛进行了点到，之后列出了23种设计模式并让团队成员自行选择其中一种设计模式，随后兰全祥说明了相关要求并希望大家能用简洁的语言阐述自己的设计模式。紧接着吴涛开始依次提出5道面试题：数组与链表的区别、重写与重载的区别、如何判断链表有环、final finally与finalize的应用场景、类加载的机制。团队成员积极回答补充，吴涛强调这几道面试题主要考察的是基础，大家都能回答出来比的就是谁归纳的更好更精确。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":209,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":209,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":209,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":209,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":209,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"8bpma\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"avkc4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"92pb1\",\"text\":\"通过此次会议，成员们对面试题有了一定的了解，明白了学习知识要务实基础、善于总结。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":40,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":40,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":40,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":40,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":40,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931608561051587.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":321,\"title\":\"2018108040931608561051587.jpg\",\"alt\":\"2018108040931608561051587.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931608561063047.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":322,\"title\":\"2018108040931608561063047.jpg\",\"alt\":\"2018108040931608561063047.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">WEB应用专业团队于2020年12月20日19：30在励志楼四楼数计学院会议室开展了本学期的第十次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级吴涛队长主讲，本次会议主要讲解5道面试题。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"321\" title=\"2018108040931608561051587.jpg\" alt=\"2018108040931608561051587.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931608561051587.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">会议伊始，吴涛进行了点到，之后列出了23种设计模式并让团队成员自行选择其中一种设计模式，随后兰全祥说明了相关要求并希望大家能用简洁的语言阐述自己的设计模式。紧接着吴涛开始依次提出5道面试题：数组与链表的区别、重写与重载的区别、如何判断链表有环、final finally与finalize的应用场景、类加载的机制。团队成员积极回答补充，吴涛强调这几道面试题主要考察的是基础，大家都能回答出来比的就是谁归纳的更好更精确。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"322\" title=\"2018108040931608561063047.jpg\" alt=\"2018108040931608561063047.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931608561063047.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">通过此次会议，成员们对面试题有了一定的了解，明白了学习知识要务实基础、善于总结。</span></span></span></span></span></p>', 11, 1, 0, '2020-12-21 00:00:00', NULL);
INSERT INTO `article` VALUES (246, '201810804093', 'WEB应用专业团队2020-2021-1学期简历研讨会', 5, 13, '攀枝花学院WEB应用专业团队于2020年12月25日20：00在企业微信进行线上简历研讨会。本次学术报告会由指导老师兰全祥主持， 2015级、2016级、2017级和2018级成员参与。会议开始，兰老师通过共享屏幕，对2018级和2017级', '研讨会', 'http://img.pzhuweb.cn/2018108040931608969570190.png', '{\"blocks\":[{\"key\":\"dojmh\",\"text\":\"攀枝花学院WEB应用专业团队于2020年12月25日20：00在企业微信进行线上简历研讨会。本次学术报告会由指导老师兰全祥主持， 2015级、2016级、2017级和2018级成员参与。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":93,\"style\":\"FONTSIZE-17\"},{\"offset\":0,\"length\":93,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":93,\"style\":\"LETTERSPACING-0.5\"},{\"offset\":0,\"length\":93,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":93,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"dmg4m\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"71jgg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9ltv\",\"text\":\"会议开始，兰老师通过共享屏幕，对2018级和2017级的成员提交的简历进行逐个展示，15、16级的成员通过自身的工作经验对不同的简历提出建议，进行修改。语句要通顺，描述要准确。项目经历作为重点应该往前面放，在项目经历中把自己负责的模块写详细，突出亮点，在项目的遇到遇到的困难，做出的突破以及最终完成项目后的收获，项目的技术选型中要考虑为什么选择这个技术等。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":178,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":178,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":178,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":178,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":178,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9mjab\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"7j1ta\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ojk9\",\"text\":\"本次会议的召开，通过15、16级成员提出的建议让17、18级成员了解到自己简历中的不足，并明确了需要在哪些方面去做准备。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":60,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":60,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":60,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":60,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":60,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"dpjct\",\"text\":\"​\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931608969548104.png\",\"name\":\"1.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":323,\"title\":\"2018108040931608969548104.png\",\"alt\":\"2018108040931608969548104.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931608969558075.png\",\"name\":\"2.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":324,\"title\":\"2018108040931608969558075.png\",\"alt\":\"2018108040931608969558075.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:justify;text-indent:2em;\"><span style=\"font-size:17px\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.5px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">攀枝花学院WEB应用专业团队于2020年12月25日20：00在企业微信进行线上简历研讨会。本次学术报告会由指导老师兰全祥主持， 2015级、2016级、2017级和2018级成员参与。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"323\" title=\"2018108040931608969548104.png\" alt=\"2018108040931608969548104.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931608969548104.png\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">会议开始，兰老师通过共享屏幕，对2018级和2017级的成员提交的简历进行逐个展示，15、16级的成员通过自身的工作经验对不同的简历提出建议，进行修改。语句要通顺，描述要准确。项目经历作为重点应该往前面放，在项目经历中把自己负责的模块写详细，突出亮点，在项目的遇到遇到的困难，做出的突破以及最终完成项目后的收获，项目的技术选型中要考虑为什么选择这个技术等。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"324\" title=\"2018108040931608969558075.png\" alt=\"2018108040931608969558075.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931608969558075.png\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">本次会议的召开，通过15、16级成员提出的建议让17、18级成员了解到自己简历中的不足，并明确了需要在哪些方面去做准备。</span></span></span></span></span></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"line-height:1.75\">​</span></p>', 10, 1, 0, '2020-12-26 00:00:00', NULL);
INSERT INTO `article` VALUES (247, '201810804093', 'WEB应用专业团队2020-2021-1学期年度总结会', 5, 13, '攀枝花学院WEB应用专业团队于2020年12月27日19：30在砺志楼四楼数学与计算机学院会议室进行了年度总结会。本次会议由指导老师兰全祥主持， 队长吴涛主讲，团队全体成员参加本次会议。会议开始，进行点到，吴涛对团队成员提交的本周周报进行提', '总结会', 'http://img.pzhuweb.cn/2018108040931609132025880.jpg', '{\"blocks\":[{\"key\":\"desha\",\"text\":\"攀枝花学院WEB应用专业团队于2020年12月27日19：30在砺志楼四楼数学与计算机学院会议室进行了年度总结会。本次会议由指导老师兰全祥主持， 队长吴涛主讲，团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":93,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":93,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":93,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":93,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":93,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"7iefv\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"2bqtu\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9vh60\",\"text\":\"会议开始，进行点到，吴涛对团队成员提交的本周周报进行提问。其后，为新成员介绍团队的传统以及往届成员组成，播放去年的总结视频。接着总结今年进行的团队活动和成员的论文、著作权、获奖等成果。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":92,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":92,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":92,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":92,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":92,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"f7l7p\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"ae0c1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bfo8m\",\"text\":\"然后，每一个18级成员先进行年度自我总结，再对19、20级成员提出建议，兰老师进行补充评价，提出18级成员目前需要多花时间在成果产出上，然后要去回顾基础。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":77,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":77,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":77,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":77,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":77,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"74qg6\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"8qcra\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1ta2p\",\"text\":\"最后对所有在校成员进行假期学习任务安排，针对每个年级不同阶段的成员提出要求。兰老师提醒大家每个阶段都应该有紧迫感，抓紧完成自己的任务，一步慢步步慢，坚持自主学习。临近会议结束，兰老师让大家都说说自己的想法，畅所欲言。希望大家多交流，不要单打独斗。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":123,\"style\":\"FONTSIZE-13pt\"},{\"offset\":0,\"length\":123,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":123,\"style\":\"LETTERSPACING-0.4pt\"},{\"offset\":0,\"length\":123,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":123,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"6s0uq\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{}},{\"key\":\"1dfl8\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931609131540624.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":325,\"title\":\"2018108040931609131540624.jpg\",\"alt\":\"2018108040931609131540624.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931609131550240.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":326,\"title\":\"2018108040931609131550240.jpg\",\"alt\":\"2018108040931609131550240.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931609131566659.jpg\",\"name\":\"3.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":327,\"title\":\"2018108040931609131566659.jpg\",\"alt\":\"2018108040931609131566659.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931609131576956.jpg\",\"name\":\"4.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":328,\"title\":\"2018108040931609131576956.jpg\",\"alt\":\"2018108040931609131576956.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">攀枝花学院WEB应用专业团队于2020年12月27日19：30在砺志楼四楼数学与计算机学院会议室进行了年度总结会。本次会议由指导老师兰全祥主持， 队长吴涛主讲，团队全体成员参加本次会议。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"325\" title=\"2018108040931609131540624.jpg\" alt=\"2018108040931609131540624.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931609131540624.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">会议开始，进行点到，吴涛对团队成员提交的本周周报进行提问。其后，为新成员介绍团队的传统以及往届成员组成，播放去年的总结视频。接着总结今年进行的团队活动和成员的论文、著作权、获奖等成果。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"326\" title=\"2018108040931609131550240.jpg\" alt=\"2018108040931609131550240.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931609131550240.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">然后，每一个18级成员先进行年度自我总结，再对19、20级成员提出建议，兰老师进行补充评价，提出18级成员目前需要多花时间在成果产出上，然后要去回顾基础。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"327\" title=\"2018108040931609131566659.jpg\" alt=\"2018108040931609131566659.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931609131566659.jpg\"/></div><p></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:13ptpx\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.4ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">最后对所有在校成员进行假期学习任务安排，针对每个年级不同阶段的成员提出要求。兰老师提醒大家每个阶段都应该有紧迫感，抓紧完成自己的任务，一步慢步步慢，坚持自主学习。临近会议结束，兰老师让大家都说说自己的想法，畅所欲言。希望大家多交流，不要单打独斗。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"328\" title=\"2018108040931609131576956.jpg\" alt=\"2018108040931609131576956.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931609131576956.jpg\"/></div><p></p>', 17, 1, 0, '2020-12-28 00:00:00', NULL);
INSERT INTO `article` VALUES (248, '201810804093', 'WEB应用专业团队2020-2021-2学期开学测试与见面会', 5, 13, '​WEB应用专业团队于2021年3月1日19：30在分测楼7a-2创新实验室开展了本学期开学测试与开学见面会。本次活动由指导老师兰全祥主持，全体在校团队成员参与。全体成员于19：30开始测试，本次测试的试题均为上学期报告会涉及到的内容，旨在', '开学见面会', 'http://img.pzhuweb.cn/2018108040931614685556032.jpg', '{\"blocks\":[{\"key\":\"4ph3j\",\"text\":\"​WEB应用专业团队于2021年3月1日19：30在分测楼7a-2创新实验室开展了本学期开学测试与开学见面会。本次活动由指导老师兰全祥主持，全体在校团队成员参与。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":81,\"style\":\"FONTSIZE-17\"},{\"offset\":0,\"length\":81,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":81,\"style\":\"LETTERSPACING-0.5\"},{\"offset\":0,\"length\":81,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":81,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"e5g47\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"ff3f9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dt80g\",\"text\":\"全体成员于19：30开始测试，本次测试的试题均为上学期报告会涉及到的内容，旨在检验大家对知识的掌握程度。测试在20：30结束，紧接着开展本学期的开学见面会。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":78,\"style\":\"FONTSIZE-17\"},{\"offset\":0,\"length\":78,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":78,\"style\":\"LETTERSPACING-0.5\"},{\"offset\":0,\"length\":78,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":78,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"5p2mm\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"68vb5\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"71b60\",\"text\":\"会议伊始， 兰老师对本次测试的知识点进行简要的回顾与分析，提醒大家要养成做笔记的好习惯，不能学完过后就忘了。然后兰老师对团队的近期安排进行了说明，计划在本周内确定创新实验室名额，重新提交创新实验室的座位申请。本学期大一成员晚上不要求待在实验室学习，回教室去上晚自习。大二成员要确定自己的学习方向，大三成员确定毕业设计的选题以及进行项目推进，从中选出前端、后台项目各一个申报大创项目。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":191,\"style\":\"FONTSIZE-17\"},{\"offset\":0,\"length\":191,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":191,\"style\":\"LETTERSPACING-0.5\"},{\"offset\":0,\"length\":191,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":191,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931614685536434.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":329,\"title\":\"2018108040931614685536434.jpg\",\"alt\":\"2018108040931614685536434.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931614685544931.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":330,\"title\":\"2018108040931614685544931.jpg\",\"alt\":\"2018108040931614685544931.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:justify;text-indent:2em;\"><span style=\"font-size:17px\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.5px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">​WEB应用专业团队于2021年3月1日19：30在分测楼7a-2创新实验室开展了本学期开学测试与开学见面会。本次活动由指导老师兰全祥主持，全体在校团队成员参与。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"329\" title=\"2018108040931614685536434.jpg\" alt=\"2018108040931614685536434.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931614685536434.jpg\"/></div><p></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"font-size:17px\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.5px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">全体成员于19：30开始测试，本次测试的试题均为上学期报告会涉及到的内容，旨在检验大家对知识的掌握程度。测试在20：30结束，紧接着开展本学期的开学见面会。</span></span></span></span></span></p><div class=\"media-wrap image-wrap\"><img id=\"330\" title=\"2018108040931614685544931.jpg\" alt=\"2018108040931614685544931.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931614685544931.jpg\"/></div><p></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"font-size:17px\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.5px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.75\">会议伊始， 兰老师对本次测试的知识点进行简要的回顾与分析，提醒大家要养成做笔记的好习惯，不能学完过后就忘了。然后兰老师对团队的近期安排进行了说明，计划在本周内确定创新实验室名额，重新提交创新实验室的座位申请。本学期大一成员晚上不要求待在实验室学习，回教室去上晚自习。大二成员要确定自己的学习方向，大三成员确定毕业设计的选题以及进行项目推进，从中选出前端、后台项目各一个申报大创项目。</span></span></span></span></span></p>', 21, 1, 0, '2021-03-02 00:00:00', NULL);
INSERT INTO `article` VALUES (249, '201810804093', 'WEB应用专业团队2020-2021-2学期第一次学术报告会——基于Java的小游戏设计与实现', 5, 13, '攀枝花学院WEB应用专业团队于2021年3月7日20：00在砺志楼四楼数计学院会议室开展了本学期的第一次学术报告会。本次学术报告会由指导老师兰全祥主持，2019级成员许佳与2019级成员陈江涛主讲，本次会议主要讲解基于Java的小游戏设计与', '报告会', 'http://img.pzhuweb.cn/2018108040931615251144281.jpg', '{\"blocks\":[{\"key\":\"2gvtb\",\"text\":\"攀枝花学院WEB应用专业团队于2021年3月7日20：00在砺志楼四楼数计学院会议室开展了本学期的第一次学术报告会。本次学术报告会由指导老师兰全祥主持，2019级成员许佳与2019级成员陈江涛主讲，本次会议主要讲解基于Java的小游戏设计与实现，全体在校成员参与本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":136,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":136,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"38af3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c15gl\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"cuh2k\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2g1s7\",\"text\":\"会议伊始，18级成员陈治霖进行了点到，之后由许佳讲解了荒山打猎小游戏。在讲解小游戏的过程中暴露了线程问题。兰老师指出要了解Java中线程有哪些状态、状态间如何转换以及常见的运行时异常有哪些等问题，并提醒程序设计应遵循单一职责原则，同时要求成员们要了解并掌握这些知识。最后兰老师建议游戏中增加素材、Java IO技术等。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":159,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":159,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"f06tp\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dsl71\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"fgr69\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"56hqr\",\"text\":\"紧接着，由陈江涛讲解贪吃蛇小游戏。经过对游戏的讲解，发现游戏设计过于简单，使用的技术过于单一等问题。兰老师建议可以使用Java IO以及多线程等技术来增添地图、障碍物以及食物等素材，丰富游戏的功能。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":99,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":99,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"4fr9f\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"23b9c\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"1v3np\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a0mvg\",\"text\":\"最后，兰老师梳理了此次会议提到的知识点，并希望团队各年级在新一学期做好规划，能够在新学期做出一定的成绩。经过本次报告会，团队成员对Java的可视化技术以及小游戏的设计有了一定的了解，也进一步明确了学习的目标。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":104,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":104,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"left\"},\"textAlign\":\"left\",\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931615251080542.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":331,\"title\":\"2018108040931615251080542.jpg\",\"alt\":\"2018108040931615251080542.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931615251096744.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":332,\"title\":\"2018108040931615251096744.jpg\",\"alt\":\"2018108040931615251096744.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931615251106004.jpg\",\"name\":\"3.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":333,\"title\":\"2018108040931615251106004.jpg\",\"alt\":\"2018108040931615251106004.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.75\">攀枝花学院WEB应用专业团队于2021年3月7日20：00在砺志楼四楼数计学院会议室开展了本学期的第一次学术报告会。本次学术报告会由指导老师兰全祥主持，2019级成员许佳与2019级成员陈江涛主讲，本次会议主要讲解基于Java的小游戏设计与实现，全体在校成员参与本次会议。</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"331\" title=\"2018108040931615251080542.jpg\" alt=\"2018108040931615251080542.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931615251080542.jpg\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.75\">会议伊始，18级成员陈治霖进行了点到，之后由许佳讲解了荒山打猎小游戏。在讲解小游戏的过程中暴露了线程问题。兰老师指出要了解Java中线程有哪些状态、状态间如何转换以及常见的运行时异常有哪些等问题，并提醒程序设计应遵循单一职责原则，同时要求成员们要了解并掌握这些知识。最后兰老师建议游戏中增加素材、Java IO技术等。</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"332\" title=\"2018108040931615251096744.jpg\" alt=\"2018108040931615251096744.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931615251096744.jpg\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.75\">紧接着，由陈江涛讲解贪吃蛇小游戏。经过对游戏的讲解，发现游戏设计过于简单，使用的技术过于单一等问题。兰老师建议可以使用Java IO以及多线程等技术来增添地图、障碍物以及食物等素材，丰富游戏的功能。</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"333\" title=\"2018108040931615251106004.jpg\" alt=\"2018108040931615251106004.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931615251106004.jpg\"/></div><p></p><p style=\"text-align:left;text-indent:2em;\" class=\"MsoNormal\" align=\"left\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.75\">最后，兰老师梳理了此次会议提到的知识点，并希望团队各年级在新一学期做好规划，能够在新学期做出一定的成绩。经过本次报告会，团队成员对Java的可视化技术以及小游戏的设计有了一定的了解，也进一步明确了学习的目标。</span></span></p>', 30, 1, 0, '2021-03-08 00:00:00', NULL);
INSERT INTO `article` VALUES (250, '201810804093', 'WEB 应用专业团队 2020-2021-2学期第二次学术报告会——单例设计模式', 5, 13, '攀枝花学院WEB应用专业团队于2021年3月12日19:40在砺志楼四楼数计学院会议室开展了本学期的第二次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员王凯琪主讲，本次会议主要讲解单例设计模式，全体在校成员参与本次会议。会议', '报告会', 'http://img.pzhuweb.cn/2018108040931615776732129.jpg', '{\"blocks\":[{\"key\":\"5cf5f\",\"text\":\"攀枝花学院WEB应用专业团队于2021年3月12日19:40在砺志楼四楼数计学院会议室开展了本学期的第二次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员王凯琪主讲，本次会议主要讲解单例设计模式，全体在校成员参与本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":118,\"style\":\"FONTSIZE-10.5pt\"},{\"offset\":0,\"length\":118,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"a5pcg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8p03j\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"12vtr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"89qf6\",\"text\":\"会议伊始，20级成员马正义进行了点到，之后由王凯琪开始讲解单例模式之懒汉式。首先介绍了何为单例，之后王凯琪一一讲解了懒汉式的各种写法以及利弊。然后兰老师通过通俗易懂的例子阐述清楚了懒汉式的弊端以及解决方法。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":103,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"u23b\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d0c40\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"e680t\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3brhm\",\"text\":\"最后，王凯琪梳理了此次会议提到的懒汉式各种写法及其优劣，总结出了静态内部类为最优方法。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":43,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textIndent\":1}},{\"key\":\"fiohj\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-1.75\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"}}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931615776621999.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":334,\"title\":\"2018108040931615776621999.jpg\",\"alt\":\"2018108040931615776621999.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2018108040931615776631472.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":335,\"title\":\"2018108040931615776631472.jpg\",\"alt\":\"2018108040931615776631472.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"font-size:10.5ptpx\"><span style=\"line-height:1.75\">攀枝花学院WEB应用专业团队于2021年3月12日19:40在砺志楼四楼数计学院会议室开展了本学期的第二次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员王凯琪主讲，本次会议主要讲解单例设计模式，全体在校成员参与本次会议。</span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"334\" title=\"2018108040931615776621999.jpg\" alt=\"2018108040931615776621999.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931615776621999.jpg\"/></div><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">会议伊始，20级成员马正义进行了点到，之后由王凯琪开始讲解单例模式之懒汉式。首先介绍了何为单例，之后王凯琪一一讲解了懒汉式的各种写法以及利弊。然后兰老师通过通俗易懂的例子阐述清楚了懒汉式的弊端以及解决方法。</span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"335\" title=\"2018108040931615776631472.jpg\" alt=\"2018108040931615776631472.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2018108040931615776631472.jpg\"/></div><p></p><p style=\"text-indent:2em;\"><span style=\"line-height:1.75\">最后，王凯琪梳理了此次会议提到的懒汉式各种写法及其优劣，总结出了静态内部类为最优方法。</span></p><p class=\"MsoNormal\"><span style=\"line-height:1.75\"> </span></p>', 24, 1, 0, '2021-03-13 00:00:00', NULL);
INSERT INTO `article` VALUES (251, '201810804093', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (252, '202010804010', 'WEB应用专业团队2020-2021-2学期第三次学术报告会—快速排序与归并排序', 3, 13, '攀枝花学院WEB应用专业团队于2021年3月21日19：40在砺志楼四楼数学与计算机学院会议室进行了本学期的第三次学术报告会。本次会议由指导老师兰全祥主持,成员吉克伍且讲解快速排序与归并排序，团队全体成员参加本次会议。 会议伊始，20级成员', '算法', 'http://img.pzhuweb.cn/2020108040101616820546978.jpg', '{\"blocks\":[{\"key\":\"13ibr\",\"text\":\"攀枝花学院WEB应用专业团队于2021年3月21日19：40在砺志楼四楼数学与计算机学院会议室进行了本学期的第三次学术报告会。本次会议由指导老师兰全祥主持,成员吉克伍且讲解快速排序与归并排序，团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":109,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":50,\"style\":\"LETTERSPACING-0.3pt\"},{\"offset\":62,\"length\":47,\"style\":\"LETTERSPACING-0.3pt\"},{\"offset\":0,\"length\":109,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":109,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":109,\"style\":\"LINEHEIGHT-2\"},{\"offset\":50,\"length\":12,\"style\":\"LETTERSPACING-0.4pt\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"4u99q\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"center\"},\"textAlign\":\"center\",\"textIndent\":1}},{\"key\":\"4lvmk\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\",\"float\":null}},{\"key\":\"7e1el\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bss2s\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4fmni\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"320vt\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"8qpoo\",\"text\":\"会议伊始，20级成员覃子豪进行了点到，紧接着兰老师点评了周报以及周报的新格式要求,并希望成员认真填写下周计划,使周报变成一个自律计划。之后由吉克伍且讲解了快速与归并算法的具体实现。在此基础上兰老师提出了快速排序与归并排序是否是稳定排序，以及快速排序与比较排序,并总结了稳定排序的意义。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":142,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":142,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"p\"},\"textIndent\":1}},{\"key\":\"ckih0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"p\",\"align\":\"center\"},\"textAlign\":\"center\",\"textIndent\":1}},{\"key\":\"4530t\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"bcn3f\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1sri6\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"width\":\"686\",\"height\":\"312\",\"src\":\"file:///C:\\\\Users\\\\86183\\\\AppData\\\\Local\\\\Temp\\\\ksohtml7840\\\\wps2.png\"},\"float\":\"\",\"alignment\":\"\"}},{\"key\":\"7pq4s\",\"text\":\"最后兰老师安排了2021年度大学生创新创业项目的组别，以及让各组长挑选项目的成员。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":41,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":41,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"p\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040101616820747689.jpg\",\"name\":\")O`JVXCDS@WEJ9()B8`J`]F.jpg\",\"type\":\"IMAGE\",\"width\":499,\"height\":374,\"meta\":{\"id\":336,\"title\":\"2020108040101616820747689.jpg\",\"alt\":\"2020108040101616820747689.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040101616820751766.jpg\",\"type\":\"IMAGE\",\"width\":486,\"height\":363}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"font-size:12ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:2\"><span style=\"letter-spacing:0.3ptpx\">攀枝花学院WEB应用专业团队于2021年3月21日19：40在砺志楼四楼数学与计算机学院会议室进行了</span><span style=\"letter-spacing:0.4ptpx\">本学期的第三次学术报告会</span><span style=\"letter-spacing:0.3ptpx\">。本次会议由指导老师兰全祥主持,成员吉克伍且讲解快速排序与归并排序，团队全体成员参加本次会议。</span></span></span></span></span></p><p style=\"text-align:center;text-indent:2em;\" class=\"MsoNormal\" align=\"center\"></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"336\" title=\"2020108040101616820747689.jpg\" alt=\"2020108040101616820747689.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2020108040101616820747689.jpg\" width=\"499\" height=\"374\" style=\"width:499px;height:374px\"/></div><p></p><p></p><p></p><p><span style=\"line-height:2\"> </span></p><p style=\"text-indent:2em;\" class=\"p\"><span style=\"font-size:12ptpx\"><span style=\"line-height:2\">会议伊始，20级成员覃子豪进行了点到，紧接着兰老师点评了周报以及周报的新格式要求,并希望成员认真填写下周计划,使周报变成一个自律计划。之后由吉克伍且讲解了快速与归并算法的具体实现。在此基础上兰老师提出了快速排序与归并排序是否是稳定排序，以及快速排序与比较排序,并总结了稳定排序的意义。</span></span></p><p style=\"text-align:center;text-indent:2em;\" class=\"p\" align=\"center\"></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040101616820751766.jpg\" width=\"486\" height=\"363\" style=\"width:486px;height:363px\"/></div><p></p><p width=\"686\" height=\"312\" src=\"file:///C:\\Users\\86183\\AppData\\Local\\Temp\\ksohtml7840\\wps2.png\"><span style=\"line-height:2\"> </span></p><p style=\"text-indent:2em;\" class=\"p\"><span style=\"font-size:12ptpx\"><span style=\"line-height:2\">最后兰老师安排了2021年度大学生创新创业项目的组别，以及让各组长挑选项目的成员。</span></span></p>', 27, 0, 0, '2021-03-27 00:00:00', NULL);
INSERT INTO `article` VALUES (253, '202010804010', 'WEB应用专业团队2020-2021-2学期第五次学术报告会—数据库', 2, 2, '   攀枝花学院WEB应用专业团队于2021年4月18日19:40在企业微信平台开展了本学期的第五次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级成员林荣杭主讲，报告会内容为数据库索引有关知识，团队全体成员参加本次会议。   会', '数据库', 'http://img.pzhuweb.cn/2020108040101619267329494.jpg', '{\"blocks\":[{\"key\":\"782q4\",\"text\":\"   攀枝花学院WEB应用专业团队于2021年4月18日19:40在企业微信平台开展了本学期的第五次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级成员林荣杭主讲，报告会内容为数据库索引有关知识，团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":116,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4blh3\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"fdhh3\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"4u9br\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c1pfo\",\"text\":\"   会议伊始，林荣杭对数据库的部分内容进行了讲解，包括传统文件储存的弊端、数据库的概念、数据库的作用及组成。之后，讲到数据存储量达到千万时，查找不便，且当使用树进行存储时，深度越高，则IO次数越多，从而会导致索引效率降低。因此，数据库索引通常采用B+树，并对B树、B＋树的概念及优缺点进行了讲解。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":149,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fafgr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2ir6a\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"a67c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a5a1f\",\"text\":\"   紧接着，林荣杭讲解了数据搜索方式以及B＋树的结构，补充讲解了聚集索引以及非聚集索引、数据库储存引擎MyISAM与InnoDB、数据库分表与分库以及慢查询和锁等面试知识。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":87,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"15pog\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"db245\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"3ftds\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"38ahf\",\"text\":\"   最后，兰全祥老师与团队队长吴涛对本次会议的知识进行了总结，并希望大家多了解数据结构、数据库等相关知识，要将理论知识与实际应用结合起来，切实学以致用。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":77,\"style\":\"LINEHEIGHT-2\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040101619267119540.jpg\",\"name\":\"2.jpg\",\"type\":\"IMAGE\",\"meta\":{\"id\":338,\"title\":\"2020108040101619267119540.jpg\",\"alt\":\"2020108040101619267119540.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040101619267129045.jpg\",\"type\":\"IMAGE\"}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040101619267124690.jpg\",\"type\":\"IMAGE\"}}}}', '<p><span style=\"line-height:2\">   攀枝花学院WEB应用专业团队于2021年4月18日19:40在企业微信平台开展了本学期的第五次学术报告会。本次学术报告会由指导老师兰全祥主持，2018级成员林荣杭主讲，报告会内容为数据库索引有关知识，团队全体成员参加本次会议。</span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"338\" title=\"2020108040101619267119540.jpg\" alt=\"2020108040101619267119540.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2020108040101619267119540.jpg\"/></div><p></p><p><span style=\"line-height:2\">   会议伊始，林荣杭对数据库的部分内容进行了讲解，包括传统文件储存的弊端、数据库的概念、数据库的作用及组成。之后，讲到数据存储量达到千万时，查找不便，且当使用树进行存储时，深度越高，则IO次数越多，从而会导致索引效率降低。因此，数据库索引通常采用B+树，并对B树、B＋树的概念及优缺点进行了讲解。</span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2020108040101619267129045.jpg\"/></div><p></p><p><span style=\"line-height:2\">   紧接着，林荣杭讲解了数据搜索方式以及B＋树的结构，补充讲解了聚集索引以及非聚集索引、数据库储存引擎MyISAM与InnoDB、数据库分表与分库以及慢查询和锁等面试知识。</span></p><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/2020108040101619267124690.jpg\"/></div><p></p><p><span style=\"line-height:2\">   最后，兰全祥老师与团队队长吴涛对本次会议的知识进行了总结，并希望大家多了解数据结构、数据库等相关知识，要将理论知识与实际应用结合起来，切实学以致用。</span></p>', 26, 0, 0, '2021-04-24 00:00:00', NULL);
INSERT INTO `article` VALUES (254, '202010804027', 'WEB应用专业团队2020-2021-2学期第四次学术报告会—计数、基数、桶排序', 5, 13, '攀枝花学院WEB应用专业团队于2021年3月28日19:40在砺志楼四楼会议室开展了本学期的第四次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员张凡主讲，报告会内容为计数、基数、桶排序，团队全体成员参加本次会议。会议伊始，兰', '新闻', 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623222031071.png', '{\"blocks\":[{\"key\":\"4n21a\",\"text\":\"攀枝花学院WEB应用专业团队于2021年3月28日19:40在砺志楼四楼会议室开展了本学期的第四次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员张凡主讲，报告会内容为计数、基数、桶排序，团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":114,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":114,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":114,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":114,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":114,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"6vfu7\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a7962\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"12ire\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"fh4l6\",\"text\":\"会议伊始，兰老师对团队的上周周报进行了点评，并就团队成员在周报中提出的问题进行了解答，讨论了Java两个数字进行交换以及Java异常等相关问题。兰老师指出，希望能将周报作为自律计划的一部分，在周报中写明是否完成上周计划内容，若没有完成应写明原因。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":123,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":123,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":123,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":123,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":123,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"4q1t1\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1c8ak\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"c9l97\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2v6o3\",\"text\":\"紧接着，张凡对三种非比较排序算法（计数排序、基数排序以及桶排序）进行了讲解。讲解过程中，重点描述了三种排序算法的基本思想，通过可视化的动画以及代码让大家理解并熟悉三种排序算法的实现。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":91,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":91,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":91,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"6kkuf\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}},{\"key\":\"doscv\",\"text\":\"最后，兰老师总结了这些非比较排序算法的优缺点以及它们的使用场景，并就桶排序进行了深入讲解，提醒大家可以将桶排序、计数排序以及归并排序进行关联，可以进一步去了解如何设计桶的个数才能使算法更优。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":95,\"style\":\"FONTSIZE-16\"},{\"offset\":0,\"length\":95,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":95,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{},\"textAlign\":\"justify\",\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623222060595.png\",\"name\":\"微信图片_20210609145734.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":341,\"title\":\"140848948.4431736713546473000.1603686505885.0711623222060595.png\",\"alt\":\"140848948.4431736713546473000.1603686505885.0711623222060595.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623222122047.png\",\"name\":\"微信图片_20210609145743.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":342,\"title\":\"140848948.4431736713546473000.1603686505885.0711623222122047.png\",\"alt\":\"140848948.4431736713546473000.1603686505885.0711623222122047.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\"><span style=\"color:#333333\"><span style=\"background-color:#ffffff\"><span style=\"font-size:16px\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">攀枝花学院WEB应用专业团队于2021年3月28日19:40在砺志楼四楼会议室开展了本学期的第四次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员张凡主讲，报告会内容为计数、基数、桶排序，团队全体成员参加本次会议。</span></span></span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"341\" title=\"140848948.4431736713546473000.1603686505885.0711623222060595.png\" alt=\"140848948.4431736713546473000.1603686505885.0711623222060595.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623222060595.png\"/></div><p style=\"text-indent:2em;\"></p><p style=\"text-indent:2em;\"><span style=\"color:#333333\"><span style=\"font-size:16px\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议伊始，兰老师对团队的上周周报进行了点评，并就团队成员在周报中提出的问题进行了解答，讨论了Java两个数字进行交换以及Java异常等相关问题。兰老师指出，希望能将周报作为自律计划的一部分，在周报中写明是否完成上周计划内容，若没有完成应写明原因。</span></span></span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"342\" title=\"140848948.4431736713546473000.1603686505885.0711623222122047.png\" alt=\"140848948.4431736713546473000.1603686505885.0711623222122047.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623222122047.png\"/></div><p></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"font-size:16px\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">紧接着，张凡对三种非比较排序算法（计数排序、基数排序以及桶排序）进行了讲解。讲解过程中，重点描述了三种排序算法的基本思想，通过可视化的动画以及代码让大家理解并熟悉三种排序算法的实现。</span></span></span></p><p style=\"text-align:justify;text-indent:2em;\"></p><p style=\"text-align:justify;text-indent:2em;\"><span style=\"font-size:16px\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">最后，兰老师总结了这些非比较排序算法的优缺点以及它们的使用场景，并就桶排序进行了深入讲解，提醒大家可以将桶排序、计数排序以及归并排序进行关联，可以进一步去了解如何设计桶的个数才能使算法更优。</span></span></span></p>', 11, 1, 0, '2021-04-01 00:00:00', NULL);
INSERT INTO `article` VALUES (255, '202010804027', 'WEB应用专业团队2021年度立项大创项目4项', 5, 13, '2021年3月17日我校开始启动2021年度大学生创新创业训练计划工作，WEB应用专业团队在指导教师兰全祥、张俊的指导下积极组织并参与该训练计划申报工作。经过学院推荐，学校评审，教务处于2021年4月30日下发立项文件，确定以刘世雄为组长的', '大创项目', 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252326765.png', '{\"blocks\":[{\"key\":\"3l5kk\",\"text\":\"2021年3月17日我校开始启动2021年度大学生创新创业训练计划工作，WEB应用专业团队在指导教师兰全祥、张俊的指导下积极组织并参与该训练计划申报工作。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":77,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":77,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":77,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"4dc6f\",\"text\":\"经过学院推荐，学校评审，教务处于2021年4月30日下发立项文件，确定以刘世雄为组长的“基于Dubbo的校园综合服务平台的设计与实现”为2021年度省级大学生创新训练项目；确定陈治霖为组长的“基于Vue的数据结构算法可视化辅助教学平台”、苗海阳为组长的“基于OBE的学生能力达成间接评价及分析系统”和吴雪为组长的“攀枝花学院学生科研管理服务平台”三个项目为2021年度校级大学生创新训练项目。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":196,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":196,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":196,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"ae1sb\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"40ks7\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"rk6f\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ddlal\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"19uuc\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"d1esf\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"qpgv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623251601397.png\",\"name\":\"Snipaste_2021-06-08_20-30-06.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":344,\"title\":\"140848948.4431736713546473000.1603686505885.0711623251601397.png\",\"alt\":\"140848948.4431736713546473000.1603686505885.0711623251601397.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623251601485.png\",\"name\":\"Snipaste_2021-06-08_20-31-09.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":345,\"title\":\"140848948.4431736713546473000.1603686505885.0711623251601485.png\",\"alt\":\"140848948.4431736713546473000.1603686505885.0711623251601485.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623251601441.png\",\"name\":\"Snipaste_2021-06-08_20-32-13.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":343,\"title\":\"140848948.4431736713546473000.1603686505885.0711623251601441.png\",\"alt\":\"140848948.4431736713546473000.1603686505885.0711623251601441.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" size=\"1\" _root=\"[object Object]\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\"><span style=\"font-size:18px\">2021年3月17日我校开始启动2021年度大学生创新创业训练计划工作，WEB应用专业团队在指导教师兰全祥、张俊的指导下积极组织并参与该训练计划申报工作。</span></span></span></p><p style=\"text-indent:2em;\" size=\"1\" _root=\"[object Object]\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\"><span style=\"font-size:18px\">经过学院推荐，学校评审，教务处于2021年4月30日下发立项文件，确定以刘世雄为组长的“基于Dubbo的校园综合服务平台的设计与实现”为2021年度省级大学生创新训练项目；确定陈治霖为组长的“基于Vue的数据结构算法可视化辅助教学平台”、苗海阳为组长的“基于OBE的学生能力达成间接评价及分析系统”和吴雪为组长的“攀枝花学院学生科研管理服务平台”三个项目为2021年度校级大学生创新训练项目。</span></span></span></p><p></p><div class=\"media-wrap image-wrap\"><img id=\"344\" title=\"140848948.4431736713546473000.1603686505885.0711623251601397.png\" alt=\"140848948.4431736713546473000.1603686505885.0711623251601397.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623251601397.png\"/></div><p></p><div class=\"media-wrap image-wrap\"><img id=\"345\" title=\"140848948.4431736713546473000.1603686505885.0711623251601485.png\" alt=\"140848948.4431736713546473000.1603686505885.0711623251601485.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623251601485.png\"/></div><p></p><div class=\"media-wrap image-wrap\"><img id=\"343\" title=\"140848948.4431736713546473000.1603686505885.0711623251601441.png\" alt=\"140848948.4431736713546473000.1603686505885.0711623251601441.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623251601441.png\"/></div><p></p>', 19, 1, 0, '2021-04-30 00:00:00', NULL);
INSERT INTO `article` VALUES (256, '202010804027', 'WEB应用专业团队获2021年度四川省大学生计算机设计大赛一等奖', 5, 13, '2021年5月15日至16日，由四川省教育厅、中国大学生计算机设计大赛四川省赛组委会主办，四川省高等院校计算机基础教育研究会、吉利学院承办的2021年四川省大学生计算机设计大赛暨“华迪杯”第14届中国大学生计算机设计大赛四川省级赛通过两天的', '计算机设计大赛', 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252731825.png', '{\"blocks\":[{\"key\":\"eleap\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\",\"align\":\"center\"},\"textAlign\":\"center\",\"textIndent\":1}},{\"key\":\"b1uid\",\"text\":\"2021年5月15日至16日，由四川省教育厅、中国大学生计算机设计大赛四川省赛组委会主办，四川省高等院校计算机基础教育研究会、吉利学院承办的2021年四川省大学生计算机设计大赛暨“华迪杯”第14届中国大学生计算机设计大赛四川省级赛通过两天的线上答辩、线下评审圆满结束。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":134,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":134,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":134,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"52rhp\",\"text\":\"5月15日上午，陈治霖、胡森宇、张凡的作品“基于Vue的数据结构算法可视化辅助教学平台”就作品特点、技术特点、应用价值等方面进行了线上答辩。5月18日审评结果名单公布,在与川内双一流高校及所有本专科院校近1500名参赛同学同台竞技中，该小组作品脱颖而出，荣获四川省一等奖。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":136,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":136,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":136,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"epe91\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"g8be\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"91uvj\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"5r9eg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bc5t2\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"f0kuo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252566406.png\",\"type\":\"IMAGE\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252566362.png\",\"type\":\"IMAGE\"}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252566318.jpg\",\"type\":\"IMAGE\"}}}}', '<p style=\"text-align:center;text-indent:2em;\" class=\"MsoNormal\" align=\"center\"></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\"><span style=\"font-size:18px\">2021年5月15日至16日，由四川省教育厅、中国大学生计算机设计大赛四川省赛组委会主办，四川省高等院校计算机基础教育研究会、吉利学院承办的2021年四川省大学生计算机设计大赛暨“华迪杯”第14届中国大学生计算机设计大赛四川省级赛通过两天的线上答辩、线下评审圆满结束。</span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\"><span style=\"font-size:18px\">5月15日上午，陈治霖、胡森宇、张凡的作品“基于Vue的数据结构算法可视化辅助教学平台”就作品特点、技术特点、应用价值等方面进行了线上答辩。5月18日审评结果名单公布,在与川内双一流高校及所有本专科院校近1500名参赛同学同台竞技中，该小组作品脱颖而出，荣获四川省一等奖。</span></span></span></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252566406.png\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252566362.png\"/></div><p></p><div class=\"media-wrap image-wrap\"><img src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252566318.jpg\"/></div><p></p>', 30, 1, 0, '2021-05-18 00:00:00', NULL);
INSERT INTO `article` VALUES (257, '202010804027', 'WEB应用专业团队在我校网页设计大赛中获奖', 5, 13, '2021年5月8日我校举办“建党百年·青春献礼”第二届网页设计与制作大赛，团队成员积极参与该比赛，为建党100周年献上自己的心意。大赛主要讲解自己作品的板块结构、内容、色彩以及所运用的高级技术等。经过初赛和决赛两轮比赛，比赛结果与5月20号', '网页设计大赛', 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623253286637.png', '{\"blocks\":[{\"key\":\"12nkm\",\"text\":\"2021年5月8日我校举办“建党百年·青春献礼”第二届网页设计与制作大赛，团队成员积极参与该比赛，为建党100周年献上自己的心意。大赛主要讲解自己作品的板块结构、内容、色彩以及所运用的高级技术等。经过初赛和决赛两轮比赛，比赛结果与5月20号公布。Web应用专业团队成员陈治霖、胡森宇小组获得此次比赛一等奖；王凯琪、匡玉蘅小组获得二等奖；许佳小组、张凡小组获得此次比赛三等奖。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":186,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":186,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":186,\"style\":\"FONTSIZE-18\"},{\"offset\":186,\"length\":1,\"style\":\"FONTSIZE-10.5pt\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"bicpg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"6ao8h\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"edm5q\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"bd8ar\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"8qcuo\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623253104266.png\",\"type\":\"IMAGE\",\"width\":947,\"height\":636}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623253250564.png\",\"name\":\"图片1.png\",\"type\":\"IMAGE\",\"meta\":{\"id\":354,\"title\":\"140848948.4431736713546473000.1603686505885.0711623253250564.png\",\"alt\":\"140848948.4431736713546473000.1603686505885.0711623253250564.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\"><span style=\"font-size:18px\">2021年5月8日我校举办“建党百年·青春献礼”第二届网页设计与制作大赛，团队成员积极参与该比赛，为建党100周年献上自己的心意。大赛主要讲解自己作品的板块结构、内容、色彩以及所运用的高级技术等。经过初赛和决赛两轮比赛，比赛结果与5月20号公布。Web应用专业团队成员陈治霖、胡森宇小组获得此次比赛一等奖；王凯琪、匡玉蘅小组获得二等奖；许佳小组、张凡小组获得此次比赛三等奖</span></span></span><span style=\"font-size:10.5ptpx\">。</span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623253104266.png\" width=\"947\" height=\"636\" style=\"width:947px;height:636px\"/></div><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"354\" title=\"140848948.4431736713546473000.1603686505885.0711623253250564.png\" alt=\"140848948.4431736713546473000.1603686505885.0711623253250564.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623253250564.png\"/></div><p></p>', 34, 1, 0, '2021-05-20 00:00:00', NULL);
INSERT INTO `article` VALUES (258, '202010804027', 'WEB应用专业团队开展团队管理及项目研讨会', 5, 13, '攀枝花学院WEB应用专业团队于2021年6月14日20:00在分册实验室7a-2开展了团队运行管理讨论会及部分项目研讨会。本次会议由指导老师兰全祥主持,大三成员参加本次会议。会议伊始，指导老师兰全祥了解了大三成员实习工作情况，希望大三成员能', '研讨会', 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623747035701.jpg', '{\"blocks\":[{\"key\":\"2sg9g\",\"text\":\"攀枝花学院WEB应用专业团队于2021年6月14日20:00在分册实验室7a-2开展了团队运行管理讨论会及部分项目研讨会。本次会议由指导老师兰全祥主持,大三成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":87,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":87,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":87,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":87,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":87,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"aubse\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"98b3e\",\"text\":\"会议伊始，指导老师兰全祥了解了大三成员实习工作情况，希望大三成员能够明确自己的目标，并能向目标不断请进。接着，老师通过大三成员了解了大二成员的学习进度及成果，并就“如何考核团队成员学习情况”开展了讨论。经过讨论，认为可以尝试将考核要素（包括但不限于专业成绩、项目经验、学习时长、周报、学科竞赛获奖、论文发表、学习进度等）按照积分制进行累加，全方面来考核团队成员能力。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":183,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":183,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":183,\"style\":\"FONTSIZE-18\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"13lj5\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"4f0mb\",\"text\":\"最后，兰全祥与大三成员就“在线智能组卷”、“在线简历投递”、“水质污染检测”以及目前团队正在开展的项目进行了探讨，同时让大三成员将之前做的项目提交到团队gitee仓库中,在REDEME中写明相关技术，便于以后团队成员学习与维护。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":114,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":114,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":114,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"3rsof\",\"text\":\"此次会议有助于推动团队考核机制的建立，加强团队内部建设，让团队成员有紧迫感，切实提升团队成员专业技能水平。团队项目仓库的建立有助于科研项目的传承与延续，同时也能为后续成员提供学习目标和方向。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":95,\"style\":\"FONTSIZE-18\"},{\"offset\":0,\"length\":95,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":95,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623746806016.jpg\",\"name\":\"IMG_20210614_200646.jpg\",\"type\":\"IMAGE\",\"width\":818,\"height\":460.65625,\"meta\":{\"id\":355,\"title\":\"140848948.4431736713546473000.1603686505885.0711623746806016.jpg\",\"alt\":\"140848948.4431736713546473000.1603686505885.0711623746806016.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623746806069.jpg\",\"type\":\"IMAGE\",\"width\":820,\"height\":461.4375}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"background-color:#ffffff\"><span style=\"font-size:18px\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">攀枝花学院WEB应用专业团队于2021年6月14日20:00在分册实验室7a-2开展了团队运行管理讨论会及部分项目研讨会。本次会议由指导老师兰全祥主持,大三成员参加本次会议。</span></span></span></span></span></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"355\" title=\"140848948.4431736713546473000.1603686505885.0711623746806016.jpg\" alt=\"140848948.4431736713546473000.1603686505885.0711623746806016.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623746806016.jpg\" width=\"818\" height=\"460.65625\" style=\"width:818px;height:460.65625px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\"><span style=\"font-size:18px\">会议伊始，指导老师兰全祥了解了大三成员实习工作情况，希望大三成员能够明确自己的目标，并能向目标不断请进。接着，老师通过大三成员了解了大二成员的学习进度及成果，并就“如何考核团队成员学习情况”开展了讨论。经过讨论，认为可以尝试将考核要素（包括但不限于专业成绩、项目经验、学习时长、周报、学科竞赛获奖、论文发表、学习进度等）按照积分制进行累加，全方面来考核团队成员能力。</span></span></span></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623746806069.jpg\" width=\"820\" height=\"461.4375\" style=\"width:820px;height:461.4375px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:18px\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">最后，兰全祥与大三成员就“在线智能组卷”、“在线简历投递”、“水质污染检测”以及目前团队正在开展的项目进行了探讨，同时让大三成员将之前做的项目提交到团队gitee仓库中,在REDEME中写明相关技术，便于以后团队成员学习与维护。</span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:18px\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">此次会议有助于推动团队考核机制的建立，加强团队内部建设，让团队成员有紧迫感，切实提升团队成员专业技能水平。团队项目仓库的建立有助于科研项目的传承与延续，同时也能为后续成员提供学习目标和方向。</span></span></span></p>', 33, 1, 0, '2021-06-15 00:00:00', NULL);
INSERT INTO `article` VALUES (259, '202010804027', 'WEB应用专业团队2021-2022-1学期第一次全体会议', 5, 13, '攀枝花学院WEB应用专业团队于2021年9月6日20:00在线上进行了本学期的第一次会议。本次会议由指导老师兰全祥主持，讲述了本学期团队开学的大致安排。会议伊始，指导老师兰全祥介绍了创新实验室搬迁的问题，前四周团队成员自行安排学习的地点和时', '会议', 'http://img.pzhuweb.cn/2020108040271631066523040.jpg', '{\"blocks\":[{\"key\":\"6a1r\",\"text\":\"攀枝花学院WEB应用专业团队于2021年9月6日20:00在线上进行了本学期的第一次会议。本次会议由指导老师兰全祥主持，讲述了本学期团队开学的大致安排。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":76,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":76,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":76,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":76,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":76,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"5upoh\",\"text\":\"会议伊始，指导老师兰全祥介绍了创新实验室搬迁的问题，前四周团队成员自行安排学习的地点和时间，预计国庆之后再进入新实验室。之后，兰全祥希望19、20级成员能够从自己实际情况出发，考虑自己未来的学习方向以及学习计划，并强调19级成员要抓紧时间半年做项目积累经验并为面试做准备，20级成员要在前后端基础了解之后就要明确自己未来的目标，并结合团队提供的项目来深入学习。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":180,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":180,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":180,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":180,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":180,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"404vj\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ud82\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"f7knb\",\"text\":\"然后，兰全祥介绍了团队现在有的前后端项目，包括《基于Vue的数据结构算法可视化辅助教学平台》、《基于工程教育认证的培养目标及培养过程管理系统》、《三阶魔方还原》、《基于OBE的学生能力达成间接评价及分析系统》等。除此之外，团队还需要对创新团队官方网站，数计学院、校办、教务处、招生处等部门的网站群平台进行维护，为教务处一流课程展示设计网页等等，这些都是很好的锻炼和实践机会，希望大家能够积极参与，能够通过这些项目确定自己的目标,以项目为蓝本逐步深入学习，能够从所研究的项目上有所收获、有所提高。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":247,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":247,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":247,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":247,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":247,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"bngo\",\"text\":\"会议最后，就学习进度、研究方向等问题开展了自由讨论，对近期的一些工作进行了安排，并提醒成员把团队码云里两个之前公共仓库内的代码转移到私有仓库。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":71,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":71,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":71,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":71,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":71,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271631066544550.jpg\",\"type\":\"IMAGE\",\"width\":731,\"height\":566}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"font-size:12ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">攀枝花学院WEB应用专业团队于2021年9月6日20:00在线上进行了本学期的第一次会议。本次会议由指导老师兰全祥主持，讲述了本学期团队开学的大致安排。</span></span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"font-size:12ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议伊始，指导老师兰全祥介绍了创新实验室搬迁的问题，前四周团队成员自行安排学习的地点和时间，预计国庆之后再进入新实验室。之后，兰全祥希望19、20级成员能够从自己实际情况出发，考虑自己未来的学习方向以及学习计划，并强调19级成员要抓紧时间半年做项目积累经验并为面试做准备，20级成员要在前后端基础了解之后就要明确自己未来的目标，并结合团队提供的项目来深入学习。</span></span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271631066544550.jpg\" width=\"731\" height=\"566\" style=\"width:731px;height:566px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"font-size:12ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">然后，兰全祥介绍了团队现在有的前后端项目，包括《基于Vue的数据结构算法可视化辅助教学平台》、《基于工程教育认证的培养目标及培养过程管理系统》、《三阶魔方还原》、《基于OBE的学生能力达成间接评价及分析系统》等。除此之外，团队还需要对创新团队官方网站，数计学院、校办、教务处、招生处等部门的网站群平台进行维护，为教务处一流课程展示设计网页等等，这些都是很好的锻炼和实践机会，希望大家能够积极参与，能够通过这些项目确定自己的目标,以项目为蓝本逐步深入学习，能够从所研究的项目上有所收获、有所提高。</span></span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"font-size:12ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议最后，就学习进度、研究方向等问题开展了自由讨论，对近期的一些工作进行了安排，并提醒成员把团队码云里两个之前公共仓库内的代码转移到私有仓库。</span></span></span></span></span></p>', 19, 0, 0, '2021-09-08 00:00:00', NULL);
INSERT INTO `article` VALUES (260, '201710803017', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (261, '202010804027', 'WEB应用专业团队2021-2022-1学期第二次全体会议', 5, 13, '攀枝花学院WEB应用专业团队于2021年9月17日19:30在砺志楼四楼数计学院会议室开展了本学期的第二次会议。本次会议由指导老师兰全祥主持，详细安排了本学期团队的主要任务。会议伊始,团队就上次会议的课题分配展开讨论,指导老师兰全祥依次详细', '会议', 'http://img.pzhuweb.cn/2020108040271631973299746.jpg', '{\"blocks\":[{\"key\":\"e9mhi\",\"text\":\"攀枝花学院WEB应用专业团队于2021年9月17日19:30在砺志楼四楼数计学院会议室开展了本学期的第二次会议。本次会议由指导老师兰全祥主持，详细安排了本学期团队的主要任务。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":87,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":87,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":87,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":87,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":87,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"bq8j4\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"8oeaf\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"dvcv0\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textAlign\":\"left\",\"textIndent\":1}},{\"key\":\"7sjg7\",\"text\":\"会议伊始,团队就上次会议的课题分配展开讨论,指导老师兰全祥依次详细的介绍目前团队的10余项项目内容和状态,大家可以从项目优化、系统开发以及论文撰写等方面进行研究和思考，团队成员可以根据自己现有的知识来确定研究内容和方向，并以此为目标不断深入学习。之后，就本学期报告会的课题进行了讨论和分配，计划由20级成员在每周举行所选课题的学术报告会。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":169,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":169,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":169,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":0,\"length\":169,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":169,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"textIndent\":1}},{\"key\":\"3uumr\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"a2j7j\",\"text\":\"会议最后，兰全祥安排了创新奖学金的申请和大创项目结题等相关工作，同时因上任队长吴涛去腾讯工作，所以由20级成员王凯琪担任新一届团队队长并负责团队内部相关事务。最后，兰全祥希望团队成员能够和团队一起成长，从团队中有所得，也能够为团队做出一份贡献。团队的维持与运作需要大家一起努力，多一份归属感、多一份责任、多一份心，相信未来团队会越办越好。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":169,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":169,\"style\":\"LETTERSPACING-0.3pt\"},{\"offset\":0,\"length\":169,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":169,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"6448c\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{\"alignment\":\"center\"}},{\"key\":\"fnpeh\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271631973110966.jpg\",\"name\":\"IMG_20210917_193338.jpg\",\"type\":\"IMAGE\",\"width\":875,\"height\":492.72503662109375,\"meta\":{\"id\":361,\"title\":\"2020108040271631973110966.jpg\",\"alt\":\"2020108040271631973110966.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271631973111015.jpg\",\"type\":\"IMAGE\",\"width\":820.2000732421875,\"height\":461}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"font-size:12ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">攀枝花学院WEB应用专业团队于2021年9月17日19:30在砺志楼四楼数计学院会议室开展了本学期的第二次会议。本次会议由指导老师兰全祥主持，详细安排了本学期团队的主要任务。</span></span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"361\" title=\"2020108040271631973110966.jpg\" alt=\"2020108040271631973110966.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2020108040271631973110966.jpg\" width=\"875\" height=\"492.72503662109375\" style=\"width:875px;height:492.72503662109375px\"/></div><p style=\"text-align:left;text-indent:2em;\" size=\"1\" _root=\"[object Object]\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"></p><p style=\"text-indent:2em;\"><span style=\"color:#333333\"><span style=\"font-size:12ptpx\"><span style=\"background-color:#ffffff\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议伊始,团队就上次会议的课题分配展开讨论,指导老师兰全祥依次详细的介绍目前团队的10余项项目内容和状态,大家可以从项目优化、系统开发以及论文撰写等方面进行研究和思考，团队成员可以根据自己现有的知识来确定研究内容和方向，并以此为目标不断深入学习。之后，就本学期报告会的课题进行了讨论和分配，计划由20级成员在每周举行所选课题的学术报告会。</span></span></span></span></span></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271631973111015.jpg\" width=\"820.2000732421875\" height=\"461\" style=\"width:820.2000732421875px;height:461px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"letter-spacing:0.3ptpx\"><span style=\"font-size:12ptpx\"><span style=\"background-color:#ffffff\">会议最后，兰全祥安排了创新奖学金的申请和大创项目结题等相关工作，同时因上任队长吴涛去腾讯工作，所以由20级成员王凯琪担任新一届团队队长并负责团队内部相关事务。最后，兰全祥希望团队成员能够和团队一起成长，从团队中有所得，也能够为团队做出一份贡献。团队的维持与运作需要大家一起努力，多一份归属感、多一份责任、多一份心，相信未来团队会越办越好。</span></span></span></span></p><p></p><p></p>', 21, 0, 0, '2021-09-18 00:00:00', NULL);
INSERT INTO `article` VALUES (262, '202010804013', 'C语言数据结构之队列', 3, 16, 'Queue队列与栈结构不同的是，队列两头都是“开口”，数据只能从一段进入然后从另一端出去，中间不可存在“插队”一说。如图所示：我们通常把进队列的一段叫做“队尾”，把出队列的一段叫做“队头”，把进数据叫做”入队“，把出数据叫做”出队“，与栈结', '数据结构队列', 'http://img.pzhuweb.cn/2020108040131636702445270.png', '{\"blocks\":[{\"key\":\"e1h50\",\"text\":\"Queue\\n\\n队列与栈结构不同的是，队列两头都是“开口”，数据只能从一段进入然后从另一端出去，中间不可存在“插队”一说。如图所示：\\n\\n\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":7,\"length\":58,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"cbsgp\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{}},{\"key\":\"fsabh\",\"text\":\"\\n\\n我们通常把进队列的一段叫做“队尾”，把出队列的一段叫做“队头”，把进数据叫做”入队“，把出数据叫做”出队“，与栈结构不同的是，队列遵循“先进先出”的原则，这好比我们排队买票也是遵循”先进先出“的原则来的。例如图一中1入队后想要出队，则需先让3出队，然后2出队，方可1出队。\\n\\n队列的存储结构的实现可以有两种方式：\\n\\n1.顺序队列：在顺序表的基础上的队列实现；\\n\\n2.链式队列：在链表的基础上的队列实现；\\n\\n两种实现方式的区别在于顺序表与链表，存储物理结果上，顺序表是数据集中顺序结构，链表则是分散存储数据。在生活上面有很多地方都用到队列结构，排队买票，停车场停车登记等，扑克牌游戏的开发也可以用到。\\n\\n顺序队列\\n\\n顺序队列是在数组的基础上完成的，因此需要数组、头指针、尾指针，当队列处于空时，头指针与尾指针则指向同一个索引下的数据。如图：\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":303,\"length\":4,\"style\":\"BOLD\"},{\"offset\":303,\"length\":4,\"style\":\"FONTSIZE-30\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"fstaq\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"7d0kk\",\"text\":\"\\n\\n更具队列的结构特点，“先进先出”的原则，我们要让一个元素入队，那么rear++，当需要队头元素出队时，只需要top++即可。在此基础上我们先让 {1,2,3,4} 入队\\n\\n\\n元素1出队，如图：\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":74,\"length\":9,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"9bcg0\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"8p09g\",\"text\":\"\\n\\n当所有元素都出队完之后，头指针与尾指针又重新指向同一个索引了，如图：\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"cbrda\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{}},{\"key\":\"9n9kg\",\"text\":\"\\n\\n那么一个队列的入队和出队就简单模拟完成了，这个时候就存在了一个问题，虽然top与rear重新重合了，但是他们指向的是a[4]而不再是a[0]了，前面的空间就以及浪费掉了，顺序队列必定是有限的，那么如果继续入队，有可能造成队列的溢出，程序崩溃，所以我们改良一下顺序队列让他成为一个环，那么当队列入队出队之后top与rear还能指向最初的位置（又回到最初的起点0.0,记忆中你....）\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"244fl\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":4}],\"data\":{}},{\"key\":\"b6fiv\",\"text\":\"\\n\\n与前面顺序队列无异，入队{1,2,3,4,5,6,7}出队如图所示：\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":14,\"length\":15,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"nm8q\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":5}],\"data\":{}},{\"key\":\"6eg4p\",\"text\":\"\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"94r66\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":6}],\"data\":{}},{\"key\":\"ekr19\",\"text\":\"\\n\\n完善之后的代码如下：（测试代码详见 Sequential_Queue.c ）\\n\\n```c\\n/*\\n    队列入队（顺序队列，队头索引，队尾索引，入队元素）\\n*/\\nint inQueue(int *a,int front,int rear,int elem){\\n    //如果rear+1和front重合，则表示数组已满\\n    if ((rear+1)%MAX == front) {\\n        printf(\\\"空间已满\\\\n\\\");\\n        return rear;\\n    }\\n    printf(\\\"入队%2d\\\\n\\\",elem);\\n    //rear余MAX表示存储的数据一直都在MAX“环”中\\n    a[rear%MAX]=elem;\\n    rear++;\\n    return rear;\\n}\\n\\n/*\\n    队列出队（顺序队列，出队索引，队尾索引）\\n*/\\nint outQueue(int *a,int front,int rear){\\n    //如果front==rear，表示队列为空\\n    if(front == rear%MAX) {\\n        printf(\\\"队列为空\\\\n\\\");\\n        return front;\\n    }\\n    printf(\\\"%-2d出队\\\\n\\\",a[front]);\\n    //front+1之后余MAX得到是在MAX这个“环”中的值\\n    front=(front+1)%MAX;\\n    return front;\\n}\\n```\\n\\n测试如图：\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":20,\"length\":19,\"style\":\"BOLD\"}],\"entityRanges\":[{\"offset\":20,\"length\":18,\"key\":7}],\"data\":{}},{\"key\":\"6v27n\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":8}],\"data\":{}},{\"key\":\"15pam\",\"text\":\"\\n链式队列\\n\\n链队列即使使用链表实现的队列存储结构，其特点“先进先出”，它与顺序队列的思路类似，创建top与rear指针分别指向队头和队尾，如图：\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1,\"length\":4,\"style\":\"FONTSIZE-30\"},{\"offset\":1,\"length\":4,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"450a6\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":9}],\"data\":{}},{\"key\":\"f7bqe\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ig5f\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ckl5u\",\"text\":\"链队列->入队\\n\\n队列入队形如链表添加新节点，分为三步骤：\\n\\na. 封装数据    b. 连接新节点    c. rear移向新节点\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"FONTSIZE-24\"},{\"offset\":0,\"length\":7,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"bt95f\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":10}],\"data\":{}},{\"key\":\"11uel\",\"text\":\"\\n\\n代码如下：\\n\\n```c\\n/*\\n    链队列->入队\\n*/\\nQNODE *inQueue(QNODE *rear,int date){\\n    //a.封装数据于一个节点中\\n    QNODE inElem = (QNODE )malloc(sizefo(QNODE));\\n    inElem->date = date;\\n    inElem->next = NULL;\\n    //b.把这个新节点于rear节点建立逻辑关系\\n    rear->next = inElem;\\n    rear = inElem;\\n    //c.返回新队尾，inCount++\\n    inCount++;\\n    return rear;\\n}\\n```\\n\\n 链队列->出队\\n\\n出队遵循“先进先出”原则，所以出队节点永远都是head的下一个节点，它也可以分为三步骤：\\n\\na. 创建outElem指针指向top的下一个节点，也就是要出队的节点；\\n\\nb. top的下一个节点与outElem的下一个节点建立逻辑关系；\\n\\nc. 释放outElem所指向的节点，节约空间；\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":99,\"length\":16,\"style\":\"ITALIC\"},{\"offset\":325,\"length\":7,\"style\":\"FONTSIZE-24\"},{\"offset\":325,\"length\":7,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4bfck\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":11}],\"data\":{}},{\"key\":\"b1mus\",\"text\":\"\\n\\n特殊情况：如果出队节点为队尾，则rear重新指回head\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"agb07\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":12}],\"data\":{}},{\"key\":\"drh76\",\"text\":\"\\n\\n代码如下：\\n\\n```c\\n/*\\n    链队列->出队\\n*/\\nQNODE *outQueue(QNODE *top,QNODE *rear){\\n    if(top->next == NULL){\\n        printf(\\\"队列目前为空\\\\n\\\");\\n        return rear;\\n    }\\n    QNODE *outElem = top->next;\\n    printf(\\\"%-2d出队\\\\n\\\",outElem->date);\\n    top->next = outElem->next;\\n    //这里判断一下如果这个是队尾，那么rear与top为初始状态\\n    if(rear == outElem){\\n        rear = top;\\n    }\\n    //释放已出队节点，节省空间\\n    free(outElem);\\n    outCount++;\\n    return rear;\\n}\\n```\\n\\n测试如下：（测试代码详见 Chain_Queue.c ）\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":434,\"length\":14,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"doi1e\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":13}],\"data\":{}},{\"key\":\"c4jo2\",\"text\":\"\\n\\n总结\\n\\n无论是顺序队列还是链队列，都遵循“先进先出”的原则，只不过链队列比顺序队列的优势在于空间利用率高，灵活性强（顺序队列不可因用户需求增大空间），在于不知道用户需要多大的队列空间时，当然选择链队列，在知道用户需要多大的队列空间时，我们选择顺序队列，例如停车场的容量等等。 \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":2,\"length\":2,\"style\":\"FONTSIZE-30\"},{\"offset\":2,\"length\":2,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/f5d8465a739661aff175f94d56fb1d1f.png\",\"name\":\"image-20210201212004082\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210201212004082\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/32317c54c49750e0104bb44f681f10e7.png\",\"name\":\"image-20210201213656033\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210201213656033\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/435c989810d8b94c51b805acd4615e07.png\",\"name\":\"image-20210201214255534\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210201214255534\"}}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/4c2f705fe215d7a96119f283e310a9f5.png\",\"name\":\"image-20210201214402719\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210201214402719\"}}},\"4\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/9189188d074922dd160cd2b633fdc74e.png\",\"name\":\"image-20210201220001970\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210201220001970\"}}},\"5\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/7f37b8ab0aa04cce4a0b453c47710406.png\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"\"}}},\"6\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/f9172460f85e372104f09fbc64e67f22.png\",\"name\":\"image-20210201220325884\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210201220325884\"}}},\"7\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://github.com/409592048/DateStructure/blob/master/Queue/Chain_Queue.c\",\"target\":\"_blank\"}},\"8\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/f60c0d3d658a2c1d55f2ebfed3926df7.png\",\"name\":\"image-20210201230451345\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210201230451345\"}}},\"9\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/d892406d88a8f469307d6afc2837df43.png\",\"name\":\"image-20210202111139615\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210202111139615\"}}},\"10\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/752e00010d16210d46a1dc4160636547.png\",\"name\":\"image-20210202114211370\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210202114211370\"}}},\"11\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/dcbf26632f612e4bb33453a09ff01f7c.png\",\"name\":\"image-20210202121004647\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210202121004647\"}}},\"12\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/a236a46ca96a709ff702a14a276a4eba.png\",\"name\":\"image-20210202121652060\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210202121652060\"}}},\"13\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/c1c978e8bfaf7de38112b7c6671b5793.png\",\"name\":\"image-20210202123543000\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210202123543000\"}}}}}', '<h1>Queue<br/><br/><span style=\"font-size:16px\">队列与栈结构不同的是，队列两头都是“开口”，数据只能从一段进入然后从另一端出去，中间不可存在“插队”一说。如图所示：</span><br/><br/></h1><div class=\"media-wrap image-wrap\"><img alt=\"image-20210201212004082\" src=\"https://img-blog.csdnimg.cn/img_convert/f5d8465a739661aff175f94d56fb1d1f.png\"/></div><p><br/><br/>我们通常把进队列的一段叫做“队尾”，把出队列的一段叫做“队头”，把进数据叫做”入队“，把出数据叫做”出队“，与栈结构不同的是，队列遵循“先进先出”的原则，这好比我们排队买票也是遵循”先进先出“的原则来的。例如图一中1入队后想要出队，则需先让3出队，然后2出队，方可1出队。<br/><br/>队列的存储结构的实现可以有两种方式：<br/><br/>1.顺序队列：在顺序表的基础上的队列实现；<br/><br/>2.链式队列：在链表的基础上的队列实现；<br/><br/>两种实现方式的区别在于顺序表与链表，存储物理结果上，顺序表是数据集中顺序结构，链表则是分散存储数据。在生活上面有很多地方都用到队列结构，排队买票，停车场停车登记等，扑克牌游戏的开发也可以用到。<br/><br/><strong><span style=\"font-size:30px\">顺序队列</span></strong><br/><br/>顺序队列是在数组的基础上完成的，因此需要数组、头指针、尾指针，当队列处于空时，头指针与尾指针则指向同一个索引下的数据。如图：<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210201213656033\" src=\"https://img-blog.csdnimg.cn/img_convert/32317c54c49750e0104bb44f681f10e7.png\"/></div><p><br/><br/>更具队列的结构特点，“先进先出”的原则，我们要让一个元素入队，那么rear++，当需要队头元素出队时，只需要top++即可。在此基础上我们先让 <code>{1,2,3,4}</code> 入队<br/><br/><br/>元素1出队，如图：<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210201214255534\" src=\"https://img-blog.csdnimg.cn/img_convert/435c989810d8b94c51b805acd4615e07.png\"/></div><p><br/><br/>当所有元素都出队完之后，头指针与尾指针又重新指向同一个索引了，如图：<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210201214402719\" src=\"https://img-blog.csdnimg.cn/img_convert/4c2f705fe215d7a96119f283e310a9f5.png\"/></div><p><br/><br/>那么一个队列的入队和出队就简单模拟完成了，这个时候就存在了一个问题，虽然top与rear重新重合了，但是他们指向的是a[4]而不再是a[0]了，前面的空间就以及浪费掉了，顺序队列必定是有限的，那么如果继续入队，有可能造成队列的溢出，程序崩溃，所以我们改良一下顺序队列让他成为一个环，那么当队列入队出队之后top与rear还能指向最初的位置（又回到最初的起点0.0,记忆中你....）<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210201220001970\" src=\"https://img-blog.csdnimg.cn/img_convert/9189188d074922dd160cd2b633fdc74e.png\"/></div><p><br/><br/>与前面顺序队列无异，入队<code>{1,2,3,4,5,6,7}</code>出队如图所示：<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"\" src=\"https://img-blog.csdnimg.cn/img_convert/7f37b8ab0aa04cce4a0b453c47710406.png\"/></div><p><br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210201220325884\" src=\"https://img-blog.csdnimg.cn/img_convert/f9172460f85e372104f09fbc64e67f22.png\"/></div><p><br/><br/>完善之后的代码如下：（测试代码详见 <strong><a href=\"https://github.com/409592048/DateStructure/blob/master/Queue/Chain_Queue.c\" target=\"_blank\">Sequential_Queue.c</a> </strong>）<br/><br/>&#x60;&#x60;&#x60;c<br/>/*<br/>    队列入队（顺序队列，队头索引，队尾索引，入队元素）<br/>*/<br/>int inQueue(int *a,int front,int rear,int elem){<br/>    //如果rear+1和front重合，则表示数组已满<br/>    if ((rear+1)%MAX == front) {<br/>        printf(&quot;空间已满\\n&quot;);<br/>        return rear;<br/>    }<br/>    printf(&quot;入队%2d\\n&quot;,elem);<br/>    //rear余MAX表示存储的数据一直都在MAX“环”中<br/>    a[rear%MAX]=elem;<br/>    rear++;<br/>    return rear;<br/>}<br/><br/>/*<br/>    队列出队（顺序队列，出队索引，队尾索引）<br/>*/<br/>int outQueue(int *a,int front,int rear){<br/>    //如果front==rear，表示队列为空<br/>    if(front == rear%MAX) {<br/>        printf(&quot;队列为空\\n&quot;);<br/>        return front;<br/>    }<br/>    printf(&quot;%-2d出队\\n&quot;,a[front]);<br/>    //front+1之后余MAX得到是在MAX这个“环”中的值<br/>    front=(front+1)%MAX;<br/>    return front;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>测试如图：<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210201230451345\" src=\"https://img-blog.csdnimg.cn/img_convert/f60c0d3d658a2c1d55f2ebfed3926df7.png\"/></div><p><br/><span style=\"font-size:30px\"><strong>链式队列</strong></span><br/><br/>链队列即使使用链表实现的队列存储结构，其特点“先进先出”，它与顺序队列的思路类似，创建top与rear指针分别指向队头和队尾，如图：<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210202111139615\" src=\"https://img-blog.csdnimg.cn/img_convert/d892406d88a8f469307d6afc2837df43.png\"/></div><p></p><p></p><p><span style=\"font-size:24px\"><strong>链队列-&gt;入队</strong></span><br/><br/>队列入队形如链表添加新节点，分为三步骤：<br/><br/>a. 封装数据    b. 连接新节点    c. rear移向新节点<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210202114211370\" src=\"https://img-blog.csdnimg.cn/img_convert/752e00010d16210d46a1dc4160636547.png\"/></div><p><br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c<br/>/*<br/>    链队列-&gt;入队<br/>*/<br/>QNODE *inQueue(QNODE *rear,int date){<br/>    //a.封装数据于一个节点中<br/>    QNODE <em>inElem = (QNODE </em>)malloc(sizefo(QNODE));<br/>    inElem-&gt;date = date;<br/>    inElem-&gt;next = NULL;<br/>    //b.把这个新节点于rear节点建立逻辑关系<br/>    rear-&gt;next = inElem;<br/>    rear = inElem;<br/>    //c.返回新队尾，inCount++<br/>    inCount++;<br/>    return rear;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/> <span style=\"font-size:24px\"><strong>链队列-&gt;出队</strong></span><br/><br/>出队遵循“先进先出”原则，所以出队节点永远都是head的下一个节点，它也可以分为三步骤：<br/><br/>a. 创建outElem指针指向top的下一个节点，也就是要出队的节点；<br/><br/>b. top的下一个节点与outElem的下一个节点建立逻辑关系；<br/><br/>c. 释放outElem所指向的节点，节约空间；<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210202121004647\" src=\"https://img-blog.csdnimg.cn/img_convert/dcbf26632f612e4bb33453a09ff01f7c.png\"/></div><p><br/><br/>特殊情况：如果出队节点为队尾，则rear重新指回head<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210202121652060\" src=\"https://img-blog.csdnimg.cn/img_convert/a236a46ca96a709ff702a14a276a4eba.png\"/></div><p><br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c<br/>/*<br/>    链队列-&gt;出队<br/>*/<br/>QNODE *outQueue(QNODE *top,QNODE *rear){<br/>    if(top-&gt;next == NULL){<br/>        printf(&quot;队列目前为空\\n&quot;);<br/>        return rear;<br/>    }<br/>    QNODE *outElem = top-&gt;next;<br/>    printf(&quot;%-2d出队\\n&quot;,outElem-&gt;date);<br/>    top-&gt;next = outElem-&gt;next;<br/>    //这里判断一下如果这个是队尾，那么rear与top为初始状态<br/>    if(rear == outElem){<br/>        rear = top;<br/>    }<br/>    //释放已出队节点，节省空间<br/>    free(outElem);<br/>    outCount++;<br/>    return rear;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>测试如下：（测试代码详见 <strong>Chain_Queue.c </strong>）<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210202123543000\" src=\"https://img-blog.csdnimg.cn/img_convert/c1c978e8bfaf7de38112b7c6671b5793.png\"/></div><p><br/><br/><span style=\"font-size:30px\"><strong>总结</strong></span><br/><br/>无论是顺序队列还是链队列，都遵循“先进先出”的原则，只不过链队列比顺序队列的优势在于空间利用率高，灵活性强（顺序队列不可因用户需求增大空间），在于不知道用户需要多大的队列空间时，当然选择链队列，在知道用户需要多大的队列空间时，我们选择顺序队列，例如停车场的容量等等。 </p>', 5, 1, 0, '2021-02-02 00:00:00', NULL);
INSERT INTO `article` VALUES (263, '202010804027', 'WEB应用专业团队2021-2022-1学期第一次学术报告会', 5, 13, '攀枝花学院WEB应用专业团队于2021年9月24日19:40在砺志楼四楼会议室开展了本学期的第一次学术报告会。本次学术报告会由指导老师兰全祥主持，20级成员马正义主讲，报告会内容为c语言中if-else、switch卫语句等，团队全体成员参', '报告会', 'http://img.pzhuweb.cn/2020108040271632579078444.jpg', '{\"blocks\":[{\"key\":\"24r2r\",\"text\":\"攀枝花学院WEB应用专业团队于2021年9月24日19:40在砺志楼四楼会议室开展了本学期的第一次学术报告会。本次学术报告会由指导老师兰全祥主持，20级成员马正义主讲，报告会内容为c语言中if-else、switch卫语句等，团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":126,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":126,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":126,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"fkqln\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2unlp\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"motj\",\"text\":\"会议伊始，队长王凯琪进行了点到,并向大一同学介绍了WEB应用专业团队目前情况，让新同学对团队有一个大致的了解和心里准备。紧接着马正义开始本次报告会内容讲解，他首先介绍了分支结构知识，引出了if-else和switch语句的语法规范、使用场景以及两者之间的转换关系，同时为了解决多级嵌套问题，提出了使用卫语句优化代码从而增强其可读性。然后，马正义又介绍了逻辑短路相关知识，并列举了一些例题让大家熟悉并掌握上述知识。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":206,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":206,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":206,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":206,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"96ve2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"igjv\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"981tj\",\"text\":\"之后，为了解决复杂逻辑业务对于多分支语句造成的不易维护、可读性差等问题，提出了设计模式中常见的策略模式，并示例讲解了策略模式的开发步骤及使用方法。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":73,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":73,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":73,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":73,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"67p68\",\"text\":\"会议最后,指导老师兰全祥分别对以上内容进行了梳理、总结,带领大家回忆了策略模式的使用步骤。本次报告会让大一同学充分了解了WEB应用专业团队，感受了团队的学习氛围，同时也为新学期报告会和团队活动开展奠定了基础。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":104,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":104,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":104,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":104,\"style\":\"COLOR-000000\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271632578538836.jpg\",\"type\":\"IMAGE\",\"width\":870,\"height\":489}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271632578538878.jpg\",\"type\":\"IMAGE\",\"width\":868,\"height\":488}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">攀枝花学院WEB应用专业团队于2021年9月24日19:40在砺志楼四楼会议室开展了本学期的第一次学术报告会。本次学术报告会由指导老师兰全祥主持，20级成员马正义主讲，报告会内容为c语言中if-else、switch卫语句等，团队全体成员参加本次会议。</span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271632578538836.jpg\" width=\"870\" height=\"489\" style=\"width:870px;height:489px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\"><span style=\"color:#000000\">会议伊始，队长王凯琪进行了点到,并向大一同学介绍了WEB应用专业团队目前情况，让新同学对团队有一个大致的了解和心里准备。紧接着马正义开始本次报告会内容讲解，他首先介绍了分支结构知识，引出了if-else和switch语句的语法规范、使用场景以及两者之间的转换关系，同时为了解决多级嵌套问题，提出了使用卫语句优化代码从而增强其可读性。然后，马正义又介绍了逻辑短路相关知识，并列举了一些例题让大家熟悉并掌握上述知识。</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271632578538878.jpg\" width=\"868\" height=\"488\" style=\"width:868px;height:488px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\"><span style=\"color:#000000\">之后，为了解决复杂逻辑业务对于多分支语句造成的不易维护、可读性差等问题，提出了设计模式中常见的策略模式，并示例讲解了策略模式的开发步骤及使用方法。</span></span></span></span></p><p style=\"text-indent:2em;\" size=\"1\" _root=\"[object Object]\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\"><span style=\"color:#000000\">会议最后,指导老师兰全祥分别对以上内容进行了梳理、总结,带领大家回忆了策略模式的使用步骤。本次报告会让大一同学充分了解了WEB应用专业团队，感受了团队的学习氛围，同时也为新学期报告会和团队活动开展奠定了基础。</span></span></span></span></p>', 12, 0, 0, '2021-09-25 00:00:00', NULL);
INSERT INTO `article` VALUES (264, '202010804027', 'WEB应用专业团队2021-2022-1学期第二次学术报告会', 5, 13, '攀枝花学院WEB应用专业团队于2021年10月10日20:00在线上腾讯会议开展了本学期的第二次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员吉克伍且主讲，报告会内容为数组、循环结构以及java集合框架等，团队全体成员参加本', '报告会', 'http://img.pzhuweb.cn/2020108040271634032008897.png', '{\"blocks\":[{\"key\":\"ecsrb\",\"text\":\"攀枝花学院WEB应用专业团队于2021年10月10日20:00在线上腾讯会议开展了本学期的第二次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员吉克伍且主讲，报告会内容为数组、循环结构以及java集合框架等，团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":124,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":124,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":124,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"4imrh\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"f59pv\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"6egnr\",\"text\":\"会议伊始，指导老师兰全祥对上周周报进行了点评，并提醒大家做好2020-2021学年度学生科研成果奖励和信息统计工作。紧接着，吉克伍且详细讲解了数组的定义、使用和遍历。以数组的遍历，引出了三大循环结构（for、while、do while），并讲解了上述循环结构的区别和联系。之后，吉克伍且讲述了java中保存多个同类型数据所采用的技术——集合，并对Java集合框架中的不同接口、类和它们之间的关系进行了介绍。在报告会中，兰全祥强调了ArrayList的扩容机制以及ArrayList、LinkedList、HashSet与TreeSet的区别等。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":273,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":273,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":273,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"72h1v\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"em1dl\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"59mkt\",\"text\":\"会议最后，兰全祥对此次报告会内容进行了梳理和总结，提醒大家需要注意数组、循环的应用场景，并要求大家熟悉并掌握Java集合框架中常用类库的区别和联系。另外，兰全祥希望大家在之后的报告会中要多融入自己的观点和想法，不要照本宣科，应该多结合课外知识、实际应用等深入到了解和研究技术的原理和实现，不要太浮于表面，这样才能发挥报告会的研究和探讨作用。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":170,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":170,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271634031849992.png\",\"name\":\"图片1.png\",\"type\":\"IMAGE\",\"width\":929,\"height\":519.3250122070312,\"meta\":{\"id\":364,\"title\":\"2020108040271634031849992.png\",\"alt\":\"2020108040271634031849992.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271634031853003.png\",\"type\":\"IMAGE\",\"width\":900.2000732421875,\"height\":502}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">攀枝花学院WEB应用专业团队于2021年10月10日20:00在线上腾讯会议开展了本学期的第二次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员吉克伍且主讲，报告会内容为数组、循环结构以及java集合框架等，团队全体成员参加本次会议。</span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"364\" title=\"2020108040271634031849992.png\" alt=\"2020108040271634031849992.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2020108040271634031849992.png\" width=\"929\" height=\"519.3250122070312\" style=\"width:929px;height:519.3250122070312px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议伊始，指导老师兰全祥对上周周报进行了点评，并提醒大家做好2020-2021学年度学生科研成果奖励和信息统计工作。紧接着，吉克伍且详细讲解了数组的定义、使用和遍历。以数组的遍历，引出了三大循环结构（for、while、do while），并讲解了上述循环结构的区别和联系。之后，吉克伍且讲述了java中保存多个同类型数据所采用的技术——集合，并对Java集合框架中的不同接口、类和它们之间的关系进行了介绍。在报告会中，兰全祥强调了ArrayList的扩容机制以及ArrayList、LinkedList、HashSet与TreeSet的区别等。</span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271634031853003.png\" width=\"900.2000732421875\" height=\"502\" style=\"width:900.2000732421875px;height:502px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"letter-spacing:1px\">会议最后，兰全祥对此次报告会内容进行了梳理和总结，提醒大家需要注意数组、循环的应用场景，并要求大家熟悉并掌握Java集合框架中常用类库的区别和联系。另外，兰全祥希望大家在之后的报告会中要多融入自己的观点和想法，不要照本宣科，应该多结合课外知识、实际应用等深入到了解和研究技术的原理和实现，不要太浮于表面，这样才能发挥报告会的研究和探讨作用。</span></span></p>', 24, 0, 0, '2021-10-12 00:00:00', NULL);
INSERT INTO `article` VALUES (265, '201710804035', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (266, '202010804027', 'WEB应用专业团队2021-2022-1学期第三次学术报告会', 3, 13, '攀枝花学院WEB应用专业团队于2021年10月16日19:30在砺志楼四楼会议室开展了本学期的第三次学术报告会。本次学术报告会由指导老师兰全祥主持，20级成员覃茏伟主讲，报告会内容为四种查找算法，团队全体成员参加本次会议。会议伊始,队长王凯', '报告会', 'http://img.pzhuweb.cn/2020108040271635040981285.jpg', '{\"blocks\":[{\"key\":\"8uild\",\"text\":\"攀枝花学院WEB应用专业团队于2021年10月16日19:30在砺志楼四楼会议室开展了本学期的第三次学术报告会。本次学术报告会由指导老师兰全祥主持，20级成员覃茏伟主讲，报告会内容为四种查找算法，团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":111,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":111,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":111,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"773ne\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"fpm5c\",\"text\":\"会议伊始,队长王凯琪进行了点到，兰全祥点评了成员提交的周报并提醒大家要按照规定格式书写，以便于更加清晰地了解团队成员学习动态。然后,兰全祥老师总结复习了之前报告会中关于循环结构和数组相关知识。之后覃茏伟开始讲解四种查找算法——顺序查找、折半查找、插值查找以及斐波拉契查找。讲解中指出顺序查找适用于任意待查序列，而其他三种查找只适用于有序序列，且后三种查找算法思路大同小异，区别在于缩小查找范围的方法不同。紧接着，兰全祥带领大家了解并讨论了Java集合框架中ArrayList与TreeMap等底层查找算法的实现原理。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":258,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":258,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":258,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"edvv2\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9oiji\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"2gp3b\",\"text\":\"会议最后，覃茏伟就今天讲解的内容进行了大致总结，指导老师兰全祥对其进行了补充，2018级吴涛同学对报告会讲解进行了点评，并给出相关建议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":68,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":68,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":68,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"cnda2\",\"text\":\"通过此次会议，让大家对四种查找算法的思想和实现原理有了进一步了解，同时对其优缺点和联系也有了更深的认识。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":52,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":52,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":52,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271635040406038.jpg\",\"name\":\"IMG_20211016_193931.jpg\",\"type\":\"IMAGE\",\"width\":877.2000732421875,\"height\":521,\"meta\":{\"id\":367,\"title\":\"2020108040271635040406038.jpg\",\"alt\":\"2020108040271635040406038.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271635040406032.jpg\",\"type\":\"IMAGE\",\"width\":871,\"height\":546}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">攀枝花学院WEB应用专业团队于2021年10月16日19:30在砺志楼四楼会议室开展了本学期的第三次学术报告会。本次学术报告会由指导老师兰全祥主持，20级成员覃茏伟主讲，报告会内容为四种查找算法，团队全体成员参加本次会议。</span></span></span></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"367\" title=\"2020108040271635040406038.jpg\" alt=\"2020108040271635040406038.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2020108040271635040406038.jpg\" width=\"877.2000732421875\" height=\"521\" style=\"width:877.2000732421875px;height:521px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议伊始,队长王凯琪进行了点到，兰全祥点评了成员提交的周报并提醒大家要按照规定格式书写，以便于更加清晰地了解团队成员学习动态。然后,兰全祥老师总结复习了之前报告会中关于循环结构和数组相关知识。之后覃茏伟开始讲解四种查找算法——顺序查找、折半查找、插值查找以及斐波拉契查找。讲解中指出顺序查找适用于任意待查序列，而其他三种查找只适用于有序序列，且后三种查找算法思路大同小异，区别在于缩小查找范围的方法不同。紧接着，兰全祥带领大家了解并讨论了Java集合框架中ArrayList与TreeMap等底层查找算法的实现原理。</span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271635040406032.jpg\" width=\"871\" height=\"546\" style=\"width:871px;height:546px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议最后，覃茏伟就今天讲解的内容进行了大致总结，指导老师兰全祥对其进行了补充，2018级吴涛同学对报告会讲解进行了点评，并给出相关建议。</span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">通过此次会议，让大家对四种查找算法的思想和实现原理有了进一步了解，同时对其优缺点和联系也有了更深的认识。</span></span></span></p>', 49, 0, 0, '2021-10-20 00:00:00', NULL);
INSERT INTO `article` VALUES (267, '202010804027', 'WEB应用专业团队2021-2022-1学期第四次学术报告会', 3, 13, '攀枝花学院WEB应用专业团队于2021年10月23日19：30在砺志楼四楼会议室开展了本学期第四次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员覃子豪主讲，主讲内容为函数和递归，团队全体成员参加本次会议。会议伊始，覃子豪讲解', '报告会', 'http://img.pzhuweb.cn/2020108040271635601037469.jpg', '{\"blocks\":[{\"key\":\"kq5g\",\"text\":\"攀枝花学院WEB应用专业团队于2021年10月23日19：30在砺志楼四楼会议室开展了本学期第四次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员覃子豪主讲，主讲内容为函数和递归，团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":110,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":110,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":110,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":110,\"style\":\"LETTERSPACING-1\"},{\"offset\":73,\"length\":5,\"style\":\"BGCOLOR-FFFFFF\"},{\"offset\":86,\"length\":10,\"style\":\"BGCOLOR-FFFFFF\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"arbb9\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a92k4\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"fvc0g\",\"text\":\"会议伊始，覃子豪讲解了函数的概念和语法，通过互动的形式与在场二年级成员归纳总结了函数的定义、函数的调用以及函数重载等知识，之后兰全祥总结到函数就是用于实现某个功能的代码块，可以被重复调用、反复执行，并根据所需要处理的数据和返回结果来确定函数的形参列表和返回类型。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":131,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":131,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":131,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":131,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"clt06\",\"text\":\"紧接着，覃子豪就函数可以相互调用而引申出了函数的递归调用，即函数不断调用自身。通过对1至n的和、斐波拉契数列以及汉罗塔等问题的讲解，阐明了函数的递归必须存在边界，且在递归的过程中，函数应不断向边界靠拢。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":101,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":101,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":101,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":101,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"1jtan\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3p8bb\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"fl0r0\",\"text\":\"会议最后，指导老师兰全祥对本次报告会内容进行了详细总结，他强调在程序开发过程中应该注意命名规范、编程规范等问题，同时提醒到函数的设计应根据实际需求而定，函数的递归虽然简单明了，但要注意算法复杂度的问题。另外，经过这几次报告会，C语言程序设计相关内容差不多讲解完毕，希望参会的大一年级同学能够有所收获，大二年级同学能够温故知新，大三年级同学能够胸有丘壑。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":176,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":176,\"style\":\"FONTSIZE-11pt\"},{\"offset\":0,\"length\":176,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":176,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271635600831385.jpg\",\"type\":\"IMAGE\",\"width\":767,\"height\":384}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271635600831435.jpg\",\"type\":\"IMAGE\",\"width\":780.2000122070312,\"height\":457}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"font-size:11ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">攀枝花学院WEB应用专业团队于2021年10月23日19：30在砺志楼四楼会议室开展了本学期第四次学术报告会。本次学术报告会由指导老师兰全祥主持，<span style=\"background-color:#ffffff\">2020级</span>成员覃子豪主讲，<span style=\"background-color:#ffffff\">主讲内容为函数和递归</span>，团队全体成员参加本次会议。</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271635600831385.jpg\" width=\"767\" height=\"384\" style=\"width:767px;height:384px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"font-size:11ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议伊始，覃子豪讲解了函数的概念和语法，通过互动的形式与在场二年级成员归纳总结了函数的定义、函数的调用以及函数重载等知识，之后兰全祥总结到函数就是用于实现某个功能的代码块，可以被重复调用、反复执行，并根据所需要处理的数据和返回结果来确定函数的形参列表和返回类型。</span></span></span></span></p><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"font-size:11ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">紧接着，覃子豪就函数可以相互调用而引申出了函数的递归调用，即函数不断调用自身。通过对1至n的和、斐波拉契数列以及汉罗塔等问题的讲解，阐明了函数的递归必须存在边界，且在递归的过程中，函数应不断向边界靠拢。</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271635600831435.jpg\" width=\"780.2000122070312\" height=\"457\" style=\"width:780.2000122070312px;height:457px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"color:#333333\"><span style=\"font-size:11ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议最后，指导老师兰全祥对本次报告会内容进行了详细总结，他强调在程序开发过程中应该注意命名规范、编程规范等问题，同时提醒到函数的设计应根据实际需求而定，函数的递归虽然简单明了，但要注意算法复杂度的问题。另外，经过这几次报告会，C语言程序设计相关内容差不多讲解完毕，希望参会的大一年级同学能够有所收获，大二年级同学能够温故知新，大三年级同学能够胸有丘壑。</span></span></span></span></p>', 19, 0, 0, '2021-10-26 00:00:00', NULL);
INSERT INTO `article` VALUES (268, '202010804013', 'C语言实现贪吃蛇游戏', 3, 16, 'SnakeGame## 一、运行游戏代码仓库gitee游戏代码SnakeGame.cpp ## 二、设计思路宏定义、全局变量、函数定义&#x60;&#x60;&#x60;c/*******宏  定  义*******/#define U 1', '贪吃蛇', 'http://img.pzhuweb.cn/2020108040131636703027843.png', '{\"blocks\":[{\"key\":\"3v64s\",\"text\":\"SnakeGame\\n## 一、运行游戏\\n代码仓库gitee\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":20,\"length\":9,\"key\":0}],\"data\":{}},{\"key\":\"sfof\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"23kn2\",\"text\":\"\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dqvkq\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"3m8tu\",\"text\":\"\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"sanb\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{}},{\"key\":\"7evo6\",\"text\":\"\\n\\n游戏代码\\n\\nSnakeGame.cpp \\n## 二、设计思路\\n\\n宏定义、全局变量、函数定义\\n\\n```c\\n/*******宏  定  义*******/\\n#define U 1\\n#define D 2\\n#define L 3 \\n#define R 4    //蛇的状态，U：上 ；D：下；L:左 R：右\\n\\n/*******定  义  全  局  变  量 *******/\\ntypedef struct snake{ \\t\\t//蛇身的一个节点\\n    int x;\\t\\t\\t\\t\\t//节点x坐标\\n    int y;\\t\\t\\t\\t\\t//节点y坐标\\n    struct snake *next;\\t\\t//蛇身体下一节点\\n}snake;\\nint score=0;                //总得分\\nint add=10;\\t\\t\\t        //每次吃食物得分\\nint HighScore = 0;\\t\\t\\t//最高分\\nint status;\\t\\t\\t\\t\\t//蛇前进状态\\nint sleeptime=200;\\t\\t\\t//每次运行的时间间隔\\nsnake *head=NULL;\\t\\t\\t//蛇头指针\\nsnake *food=NULL;\\t\\t\\t//食物指针\\nsnake *q=NULL;\\t\\t\\t\\t//遍历蛇的时候用到的指针\\nint endgamestatus=0;\\t\\t//游戏结束的情况，1：撞到墙；2：咬到自己；3：主动退出游戏\\nHANDLE hOut;\\t\\t\\t\\t//控制台句柄\\n\\n/*******函  数  声  明 *******/\\nvoid gotoxy(int x,int y);   //设置光标位置\\nint color(int c);           //更改文字颜色\\nvoid welcometogame();       //开始界面\\nvoid pointSnake();          //绘制初始界面的蛇\\nvoid createMap();           //绘制地图\\nvoid initsnake();           //初始化蛇身，画蛇身\\nvoid createfood();          //创建并随机出现食物\\nint biteself();             //判断是否咬到了自己\\nvoid cantcrosswall();       //设置蛇撞墙的情况\\nvoid speedup();\\t\\t\\t\\t//加速\\nvoid speeddown();\\t\\t\\t//减速\\nvoid MOVE(snake *nexthead)  //蛇移动情况\\nvoid snakemove();           //控制蛇前进方向\\nvoid keyboardControl();     //控制键盘按键\\nvoid endgame();             //游戏结束\\nvoid choose();\\t\\t\\t\\t//游戏失败之后的选择\\nvoid File_out();            //在文件中读取最高分\\nvoid File_in();            \\t//储存最高分进文件\\nvoid scoreandtips();\\t\\t//游戏界面右侧的得分和小提示\\n````\\n\\n### 设置光标位置\\n\\n设置光标位置需要用到COORD结构体、SetConsoleCursorPosition函数、GetStdHandle(STD_OUTPUT_HANDLE)句柄，来实现对光标位置的改变，代码如下：\\n\\n```c\\n/*\\n\\t设置光标位置\\n*/\\nvoid gotoxy(int x,int y){\\n    COORD cursor;\\n    cursor.X=x;\\n    cursor.Y=y;\\n    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),cursor);\\n}\\n````\\n\\n### 设置字体颜色\\n\\n设置字体颜色需要用到SetConsoleTextAttribute函数、GetStdHandle(STD_OUTPUT_HANDLE)句柄、还有对应的系统颜色号，代码如下：\\n\\n````c\\n/*\\n\\t文字颜色函数\\n*/\\nint color(int c){\\n\\t//SetConsoleTextAttribute是API设置控制台窗口字体颜色和背景色的函数\\n\\tSetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), c);        //更改文字颜色\\n\\treturn 0;\\n}\\n````\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":8,\"length\":13,\"style\":\"BOLD\"}],\"entityRanges\":[{\"offset\":8,\"length\":14,\"key\":4}],\"data\":{}},{\"key\":\"4lfma\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":5}],\"data\":{}},{\"key\":\"8dego\",\"text\":\"\\n\\n\\n### 创建地图\\n\\n直接用printf打印特殊字符即可\\n\\n````c\\n/*\\n\\t创建地图\\n*/\\nvoid createMap(){\\n    int i,j;\\n    for(i=0;i<58;i+=2){\\t\\t//打印上下边框\\n        gotoxy(i,0);\\n\\t\\tcolor(6);\\t\\t\\t//橙色的边框\\n        printf(\\\"□\\\");\\n        gotoxy(i,26);\\n        printf(\\\"□\\\");\\n    }\\n    for(i=1;i<26;i++){\\t\\t//打印左右边框\\n        gotoxy(0,i);\\n        printf(\\\"□\\\");                        \\n        gotoxy(56,i);\\n        printf(\\\"□\\\");        \\n    }\\n\\tfor(i = 2;i<56;i+=2){\\t//打印中间网格\\n\\t\\tfor(j = 1;j<26;j++){\\n\\t\\t\\tgotoxy(i,j);\\n\\t\\t\\tcolor(8);\\n\\t\\t\\tprintf(\\\"■\\\\n\\\\n\\\");\\n\\t\\t}\\n\\t}\\n}\\n````\\n\\n### 初始化蛇身\\n\\n初始化蛇身需要用到单向链表的头插法，先从尾部开始画。\\n\\n在从头到尾输出蛇身\\n\\n````c\\n/*\\n\\t初始化蛇身，画蛇身\\n*/\\nvoid initsnake(){\\n    snake *tail;\\n    int i;\\n    tail=(snake*)malloc(sizeof(snake));\\t//从蛇尾开始，头插法，以x,y设定开始的位置\\n    tail->x=20;\\t\\t\\t\\t//蛇的初始位置（20,8）\\n    tail->y=8;\\n    tail->next=NULL;\\n    for(i=1;i<=2;i++){       //设置蛇身，长度为3\\n        head=(snake*)malloc(sizeof(snake)); //初始化蛇头\\n        head->next=tail;    //蛇头的下一位为蛇尾\\n        head->x=20+2*i;     //设置蛇头位置\\n        head->y=8;\\n        tail=head;          //蛇头变成蛇尾，然后重复循环\\n    }\\n    while(tail!=NULL){\\t\\t//从头到尾，输出蛇身\\n        gotoxy(tail->x,tail->y);\\n\\t\\tcolor(14);\\n        printf(\\\"◆\\\");       //输出蛇身，蛇身使用◆组成\\n        tail=tail->next;    //蛇头输出完毕，输出蛇头的下一位，一直输出到蛇尾\\n    }\\n}\\n````\\n\\n### 随机出现食物\\n\\n首先初始化随机数srand函数；\\n\\n初始化一个食物，让其x坐标必须为偶数（使得蛇头可以转弯）且在2~ 53之间，y坐标在1~24之间。\\n\\n再判断蛇身是否与食物重合，如果重合释放食物，再次创造食物，随后打印。\\n\\n````c\\n/*\\n\\t随机出现食物\\n*/\\nvoid createfood(){\\n    srand((unsigned)time(NULL));        \\t        //初始化随机数\\n    snake food_1=(snake)malloc(sizeof(snake));    //初始化food_1\\n    while((food_1->x%2)!=0){  \\t\\t\\t\\t        //保证其为偶数，使得蛇头吃完可以转弯\\n        food_1->x=rand()%52+2;                      //食物随机出现，食物的x坐标在2~53\\n    }\\n    food_1->y=rand()%24+1;\\t\\t\\t\\t\\t        //食物的y坐标在1~24\\n    q=head;\\n    while(q->next==NULL){\\n        if(q->x==food_1->x && q->y==food_1->y){     //判断蛇身是否与食物重合\\n            free(food_1);                           //如果蛇身和食物重合，那么释放食物指针\\n            createfood();                           //重新创建食物\\n        }\\n        q=q->next;\\n    }\\n    gotoxy(food_1->x,food_1->y);\\n    food=food_1;\\n\\tcolor(3);\\n    printf(\\\"●\\\");                                    //输出食物\\n}\\n````\\n\\n### 开始界面及右侧得分和小提示\\n\\n简单的打印输出以及分支语句，略。\\n\\n### 判断是否咬到了自己\\n\\n先定义一个除蛇头之外蛇身的一个节点，随后遍历蛇身，看蛇头是否与蛇身x，y坐标重合\\n\\n````c\\n/*\\n\\t判断是否咬到了自己\\n*/\\nint biteself(){\\n    snake *self=head->next;                          //先定义一个除蛇头之外蛇身的一个节点\\n    while(self!=NULL){\\n        if(self->x==head->x && self->y==head->y){    //如果self和蛇身上的节点重合\\n            return 1;                                //返回1,咬中\\n        }\\n        self=self->next;\\n    }\\n    return 0;\\n}\\n````\\n\\n### 判断是否撞墙\\n\\n直接判断蛇头的x，y坐标是否与墙边坐标重合\\n\\n````c\\n/*\\n\\t设置蛇撞墙的情况\\n*/\\nvoid cantcrosswall(){  \\n    if(head->x==0 || head->x==56 ||head->y==0 || head->y==26){ //蛇头碰到了墙壁\\n        endgamestatus=1;        //返回第一种情况（撞墙）\\n        endgame();              //出现游戏结束界面\\n    }\\n}\\n````\\n\\n### 加速与减速\\n\\n调控全局变量sleeptime，加速加分，减速减分\\n\\n````c\\n/*\\n\\t加速，蛇吃到食物会自动提速，按F1加速，得分+2/次\\n*/\\nvoid speedup(){\\n\\tif(sleeptime>=100){\\n\\t\\tsleeptime=sleeptime-10;\\n\\t\\tadd=add+2;\\n    }\\n}\\n/*\\n\\t减速，按F2减速，得分-2/次\\n*/\\nvoid speeddown(){\\n\\tif(sleeptime<350){               //如果时间间隔小于350\\n        sleeptime=sleeptime+30;     //时间间隔加上30\\n        add=add-2;                  //每吃一次食物的得分减2\\n    }\\n}\\n````\\n\\n### 控制方向\\n\\n首先为下一步开辟空间（nexthead），U上，D下，L左，R右\\n\\n向上前进时，x坐标不动，y坐标-1；\\n\\n向下前进时，x坐标不动，y坐标+1；\\n\\n向左前进时，x坐标-1，y坐标不动；\\n\\n向右前进时，x坐标+1，y坐标不动；\\n\\n如果下一个位置有食物，即下一个位置的坐标与食物坐标相同，\\n\\n则把食物的●位置换成◆，并总分加add，加速，再创建食物；\\n\\n如果下一个位置没有食物，蛇身就正常往前打印输出。\\n\\n再经过是否有食物的判断打印之后，指针q（遍历蛇身指针）已经指向蛇尾，\\n\\n打印蛇尾的下一个位置为地图■，并释放蛇尾的下一个位置后指向NULL。\\n\\n主要代码如下（这里以向上为例）：\\n\\n````c\\nsnake  nexthead=(snake)malloc(sizeof(snake));\\t\\t//为下一步开辟空间\\n    cantcrosswall();\\n    if(status==U){\\n        nexthead->x=head->x;        //向上前进时，x坐标不动，y坐标-1\\n        nexthead->y=head->y-1;\\n        nexthead->next=head;\\n        head=nexthead;\\n        q=head;\\t\\t\\t\\t\\t\\t//指针q指向蛇头\\n        if(nexthead->x==food->x && nexthead->y==food->y){//如果下一个有食物\\n            while(q!=NULL){\\n                gotoxy(q->x,q->y);\\n\\t\\t\\t\\tcolor(14);\\n                printf(\\\"◆\\\");       //原来食物的位置，从●换成◆\\n                q=q->next;          //指针q指向的蛇身的下一位也执行循环里的操作\\n            }\\n            score+=add;        //吃了一个食物，在总分上加上食物的分\\n\\t\\t\\tspeedup();\\n            createfood();           //创建食物\\n        }else{\\n            while(q->next->next!=NULL){\\t//如果没遇到食物\\n                gotoxy(q->x,q->y);\\n                color(14);\\n                printf(\\\"◆\\\");           //蛇正常往前走，输出当前位置的蛇身\\n                q=q->next;              //继续输出整个蛇身\\n            }\\n            gotoxy(q->next->x,q->next->y);//经过上面的循环，q指向蛇尾,下一位就是蛇走过去的位置\\n\\t\\t\\tcolor(8);\\n            printf(\\\"■\\\");\\n            free(q->next);\\t\\t\\t//进行输出■之后，释放指向下一位的指针\\n            q->next=NULL;\\t\\t\\t//指针下一位指向空\\n        }\\n    }\\n````\\n### 控制键盘按键\\n\\n初始化status为R（初始化向右移动），这里需要用到死循环，打印最新分数，以及判断用户的键盘操作\\n\\n空格（space）暂停游戏，F1加速，F2减速，这里用到Sleep函数使得线程暂停，Sleep(sleeptime)很好的完成游戏的加速减速。一直循环使用snakemove函数，使得蛇身移动。\\n\\n````c\\n/*\\n\\t控制键盘按键\\n*/\\nvoid keyboardControl(){\\n\\tstatus=R;       //初始蛇向右移动\\n    scoreandtips(); //打印提示栏\\n    while(1){\\n        newScore(); //打印当前得分\\n        //GetAsyncKeyState函数用来判断函数调用时指定虚拟键的状态\\n        if(GetAsyncKeyState(VK_UP) && status!=D){\\n            status=U;//如果蛇不是向下前进的时候，按上键，执行向上前进操作\\n        }\\n        else if(GetAsyncKeyState(VK_DOWN) && status!=U){     \\n            status=D;//如果蛇不是向上前进的时候，按下键，执行向下前进操作\\n        }\\n        else if(GetAsyncKeyState(VK_LEFT)&& status!=R){      \\n            status=L;//如果蛇不是向右前进的时候，按左键，执行向左前进\\n        }\\n        else if(GetAsyncKeyState(VK_RIGHT)&& status!=L){     \\n            status=R;//如果蛇不是向左前进的时候，按右键，执行向右前进\\n        }\\n        if(GetAsyncKeyState(VK_SPACE)){\\t\\t    //按暂停键，执行pause暂停函数\\n            while(1){\\n\\t\\t\\t\\tSleep(300); //sleep()函数令进程暂停，直到达到里面设定的参数的时间\\n\\t\\t\\t\\tif(GetAsyncKeyState(VK_SPACE)){ //按空格键暂停\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}       \\n        }\\n        else if(GetAsyncKeyState(VK_ESCAPE)){\\n            endgamestatus=3;    //按esc键，直接到结束界面\\n            break;\\n        }\\n        else if(GetAsyncKeyState(VK_F1)){    //按F1键，加速\\n            speedup();\\n        }\\n        else if(GetAsyncKeyState(VK_F2)){    //按F2键，减速\\n        \\tspeeddown();\\n        }\\n        Sleep(sleeptime);\\n        snakemove();\\n    }\\n}\\n````\\n\\n### 最高分读写\\n\\nFILE文件指针的运用，简单的写入写出\\n\\n### 结束游戏画面以及分支选项\\n\\n先清屏这里用到system(\\\"cls\\\")；再判断结束状态，endgamestatus，再判断用户本次得分是否超过历史最高分，用简单的if语句即可完成，随后打印输出。\\n\\n分支选项，略，详见代码，简单输出。\\n\\n### 主函数\\n\\n设置控制台的大小，用到system(\\\"mode con cols=110 lines=30\\\")；\\n\\n````c\\n/*\\n\\t主函数\\n*/\\nint main(){\\n\\tsystem(\\\"mode con cols=110 lines=30\\\");\\t//设置控制台宽高\\n    File_out();\\t\\t\\t\\t\\t\\t\\t\\t//读取分数信息\\n    pointSnake();                           //绘制蛇身\\n\\twelcometogame();\\t\\t\\t\\t\\t\\t//游戏开始\\n\\tkeyboardControl();\\t\\t\\t\\t\\t\\t//控制键盘按钮\\n\\tendgame();\\t\\t\\t\\t\\t\\t\\t\\t//游戏结束\\n\\treturn 0;\\n}\\n````\\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1411,\"length\":13,\"style\":\"ITALIC\"},{\"offset\":3415,\"length\":16,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://gitee.com/WQ-BY/datastructure/tree/master/0008.SnakeGame\",\"target\":\"_blank\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/20210202133854548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NjE4MDI3,size_16,color_FFFFFF,t_70\",\"name\":\"游戏开始界面welcometogame\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"游戏开始界面welcometogame\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/20210202134000545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NjE4MDI3,size_16,color_FFFFFF,t_70\",\"name\":\"游戏画面\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"游戏画面\"}}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/20210202134056395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NjE4MDI3,size_16,color_FFFFFF,t_70\",\"name\":\"结束画面\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"结束画面\"}}},\"4\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://gitee.com/WQ-BY/datastructure/tree/master/0008.SnakeGame\",\"target\":\"_blank\"}},\"5\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://img-blog.csdnimg.cn/img_convert/de4e2b91c8d9284a00e39cc488f7f880.png#pic_center\",\"name\":\"在这里插入图片描述\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"在这里插入图片描述\"}}}}}', '<h1>SnakeGame<br/>## 一、运行游戏<br/><a href=\"https://gitee.com/WQ-BY/datastructure/tree/master/0008.SnakeGame\" target=\"_blank\">代码仓库gitee</a></h1><div class=\"media-wrap image-wrap\"><img alt=\"游戏开始界面welcometogame\" src=\"https://img-blog.csdnimg.cn/20210202133854548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NjE4MDI3,size_16,color_FFFFFF,t_70\"/></div><p><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"游戏画面\" src=\"https://img-blog.csdnimg.cn/20210202134000545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NjE4MDI3,size_16,color_FFFFFF,t_70\"/></div><p><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"结束画面\" src=\"https://img-blog.csdnimg.cn/20210202134056395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI4NjE4MDI3,size_16,color_FFFFFF,t_70\"/></div><p><br/><br/>游戏代码<br/><br/><a href=\"https://gitee.com/WQ-BY/datastructure/tree/master/0008.SnakeGame\" target=\"_blank\"><strong>SnakeGame.cpp</strong> </a><br/>## 二、设计思路<br/><br/>宏定义、全局变量、函数定义<br/><br/>&#x60;&#x60;&#x60;c<br/>/*******宏  定  义*******/<br/>#define U 1<br/>#define D 2<br/>#define L 3 <br/>#define R 4    //蛇的状态，U：上 ；D：下；L:左 R：右<br/><br/>/*******定  义  全  局  变  量 *******/<br/>typedef struct snake{ 		//蛇身的一个节点<br/>    int x;					//节点x坐标<br/>    int y;					//节点y坐标<br/>    struct snake *next;		//蛇身体下一节点<br/>}snake;<br/>int score=0;                //总得分<br/>int add=10;			        //每次吃食物得分<br/>int HighScore = 0;			//最高分<br/>int status;					//蛇前进状态<br/>int sleeptime=200;			//每次运行的时间间隔<br/>snake *head=NULL;			//蛇头指针<br/>snake *food=NULL;			//食物指针<br/>snake *q=NULL;				//遍历蛇的时候用到的指针<br/>int endgamestatus=0;		//游戏结束的情况，1：撞到墙；2：咬到自己；3：主动退出游戏<br/>HANDLE hOut;				//控制台句柄<br/><br/>/*******函  数  声  明 *******/<br/>void gotoxy(int x,int y);   //设置光标位置<br/>int color(int c);           //更改文字颜色<br/>void welcometogame();       //开始界面<br/>void pointSnake();          //绘制初始界面的蛇<br/>void createMap();           //绘制地图<br/>void initsnake();           //初始化蛇身，画蛇身<br/>void createfood();          //创建并随机出现食物<br/>int biteself();             //判断是否咬到了自己<br/>void cantcrosswall();       //设置蛇撞墙的情况<br/>void speedup();				//加速<br/>void speeddown();			//减速<br/>void MOVE(snake *nexthead)  //蛇移动情况<br/>void snakemove();           //控制蛇前进方向<br/>void keyboardControl();     //控制键盘按键<br/>void endgame();             //游戏结束<br/>void choose();				//游戏失败之后的选择<br/>void File_out();            //在文件中读取最高分<br/>void File_in();            	//储存最高分进文件<br/>void scoreandtips();		//游戏界面右侧的得分和小提示<br/>&#x60;&#x60;&#x60;&#x60;<br/><br/>### 设置光标位置<br/><br/>设置光标位置需要用到COORD结构体、SetConsoleCursorPosition函数、GetStdHandle(STD_OUTPUT_HANDLE)句柄，来实现对光标位置的改变，代码如下：<br/><br/>&#x60;&#x60;&#x60;c<br/>/*<br/>	设置光标位置<br/>*/<br/>void gotoxy(int x,int y){<br/>    COORD cursor;<br/>    cursor.X=x;<br/>    cursor.Y=y;<br/>    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),cursor);<br/>}<br/>&#x60;&#x60;&#x60;&#x60;<br/><br/>### 设置字体颜色<br/><br/>设置字体颜色需要用到SetConsoleTextAttribute函数、GetStdHandle(STD_OUTPUT_HANDLE)句柄、还有对应的系统颜色号，代码如下：<br/><br/>&#x60;&#x60;&#x60;&#x60;c<br/>/*<br/>	文字颜色函数<br/>*/<br/>int color(int c){<br/>	//SetConsoleTextAttribute是API设置控制台窗口字体颜色和背景色的函数<br/>	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), c);        //更改文字颜色<br/>	return 0;<br/>}<br/>&#x60;&#x60;&#x60;&#x60;<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"在这里插入图片描述\" src=\"https://img-blog.csdnimg.cn/img_convert/de4e2b91c8d9284a00e39cc488f7f880.png#pic_center\"/></div><p><br/><br/><br/>### 创建地图<br/><br/>直接用printf打印特殊字符即可<br/><br/>&#x60;&#x60;&#x60;&#x60;c<br/>/*<br/>	创建地图<br/>*/<br/>void createMap(){<br/>    int i,j;<br/>    for(i=0;i&lt;58;i+=2){		//打印上下边框<br/>        gotoxy(i,0);<br/>		color(6);			//橙色的边框<br/>        printf(&quot;□&quot;);<br/>        gotoxy(i,26);<br/>        printf(&quot;□&quot;);<br/>    }<br/>    for(i=1;i&lt;26;i++){		//打印左右边框<br/>        gotoxy(0,i);<br/>        printf(&quot;□&quot;);                        <br/>        gotoxy(56,i);<br/>        printf(&quot;□&quot;);        <br/>    }<br/>	for(i = 2;i&lt;56;i+=2){	//打印中间网格<br/>		for(j = 1;j&lt;26;j++){<br/>			gotoxy(i,j);<br/>			color(8);<br/>			printf(&quot;■\\n\\n&quot;);<br/>		}<br/>	}<br/>}<br/>&#x60;&#x60;&#x60;&#x60;<br/><br/>### 初始化蛇身<br/><br/>初始化蛇身需要用到单向链表的头插法，先从尾部开始画。<br/><br/>在从头到尾输出蛇身<br/><br/>&#x60;&#x60;&#x60;&#x60;c<br/>/*<br/>	初始化蛇身，画蛇身<br/>*/<br/>void initsnake(){<br/>    snake *tail;<br/>    int i;<br/>    tail=(snake*)malloc(sizeof(snake));	//从蛇尾开始，头插法，以x,y设定开始的位置<br/>    tail-&gt;x=20;				//蛇的初始位置（20,8）<br/>    tail-&gt;y=8;<br/>    tail-&gt;next=NULL;<br/>    for(i=1;i&lt;=2;i++){       //设置蛇身，长度为3<br/>        head=(snake*)malloc(sizeof(snake)); //初始化蛇头<br/>        head-&gt;next=tail;    //蛇头的下一位为蛇尾<br/>        head-&gt;x=20+2*i;     //设置蛇头位置<br/>        head-&gt;y=8;<br/>        tail=head;          //蛇头变成蛇尾，然后重复循环<br/>    }<br/>    while(tail!=NULL){		//从头到尾，输出蛇身<br/>        gotoxy(tail-&gt;x,tail-&gt;y);<br/>		color(14);<br/>        printf(&quot;◆&quot;);       //输出蛇身，蛇身使用◆组成<br/>        tail=tail-&gt;next;    //蛇头输出完毕，输出蛇头的下一位，一直输出到蛇尾<br/>    }<br/>}<br/>&#x60;&#x60;&#x60;&#x60;<br/><br/>### 随机出现食物<br/><br/>首先初始化随机数srand函数；<br/><br/>初始化一个食物，让其x坐标必须为偶数（使得蛇头可以转弯）且在2~ 53之间，y坐标在1~24之间。<br/><br/>再判断蛇身是否与食物重合，如果重合释放食物，再次创造食物，随后打印。<br/><br/>&#x60;&#x60;&#x60;&#x60;c<br/>/*<br/>	随机出现食物<br/>*/<br/>void createfood(){<br/>    srand((unsigned)time(NULL));        	        //初始化随机数<br/>    snake <em>food_1=(snake</em>)malloc(sizeof(snake));    //初始化food_1<br/>    while((food_1-&gt;x%2)!=0){  				        //保证其为偶数，使得蛇头吃完可以转弯<br/>        food_1-&gt;x=rand()%52+2;                      //食物随机出现，食物的x坐标在2~53<br/>    }<br/>    food_1-&gt;y=rand()%24+1;					        //食物的y坐标在1~24<br/>    q=head;<br/>    while(q-&gt;next==NULL){<br/>        if(q-&gt;x==food_1-&gt;x &amp;&amp; q-&gt;y==food_1-&gt;y){     //判断蛇身是否与食物重合<br/>            free(food_1);                           //如果蛇身和食物重合，那么释放食物指针<br/>            createfood();                           //重新创建食物<br/>        }<br/>        q=q-&gt;next;<br/>    }<br/>    gotoxy(food_1-&gt;x,food_1-&gt;y);<br/>    food=food_1;<br/>	color(3);<br/>    printf(&quot;●&quot;);                                    //输出食物<br/>}<br/>&#x60;&#x60;&#x60;&#x60;<br/><br/>### 开始界面及右侧得分和小提示<br/><br/>简单的打印输出以及分支语句，略。<br/><br/>### 判断是否咬到了自己<br/><br/>先定义一个除蛇头之外蛇身的一个节点，随后遍历蛇身，看蛇头是否与蛇身x，y坐标重合<br/><br/>&#x60;&#x60;&#x60;&#x60;c<br/>/*<br/>	判断是否咬到了自己<br/>*/<br/>int biteself(){<br/>    snake *self=head-&gt;next;                          //先定义一个除蛇头之外蛇身的一个节点<br/>    while(self!=NULL){<br/>        if(self-&gt;x==head-&gt;x &amp;&amp; self-&gt;y==head-&gt;y){    //如果self和蛇身上的节点重合<br/>            return 1;                                //返回1,咬中<br/>        }<br/>        self=self-&gt;next;<br/>    }<br/>    return 0;<br/>}<br/>&#x60;&#x60;&#x60;&#x60;<br/><br/>### 判断是否撞墙<br/><br/>直接判断蛇头的x，y坐标是否与墙边坐标重合<br/><br/>&#x60;&#x60;&#x60;&#x60;c<br/>/*<br/>	设置蛇撞墙的情况<br/>*/<br/>void cantcrosswall(){  <br/>    if(head-&gt;x==0 || head-&gt;x==56 ||head-&gt;y==0 || head-&gt;y==26){ //蛇头碰到了墙壁<br/>        endgamestatus=1;        //返回第一种情况（撞墙）<br/>        endgame();              //出现游戏结束界面<br/>    }<br/>}<br/>&#x60;&#x60;&#x60;&#x60;<br/><br/>### 加速与减速<br/><br/>调控全局变量sleeptime，加速加分，减速减分<br/><br/>&#x60;&#x60;&#x60;&#x60;c<br/>/*<br/>	加速，蛇吃到食物会自动提速，按F1加速，得分+2/次<br/>*/<br/>void speedup(){<br/>	if(sleeptime&gt;=100){<br/>		sleeptime=sleeptime-10;<br/>		add=add+2;<br/>    }<br/>}<br/>/*<br/>	减速，按F2减速，得分-2/次<br/>*/<br/>void speeddown(){<br/>	if(sleeptime&lt;350){               //如果时间间隔小于350<br/>        sleeptime=sleeptime+30;     //时间间隔加上30<br/>        add=add-2;                  //每吃一次食物的得分减2<br/>    }<br/>}<br/>&#x60;&#x60;&#x60;&#x60;<br/><br/>### 控制方向<br/><br/>首先为下一步开辟空间（nexthead），U上，D下，L左，R右<br/><br/>向上前进时，x坐标不动，y坐标-1；<br/><br/>向下前进时，x坐标不动，y坐标+1；<br/><br/>向左前进时，x坐标-1，y坐标不动；<br/><br/>向右前进时，x坐标+1，y坐标不动；<br/><br/>如果下一个位置有食物，即下一个位置的坐标与食物坐标相同，<br/><br/>则把食物的●位置换成◆，并总分加add，加速，再创建食物；<br/><br/>如果下一个位置没有食物，蛇身就正常往前打印输出。<br/><br/>再经过是否有食物的判断打印之后，指针q（遍历蛇身指针）已经指向蛇尾，<br/><br/>打印蛇尾的下一个位置为地图■，并释放蛇尾的下一个位置后指向NULL。<br/><br/>主要代码如下（这里以向上为例）：<br/><br/>&#x60;&#x60;&#x60;&#x60;c<br/>snake <em> nexthead=(snake</em>)malloc(sizeof(snake));		//为下一步开辟空间<br/>    cantcrosswall();<br/>    if(status==U){<br/>        nexthead-&gt;x=head-&gt;x;        //向上前进时，x坐标不动，y坐标-1<br/>        nexthead-&gt;y=head-&gt;y-1;<br/>        nexthead-&gt;next=head;<br/>        head=nexthead;<br/>        q=head;						//指针q指向蛇头<br/>        if(nexthead-&gt;x==food-&gt;x &amp;&amp; nexthead-&gt;y==food-&gt;y){//如果下一个有食物<br/>            while(q!=NULL){<br/>                gotoxy(q-&gt;x,q-&gt;y);<br/>				color(14);<br/>                printf(&quot;◆&quot;);       //原来食物的位置，从●换成◆<br/>                q=q-&gt;next;          //指针q指向的蛇身的下一位也执行循环里的操作<br/>            }<br/>            score+=add;        //吃了一个食物，在总分上加上食物的分<br/>			speedup();<br/>            createfood();           //创建食物<br/>        }else{<br/>            while(q-&gt;next-&gt;next!=NULL){	//如果没遇到食物<br/>                gotoxy(q-&gt;x,q-&gt;y);<br/>                color(14);<br/>                printf(&quot;◆&quot;);           //蛇正常往前走，输出当前位置的蛇身<br/>                q=q-&gt;next;              //继续输出整个蛇身<br/>            }<br/>            gotoxy(q-&gt;next-&gt;x,q-&gt;next-&gt;y);//经过上面的循环，q指向蛇尾,下一位就是蛇走过去的位置<br/>			color(8);<br/>            printf(&quot;■&quot;);<br/>            free(q-&gt;next);			//进行输出■之后，释放指向下一位的指针<br/>            q-&gt;next=NULL;			//指针下一位指向空<br/>        }<br/>    }<br/>&#x60;&#x60;&#x60;&#x60;<br/>### 控制键盘按键<br/><br/>初始化status为R（初始化向右移动），这里需要用到死循环，打印最新分数，以及判断用户的键盘操作<br/><br/>空格（space）暂停游戏，F1加速，F2减速，这里用到Sleep函数使得线程暂停，Sleep(sleeptime)很好的完成游戏的加速减速。一直循环使用snakemove函数，使得蛇身移动。<br/><br/>&#x60;&#x60;&#x60;&#x60;c<br/>/*<br/>	控制键盘按键<br/>*/<br/>void keyboardControl(){<br/>	status=R;       //初始蛇向右移动<br/>    scoreandtips(); //打印提示栏<br/>    while(1){<br/>        newScore(); //打印当前得分<br/>        //GetAsyncKeyState函数用来判断函数调用时指定虚拟键的状态<br/>        if(GetAsyncKeyState(VK_UP) &amp;&amp; status!=D){<br/>            status=U;//如果蛇不是向下前进的时候，按上键，执行向上前进操作<br/>        }<br/>        else if(GetAsyncKeyState(VK_DOWN) &amp;&amp; status!=U){     <br/>            status=D;//如果蛇不是向上前进的时候，按下键，执行向下前进操作<br/>        }<br/>        else if(GetAsyncKeyState(VK_LEFT)&amp;&amp; status!=R){      <br/>            status=L;//如果蛇不是向右前进的时候，按左键，执行向左前进<br/>        }<br/>        else if(GetAsyncKeyState(VK_RIGHT)&amp;&amp; status!=L){     <br/>            status=R;//如果蛇不是向左前进的时候，按右键，执行向右前进<br/>        }<br/>        if(GetAsyncKeyState(VK_SPACE)){		    //按暂停键，执行pause暂停函数<br/>            while(1){<br/>				Sleep(300); //sleep()函数令进程暂停，直到达到里面设定的参数的时间<br/>				if(GetAsyncKeyState(VK_SPACE)){ //按空格键暂停<br/>					break;<br/>				}<br/>			}       <br/>        }<br/>        else if(GetAsyncKeyState(VK_ESCAPE)){<br/>            endgamestatus=3;    //按esc键，直接到结束界面<br/>            break;<br/>        }<br/>        else if(GetAsyncKeyState(VK_F1)){    //按F1键，加速<br/>            speedup();<br/>        }<br/>        else if(GetAsyncKeyState(VK_F2)){    //按F2键，减速<br/>        	speeddown();<br/>        }<br/>        Sleep(sleeptime);<br/>        snakemove();<br/>    }<br/>}<br/>&#x60;&#x60;&#x60;&#x60;<br/><br/>### 最高分读写<br/><br/>FILE文件指针的运用，简单的写入写出<br/><br/>### 结束游戏画面以及分支选项<br/><br/>先清屏这里用到system(&quot;cls&quot;)；再判断结束状态，endgamestatus，再判断用户本次得分是否超过历史最高分，用简单的if语句即可完成，随后打印输出。<br/><br/>分支选项，略，详见代码，简单输出。<br/><br/>### 主函数<br/><br/>设置控制台的大小，用到system(&quot;mode con cols=110 lines=30&quot;)；<br/><br/>&#x60;&#x60;&#x60;&#x60;c<br/>/*<br/>	主函数<br/>*/<br/>int main(){<br/>	system(&quot;mode con cols=110 lines=30&quot;);	//设置控制台宽高<br/>    File_out();								//读取分数信息<br/>    pointSnake();                           //绘制蛇身<br/>	welcometogame();						//游戏开始<br/>	keyboardControl();						//控制键盘按钮<br/>	endgame();								//游戏结束<br/>	return 0;<br/>}<br/>&#x60;&#x60;&#x60;&#x60;<br/> </p>', 2, 1, 0, '2021-01-20 00:00:00', NULL);
INSERT INTO `article` VALUES (269, '202010804013', 'C语言数据结构之双向链表', 3, 16, 'Double_List（gitee仓库）## 一、简介双向链表单项链表若要找某结点的前驱节点，就很麻烦，很耗时间，因为单链表更适合”从前往后“找。为了高效率的解决类似问题，便有了双向链表。它由前驱指针域和后驱指针域还有数据域构成&#x60;', '双向链表', 'http://img.pzhuweb.cn/2020108040131636703519273.png', '{\"blocks\":[{\"key\":\"hs9g\",\"text\":\"Double_List（gitee仓库）\\n\\n## 一、简介双向链表\\n单项链表若要找某结点的前驱节点，就很麻烦，很耗时间，因为单链表更适合”从前往后“找。\\n为了高效率的解决类似问题，便有了双向链表。\\n\\n\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":34,\"length\":64,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[{\"offset\":0,\"length\":20,\"key\":0}],\"data\":{}},{\"key\":\"77agn\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"65p6i\",\"text\":\"\\n\\n它由前驱指针域和后驱指针域还有数据域构成\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"adhsm\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"frbtt\",\"text\":\"\\n\\n```c++\\ntypedef struct line{\\n    struct line *prior;\\n    int date;\\n    struct line *next;\\n}NODE;\\n```\\n\\n## 二、双向链表的创建\\n\\n与单向链表相比，双向链表多出了一个前驱指针域。\\n\\n但与之不同的是在双向链表创建过程中，每创建一个新节点，都要与其前驱节点建立两次联系\\n\\n1、将新节点的prior指针指向直接前驱节点；\\n\\n2、将直接前驱节点的next指针指向新节点；\\n\\n代码如下：\\n\\n```c++\\n/ static int count = 0 /\\nNODE *initList(NODE *head){\\n    NODE p=head=(NODE )malloc(sizeof(NODE));\\n    cin>>head->date;\\n    NODE *q;\\n    while(p->date != 0){\\n        q=(NODE *)malloc(sizeof(NODE));\\n        cin>>q->date;\\n        p->next=q;\\n        q->prior=p;\\n        p=p->next;\\n        count++;//链表总长，方便后续增加删除\\n    }\\n    p->prior->next=NULL;\\n    free(p);\\n    return head;\\n}\\n```\\n\\n## 三、双向链表的输出\\n\\n双向链表的输出与单向链表并无两样，为了输出好看，可以做一个if语句判断最后的结点\\n\\n代码如下：\\n\\n```c++\\nvoid pointList(NODE *head){\\n    NODE *p=head;\\n    while(p){\\n        //如果该节点无后继节点，说明此节点是链表的最后一个节点\\n        if(p->next==NULL){\\n            cout<<p->date<<endl;\\n        }else{\\n            cout<<p->date<<\\\" <-> \\\";\\n        }\\n        p=p->next;\\n    }\\n}\\n```\\n\\n输出结果如下：\\n\\n```c\\n创建双向链表： 1 2 3 0\\n输出双向链表： 1 <-> 2 <-> 3\\n```\\n\\n## 四、双向链表的添加节点\\n\\n### 1.添加至表头\\n\\n要将新数据元素添加到表头，只需要将该元素与表头建立双层逻辑关系即可。\\n\\n如果新元素节点为super，表头节点为head，则需要两步完成添加\\n\\n1）super->next = head;head->prior = super；\\n\\n2）将head移至super，重新指向新的表头；\\n\\n代码如下：\\n\\n```c++\\nNODE *addHead(NODE *head){\\n    NODE super=(NODE )malloc(sizeof(NODE));\\n    cin>>super->date;\\n    super->prior=NULL;\\n    super->next=head;\\n    head->prior=super;\\n    head=super;\\n    return head;\\n}\\n```\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":249,\"length\":22,\"style\":\"BOLD\"},{\"offset\":310,\"length\":13,\"style\":\"ITALIC\"},{\"offset\":1221,\"length\":12,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1lbb4\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{}},{\"key\":\"4dfg3\",\"text\":\"\\n\\n### 2.添加至表中\\n\\n同单向链表添加数据类似，双向链表中间位置添加数据需要两个步骤\\n\\n1）新节点先于其直接后继节点建立双层逻辑关系；\\n\\n2）新节点的直接前驱节点与之建立双层逻辑关系；\\n\\n代码如下：\\n\\n```c++\\nNODE *addMiddle(NODE *head,int add){\\n    NODE temp=(NODE )malloc(sizeof(NODE));\\n    cout<<\\\"请输入添加的值：\\\";\\n    cin>>temp->date;\\n    NODE *body=head;\\n    //找到要插入位置的前一个结点\\n    for (int i=1; i<add-1; i++) {\\n        body=body->next;\\n    }\\n    body->next->prior=temp;\\n    temp->next=body->next;\\n    body->next=temp;\\n    temp->prior=body;\\n    return head;\\n}\\n```\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":157,\"length\":11,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"905d6\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":4}],\"data\":{}},{\"key\":\"3hfee\",\"text\":\"\\n\\n### 3.添加至表尾\\n\\n与添加至表头同个道理\\n\\n1）找到双链表中最后一个节点；\\n\\n2）让新节点与最后一个节点建立双层逻辑关系；\\n\\n代码如下：\\n\\n```c++\\nNODE *addTail(NODE *head){\\n    NODE tail=(NODE )malloc(sizeof(NODE));\\n    cin>>tail->date;\\n    NODE *body=head;\\n    while(body->next!=NULL){\\n        body=body->next;\\n    }\\n    body->next=tail;\\n    tail->prior=body;\\n    tail->next=NULL;\\n    return head;\\n}\\n```\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":118,\"length\":11,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"67qt3\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":5}],\"data\":{}},{\"key\":\"6p0f1\",\"text\":\"\\n\\n### 4.添加节点结合运用\\n\\n1）首先判断添加位置是否为表头，若是表头则直接添加\\n\\n```c++\\nif(add == 1){\\n    temp->next = head;\\n    head->prior = temp;\\n    head = temp;\\n}\\n```\\n\\n2）不是表头则判断添加位置是否超出链表长度\\n\\n```c++\\nif(add >= count){//如果插入的节点位置已经超出链表则当作插入尾节点处理\\n    for(int i = 1;i < count-1;i++){\\n        body = body->next;\\n        body->next = temp;\\n        temp->prior = body;\\n        temp->next = NULL;\\n    }\\n}\\n```\\n\\n3）不是上面两种情况则插入表中\\n\\n```c++\\nelse{\\n    for(int i = 1;i < add-1;i++){\\n        body = body->next;\\n    }\\n    body->next->prior = temp;\\n    temp->next = body->next;\\n    body->next = temp;\\n    temp->prior = body;\\n}\\n```\\n\\n代码如下：\\n\\n```c++\\nNODE *addDate(NODE *head,int date,int add){\\n    //创建一个节点\\n    NODE temp=(NODE )malloc(sizeof(NODE));\\n    temp->date=date;\\n    //插入表头需要特殊考虑\\n    if(add == 1){\\n        temp->next = head;\\n        head->prior = temp;\\n        head = temp;\\n    }else{\\n        NODE *body = head;\\n        //如果插入的节点位置已经超出链表则当作插入尾节点处理\\n        if(add > count){\\n            for(int i = 1;i < count;i++){\\n                body = body->next;\\n            }\\n            body->next = temp;\\n            temp->prior = body;\\n            temp->next = NULL;\\n        }else{\\n            for(int i = 1;i < add-1;i++){\\n                body = body->next;\\n            }\\n            body->next->prior = temp;\\n            temp->next = body->next;\\n            body->next = temp;\\n            temp->prior = body;\\n        }\\n    }\\n    return head;\\n}\\n```\\n\\n## 五、双向链表的删除节点\\n\\n双向链表删除节点时，只需要遍历链表到删除的节点，然后截掉即可\\n\\n1）首先判断需要删除的节点位置是否大于链表总长度\\n\\n```c++\\nif(del > count){\\n    cout<<\\\"删除的节点位置大于链表总长度\\\";\\n    return head;\\n}\\n```\\n\\n2）如果删除位置在表头\\n\\n```c++\\nif(del == 1){\\n    head=head->next;\\n    head->prior=NULL;\\n    free(temp);\\n    return head;\\n}\\n```\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":660,\"length\":11,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"el086\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":6}],\"data\":{}},{\"key\":\"94uh3\",\"text\":\"\\n\\n3）如果删除位置在表尾\\n\\n```c++\\nif(del == count){\\n    for(int i = 1;i < count-1;i++){\\n        temp = temp->next;\\n    }\\n    NODE *deltail = temp->next;\\n    temp->next = NULL;\\n    free(deltail);\\n    return head;\\n}\\n```\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"4ppbk\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":7}],\"data\":{}},{\"key\":\"e3jd9\",\"text\":\"\\n\\n4）如果删除位置在表中\\n\\n```c++\\nelse{//删除的为中间位置\\n    for(int i = 1;i < del;i++){\\n        temp = temp->next;\\n    }\\n    temp->prior->next = temp->next;\\n    temp->next->prior = temp->prior    \\n    free(temp);\\n    return head;\\n}\\n```\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"csu4q\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":8}],\"data\":{}},{\"key\":\"4pltf\",\"text\":\"\\n\\n## 六、双向链表的查找节点\\n\\n与单向链表类似，都是从表头依次遍历表中元素\\n\\n代码如下：\\n\\n```c++\\nint seekDate(NODE *head,int elem){\\n    NODE *temp = head;\\n    int loc=1;\\n    while(temp){\\n        if (temp->date == elem){\\n            return loc;\\n        }\\n        loc++;\\n        temp = temp->next;\\n    }\\n    //查找失败\\n    return -1;\\n}\\n```\\n\\n## 七、双向链表的更改结点\\n\\n更改双向链表中的指定结点数据域是在查找的基础上完成的，找到后直接修改\\n\\n1）首先判断更改处的位置是否大于链表长度\\n\\n```c++\\nif(loc > count){\\n    //则直接返回\\n    cout<<\\\"修改失败，没有该节点\\\";\\n    return 0;\\n}\\n```\\n\\n2）不大于则遍历到被修改的节点位置\\n\\n```c++\\nNODE *temp = head;\\n    //遍历到被修改的结点\\nfor(int i=1;i<loc;i++){\\n    temp = temp->next;\\n}\\ntemp->date = newElem;\\nreturn 1;\\n```\\n\\n## 八、总结\\n\\n代码详见 7.Double_List.cpp\\n\\n实现了双向链表的增添删改\\n\\n结果如图：\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"3ac5r\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":9}],\"data\":{}},{\"key\":\"9g7p0\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://gitee.com/WQ-BY/datastructure/tree/master/0007.Double_List\",\"target\":\"_blank\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/26/91R38qrZaKXBmnc.png\",\"name\":\"image-20210126115910953\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210126115910953\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/26/ADg6eysYmZPpr7G.png\",\"name\":\"image-20210126120008147\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210126120008147\"}}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/26/4kNCRc65iBhGpev.png\",\"name\":\"image-20210126122939700\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210126122939700\"}}},\"4\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/26/csDPkLEUiKR6uXN.png\",\"name\":\"image-20210126130332479\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210126130332479\"}}},\"5\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/26/Msky9oZNGh8bHDX.png\",\"name\":\"image-20210126131758002\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210126131758002\"}}},\"6\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/26/8OwM9QvPRljoy3f.png\",\"name\":\"image-20210126151007311\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210126151007311\"}}},\"7\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/26/opgkRZVfBQK54d8.png\",\"name\":\"image-20210126150751084\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210126150751084\"}}},\"8\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/26/7mA1SLFT8lEgIiK.png\",\"name\":\"image-20210126150557841\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210126150557841\"}}},\"9\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/26/MbokqmBt8p5Svyi.png\",\"name\":\"image-20210126154020587\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210126154020587\"}}}}}', '<h1><a href=\"https://gitee.com/WQ-BY/datastructure/tree/master/0007.Double_List\" target=\"_blank\">Double_List（gitee仓库）</a><br/><br/>## 一、简介双向链表<br/><span style=\"font-size:16px\">单项链表若要找某结点的前驱节点，就很麻烦，很耗时间，因为单链表更适合”从前往后“找。<br/>为了高效率的解决类似问题，便有了双向链表。</span><br/><br/></h1><div class=\"media-wrap image-wrap\"><img alt=\"image-20210126115910953\" src=\"https://i.loli.net/2021/01/26/91R38qrZaKXBmnc.png\"/></div><p><br/><br/>它由前驱指针域和后驱指针域还有数据域构成<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210126120008147\" src=\"https://i.loli.net/2021/01/26/ADg6eysYmZPpr7G.png\"/></div><p><br/><br/>&#x60;&#x60;&#x60;c++<br/>typedef struct line{<br/>    struct line *prior;<br/>    int date;<br/>    struct line *next;<br/>}NODE;<br/>&#x60;&#x60;&#x60;<br/><br/>## 二、双向链表的创建<br/><br/>与单向链表相比，双向链表多出了一个前驱指针域。<br/><br/>但与之不同的是在双向链表创建过程中，每创建一个新节点，都要与其前驱节点建立两次联系<br/><br/>1、将新节点的prior指针指向直接前驱节点；<br/><br/>2、将直接前驱节点的next指针指向新节点；<br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c++<br/>/<strong> static int count = 0 </strong>/<br/>NODE *initList(NODE *head){<br/>    NODE <em>p=head=(NODE </em>)malloc(sizeof(NODE));<br/>    cin&gt;&gt;head-&gt;date;<br/>    NODE *q;<br/>    while(p-&gt;date != 0){<br/>        q=(NODE *)malloc(sizeof(NODE));<br/>        cin&gt;&gt;q-&gt;date;<br/>        p-&gt;next=q;<br/>        q-&gt;prior=p;<br/>        p=p-&gt;next;<br/>        count++;//链表总长，方便后续增加删除<br/>    }<br/>    p-&gt;prior-&gt;next=NULL;<br/>    free(p);<br/>    return head;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>## 三、双向链表的输出<br/><br/>双向链表的输出与单向链表并无两样，为了输出好看，可以做一个if语句判断最后的结点<br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c++<br/>void pointList(NODE *head){<br/>    NODE *p=head;<br/>    while(p){<br/>        //如果该节点无后继节点，说明此节点是链表的最后一个节点<br/>        if(p-&gt;next==NULL){<br/>            cout&lt;&lt;p-&gt;date&lt;&lt;endl;<br/>        }else{<br/>            cout&lt;&lt;p-&gt;date&lt;&lt;&quot; &lt;-&gt; &quot;;<br/>        }<br/>        p=p-&gt;next;<br/>    }<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>输出结果如下：<br/><br/>&#x60;&#x60;&#x60;c<br/>创建双向链表： 1 2 3 0<br/>输出双向链表： 1 &lt;-&gt; 2 &lt;-&gt; 3<br/>&#x60;&#x60;&#x60;<br/><br/>## 四、双向链表的添加节点<br/><br/>### 1.添加至表头<br/><br/>要将新数据元素添加到表头，只需要将该元素与表头建立双层逻辑关系即可。<br/><br/>如果新元素节点为super，表头节点为head，则需要两步完成添加<br/><br/>1）super-&gt;next = head;head-&gt;prior = super；<br/><br/>2）将head移至super，重新指向新的表头；<br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c++<br/>NODE *addHead(NODE *head){<br/>    NODE <em>super=(NODE </em>)malloc(sizeof(NODE));<br/>    cin&gt;&gt;super-&gt;date;<br/>    super-&gt;prior=NULL;<br/>    super-&gt;next=head;<br/>    head-&gt;prior=super;<br/>    head=super;<br/>    return head;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210126122939700\" src=\"https://i.loli.net/2021/01/26/4kNCRc65iBhGpev.png\"/></div><p><br/><br/>### 2.添加至表中<br/><br/>同单向链表添加数据类似，双向链表中间位置添加数据需要两个步骤<br/><br/>1）新节点先于其直接后继节点建立双层逻辑关系；<br/><br/>2）新节点的直接前驱节点与之建立双层逻辑关系；<br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c++<br/>NODE *addMiddle(NODE *head,int add){<br/>    NODE <em>temp=(NODE </em>)malloc(sizeof(NODE));<br/>    cout&lt;&lt;&quot;请输入添加的值：&quot;;<br/>    cin&gt;&gt;temp-&gt;date;<br/>    NODE *body=head;<br/>    //找到要插入位置的前一个结点<br/>    for (int i=1; i&lt;add-1; i++) {<br/>        body=body-&gt;next;<br/>    }<br/>    body-&gt;next-&gt;prior=temp;<br/>    temp-&gt;next=body-&gt;next;<br/>    body-&gt;next=temp;<br/>    temp-&gt;prior=body;<br/>    return head;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210126130332479\" src=\"https://i.loli.net/2021/01/26/csDPkLEUiKR6uXN.png\"/></div><p><br/><br/>### 3.添加至表尾<br/><br/>与添加至表头同个道理<br/><br/>1）找到双链表中最后一个节点；<br/><br/>2）让新节点与最后一个节点建立双层逻辑关系；<br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c++<br/>NODE *addTail(NODE *head){<br/>    NODE <em>tail=(NODE </em>)malloc(sizeof(NODE));<br/>    cin&gt;&gt;tail-&gt;date;<br/>    NODE *body=head;<br/>    while(body-&gt;next!=NULL){<br/>        body=body-&gt;next;<br/>    }<br/>    body-&gt;next=tail;<br/>    tail-&gt;prior=body;<br/>    tail-&gt;next=NULL;<br/>    return head;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210126131758002\" src=\"https://i.loli.net/2021/01/26/Msky9oZNGh8bHDX.png\"/></div><p><br/><br/>### 4.添加节点结合运用<br/><br/>1）首先判断添加位置是否为表头，若是表头则直接添加<br/><br/>&#x60;&#x60;&#x60;c++<br/>if(add == 1){<br/>    temp-&gt;next = head;<br/>    head-&gt;prior = temp;<br/>    head = temp;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>2）不是表头则判断添加位置是否超出链表长度<br/><br/>&#x60;&#x60;&#x60;c++<br/>if(add &gt;= count){//如果插入的节点位置已经超出链表则当作插入尾节点处理<br/>    for(int i = 1;i &lt; count-1;i++){<br/>        body = body-&gt;next;<br/>        body-&gt;next = temp;<br/>        temp-&gt;prior = body;<br/>        temp-&gt;next = NULL;<br/>    }<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>3）不是上面两种情况则插入表中<br/><br/>&#x60;&#x60;&#x60;c++<br/>else{<br/>    for(int i = 1;i &lt; add-1;i++){<br/>        body = body-&gt;next;<br/>    }<br/>    body-&gt;next-&gt;prior = temp;<br/>    temp-&gt;next = body-&gt;next;<br/>    body-&gt;next = temp;<br/>    temp-&gt;prior = body;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c++<br/>NODE *addDate(NODE *head,int date,int add){<br/>    //创建一个节点<br/>    NODE <em>temp=(NODE </em>)malloc(sizeof(NODE));<br/>    temp-&gt;date=date;<br/>    //插入表头需要特殊考虑<br/>    if(add == 1){<br/>        temp-&gt;next = head;<br/>        head-&gt;prior = temp;<br/>        head = temp;<br/>    }else{<br/>        NODE *body = head;<br/>        //如果插入的节点位置已经超出链表则当作插入尾节点处理<br/>        if(add &gt; count){<br/>            for(int i = 1;i &lt; count;i++){<br/>                body = body-&gt;next;<br/>            }<br/>            body-&gt;next = temp;<br/>            temp-&gt;prior = body;<br/>            temp-&gt;next = NULL;<br/>        }else{<br/>            for(int i = 1;i &lt; add-1;i++){<br/>                body = body-&gt;next;<br/>            }<br/>            body-&gt;next-&gt;prior = temp;<br/>            temp-&gt;next = body-&gt;next;<br/>            body-&gt;next = temp;<br/>            temp-&gt;prior = body;<br/>        }<br/>    }<br/>    return head;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>## 五、双向链表的删除节点<br/><br/>双向链表删除节点时，只需要遍历链表到删除的节点，然后截掉即可<br/><br/>1）首先判断需要删除的节点位置是否大于链表总长度<br/><br/>&#x60;&#x60;&#x60;c++<br/>if(del &gt; count){<br/>    cout&lt;&lt;&quot;删除的节点位置大于链表总长度&quot;;<br/>    return head;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>2）如果删除位置在表头<br/><br/>&#x60;&#x60;&#x60;c++<br/>if(del == 1){<br/>    head=head-&gt;next;<br/>    head-&gt;prior=NULL;<br/>    free(temp);<br/>    return head;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210126151007311\" src=\"https://i.loli.net/2021/01/26/8OwM9QvPRljoy3f.png\"/></div><p><br/><br/>3）如果删除位置在表尾<br/><br/>&#x60;&#x60;&#x60;c++<br/>if(del == count){<br/>    for(int i = 1;i &lt; count-1;i++){<br/>        temp = temp-&gt;next;<br/>    }<br/>    NODE *deltail = temp-&gt;next;<br/>    temp-&gt;next = NULL;<br/>    free(deltail);<br/>    return head;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210126150751084\" src=\"https://i.loli.net/2021/01/26/opgkRZVfBQK54d8.png\"/></div><p><br/><br/>4）如果删除位置在表中<br/><br/>&#x60;&#x60;&#x60;c++<br/>else{//删除的为中间位置<br/>    for(int i = 1;i &lt; del;i++){<br/>        temp = temp-&gt;next;<br/>    }<br/>    temp-&gt;prior-&gt;next = temp-&gt;next;<br/>    temp-&gt;next-&gt;prior = temp-&gt;prior    <br/>    free(temp);<br/>    return head;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210126150557841\" src=\"https://i.loli.net/2021/01/26/7mA1SLFT8lEgIiK.png\"/></div><p><br/><br/>## 六、双向链表的查找节点<br/><br/>与单向链表类似，都是从表头依次遍历表中元素<br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c++<br/>int seekDate(NODE *head,int elem){<br/>    NODE *temp = head;<br/>    int loc=1;<br/>    while(temp){<br/>        if (temp-&gt;date == elem){<br/>            return loc;<br/>        }<br/>        loc++;<br/>        temp = temp-&gt;next;<br/>    }<br/>    //查找失败<br/>    return -1;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>## 七、双向链表的更改结点<br/><br/>更改双向链表中的指定结点数据域是在查找的基础上完成的，找到后直接修改<br/><br/>1）首先判断更改处的位置是否大于链表长度<br/><br/>&#x60;&#x60;&#x60;c++<br/>if(loc &gt; count){<br/>    //则直接返回<br/>    cout&lt;&lt;&quot;修改失败，没有该节点&quot;;<br/>    return 0;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>2）不大于则遍历到被修改的节点位置<br/><br/>&#x60;&#x60;&#x60;c++<br/>NODE *temp = head;<br/>    //遍历到被修改的结点<br/>for(int i=1;i&lt;loc;i++){<br/>    temp = temp-&gt;next;<br/>}<br/>temp-&gt;date = newElem;<br/>return 1;<br/>&#x60;&#x60;&#x60;<br/><br/>## 八、总结<br/><br/>代码详见 7.Double_List.cpp<br/><br/>实现了双向链表的增添删改<br/><br/>结果如图：<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210126154020587\" src=\"https://i.loli.net/2021/01/26/MbokqmBt8p5Svyi.png\"/></div><p> </p>', 6, 1, 0, '2021-03-01 00:00:00', NULL);
INSERT INTO `article` VALUES (270, '202010804013', 'C语言数据结构之循环链表', 3, 16, 'Circular_List（gitee仓库）## 一、循环链表的思路### 1.创建循环链表与带头单向链表的创建基本相同最后尾结点指向头结点最后输入为零则free(p)&#x60;&#x60;&#x60;c++NODE *setList(N', '循环链表', 'http://img.pzhuweb.cn/2020108040131636703709057.png', '{\"blocks\":[{\"key\":\"f6agj\",\"text\":\"Circular_List（gitee仓库）\\n\\n## 一、循环链表的思路\\n### 1.创建循环链表\\n与带头单向链表的创建基本相同\\n最后尾结点指向头结点\\n最后输入为零则free(p)\\n```c++\\nNODE *setList(NODE *h){\\n    NODE *q,*p;\\n    q=h=(NODE *)malloc(sizeof(NODE));\\n    p=(NODE *)malloc(sizeof(NODE));\\n    cout<<\\\"创建循环链表:\\\";\\n    cin>>p->date;\\n    while (p->date != 0){\\n        q->next = p;\\n        q = p;\\n        p=(NODE *)malloc(sizeof(NODE));\\n        cin>>p->date;\\n    }\\n    free(p);\\n    q->next=h;\\n    return q;\\n}\\n```\\n\\n\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":24,\"length\":12,\"style\":\"FONTSIZE-24\"},{\"offset\":36,\"length\":1,\"style\":\"FONTSIZE-16\"},{\"offset\":49,\"length\":379,\"style\":\"FONTSIZE-16\"},{\"offset\":37,\"length\":12,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[{\"offset\":0,\"length\":13,\"key\":0}],\"data\":{}},{\"key\":\"45gcn\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"rh9d\",\"text\":\"\\n\\n### 2.输出循环链表\\n\\n先用尾结点指向有值域的结点\\n\\n```c++\\nq = q->next->next;\\n```\\n\\n再遍历输出\\n\\n```c++\\nvoid printf_list(NODE *h){\\n    NODE *q;\\n    cout<<\\\"-\\\";\\n    q=q->next->next;\\n    cout<<q->date<<\\\"-\\\";\\n    while(q!=h){\\n        q=q->next;\\n        cout<<q->date<<\\\"-\\\";\\n    }\\n}\\n```\\n\\n注意判断多久结束遍历输出，当遍历一遍之后又与h结点相合\\n\\n```c++\\nq!=h\\n```\\n\\n### 3.两个循环链表相接\\n\\n时间复杂度O(1)，相比于单向链表省时省力\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":14,\"style\":\"FONTSIZE-20\"},{\"offset\":299,\"length\":14,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"4u44i\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"ffglr\",\"text\":\"\\n\\n实现代码\\n\\n```c++\\nNODE *connect_ListAB(NODE *A,NODE *B){\\n    NODE *p = A->next;\\n    A->next = B->next->next;\\n    free(B->next);\\n    B->next = p;\\n    return B;\\n}\\n```\\n\\n完整connect_List\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"b1kho\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{}},{\"key\":\"8lbf3\",\"text\":\"\\n\\n## 二、实现图\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"86ef8\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":4}],\"data\":{}},{\"key\":\"auln\",\"text\":\"\\n\\n\\n \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://gitee.com/WQ-BY/datastructure/tree/master/0006.Circular_List\",\"target\":\"_blank\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/21/BFPaZ3ieIo4YgDx.png\",\"name\":\"image-20210121172700770\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210121172700770\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/21/APGBvIRhr46ef91.png\",\"name\":\"image-20210121175519789\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210121175519789\"}}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/21/lNtYVfEvZdzbCHO.png\",\"name\":\"image-20210121175718917\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210121175718917\"}}},\"4\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/21/awb5BNtCvU7sWhT.png\",\"name\":\"image-20210121181217468\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210121181217468\"}}}}}', '<h1><a href=\"https://gitee.com/WQ-BY/datastructure/tree/master/0006.Circular_List\" target=\"_blank\">Circular_List</a>（gitee仓库）<br/><br/><span style=\"font-size:24px\">## 一、循环链表的思路</span><span style=\"font-size:16px\"><br/></span><span style=\"font-size:20px\">### 1.创建循环链表</span><span style=\"font-size:16px\"><br/>与带头单向链表的创建基本相同<br/>最后尾结点指向头结点<br/>最后输入为零则free(p)<br/>&#x60;&#x60;&#x60;c++<br/>NODE *setList(NODE *h){<br/>    NODE *q,*p;<br/>    q=h=(NODE *)malloc(sizeof(NODE));<br/>    p=(NODE *)malloc(sizeof(NODE));<br/>    cout&lt;&lt;&quot;创建循环链表:&quot;;<br/>    cin&gt;&gt;p-&gt;date;<br/>    while (p-&gt;date != 0){<br/>        q-&gt;next = p;<br/>        q = p;<br/>        p=(NODE *)malloc(sizeof(NODE));<br/>        cin&gt;&gt;p-&gt;date;<br/>    }<br/>    free(p);<br/>    q-&gt;next=h;<br/>    return q;<br/>}<br/>&#x60;&#x60;&#x60;</span><br/><br/></h1><div class=\"media-wrap image-wrap\"><img alt=\"image-20210121172700770\" src=\"https://i.loli.net/2021/01/21/BFPaZ3ieIo4YgDx.png\"/></div><p><span style=\"font-size:20px\"><br/><br/>### 2.输出循环链表</span><br/><br/>先用尾结点指向有值域的结点<br/><br/>&#x60;&#x60;&#x60;c++<br/>q = q-&gt;next-&gt;next;<br/>&#x60;&#x60;&#x60;<br/><br/>再遍历输出<br/><br/>&#x60;&#x60;&#x60;c++<br/>void printf_list(NODE *h){<br/>    NODE *q;<br/>    cout&lt;&lt;&quot;-&quot;;<br/>    q=q-&gt;next-&gt;next;<br/>    cout&lt;&lt;q-&gt;date&lt;&lt;&quot;-&quot;;<br/>    while(q!=h){<br/>        q=q-&gt;next;<br/>        cout&lt;&lt;q-&gt;date&lt;&lt;&quot;-&quot;;<br/>    }<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>注意判断多久结束遍历输出，当遍历一遍之后又与h结点相合<br/><br/>&#x60;&#x60;&#x60;c++<br/>q!=h<br/>&#x60;&#x60;&#x60;<br/><br/><span style=\"font-size:20px\">### 3.两个循环链表相接</span><br/><br/>时间复杂度O(1)，相比于单向链表省时省力<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210121175519789\" src=\"https://i.loli.net/2021/01/21/APGBvIRhr46ef91.png\"/></div><p><br/><br/>实现代码<br/><br/>&#x60;&#x60;&#x60;c++<br/>NODE *connect_ListAB(NODE *A,NODE *B){<br/>    NODE *p = A-&gt;next;<br/>    A-&gt;next = B-&gt;next-&gt;next;<br/>    free(B-&gt;next);<br/>    B-&gt;next = p;<br/>    return B;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>完整connect_List<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210121175718917\" src=\"https://i.loli.net/2021/01/21/lNtYVfEvZdzbCHO.png\"/></div><p><br/><br/>## 二、实现图<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210121181217468\" src=\"https://i.loli.net/2021/01/21/awb5BNtCvU7sWhT.png\"/></div><p><br/><br/><br/> </p>', 3, 1, 0, '2021-02-11 00:00:00', NULL);
INSERT INTO `article` VALUES (271, '202010804013', 'C语言数据结构之堆栈', 3, 16, 'Stack（gitee仓库）## 一、顺序栈及基本操作用顺序表实现栈存储结构。栈的储存结构操作必须遵循”先进后出的“的原则。若用顺序表即数组a来存储数据。即可用a[0],a[1],a[2],a[3]来分别取出数据，那么我们用一个整型top,', '堆栈', 'http://img.pzhuweb.cn/2020108040131636703952778.png', '{\"blocks\":[{\"key\":\"3rkfj\",\"text\":\"Stack（gitee仓库）\\n## 一、顺序栈及基本操作\\n用顺序表实现栈存储结构。栈的储存结构操作必须遵循”先进后出的“的原则。\\n若用顺序表即数组a来存储数据。\\n\\n\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":15,\"length\":13,\"style\":\"FONTSIZE-24\"},{\"offset\":28,\"length\":52,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[{\"offset\":0,\"length\":14,\"key\":0}],\"data\":{}},{\"key\":\"108io\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"6jb43\",\"text\":\"\\n\\n即可用a[0],a[1],a[2],a[3]来分别取出数据，那么我们用一个整型top,来表示索引（初始值为-1即空栈），每次增加一个数据top++；每次减少一个数据top--；可以模拟出栈的储存结构”先进后出“的原则。\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"foobl\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"cchbk\",\"text\":\"\\n\\n### 1.顺序栈-入栈\\n\\n1）模拟空栈的情况，即数组为空，top = -1。\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":15,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dl14n\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{}},{\"key\":\"82mab\",\"text\":\"\\n\\n2）首先添加一个元素1，即入栈元素1，top++。\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"96nn\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":4}],\"data\":{}},{\"key\":\"2sc26\",\"text\":\"\\n\\n3）延续2）方法入栈2，3，4。\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ctufk\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":5}],\"data\":{}},{\"key\":\"5i2c6\",\"text\":\"\\n\\n代码如下：\\n\\n```c++\\n/*\\n    元素elem进栈，a为数组，top值为当前栈的栈顶位置\\n*/\\nint push(int *a,int top,int elem){\\n    a[++top]=elem;\\n    return top;\\n}\\n```\\n\\n### 2.顺序栈-出栈\\n\\n例如，我们需要将元素2出栈，即需要先将4元素出栈，再将3元素出栈，随后才能使2元素出栈，在顺序表模拟的栈出栈，元素并没有摘掉，为了方便理解，先将元素摘掉。\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":131,\"length\":13,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5ptme\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":6}],\"data\":{}},{\"key\":\"939q0\",\"text\":\"\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"ah6ge\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":7}],\"data\":{}},{\"key\":\"e0ge0\",\"text\":\"\\n\\n代码如下：\\n\\n```c++\\n/*\\n    数据元素出栈\\n*/\\nint pop(int *a,int top){\\n    if(top == -1){\\n        cout<<\\\"空栈\\\"<<endl;\\n        return -1;\\n    }\\n    cout<<\\\"出栈元素：\\\"<<a[top]<<endl;\\n    top--;       //每出栈一个元素栈顶-1\\n    return top;  //返回现在栈顶\\n}\\n```\\n\\n### 3.顺序栈-总结\\n\\n顺序栈只是模拟栈的出栈入栈过程，即”先进后出“，\\n\\n并不能很好的体现栈的储存结构。\\n\\n实现结果：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":224,\"length\":13,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"erl5u\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":8}],\"data\":{}},{\"key\":\"40l4p\",\"text\":\"\\n\\n\\n\\n## 二、链栈及基本操作\\n\\n链栈与顺序栈类似，顺序栈是以数组的头为 栈底，另一头为栈顶；\\n\\n链栈则是以单向链的头为栈顶，链尾为栈底，实现栈的储存结构，如图；\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":3,\"style\":\"FONTSIZE-20\"},{\"offset\":3,\"length\":13,\"style\":\"FONTSIZE-24\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"b6qeg\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":9}],\"data\":{}},{\"key\":\"chnf5\",\"text\":\"\\n\\n1）将链表头部作为栈顶的一端，可以避免在实现数据”入栈“和”出栈“操作时做大量的遍历链表；\\n\\n2）在实现数据”入栈“操作时，需要将数据从链表的头部插入；\\n\\n3）在实现数据”出栈“操作时，需要删除链表头部的首元节点；\\n\\n<u>因此，链栈实际上就是一个只能采用头插法插入或删除数据的链表。</u>\\n\\n### 1.链栈-入栈\\n\\n例如，将元素1、2、3、4依次入栈，即是用头插法将各个元素依次插入添加到链表中，过程如下；\\n\\na)空栈：       head  →  NULL\\n\\nb)1入栈：     head  →  1  →  NULL\\n\\nc)2入栈：      head  →  2  →  1  →  NULL\\n\\nd)3入栈：      head  →  3  →  2  →  1  →  NULL\\n\\ne)4入栈：      head  →  4  →  3  →  2  →  1  →  NULL\\n\\n代码如下：\\n\\n```c++\\n/******* 创 建 链 表 节 点 结 构 *******/\\ntypedef struct lineStack{\\n    int date;\\n    struct lineStack *next;\\n}lineStack;\\n/*\\n    链栈-入栈，elem为入栈元素\\n*/\\nlineStack *push(lineStack *stack,int elem){\\n    //创建储存新元素的节点\\n    lineStack newLine = (lineStack )malloc(sizeof(lineStack));\\n    newLine->date = elem;\\n    //新节点与头节点建立逻辑关系\\n    newLine->next = stack;\\n    //更新头指针\\n    stack = newLine;\\n    //返回新栈顶\\n    return stack;\\n}\\n```\\n\\n### 2.链栈-出栈\\n\\n例如，我们需要将元素2出栈，那么根据”先进后出“的原则，我们则需要先将元素4出栈，再将元素3出栈，随后才能时元素2出栈，整个操作如下；\\n\\na)初始链栈：      head  →  4  →  3  →  2  →  1  →  NULL\\n\\nb)4出栈：           head  →  3  →  2  →  1  →  NULL                 4出\\n\\nc)3出栈：            head  →  2  →  1  →  NULL                           3出\\n\\nd)2出栈：            head  →  1  →  NULL                                     2出\\n\\n代码如下：\\n\\n```c++\\n/*\\n    链栈-出栈，stack为栈顶\\n*/\\nlineStack *pop(lineStack *stack){\\n    //如果一开始就为空栈即没有元素\\n    if(stack){\\n        //声明一个新指针指向栈顶\\n        lineStack *top = stack;\\n        //更新头指针\\n        stack = stack->next;\\n        cout<<\\\"出栈元素为：\\\"<<top->date<<endl;\\n        //此时判断是否为空栈，若不是则新栈顶为\\n        if(stack){\\n            cout<<\\\"新栈顶元素为：\\\"<<stack->date<<endl;\\n        }else{\\n            cout<<\\\"栈已空！\\\"<<endl;\\n        }\\n        //释放出栈元素节点\\n        free(top);\\n    }else{\\n        cout<<\\\"栈内没有元素\\\"<<endl;\\n    }\\n    return stack; //返回新栈顶\\n}\\n```\\n\\n### 3.链栈-总结\\n\\n链栈即采用了单向链表的头插法实现，严格遵循”先进后出“的原则。\\n\\n实现结果：\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":114,\"length\":30,\"style\":\"BOLD\"},{\"offset\":228,\"length\":1,\"style\":\"BOLD\"},{\"offset\":231,\"length\":4,\"style\":\"BOLD\"},{\"offset\":254,\"length\":1,\"style\":\"BOLD\"},{\"offset\":257,\"length\":1,\"style\":\"BOLD\"},{\"offset\":260,\"length\":1,\"style\":\"BOLD\"},{\"offset\":287,\"length\":1,\"style\":\"BOLD\"},{\"offset\":290,\"length\":1,\"style\":\"BOLD\"},{\"offset\":293,\"length\":1,\"style\":\"BOLD\"},{\"offset\":299,\"length\":1,\"style\":\"BOLD\"},{\"offset\":326,\"length\":1,\"style\":\"BOLD\"},{\"offset\":329,\"length\":1,\"style\":\"BOLD\"},{\"offset\":332,\"length\":1,\"style\":\"BOLD\"},{\"offset\":338,\"length\":1,\"style\":\"BOLD\"},{\"offset\":344,\"length\":1,\"style\":\"BOLD\"},{\"offset\":371,\"length\":1,\"style\":\"BOLD\"},{\"offset\":374,\"length\":1,\"style\":\"BOLD\"},{\"offset\":377,\"length\":1,\"style\":\"BOLD\"},{\"offset\":383,\"length\":1,\"style\":\"BOLD\"},{\"offset\":389,\"length\":1,\"style\":\"BOLD\"},{\"offset\":395,\"length\":1,\"style\":\"BOLD\"},{\"offset\":926,\"length\":1,\"style\":\"BOLD\"},{\"offset\":932,\"length\":1,\"style\":\"BOLD\"},{\"offset\":938,\"length\":1,\"style\":\"BOLD\"},{\"offset\":944,\"length\":1,\"style\":\"BOLD\"},{\"offset\":950,\"length\":1,\"style\":\"BOLD\"},{\"offset\":982,\"length\":1,\"style\":\"BOLD\"},{\"offset\":988,\"length\":1,\"style\":\"BOLD\"},{\"offset\":994,\"length\":1,\"style\":\"BOLD\"},{\"offset\":1000,\"length\":1,\"style\":\"BOLD\"},{\"offset\":1024,\"length\":2,\"style\":\"BOLD\"},{\"offset\":1052,\"length\":1,\"style\":\"BOLD\"},{\"offset\":1058,\"length\":1,\"style\":\"BOLD\"},{\"offset\":1064,\"length\":1,\"style\":\"BOLD\"},{\"offset\":1098,\"length\":2,\"style\":\"BOLD\"},{\"offset\":1126,\"length\":1,\"style\":\"BOLD\"},{\"offset\":1132,\"length\":1,\"style\":\"BOLD\"},{\"offset\":1176,\"length\":2,\"style\":\"BOLD\"},{\"offset\":150,\"length\":11,\"style\":\"FONTSIZE-20\"},{\"offset\":825,\"length\":12,\"style\":\"FONTSIZE-20\"},{\"offset\":1700,\"length\":11,\"style\":\"FONTSIZE-20\"},{\"offset\":633,\"length\":21,\"style\":\"ITALIC\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dl626\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":10}],\"data\":{}},{\"key\":\"bopln\",\"text\":\"\\n\\n## 三、栈-10进制任意转换\\n\\n### 设计思路\\n\\n例如讲10进制转换为2进制计算思路为：\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":1,\"style\":\"FONTSIZE-28\"},{\"offset\":1,\"length\":16,\"style\":\"FONTSIZE-24\"},{\"offset\":19,\"length\":8,\"style\":\"FONTSIZE-20\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"1prjb\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":11}],\"data\":{}},{\"key\":\"7unus\",\"text\":\"\\n\\n利用循环将每一个余数都压入栈中，再遍历出栈\\n\\n转换代码：\\n\\n```c++\\n/*\\n    进制转换\\n*/\\nscStack *sysConvert(int num,int system,scStack *sys){\\n    int q = num / system;//商\\n    int r = num % system;//余\\n    scStack *syS = push(sys,r); \\n    while(q!=0){\\n        r = q % system;\\n        q = q / system;\\n        syS = push(syS,r);\\n    }\\n    return syS;   //返回栈顶\\n}\\n```\\n\\n如果10进制转换成16进制则10->a \\\\ 11->b \\\\ 12->c \\\\ 13->d \\\\ 14->e \\\\ 15->f\\n\\n则在出栈的时候判断一下是否为大于等于10的数\\n\\n```c++\\n/*\\n   余数出栈\\n*/\\nvoid pop(scStack *stack){\\n    while(stack){\\n        scStack *top = stack;\\n        if(top->elem >= 10){\\n            printf(\\\"%c\\\",top->elem + \'a\' - 10);//10->a  11->b  12->c  13->d  14->e  15->f\\n            stack = stack->next;\\n            free(top);\\n            continue;\\n        }\\n        cout<<top->elem;\\n        stack = stack->next;\\n        free(top);\\n    }\\n    cout<<endl<<\\\"转换完毕！\\\"<<endl;\\n}\\n```\\n\\n### 运行结果\\n\\n10->2\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"a9lph\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":12}],\"data\":{}},{\"key\":\"2avbr\",\"text\":\"\\n\\n10->16\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"dk5bk\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":13}],\"data\":{}},{\"key\":\"e0m04\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://gitee.com/WQ-BY/datastructure/edit/master/0009.Stack\",\"target\":\"_blank\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/27/DqZS1QdnWEIVByC.png\",\"name\":\"image-20210127150841505\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210127150841505\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/27/j6SJ5vXlzHAKGN8.png\",\"name\":\"image-20210127150743080\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210127150743080\"}}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/27/zBXk42xbDH9qog7.png\",\"name\":\"image-20210127151251625\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210127151251625\"}}},\"4\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/27/yKvXVcogirGmh3O.png\",\"name\":\"image-20210127151400120\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210127151400120\"}}},\"5\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/27/wj9pRbPYVzho4IN.png\",\"name\":\"image-20210127151520901\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210127151520901\"}}},\"6\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/27/AmMk4tuXVBLZUQv.png\",\"name\":\"image-20210127151800847\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210127151800847\"}}},\"7\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/27/zIGWqTOQEcewCRM.png\",\"name\":\"image-20210127151823467\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210127151823467\"}}},\"8\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/27/GZ2XvIPfA7pHcbk.png\",\"name\":\"image-20210127160701203\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210127160701203\"}}},\"9\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/27/GboRXpVhtWxvUB5.png\",\"name\":\"image-20210127153122380\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210127153122380\"}}},\"10\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/27/9Tv4SD65PNrWnyZ.png\",\"name\":\"image-20210127160614437\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210127160614437\"}}},\"11\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/31/CFM4QvapeXmg6Rl.png\",\"name\":\"image-20210131141702802\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210131141702802\"}}},\"12\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/31/q4IQMOoWbx21DVc.png\",\"name\":\"image-20210131142205331\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210131142205331\"}}},\"13\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/01/31/Ga46clpPETzteOw.png\",\"name\":\"image-20210131142247262\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210131142247262\"}}}}}', '<h1><a href=\"https://gitee.com/WQ-BY/datastructure/edit/master/0009.Stack\" target=\"_blank\">Stack（gitee仓库）</a><br/><span style=\"font-size:24px\">## 一、顺序栈及基本操作</span><span style=\"font-size:16px\"><br/>用顺序表实现栈存储结构。栈的储存结构操作必须遵循”先进后出的“的原则。<br/>若用顺序表即数组a来存储数据。</span><br/><br/></h1><div class=\"media-wrap image-wrap\"><img alt=\"image-20210127150841505\" src=\"https://i.loli.net/2021/01/27/DqZS1QdnWEIVByC.png\"/></div><p><br/><br/>即可用a[0],a[1],a[2],a[3]来分别取出数据，那么我们用一个整型top,来表示索引（初始值为-1即空栈），每次增加一个数据top++；每次减少一个数据top--；可以模拟出栈的储存结构”先进后出“的原则。<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210127150743080\" src=\"https://i.loli.net/2021/01/27/j6SJ5vXlzHAKGN8.png\"/></div><p><span style=\"font-size:20px\"><br/><br/>### 1.顺序栈-入栈<br/></span><br/>1）模拟空栈的情况，即数组为空，top = -1。<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210127151251625\" src=\"https://i.loli.net/2021/01/27/zBXk42xbDH9qog7.png\"/></div><p><br/><br/>2）首先添加一个元素1，即入栈元素1，top++。<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210127151400120\" src=\"https://i.loli.net/2021/01/27/yKvXVcogirGmh3O.png\"/></div><p><br/><br/>3）延续2）方法入栈2，3，4。<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210127151520901\" src=\"https://i.loli.net/2021/01/27/wj9pRbPYVzho4IN.png\"/></div><p><br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c++<br/>/*<br/>    元素elem进栈，a为数组，top值为当前栈的栈顶位置<br/>*/<br/>int push(int *a,int top,int elem){<br/>    a[++top]=elem;<br/>    return top;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/><span style=\"font-size:20px\">### 2.顺序栈-出栈<br/></span><br/>例如，我们需要将元素2出栈，即需要先将4元素出栈，再将3元素出栈，随后才能使2元素出栈，在顺序表模拟的栈出栈，元素并没有摘掉，为了方便理解，先将元素摘掉。<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210127151800847\" src=\"https://i.loli.net/2021/01/27/AmMk4tuXVBLZUQv.png\"/></div><p><br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210127151823467\" src=\"https://i.loli.net/2021/01/27/zIGWqTOQEcewCRM.png\"/></div><p><br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c++<br/>/*<br/>    数据元素出栈<br/>*/<br/>int pop(int *a,int top){<br/>    if(top == -1){<br/>        cout&lt;&lt;&quot;空栈&quot;&lt;&lt;endl;<br/>        return -1;<br/>    }<br/>    cout&lt;&lt;&quot;出栈元素：&quot;&lt;&lt;a[top]&lt;&lt;endl;<br/>    top--;       //每出栈一个元素栈顶-1<br/>    return top;  //返回现在栈顶<br/>}<br/>&#x60;&#x60;&#x60;<br/><span style=\"font-size:20px\"><br/>### 3.顺序栈-总结</span><br/><br/>顺序栈只是模拟栈的出栈入栈过程，即”先进后出“，<br/><br/>并不能很好的体现栈的储存结构。<br/><br/>实现结果：</p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210127160701203\" src=\"https://i.loli.net/2021/01/27/GZ2XvIPfA7pHcbk.png\"/></div><p><span style=\"font-size:20px\"><br/><br/><br/></span><span style=\"font-size:24px\"><br/>## 二、链栈及基本操作</span><br/><br/>链栈与顺序栈类似，顺序栈是以数组的头为 栈底，另一头为栈顶；<br/><br/>链栈则是以单向链的头为栈顶，链尾为栈底，实现栈的储存结构，如图；<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210127153122380\" src=\"https://i.loli.net/2021/01/27/GboRXpVhtWxvUB5.png\"/></div><p><br/><br/>1）将链表头部作为栈顶的一端，可以避免在实现数据”入栈“和”出栈“操作时做大量的遍历链表；<br/><br/>2）在实现数据”入栈“操作时，需要将数据从链表的头部插入；<br/><br/>3）在实现数据”出栈“操作时，需要删除链表头部的首元节点；<br/><br/>&lt;u&gt;<strong>因此，链栈实际上就是一个只能采用头插法插入或删除数据的链表。</strong>&lt;/u&gt;<br/><br/><span style=\"font-size:20px\">### 1.链栈-入栈</span><br/><br/>例如，将元素1、2、3、4依次入栈，即是用头插法将各个元素依次插入添加到链表中，过程如下；<br/><br/>a)空栈：       head  <strong>→</strong>  <strong>NULL</strong><br/><br/>b)1入栈：     head  <strong>→</strong>  <strong>1</strong>  <strong>→</strong>  NULL<br/><br/>c)2入栈：      head  <strong>→</strong>  <strong>2</strong>  <strong>→</strong>  1  <strong>→</strong>  NULL<br/><br/>d)3入栈：      head  <strong>→</strong>  <strong>3</strong>  <strong>→</strong>  2  <strong>→</strong>  1  <strong>→</strong>  NULL<br/><br/>e)4入栈：      head  <strong>→</strong>  <strong>4</strong>  <strong>→</strong>  3  <strong>→</strong>  2  <strong>→</strong>  1  <strong>→</strong>  NULL<br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c++<br/>/******* 创 建 链 表 节 点 结 构 *******/<br/>typedef struct lineStack{<br/>    int date;<br/>    struct lineStack *next;<br/>}lineStack;<br/>/*<br/>    链栈-入栈，elem为入栈元素<br/>*/<br/>lineStack *push(lineStack *stack,int elem){<br/>    //创建储存新元素的节点<br/>    lineStack <em>newLine = (lineStack </em>)malloc(sizeof(lineStack));<br/>    newLine-&gt;date = elem;<br/>    //新节点与头节点建立逻辑关系<br/>    newLine-&gt;next = stack;<br/>    //更新头指针<br/>    stack = newLine;<br/>    //返回新栈顶<br/>    return stack;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/><span style=\"font-size:20px\">### 2.链栈-出栈<br/></span><br/>例如，我们需要将元素2出栈，那么根据”先进后出“的原则，我们则需要先将元素4出栈，再将元素3出栈，随后才能时元素2出栈，整个操作如下；<br/><br/>a)初始链栈：      head  <strong>→</strong>  4  <strong>→</strong>  3  <strong>→</strong>  2  <strong>→</strong>  1  <strong>→</strong>  NULL<br/><br/>b)4出栈：           head  <strong>→</strong>  3  <strong>→</strong>  2  <strong>→</strong>  1  <strong>→</strong>  NULL                 <strong>4出</strong><br/><br/>c)3出栈：            head  <strong>→</strong>  2  <strong>→</strong>  1  <strong>→</strong>  NULL                           <strong>3出</strong><br/><br/>d)2出栈：            head  <strong>→</strong>  1  <strong>→</strong>  NULL                                     <strong>2出</strong><br/><br/>代码如下：<br/><br/>&#x60;&#x60;&#x60;c++<br/>/*<br/>    链栈-出栈，stack为栈顶<br/>*/<br/>lineStack *pop(lineStack *stack){<br/>    //如果一开始就为空栈即没有元素<br/>    if(stack){<br/>        //声明一个新指针指向栈顶<br/>        lineStack *top = stack;<br/>        //更新头指针<br/>        stack = stack-&gt;next;<br/>        cout&lt;&lt;&quot;出栈元素为：&quot;&lt;&lt;top-&gt;date&lt;&lt;endl;<br/>        //此时判断是否为空栈，若不是则新栈顶为<br/>        if(stack){<br/>            cout&lt;&lt;&quot;新栈顶元素为：&quot;&lt;&lt;stack-&gt;date&lt;&lt;endl;<br/>        }else{<br/>            cout&lt;&lt;&quot;栈已空！&quot;&lt;&lt;endl;<br/>        }<br/>        //释放出栈元素节点<br/>        free(top);<br/>    }else{<br/>        cout&lt;&lt;&quot;栈内没有元素&quot;&lt;&lt;endl;<br/>    }<br/>    return stack; //返回新栈顶<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/><span style=\"font-size:20px\">### 3.链栈-总结</span><br/><br/>链栈即采用了单向链表的头插法实现，严格遵循”先进后出“的原则。<br/><br/>实现结果：</p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210127160614437\" src=\"https://i.loli.net/2021/01/27/9Tv4SD65PNrWnyZ.png\"/></div><p><span style=\"font-size:28px\"><br/></span><span style=\"font-size:24px\"><br/>## 三、栈-10进制任意转换</span><br/><br/><span style=\"font-size:20px\">### 设计思路</span><br/><br/>例如讲10进制转换为2进制计算思路为：<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210131141702802\" src=\"https://i.loli.net/2021/01/31/CFM4QvapeXmg6Rl.png\"/></div><p><br/><br/>利用循环将每一个余数都压入栈中，再遍历出栈<br/><br/>转换代码：<br/><br/>&#x60;&#x60;&#x60;c++<br/>/*<br/>    进制转换<br/>*/<br/>scStack *sysConvert(int num,int system,scStack *sys){<br/>    int q = num / system;//商<br/>    int r = num % system;//余<br/>    scStack *syS = push(sys,r); <br/>    while(q!=0){<br/>        r = q % system;<br/>        q = q / system;<br/>        syS = push(syS,r);<br/>    }<br/>    return syS;   //返回栈顶<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>如果10进制转换成16进制则10-&gt;a \\ 11-&gt;b \\ 12-&gt;c \\ 13-&gt;d \\ 14-&gt;e \\ 15-&gt;f<br/><br/>则在出栈的时候判断一下是否为大于等于10的数<br/><br/>&#x60;&#x60;&#x60;c++<br/>/*<br/>   余数出栈<br/>*/<br/>void pop(scStack *stack){<br/>    while(stack){<br/>        scStack *top = stack;<br/>        if(top-&gt;elem &gt;= 10){<br/>            printf(&quot;%c&quot;,top-&gt;elem + &#x27;a&#x27; - 10);//10-&gt;a  11-&gt;b  12-&gt;c  13-&gt;d  14-&gt;e  15-&gt;f<br/>            stack = stack-&gt;next;<br/>            free(top);<br/>            continue;<br/>        }<br/>        cout&lt;&lt;top-&gt;elem;<br/>        stack = stack-&gt;next;<br/>        free(top);<br/>    }<br/>    cout&lt;&lt;endl&lt;&lt;&quot;转换完毕！&quot;&lt;&lt;endl;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>### 运行结果<br/><br/>10-&gt;2<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210131142205331\" src=\"https://i.loli.net/2021/01/31/q4IQMOoWbx21DVc.png\"/></div><p><br/><br/>10-&gt;16<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210131142247262\" src=\"https://i.loli.net/2021/01/31/Ga46clpPETzteOw.png\"/></div><p> </p>', 2, 1, 0, '2021-03-03 00:00:00', NULL);
INSERT INTO `article` VALUES (272, '202010804013', 'c语言数据结构之二叉树', 3, 16, '树-&gt;二叉树（gitee仓库）## 树的简介树是一种非线性的数据存储结构，而二叉树只是其中一种特殊的存储结构。如图1：（有序二叉树）### 树的节点1. 结点：就是树结构储存的每一个元素，其可以由数据域、左孩子指针域、右孩子指针域、（', '二叉树', 'http://img.pzhuweb.cn/2020108040131636704127234.png', '{\"blocks\":[{\"key\":\"40kh7\",\"text\":\"树->二叉树（gitee仓库）\\n## 树的简介\\n树是一种非线性的数据存储结构，而二叉树只是其中一种特殊的存储结构。\\n如图1：（有序二叉树）\\n\\n\",\"type\":\"header-one\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":16,\"length\":53,\"style\":\"FONTSIZE-16\"}],\"entityRanges\":[{\"offset\":0,\"length\":15,\"key\":0}],\"data\":{}},{\"key\":\"995b6\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"6ocm6\",\"text\":\"\\n\\n### 树的节点\\n\\n1. 结点：就是树结构储存的每一个元素，其可以由数据域、左孩子指针域、右孩子指针域、（父亲结点指针域）构成，如图1(B)B就是一个结点。\\n\\n2. 父结点又称双亲结点：如图1(A)、图1(B)、图1(C)、图1(D)、图1(G)都是父结点。\\n\\n3. 子结点、兄弟结点、堂兄结点：图1(B)、图1(C)都是A的子结点，而他们都有共同的父结点，所以B、C互为兄弟结点，对于在同一深度的结点而言，它们如果不是同一个父节点，那么它们互为堂兄结点。\\n\\n4. 树根结点又称根结点：每一个非空树结构都有且仅有一个根结点，如图1(A)就是这个有序二叉树的根结点。\\n\\n5. 叶子结点：如果该结点没有左孩子也没有右孩子，那么这个结点就是叶子结点，如图1(Q)、图1(I)、图1(E)、图1(F)、图1(J)都是叶子结点。\\n\\n### 子树和空树\\n\\n子树：树中的每个结点都是一棵树，只不过根结点就是他本身。所以树是由根结点和若干子树构成。\\n\\n空树：即构成集合为空就是空树。\\n\\n对于树结构而言，有着同一个根结点的子树，不可以有着逻辑关系，不然就破坏了树的结构。如图便不再是一颗树。\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":437,\"length\":51,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"dv62i\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"7snqu\",\"text\":\"\\n\\n### 结点的度和层次\\n\\n度：对于一个结点而言，他有多少个子结点，便是它的度，如图1(A)它有B、C两个结点，所以它的度是2。\\n\\n一棵树的度便是树内各结点度的最大值，二叉树的度为2。\\n\\n结点的层次：一棵树从根结点开始，根结点为第一层，根的子结点为第二层，直到到达最深的叶子结点。如图1它的深度便是4层。\\n\\n### 有序树和无序树\\n\\n有序树便是一棵树从子树从左往右数，谁在左边，谁在右边是有明确规定的，便是一棵有序树，反之则是无序树。在有序树中，一个结点最左边的子树为“第一个孩子”，最右边为“最后一个孩子“，在图1中B就是第一个孩子，C就是最后一个孩子。\\n\\n### 森林\\n\\n森林是由n(n>=0)个互相不相交的树组合成的集合被称之为森林。如图1(A)的B、C两个子树构成的便是一个森林。因此树还可以是根结点和森林构成的。\\n\\n## 二叉树的性质\\n\\n二叉树必须满足两个条件\\n\\n1. 本身是有序树；\\n\\n2. 整棵树的度不能大于2；\\n\\n### 二叉树的性质\\n\\n1. 二叉树中，第n层最多有2ⁿ­­﹣¹个结点；\\n2. 如果二叉树的深度为n，二叉树最多有2ⁿ－1个结点；\\n3. 二叉树中，叶子结点数为n₁，度为2的结点数为n₂，则n₁=n₂+1；\\n\\n### 满二叉树\\n\\n满二叉树即是除了叶子结点的其他结点度都是2的二叉树，它满足二叉树的性质还同时满足以下性质：\\n\\n1. 深度为n的满二叉树叶子结点数为2ⁿ－1；\\n2. 满二叉树中不存在度为1的结点，除了叶子结点度为0，其他结点度均为2.\\n3. 具有n个结点的满二叉树的深度为㏒₂(n+1)；\\n\\n### 完全二叉树\\n\\n完全二叉树即是满二叉树除去最后一层的最后一个结点，从左往右依次分布。\\n\\n完全二叉树除了满足普通二叉树的性质还同时满足以下性质：\\n\\n1. n个结点的完全二叉树深度为[㏒₂n]+1；“[ ]”取整符号\\n2. 当 i>1 时，父亲结点为结点 [i/2] 。（i=1 时，表示的是根结点，无父亲结点）\\n3. 如果 2i>n（总结点的个数） ，则结点 i 肯定没有左孩子（为叶子结点）；否则其左孩子是结点 2i 。\\n4. 如果 2i+1>n ，则结点 i 肯定没有右孩子；否则右孩子是结点 2i+1 。\\n\\n## 二叉树的链式存储结构\\n\\n二叉树的链式存储结构是由数据域、左孩子指针域、右孩子指针域、（父亲结点指针域）构成。\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":67,\"length\":26,\"style\":\"BOLD\"},{\"offset\":218,\"length\":61,\"style\":\"BOLD\"},{\"offset\":345,\"length\":17,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"e0pio\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{}},{\"key\":\"egt0s\",\"text\":\"\\n\\n```c\\ntypedef struct BTree{                  \\n    int data;\\n    struct BTree *lchild,*rchild;\\n}BiTree;\\n```\\n\\n## 二叉树的遍历\\n\\n二叉树遍历分为先序遍历、中序遍历、后序遍历、层次遍历共4种遍历方法，下面就逐一对其4种方法的递归与非递归实现做其阐述。\\n\\n这里是先序遍历、中序遍历所用到的进栈函数、出栈函数、获取栈顶元素函数。\\n\\n```c\\nint top=-1;//栈顶位置 全局变量\\n/*\\n    非递归遍历二叉树 进栈函数\\n*/\\nvoid push(BiTree **a,BiTree *elem){\\n    a[++top]=elem;\\n}\\n\\n/*\\n    非递归遍历二叉树 出栈函数\\n*/\\nvoid pop(){\\n    if(top==-1){\\n        return ;\\n    }\\n    top--;\\n}\\n\\n/*\\n    非递归遍历二叉树 获取栈顶元素\\n*/\\nBiTree *getTopElem(BiTree **a){\\n    return a[top];\\n}\\n```\\n\\n\\n\\n### 二叉树的先序遍历（递归与非递归）\\n\\n图2：\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9ee8l\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":4}],\"data\":{}},{\"key\":\"ecs1b\",\"text\":\"\\n\\n#### 递归思想\\n\\n先序遍历的递归思想：\\n\\n1. 先访问根结点；\\n2. 再访问左孩子；\\n3. 最后访问右孩子；\\n\\n图2中的先序遍历递归思想：\\n\\n1. 访问根结点，找到A；\\n2. 访问结点A的左结点，找到B；\\n3. 访问结点B的左结点，找到D；\\n4. 由于结点D的左结点为空且又无右结点则D访问结束，返回结点B访问其右结点，找到E；\\n5. 由于结点E无孩子，且结点B的左右孩子均访问，则返回结点A访问其右结点，找到C；\\n6. 访问结点C的左结点，找到F；\\n7. 由于F没有子结点，则返回访问结点C的右结点，访问失败，则返回A结点，由于结点A的左右结点均访问，则这个完全二叉树的先序遍历访问结束；\\n\\n```C\\n/*\\n    先序遍历二叉树（递归） A B D E C F 先访问根节点，再访问左孩子，最后访问右孩子\\n*/\\nvoid PreBiTree(BiTree *T){\\n    if(T){\\n        displayElem(T);\\n        PreBiTree(T->lchild);\\n        PreBiTree(T->rchild);\\n    }\\n    return ; //为空返回\\n}\\n```\\n\\n#### 非递归思想\\n\\n非递归则是使用栈的思想，将递归非递归化。\\n\\n1. 首先创建一个顺序栈；\\n2. 根结点A先进栈，然后出栈；\\n3. 如果右孩子不为空则先将右孩子压栈，再将移动指针指向左孩子，然后访问左孩子；\\n\\n图2中的先序遍历非递归思想：\\n\\n1. A进栈，出栈，访问A；\\n2. C进栈，访问B；\\n3. E进栈，访问D；\\n4. D无子结点，E出栈，访问E；\\n5. E无子结点，C出栈，访问C；\\n6. C无右孩子，访问F；\\n\\n```c\\n/*\\n    先序遍历二叉树（非递归）\\n*/\\nvoid PreBiTree_Stack(BiTree *T){\\n    BiTree *a[10];\\n    BiTree *p=NULL;\\n    push(a,T); //根节点先进栈\\n    while(top!=-1){\\n        p=getTopElem(a);\\n        pop();\\n        while(p){\\n            displayElem(p); //栈顶不为空则展示\\n            if(p->rchild){\\n                push(a,p->rchild); //右孩子进栈\\n            }\\n            p=p->lchild;    //左孩子进栈\\n        }\\n    }\\n}\\n```\\n\\n### 二叉树的中序遍历（递归与非递归）\\n\\n#### 递归思想\\n\\n中序遍历的递归思想：\\n\\n1. 先访问当前结点的左孩子；\\n2. 再访问根结点；\\n3. 最后访问当前结点的右孩子；\\n\\n图2中的中序遍历递归思想：\\n\\n1. 访问根结点，找到A；\\n2. 找到A的左孩子，B；\\n3. 找到B的左孩子，D；\\n4. 由于结点D没有左孩子则访问D；\\n5. 由于结点D也没有右孩子，则结点B的左子树遍历完成，访问B；\\n6. 找到B的右孩子，E；\\n7. 由于E无左子树，访问E；\\n8. 由于E又无右子树，则A的左子树访问完成，访问A；\\n9. 找到A的右孩子，C；\\n10. 找到C的左孩子，F；\\n11. 由于F没有左子树，则访问F；\\n12. 由于F又没有右子树，则返回访问C；\\n13. 由于C没有右子树，则返回A，中序遍历访问结束；\\n\\n```c\\n/*\\n    中序遍历二叉树（递归） D B E A F C 先访问左孩子，再访问根节点，最后访问右孩子\\n*/\\nvoid InBiTree(BiTree *T){\\n    if(T){\\n        InBiTree(T->lchild);\\n        displayElem(T);\\n        InBiTree(T->rchild);\\n    }\\n    return ; //为空返回\\n}\\n```\\n\\n#### 非递归思想\\n\\n中序遍历的非递归思想：\\n\\n1. 根结点先进栈；\\n2. 遍历左子树让其全部压栈直到NULL，弹出NULL；\\n3. 弹栈，然后将父节点的右孩子压栈，再弹栈，如此反复；\\n\\n图2中的中序遍历非递归思想：\\n\\n1. 根结点A进栈；\\n2. A的左孩子B进栈；\\n3. B的左孩子D进栈；\\n4. D的左孩子NULL进栈，结束循环弹出NULL；\\n5. 取栈顶结点D，访问D，弹栈后栈顶结点为B；\\n6. 访问B，B的右结点E进栈；\\n7. 访问E，B结点左右孩子访问结束，返回A，访问A；\\n8. A的右孩子C进栈；\\n9. C的左孩子F进栈；\\n10. F的左孩子NULL进栈，弹出NULL；\\n11. 取栈顶结点F，访问F；\\n12. F无左右孩子，返回C，访问C；\\n13. C无右孩子，返回A，中序遍历结束；\\n\\n```c\\n/*\\n    中序遍历二叉树（非递归）\\n*/\\nvoid InBiTree_Stack(BiTree *T){\\n    BiTree *a[10];\\n    BiTree *p=NULL;\\n    push(a,T); //根节点进栈\\n    while(top!=-1){\\n        while((p=getTopElem(a)) && p){\\n            push(a,p->lchild);\\n        }\\n        pop();//把左孩子的左空孩子NULL弹出\\n        if(top!=-1){\\n            p=getTopElem(a);\\n            displayElem(p);\\n            pop();\\n            push(a,p->rchild);//p结点的左孩子遍历完，开始遍历右孩子\\n        }\\n    }\\n}\\n```\\n\\n### 二叉树的后序遍历（递归与非递归）\\n\\n#### 递归思想\\n\\n后序遍历的递归思想：\\n\\n1. 先访问该结点的左孩子；\\n2. 再访问该节点的右孩子；\\n3. 最后访问该结点；\\n\\n图2中的后序遍历递归思路：\\n\\n1. 从根结点A开始，遍历左孩子B；\\n2. 遍历结点B的左孩子，找到D；\\n3. 由于D没有左孩子，也没有右孩子，则访问D，并返回到结点B；\\n4. B的左孩子遍历完，开始遍历右孩子E，找到E；\\n5. 由于E没有左右孩子，则访问E，并返回到结点B；\\n6. 由于B结点左右孩子遍历完，则访问B，并返回到根结点A；\\n7. A的左孩子遍历完，开始遍历右孩子C，找到C；\\n8. 遍历结点C的左孩子，找到F；\\n9. 由于F没有左右孩子，则访问F，并返回到结点C；\\n10. C的左孩子遍历完，开始遍历右孩子，由于没有右孩子，则访问C，并返回到根结点A；\\n11. A的左右孩子均遍历完成，则访问A，后序遍历结束；\\n\\n```\\n/*\\n    后序遍历二叉树（递归） D E B F C A 先访问左孩子，再访问右孩子，最后访问根节点\\n*/\\nvoid PostBiTree(BiTree *T){\\n    if(T){\\n        PostBiTree(T->lchild);\\n        PostBiTree(T->rchild);\\n        displayElem(T);\\n    }\\n    return ; //为空返回\\n}\\n```\\n\\n#### 非递归思想\\n\\n后序遍历的非递归思想不同于先序和中序，它需要再定义一个结构体来保存该结点的状态。\\n\\n```c\\n/*\\n    后序遍历二叉树\\n*/\\ntypedef struct SiNode{                \\n    int state;\\n    BiTree *p;\\n}SiNode;\\n```\\n\\nstate=0表示该结点还没有遍历它的右孩子，state=1表示该结点为访问结点。\\n\\n那么后序遍历的进栈函数、出栈函数则为\\n\\n```c\\n/*\\n    后序遍历进栈函数\\n*/\\nvoid postpush(SiNode *a,SiNode s){\\n    a[++top]=s;\\n}\\n/*\\n    非递归遍历二叉树 出栈函数\\n*/\\nvoid pop(){\\n    if(top==-1){\\n        return ;\\n    }\\n    top--;\\n}\\n```\\n\\n后序非递归遍历主要思路：\\n\\n1. 根结点以及左子树全部压栈，且state=0；\\n2. 由于栈顶为最后一个左叶子结点，取出结点以及state，弹出栈顶；\\n3. 如果state==0说明还没有遍历右孩子，更改其state重新压栈，遍历其右孩子；\\n4. 如果state!=0说明该结点左孩子右孩子都已经遍历完成，访问其结点；\\n\\n图2中的后序遍历非递归化思路：\\n\\n1. A、B、D结点依次入栈；\\n2. 取栈顶D，由于D没有左右孩子，访问D，并返回到B；\\n3. 由于B的state=0，则右孩子E入栈，然后修改B的state=1；\\n4. 由于E没有左右孩子，访问E，并返回到B；\\n5. 由于B的state=1，则访问B，并返回到A；\\n6. 由于A的state=0，则右孩子C入栈，然后修改A的state=1；\\n7. C入栈后还要将其左孩子F入栈，此时栈顶结点为F；\\n8. 由于F没有左右孩子，访问F，并返回到C；\\n9. 由于C的state=0，且右孩子为NULL所以不入栈，然后修改C的state=1；\\n10. 由于C的state=1，则访问C，并返回到A；\\n11. 由于A的state=1，则访问A，此时后序遍历完成；\\n\\n```c\\n/*\\n    后序遍历二叉树（非递归）\\n*/\\nvoid PostBiTree_Stack(BiTree *T){\\n    SiNode a[10];\\n    BiTree *p=T;\\n    SiNode s;\\n    int state;\\n    while(p || top!=-1){\\n        while(p){\\n            s.p=p;\\n            s.state=0;\\n            postpush(a,s);\\n            p=p->lchild;\\n        }\\n        s=a[top];\\n        pop();\\n        p=s.p;\\n        state=s.state;\\n        if(state==0){\\n            s.p=p;\\n            s.state=1;\\n            postpush(a,s);\\n            p=p->rchild;\\n        }else{\\n            displayElem(p);\\n            p=NULL;\\n        }\\n    }\\n}\\n```\\n\\n### 二叉树的层次遍历\\n\\n层次遍历所需用到的是队列结构，如图2队列思路为：\\n\\n1. 根结点A入队；\\n2. 根结点A出队，同时将左孩子B与右孩子C分别入队；\\n3. 队头结点B出队，同时将左孩子D与右孩子E分别入队；\\n4. 队头结点C出队，同时将左孩子F入队；\\n5. 队头结点D出队；\\n6. 队头结点E出队；\\n7. 队头结点F出队；\\n\\n```c\\nint front=0,rear=0;//初始化队头和尾指针 全局变量\\n/*\\n    层次遍历 队列入队\\n*/\\nvoid EnQueue(BiTree **a,BiTree *t){\\n    a[rear++]=t;\\n}\\n\\n/*\\n    层次遍历 队列出队\\n*/\\nBiTree *DeQueue(BiTree **a){\\n    return a[front++];\\n}\\n\\n/*\\n    层次遍历\\n*/\\nvoid LevelBiTree_Queue(BiTree *T){\\n    BiTree *p;\\n    BiTree *a[20];\\n    EnQueue(a,T);\\n    while(front<rear){\\n        p=DeQueue(a);\\n        displayElem(p);\\n        if(p->lchild){\\n            EnQueue(a,p->lchild);\\n        }\\n        if(p->rchild){\\n            EnQueue(a,p->rchild);\\n        }\\n    }\\n}\\n```\\n\\n### 4种遍历总结\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":1275,\"length\":3,\"style\":\"BOLD\"},{\"offset\":1308,\"length\":3,\"style\":\"BOLD\"},{\"offset\":1338,\"length\":3,\"style\":\"BOLD\"},{\"offset\":1366,\"length\":3,\"style\":\"BOLD\"},{\"offset\":1414,\"length\":3,\"style\":\"BOLD\"},{\"offset\":1436,\"length\":3,\"style\":\"BOLD\"},{\"offset\":1868,\"length\":3,\"style\":\"BOLD\"},{\"offset\":1886,\"length\":3,\"style\":\"BOLD\"},{\"offset\":1903,\"length\":3,\"style\":\"BOLD\"},{\"offset\":1923,\"length\":3,\"style\":\"BOLD\"},{\"offset\":1989,\"length\":3,\"style\":\"BOLD\"},{\"offset\":2009,\"length\":3,\"style\":\"BOLD\"},{\"offset\":2622,\"length\":3,\"style\":\"BOLD\"},{\"offset\":2675,\"length\":3,\"style\":\"BOLD\"},{\"offset\":2705,\"length\":3,\"style\":\"BOLD\"},{\"offset\":2777,\"length\":3,\"style\":\"BOLD\"},{\"offset\":2820,\"length\":3,\"style\":\"BOLD\"},{\"offset\":2851,\"length\":3,\"style\":\"BOLD\"},{\"offset\":3688,\"length\":3,\"style\":\"BOLD\"},{\"offset\":3750,\"length\":3,\"style\":\"BOLD\"},{\"offset\":3777,\"length\":3,\"style\":\"BOLD\"},{\"offset\":3867,\"length\":3,\"style\":\"BOLD\"},{\"offset\":3940,\"length\":3,\"style\":\"BOLD\"},{\"offset\":3968,\"length\":3,\"style\":\"BOLD\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"6c7op\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":5}],\"data\":{}},{\"key\":\"cjcu4\",\"text\":\" \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://gitee.com/WQ-BY/datastructure/edit/master/0012.Tree\",\"target\":\"_blank\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/03/03/UfqAnGu1Iev6sx2.png\",\"name\":\"image-20210303080635562\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210303080635562\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/03/03/kxV3CeRqln4ZpH9.png\",\"name\":\"image-20210303082212285\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210303082212285\"}}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/03/03/oy9FvsqNTitJ6pC.png\",\"name\":\"image-20210303091404409\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210303091404409\"}}},\"4\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/03/03/Ie9L8quoBpJQijl.png\",\"name\":\"image-20210303091644751\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210303091644751\"}}},\"5\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2021/03/03/C3oxWKf5JtUX61l.png\",\"name\":\"image-20210303143304013\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"image-20210303143304013\"}}}}}', '<h1><a href=\"https://gitee.com/WQ-BY/datastructure/edit/master/0012.Tree\" target=\"_blank\">树-&gt;二叉树（gitee仓库）</a><br/><span style=\"font-size:16px\">## 树的简介<br/>树是一种非线性的数据存储结构，而二叉树只是其中一种特殊的存储结构。<br/>如图1：（有序二叉树）</span><br/><br/></h1><div class=\"media-wrap image-wrap\"><img alt=\"image-20210303080635562\" src=\"https://i.loli.net/2021/03/03/UfqAnGu1Iev6sx2.png\"/></div><p><br/><br/>### 树的节点<br/><br/>1. 结点：就是树结构储存的每一个元素，其可以由数据域、左孩子指针域、右孩子指针域、（父亲结点指针域）构成，如图1(B)B就是一个结点。<br/><br/>2. 父结点又称双亲结点：如图1(A)、图1(B)、图1(C)、图1(D)、图1(G)都是父结点。<br/><br/>3. 子结点、兄弟结点、堂兄结点：图1(B)、图1(C)都是A的子结点，而他们都有共同的父结点，所以B、C互为兄弟结点，对于在同一深度的结点而言，它们如果不是同一个父节点，那么它们互为堂兄结点。<br/><br/>4. 树根结点又称根结点：每一个非空树结构都有且仅有一个根结点，如图1(A)就是这个有序二叉树的根结点。<br/><br/>5. 叶子结点：如果该结点没有左孩子也没有右孩子，那么这个结点就是叶子结点，如图1(Q)、图1(I)、图1(E)、图1(F)、图1(J)都是叶子结点。<br/><br/>### 子树和空树<br/><br/>子树：树中的每个结点都是一棵树，只不过根结点就是他本身。所以树是由根结点和若干子树构成。<br/><br/>空树：即构成集合为空就是空树。<br/><br/><strong>对于树结构而言，有着同一个根结点的子树，不可以有着逻辑关系，不然就破坏了树的结构。如图便不再是一颗树。</strong><br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210303082212285\" src=\"https://i.loli.net/2021/03/03/kxV3CeRqln4ZpH9.png\"/></div><p><br/><br/>### 结点的度和层次<br/><br/>度：对于一个结点而言，他有多少个子结点，便是它的度，如图1(A)它有B、C两个结点，所以它的度是2。<br/><br/><strong>一棵树的度便是树内各结点度的最大值，二叉树的度为2。</strong><br/><br/>结点的层次：一棵树从根结点开始，根结点为第一层，根的子结点为第二层，直到到达最深的叶子结点。如图1它的深度便是4层。<br/><br/>### 有序树和无序树<br/><br/>有序树便是一棵树从子树从左往右数，谁在左边，谁在右边是有明确规定的，便是一棵有序树，反之则是无序树。<strong>在有序树中，一个结点最左边的子树为“第一个孩子”，最右边为“最后一个孩子“，在图1中B就是第一个孩子，C就是最后一个孩子。</strong><br/><br/>### 森林<br/><br/>森林是由n(n&gt;=0)个互相不相交的树组合成的集合被称之为森林。如图1(A)的B、C两个子树构成的便是一个森林。<strong>因此树还可以是根结点和森林构成的。</strong><br/><br/>## 二叉树的性质<br/><br/>二叉树必须满足两个条件<br/><br/>1. 本身是有序树；<br/><br/>2. 整棵树的度不能大于2；<br/><br/>### 二叉树的性质<br/><br/>1. 二叉树中，第n层最多有2ⁿ­­﹣¹个结点；<br/>2. 如果二叉树的深度为n，二叉树最多有2ⁿ－1个结点；<br/>3. 二叉树中，叶子结点数为n₁，度为2的结点数为n₂，则n₁=n₂+1；<br/><br/>### 满二叉树<br/><br/>满二叉树即是除了叶子结点的其他结点度都是2的二叉树，它满足二叉树的性质还同时满足以下性质：<br/><br/>1. 深度为n的满二叉树叶子结点数为2ⁿ－1；<br/>2. 满二叉树中不存在度为1的结点，除了叶子结点度为0，其他结点度均为2.<br/>3. 具有n个结点的满二叉树的深度为㏒₂(n+1)；<br/><br/>### 完全二叉树<br/><br/>完全二叉树即是满二叉树除去最后一层的最后一个结点，从左往右依次分布。<br/><br/>完全二叉树除了满足普通二叉树的性质还同时满足以下性质：<br/><br/>1. n个结点的完全二叉树深度为[㏒₂n]+1；“[ ]”取整符号<br/>2. 当 i&gt;1 时，父亲结点为结点 [i/2] 。（i=1 时，表示的是根结点，无父亲结点）<br/>3. 如果 2i&gt;n（总结点的个数） ，则结点 i 肯定没有左孩子（为叶子结点）；否则其左孩子是结点 2i 。<br/>4. 如果 2i+1&gt;n ，则结点 i 肯定没有右孩子；否则右孩子是结点 2i+1 。<br/><br/>## 二叉树的链式存储结构<br/><br/>二叉树的链式存储结构是由数据域、左孩子指针域、右孩子指针域、（父亲结点指针域）构成。<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210303091404409\" src=\"https://i.loli.net/2021/03/03/oy9FvsqNTitJ6pC.png\"/></div><p><br/><br/>&#x60;&#x60;&#x60;c<br/>typedef struct BTree{                  <br/>    int data;<br/>    struct BTree *lchild,*rchild;<br/>}BiTree;<br/>&#x60;&#x60;&#x60;<br/><br/>## 二叉树的遍历<br/><br/>二叉树遍历分为先序遍历、中序遍历、后序遍历、层次遍历共4种遍历方法，下面就逐一对其4种方法的递归与非递归实现做其阐述。<br/><br/>这里是先序遍历、中序遍历所用到的进栈函数、出栈函数、获取栈顶元素函数。<br/><br/>&#x60;&#x60;&#x60;c<br/>int top=-1;//栈顶位置 全局变量<br/>/*<br/>    非递归遍历二叉树 进栈函数<br/>*/<br/>void push(BiTree **a,BiTree *elem){<br/>    a[++top]=elem;<br/>}<br/><br/>/*<br/>    非递归遍历二叉树 出栈函数<br/>*/<br/>void pop(){<br/>    if(top==-1){<br/>        return ;<br/>    }<br/>    top--;<br/>}<br/><br/>/*<br/>    非递归遍历二叉树 获取栈顶元素<br/>*/<br/>BiTree *getTopElem(BiTree **a){<br/>    return a[top];<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/><br/><br/>### 二叉树的先序遍历（递归与非递归）<br/><br/>图2：<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210303091644751\" src=\"https://i.loli.net/2021/03/03/Ie9L8quoBpJQijl.png\"/></div><p><br/><br/>#### 递归思想<br/><br/>先序遍历的递归思想：<br/><br/>1. 先访问根结点；<br/>2. 再访问左孩子；<br/>3. 最后访问右孩子；<br/><br/>图2中的先序遍历递归思想：<br/><br/>1. 访问根结点，找到A；<br/>2. 访问结点A的左结点，找到B；<br/>3. 访问结点B的左结点，找到D；<br/>4. 由于结点D的左结点为空且又无右结点则D访问结束，返回结点B访问其右结点，找到E；<br/>5. 由于结点E无孩子，且结点B的左右孩子均访问，则返回结点A访问其右结点，找到C；<br/>6. 访问结点C的左结点，找到F；<br/>7. 由于F没有子结点，则返回访问结点C的右结点，访问失败，则返回A结点，由于结点A的左右结点均访问，则这个完全二叉树的先序遍历访问结束；<br/><br/>&#x60;&#x60;&#x60;C<br/>/*<br/>    先序遍历二叉树（递归） A B D E C F 先访问根节点，再访问左孩子，最后访问右孩子<br/>*/<br/>void PreBiTree(BiTree *T){<br/>    if(T){<br/>        displayElem(T);<br/>        PreBiTree(T-&gt;lchild);<br/>        PreBiTree(T-&gt;rchild);<br/>    }<br/>    return ; //为空返回<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>#### 非递归思想<br/><br/>非递归则是使用栈的思想，将递归非递归化。<br/><br/>1. 首先创建一个顺序栈；<br/>2. 根结点A先进栈，然后出栈；<br/>3. 如果右孩子不为空则先将右孩子压栈，再将移动指针指向左孩子，然后访问左孩子；<br/><br/>图2中的先序遍历非递归思想：<br/><br/>1. A进栈，出栈，访问A；<br/>2. C进栈，访问B；<br/>3. E进栈，访问D；<br/>4. D无子结点，E出栈，访问E；<br/>5. E无子结点，C出栈，访问C；<br/>6. C无右孩子，访问F；<br/><br/>&#x60;&#x60;&#x60;c<br/>/*<br/>    先序遍历二叉树（非递归）<br/>*/<br/>void PreBiTree_Stack(BiTree *T){<br/>    BiTree *a[10];<br/>    BiTree *p=NULL;<br/>    push(a,T); //根节点先进栈<br/>    while(top!=-1){<br/>        p=getTopElem(a);<br/>        pop();<br/>        while(p){<br/>            displayElem(p); //栈顶不为空则展示<br/>            if(p-&gt;rchild){<br/>                push(a,p-&gt;rchild); //右孩子进栈<br/>            }<br/>            p=p-&gt;lchild;    //左孩子进栈<br/>        }<br/>    }<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>### 二叉树的中序遍历（递归与非递归）<br/><br/>#### 递归思想<br/><br/>中序遍历的递归思想：<br/><br/>1. 先访问当前结点的左孩子；<br/>2. 再访问根结点；<br/>3. 最后访问当前结点的右孩子；<br/><br/>图2中的中序遍历递归思想：<br/><br/>1. 访问根结点，找到A；<br/>2. 找到A的左孩子，B；<br/>3. 找到B的左孩子，D；<br/>4. 由于结点D没有左孩子则<strong>访问D</strong>；<br/>5. 由于结点D也没有右孩子，则结点B的左子树遍历完成，<strong>访问B</strong>；<br/>6. 找到B的右孩子，E；<br/>7. 由于E无左子树，<strong>访问E</strong>；<br/>8. 由于E又无右子树，则A的左子树访问完成，<strong>访问A</strong>；<br/>9. 找到A的右孩子，C；<br/>10. 找到C的左孩子，F；<br/>11. 由于F没有左子树，则<strong>访问F</strong>；<br/>12. 由于F又没有右子树，则返回<strong>访问C</strong>；<br/>13. 由于C没有右子树，则返回A，中序遍历访问结束；<br/><br/>&#x60;&#x60;&#x60;c<br/>/*<br/>    中序遍历二叉树（递归） D B E A F C 先访问左孩子，再访问根节点，最后访问右孩子<br/>*/<br/>void InBiTree(BiTree *T){<br/>    if(T){<br/>        InBiTree(T-&gt;lchild);<br/>        displayElem(T);<br/>        InBiTree(T-&gt;rchild);<br/>    }<br/>    return ; //为空返回<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>#### 非递归思想<br/><br/>中序遍历的非递归思想：<br/><br/>1. 根结点先进栈；<br/>2. 遍历左子树让其全部压栈直到NULL，弹出NULL；<br/>3. 弹栈，然后将父节点的右孩子压栈，再弹栈，如此反复；<br/><br/>图2中的中序遍历非递归思想：<br/><br/>1. 根结点A进栈；<br/>2. A的左孩子B进栈；<br/>3. B的左孩子D进栈；<br/>4. D的左孩子NULL进栈，结束循环弹出NULL；<br/>5. 取栈顶结点D，<strong>访问D</strong>，弹栈后栈顶结点为B；<br/>6. <strong>访问B</strong>，B的右结点E进栈；<br/>7. <strong>访问E</strong>，B结点左右孩子访问结束，返回A，<strong>访问A</strong>；<br/>8. A的右孩子C进栈；<br/>9. C的左孩子F进栈；<br/>10. F的左孩子NULL进栈，弹出NULL；<br/>11. 取栈顶结点F，<strong>访问F</strong>；<br/>12. F无左右孩子，返回C，<strong>访问C</strong>；<br/>13. C无右孩子，返回A，中序遍历结束；<br/><br/>&#x60;&#x60;&#x60;c<br/>/*<br/>    中序遍历二叉树（非递归）<br/>*/<br/>void InBiTree_Stack(BiTree *T){<br/>    BiTree *a[10];<br/>    BiTree *p=NULL;<br/>    push(a,T); //根节点进栈<br/>    while(top!=-1){<br/>        while((p=getTopElem(a)) &amp;&amp; p){<br/>            push(a,p-&gt;lchild);<br/>        }<br/>        pop();//把左孩子的左空孩子NULL弹出<br/>        if(top!=-1){<br/>            p=getTopElem(a);<br/>            displayElem(p);<br/>            pop();<br/>            push(a,p-&gt;rchild);//p结点的左孩子遍历完，开始遍历右孩子<br/>        }<br/>    }<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>### 二叉树的后序遍历（递归与非递归）<br/><br/>#### 递归思想<br/><br/>后序遍历的递归思想：<br/><br/>1. 先访问该结点的左孩子；<br/>2. 再访问该节点的右孩子；<br/>3. 最后访问该结点；<br/><br/>图2中的后序遍历递归思路：<br/><br/>1. 从根结点A开始，遍历左孩子B；<br/>2. 遍历结点B的左孩子，找到D；<br/>3. 由于D没有左孩子，也没有右孩子，则<strong>访问D</strong>，并返回到结点B；<br/>4. B的左孩子遍历完，开始遍历右孩子E，找到E；<br/>5. 由于E没有左右孩子，则<strong>访问E</strong>，并返回到结点B；<br/>6. 由于B结点左右孩子遍历完，则<strong>访问B</strong>，并返回到根结点A；<br/>7. A的左孩子遍历完，开始遍历右孩子C，找到C；<br/>8. 遍历结点C的左孩子，找到F；<br/>9. 由于F没有左右孩子，则<strong>访问F</strong>，并返回到结点C；<br/>10. C的左孩子遍历完，开始遍历右孩子，由于没有右孩子，则<strong>访问C</strong>，并返回到根结点A；<br/>11. A的左右孩子均遍历完成，则<strong>访问A</strong>，后序遍历结束；<br/><br/>&#x60;&#x60;&#x60;<br/>/*<br/>    后序遍历二叉树（递归） D E B F C A 先访问左孩子，再访问右孩子，最后访问根节点<br/>*/<br/>void PostBiTree(BiTree *T){<br/>    if(T){<br/>        PostBiTree(T-&gt;lchild);<br/>        PostBiTree(T-&gt;rchild);<br/>        displayElem(T);<br/>    }<br/>    return ; //为空返回<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>#### 非递归思想<br/><br/>后序遍历的非递归思想不同于先序和中序，它需要再定义一个结构体来保存该结点的状态。<br/><br/>&#x60;&#x60;&#x60;c<br/>/*<br/>    后序遍历二叉树<br/>*/<br/>typedef struct SiNode{                <br/>    int state;<br/>    BiTree *p;<br/>}SiNode;<br/>&#x60;&#x60;&#x60;<br/><br/>state=0表示该结点还没有遍历它的右孩子，state=1表示该结点为访问结点。<br/><br/>那么后序遍历的进栈函数、出栈函数则为<br/><br/>&#x60;&#x60;&#x60;c<br/>/*<br/>    后序遍历进栈函数<br/>*/<br/>void postpush(SiNode *a,SiNode s){<br/>    a[++top]=s;<br/>}<br/>/*<br/>    非递归遍历二叉树 出栈函数<br/>*/<br/>void pop(){<br/>    if(top==-1){<br/>        return ;<br/>    }<br/>    top--;<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>后序非递归遍历主要思路：<br/><br/>1. 根结点以及左子树全部压栈，且state=0；<br/>2. 由于栈顶为最后一个左叶子结点，取出结点以及state，弹出栈顶；<br/>3. 如果state==0说明还没有遍历右孩子，更改其state重新压栈，遍历其右孩子；<br/>4. 如果state!=0说明该结点左孩子右孩子都已经遍历完成，访问其结点；<br/><br/>图2中的后序遍历非递归化思路：<br/><br/>1. A、B、D结点依次入栈；<br/>2. 取栈顶D，由于D没有左右孩子，<strong>访问D</strong>，并返回到B；<br/>3. 由于B的state=0，则右孩子E入栈，然后修改B的state=1；<br/>4. 由于E没有左右孩子，<strong>访问E</strong>，并返回到B；<br/>5. 由于B的state=1，则<strong>访问B</strong>，并返回到A；<br/>6. 由于A的state=0，则右孩子C入栈，然后修改A的state=1；<br/>7. C入栈后还要将其左孩子F入栈，此时栈顶结点为F；<br/>8. 由于F没有左右孩子，<strong>访问F</strong>，并返回到C；<br/>9. 由于C的state=0，且右孩子为NULL所以不入栈，然后修改C的state=1；<br/>10. 由于C的state=1，则<strong>访问C</strong>，并返回到A；<br/>11. 由于A的state=1，则<strong>访问A</strong>，此时后序遍历完成；<br/><br/>&#x60;&#x60;&#x60;c<br/>/*<br/>    后序遍历二叉树（非递归）<br/>*/<br/>void PostBiTree_Stack(BiTree *T){<br/>    SiNode a[10];<br/>    BiTree *p=T;<br/>    SiNode s;<br/>    int state;<br/>    while(p || top!=-1){<br/>        while(p){<br/>            s.p=p;<br/>            s.state=0;<br/>            postpush(a,s);<br/>            p=p-&gt;lchild;<br/>        }<br/>        s=a[top];<br/>        pop();<br/>        p=s.p;<br/>        state=s.state;<br/>        if(state==0){<br/>            s.p=p;<br/>            s.state=1;<br/>            postpush(a,s);<br/>            p=p-&gt;rchild;<br/>        }else{<br/>            displayElem(p);<br/>            p=NULL;<br/>        }<br/>    }<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>### 二叉树的层次遍历<br/><br/>层次遍历所需用到的是队列结构，如图2队列思路为：<br/><br/>1. 根结点A入队；<br/>2. 根结点A出队，同时将左孩子B与右孩子C分别入队；<br/>3. 队头结点B出队，同时将左孩子D与右孩子E分别入队；<br/>4. 队头结点C出队，同时将左孩子F入队；<br/>5. 队头结点D出队；<br/>6. 队头结点E出队；<br/>7. 队头结点F出队；<br/><br/>&#x60;&#x60;&#x60;c<br/>int front=0,rear=0;//初始化队头和尾指针 全局变量<br/>/*<br/>    层次遍历 队列入队<br/>*/<br/>void EnQueue(BiTree **a,BiTree *t){<br/>    a[rear++]=t;<br/>}<br/><br/>/*<br/>    层次遍历 队列出队<br/>*/<br/>BiTree *DeQueue(BiTree **a){<br/>    return a[front++];<br/>}<br/><br/>/*<br/>    层次遍历<br/>*/<br/>void LevelBiTree_Queue(BiTree *T){<br/>    BiTree *p;<br/>    BiTree *a[20];<br/>    EnQueue(a,T);<br/>    while(front&lt;rear){<br/>        p=DeQueue(a);<br/>        displayElem(p);<br/>        if(p-&gt;lchild){<br/>            EnQueue(a,p-&gt;lchild);<br/>        }<br/>        if(p-&gt;rchild){<br/>            EnQueue(a,p-&gt;rchild);<br/>        }<br/>    }<br/>}<br/>&#x60;&#x60;&#x60;<br/><br/>### 4种遍历总结<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"image-20210303143304013\" src=\"https://i.loli.net/2021/03/03/C3oxWKf5JtUX61l.png\"/></div><p> </p>', 7, 1, 0, '2021-03-09 00:00:00', NULL);
INSERT INTO `article` VALUES (273, '202010804013', 'c语言解决01背包问题', 3, 16, '01BagValue（gitee仓库）## 题目有n个物品，它们有各自的体积和价值，现有给定容量的背包，如何让背包里装入的物品具有最大的价值总和?## 解题思路### 动态规划思路：通过填写表把所有已经解决的子问题答案纪录下来，在新问题里需', '01背包', 'http://img.pzhuweb.cn/2020108040131636704281337.png', '{\"blocks\":[{\"key\":\"d5u76\",\"text\":\"01BagValue（gitee仓库）\\n\\n## 题目\\n\\n有n个物品，它们有各自的体积和价值，现有给定容量的背包，如何让背包里装入的物品具有最大的价值总和?\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":19,\"style\":\"FONTSIZE-32\"}],\"entityRanges\":[{\"offset\":0,\"length\":19,\"key\":0}],\"data\":{}},{\"key\":\"3h6pp\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{}},{\"key\":\"d8kd5\",\"text\":\"\\n\\n## 解题思路\\n\\n### 动态规划思路：\\n\\n通过填写表把所有已经解决的子问题答案纪录下来，在新问题里需要用到的子问题可以直接提取，避免了重复计算，从而节约了时间，所以在问题满足最优性原理之后，用动态规划解决问题的核心就在于填表，表填写完毕，最优解也就找到。\\n\\n### 过程\\n\\n定义变量：value[i]表示第i个物品的价值，weight[i]表示第i个物品的体积，dp(i,j)：当前背包容量j，前i个物品最佳组合对应的价值，同时4背包问题抽象化（X1,X2,....,Xn,其中Xi取0或1，表示第i个物品选或不选）。\\n\\n#### 1. 建立模型\\n\\n求：max（value[1]X1+value[2]X2+...+value[n]Xn）;\\n\\n#### 2. 寻找约束条件\\n\\nweightX1+weightX2+...+weightXn < Bag_Weight_max;\\n\\n#### 3. 寻找递推关系式，面对当前物品有两种可能(0,1)\\n\\n- 包的容量比该物品体积小，装不下，此时的价值与前i-1个的价值是一样的，即\\n\\n```c\\nif(j<weight[i])  dp[i][j] = dp[i-1][j]; \\n```\\n\\n- 还有足够的容量可以装该商品，但装了也不一定达到当前最优价值，所以在装与不装之间选择最优的一个，即\\n\\n```c\\nint x=dp[i-1][j];                       //不选择第i件物品\\nint y=dp[i-1][j-weight[i]] + value[i];  //选择第i件物品\\ndp[i][j] = x<y ? y:x;                   //返回最优\\n```\\n\\n- 所有可以推出递推关系式：\\n\\n```c\\nif(j<weight[i]) dp[i][j]=dp[i-1][j];\\nif(j>weight[i]) dp[i][j]=max{dp[i-1][j],dp[i-1][j-weight[i]]+value[i]};\\n```\\n\\n#### 4. 填表\\n\\n- ##### 首先初始化表格  dp( i , j )={ 0 };\\n\\n  \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"663pj\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":2}],\"data\":{}},{\"key\":\"e3hsk\",\"text\":\"\\n\\n- ##### 随后一行一行填表:\\n\\n  当i=1时，即只有珠宝1可供选择，那么如果容量足够的话，最大价值自然就是物品1的价值了。\\n\\n  \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"tjvh\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":3}],\"data\":{}},{\"key\":\"chrjs\",\"text\":\"\\n\\n  当i=2时，有两个物品可供选择，此时应用上面的递推关系式进行判断即可。这里以i=2,j=3为例进行分析：\\n\\n  \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1loi9\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":4}],\"data\":{}},{\"key\":\"6hff7\",\"text\":\"\\n\\n  \\n\\n  \\n\\n  剩下的格子使用相同的方法进行填充即可：\\n\\n  #### \",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"9av42\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":5}],\"data\":{}},{\"key\":\"45btr\",\"text\":\"\\n\\n\\n\\n\\n\\n#### 5. 表格填完，得到最优解后，回溯找到最优解的选择情况\\n\\n- 这样，我们就得到了最后的结果：20。根据结果，我们可以反向找出各个物品的选择，寻找的方法很简单，就是从i=4,j=7开始寻找，如果dp(i-1,j)=dp(i,j)，说明第i个物品没有被选中，从dp(i-1,j)继续寻找。否则，表示第i个物品已被选中，则从dp(i-1,j-weight[i])开始寻找。\\n\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":107,\"length\":17,\"style\":\"CODE\"},{\"offset\":139,\"length\":9,\"style\":\"CODE\"},{\"offset\":170,\"length\":19,\"style\":\"CODE\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"78oi3\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":6}],\"data\":{}},{\"key\":\"dqs8i\",\"text\":\"\\n\\n- dp(i,j)=dp(i-1,j)时，说明没有选择第i 个商品，则回到dp(i-1,j)；\\n\\n- dp(i,j)=dp(i-1,j-weight[i])+value[i]时，说明装了第i个商品，该商品是最优解组成的一部分，随后我们得回到装该商品之前，即回到dp(i-1,j-weight[i])；\\n- 一直遍历到i＝0结束为止，所有解的组成都会找到。\\n\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{\"0\":{\"type\":\"LINK\",\"mutability\":\"MUTABLE\",\"data\":{\"href\":\"https://gitee.com/WQ-BY/datastructure/edit/master/0005.01BagValue\",\"target\":\"_blank\"}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2020/12/21/Ee1gvPJYX5z4Nyi.png\",\"name\":\"No\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"No\"}}},\"2\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2020/12/21/VqxdtblI32jREMC.png\",\"name\":\"00\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"00\"}}},\"3\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2020/12/21/iEmYJM6tU4HjDgW.png\",\"name\":\"01\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"01\"}}},\"4\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2020/12/21/tqIl4CrdEDyU6Sw.png\",\"name\":\"02\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"02\"}}},\"5\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2020/12/21/2SPAqC8KJguDlBa.png\",\"name\":\"04\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"04\"}}},\"6\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"https://i.loli.net/2020/12/21/7CeIYkolyr69Q4B.png\",\"name\":\"03\",\"type\":\"IMAGE\",\"meta\":{\"alt\":\"03\"}}}}}', '<p><span style=\"font-size:32px\"><a href=\"https://gitee.com/WQ-BY/datastructure/edit/master/0005.01BagValue\" target=\"_blank\">01BagValue（gitee仓库）</a></span><br/><br/>## 题目<br/><br/>有n个物品，它们有各自的体积和价值，现有给定容量的背包，如何让背包里装入的物品具有最大的价值总和?<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"No\" src=\"https://i.loli.net/2020/12/21/Ee1gvPJYX5z4Nyi.png\"/></div><p><br/><br/>## 解题思路<br/><br/>### 动态规划思路：<br/><br/>通过填写表把所有已经解决的子问题答案纪录下来，在新问题里需要用到的子问题可以直接提取，避免了重复计算，从而节约了时间，所以在问题满足最优性原理之后，用动态规划解决问题的核心就在于填表，表填写完毕，最优解也就找到。<br/><br/>### 过程<br/><br/>定义变量：value[i]表示第i个物品的价值，weight[i]表示第i个物品的体积，dp(i,j)：当前背包容量j，前i个物品最佳组合对应的价值，同时4背包问题抽象化（X1,X2,....,Xn,其中Xi取0或1，表示第i个物品选或不选）。<br/><br/>#### 1. 建立模型<br/><br/>求：max（value[1]X1+value[2]X2+...+value[n]Xn）;<br/><br/>#### 2. 寻找约束条件<br/><br/>weightX1+weightX2+...+weightXn &lt; Bag_Weight_max;<br/><br/>#### 3. 寻找递推关系式，面对当前物品有两种可能(0,1)<br/><br/>- 包的容量比该物品体积小，装不下，此时的价值与前i-1个的价值是一样的，即<br/><br/>&#x60;&#x60;&#x60;c<br/>if(j&lt;weight[i])  dp[i][j] = dp[i-1][j]; <br/>&#x60;&#x60;&#x60;<br/><br/>- 还有足够的容量可以装该商品，但装了也不一定达到当前最优价值，所以在装与不装之间选择最优的一个，即<br/><br/>&#x60;&#x60;&#x60;c<br/>int x=dp[i-1][j];                       //不选择第i件物品<br/>int y=dp[i-1][j-weight[i]] + value[i];  //选择第i件物品<br/>dp[i][j] = x&lt;y ? y:x;                   //返回最优<br/>&#x60;&#x60;&#x60;<br/><br/>- 所有可以推出递推关系式：<br/><br/>&#x60;&#x60;&#x60;c<br/>if(j&lt;weight[i]) dp[i][j]=dp[i-1][j];<br/>if(j&gt;weight[i]) dp[i][j]=max{dp[i-1][j],dp[i-1][j-weight[i]]+value[i]};<br/>&#x60;&#x60;&#x60;<br/><br/>#### 4. 填表<br/><br/>- ##### 首先初始化表格  dp( i , j )={ 0 };<br/><br/>  </p><div class=\"media-wrap image-wrap\"><img alt=\"00\" src=\"https://i.loli.net/2020/12/21/VqxdtblI32jREMC.png\"/></div><p><br/><br/>- ##### 随后一行一行填表:<br/><br/>  当i=1时，即只有珠宝1可供选择，那么如果容量足够的话，最大价值自然就是物品1的价值了。<br/><br/>  </p><div class=\"media-wrap image-wrap\"><img alt=\"01\" src=\"https://i.loli.net/2020/12/21/iEmYJM6tU4HjDgW.png\"/></div><p><br/><br/>  当i=2时，有两个物品可供选择，此时应用上面的递推关系式进行判断即可。这里以i=2,j=3为例进行分析：<br/><br/>  </p><div class=\"media-wrap image-wrap\"><img alt=\"02\" src=\"https://i.loli.net/2020/12/21/tqIl4CrdEDyU6Sw.png\"/></div><p><br/><br/>  <br/><br/>  <br/><br/>  剩下的格子使用相同的方法进行填充即可：<br/><br/>  #### </p><div class=\"media-wrap image-wrap\"><img alt=\"04\" src=\"https://i.loli.net/2020/12/21/2SPAqC8KJguDlBa.png\"/></div><p><br/><br/><br/><br/><br/><br/>#### 5. 表格填完，得到最优解后，回溯找到最优解的选择情况<br/><br/>- 这样，我们就得到了最后的结果：20。根据结果，我们可以反向找出各个物品的选择，寻找的方法很简单，就是从i=4,j=7开始寻找，如果<code>dp(i-1,j)=dp(i,j)</code>，说明第i个物品没有被选中，从<code>dp(i-1,j)</code>继续寻找。否则，表示第i个物品已被选中，则从<code>dp(i-1,j-weight[i])</code>开始寻找。<br/><br/></p><div class=\"media-wrap image-wrap\"><img alt=\"03\" src=\"https://i.loli.net/2020/12/21/7CeIYkolyr69Q4B.png\"/></div><p><br/><br/>- dp(i,j)=dp(i-1,j)时，说明没有选择第i 个商品，则回到dp(i-1,j)；<br/><br/>- dp(i,j)=dp(i-1,j-weight[i])+value[i]时，说明装了第i个商品，该商品是最优解组成的一部分，随后我们得回到装该商品之前，即回到dp(i-1,j-weight[i])；<br/>- 一直遍历到i＝0结束为止，所有解的组成都会找到。<br/></p>', 2, 1, 0, '2021-01-09 00:00:00', NULL);
INSERT INTO `article` VALUES (274, '202010804013', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (275, '202010804027', 'WEB应用专业团队2021-2022-1学期第五次学术报告会', 5, 13, '攀枝花学院WEB应用专业团队于2021年10月30日晚在砺志楼四楼会议室开展了本学期第五次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员张武博主讲，主讲内容为排序算法，团队全体成员参加本次会议。会议伊始，张武博首先介绍了冒泡', '报告会', 'http://img.pzhuweb.cn/2020108040271637589708094.jpg', '{\"blocks\":[{\"key\":\"eg01v\",\"text\":\"攀枝花学院WEB应用专业团队于2021年10月30日晚在砺志楼四楼会议室开展了本学期第五次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员张武博主讲，主讲内容为排序算法，团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":105,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":77,\"style\":\"COLOR-333333\"},{\"offset\":79,\"length\":26,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":105,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":105,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"93ttr\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"1omq6\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"5r43i\",\"text\":\"会议伊始，张武博首先介绍了冒泡排序的基本思想,之后结合相关代码实现冒泡排序,此后依次介绍选择排序、插入排序。过程中兰全祥提出如何对三种排序代码转换成相关语言，团队成员各抒己见。总结成语言以便区分三种排序算法和通过总结的语言就能写出对应的排序算法。之后张武博又引出java集合框架中底层排序算法的实现原理，并结合源码展开讨论。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":162,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":162,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":162,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":162,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9sbus\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"7722s\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"ebc19\",\"text\":\"会议最后，指导老师兰全祥总结了这几周的出席情况以及工作内容的安排。希望同学们能认真对待每一次出席，端正学习态度,来参加报告会就要有所收获。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":69,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":69,\"style\":\"COLOR-333333\"},{\"offset\":0,\"length\":69,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":69,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271637589389228.png\",\"name\":\"2.png\",\"type\":\"IMAGE\",\"width\":815,\"height\":545,\"meta\":{\"id\":371,\"title\":\"2020108040271637589389228.png\",\"alt\":\"2020108040271637589389228.png\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271637589389175.jpg\",\"type\":\"IMAGE\",\"width\":810,\"height\":487}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\"><span style=\"color:#333333\">攀枝花学院WEB应用专业团队于2021年10月30日晚在砺志楼四楼会议室开展了本学期第五次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员张</span>武博<span style=\"color:#333333\">主讲，主讲内容为排序算法，团队全体成员参加本次会议。</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"371\" title=\"2020108040271637589389228.png\" alt=\"2020108040271637589389228.png\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2020108040271637589389228.png\" width=\"815\" height=\"545\" style=\"width:815px;height:545px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"color:#333333\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议伊始，张武博首先介绍了冒泡排序的基本思想,之后结合相关代码实现冒泡排序,此后依次介绍选择排序、插入排序。过程中兰全祥提出如何对三种排序代码转换成相关语言，团队成员各抒己见。总结成语言以便区分三种排序算法和通过总结的语言就能写出对应的排序算法。之后张武博又引出java集合框架中底层排序算法的实现原理，并结合源码展开讨论。</span></span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271637589389175.jpg\" width=\"810\" height=\"487\" style=\"width:810px;height:487px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"color:#333333\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议最后，指导老师兰全祥总结了这几周的出席情况以及工作内容的安排。希望同学们能认真对待每一次出席，端正学习态度,来参加报告会就要有所收获。</span></span></span></span></p>', 20, 1, 0, '2021-11-02 00:00:00', NULL);
INSERT INTO `article` VALUES (276, '202010804027', 'WEB应用专业团队2021-2022-1学期第六次学术报告会', 5, 13, '攀枝花学院WEB应用专业团队于2021年11月21日19:40在产教融合大楼1110开展了本学期的第六次学术报告会。本次学术报告会由指导老师兰全祥主持，20级团队队长王凯琪主讲，报告会内容为git的使用和协同开发、学术论文写作。团队全体成员', '报告会', 'http://img.pzhuweb.cn/2020108040271637590456410.jpg', '{\"blocks\":[{\"key\":\"c17jk\",\"text\":\"攀枝花学院WEB应用专业团队于2021年11月21日19:40在产教融合大楼1110开展了本学期的第六次学术报告会。本次学术报告会由指导老师兰全祥主持，20级团队队长王凯琪主讲，报告会内容为git的使用和协同开发、学术论文写作。团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":127,\"style\":\"FONTSIZE-12pt\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"a43eg\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"79npq\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"dob48\",\"text\":\"会议伊始，王凯琪进行了点到。之后他开始讲解第一个内容利用git开发项目，如创建项目、将项目导入到eclipse中、以及使用eclipse提交代码到远程仓库。紧接着王凯琪使用两个账号演示了gitee协同开发：管理员创建项目、开发人员协同开发，并结合团队新建的仓库leetCode来给团队一年级演示如何拉取、提交、Forked、Pull Requests完成每周的作业。此后开始讲解学术论文的写作，兰全祥首先提出论文的选题要新颖、避免重复和雷同，王凯琪详细解释了论文的摘要、关键字、中国分类号、正文的撰写包括（引言、正文部分、总结）、参考文献。让一、二年级的同学对以后论文的撰写有了清晰的认识。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":295,\"style\":\"LETTERSPACING-1\"},{\"offset\":0,\"length\":295,\"style\":\"LINEHEIGHT-1.5\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"aq20t\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"clvg6\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"2alkp\",\"text\":\"会议最后，兰全祥总结了本次报告会的主要内容，提醒一年级同学要按时提交每周作业，二年级成员要更正在团队仓库LeetCode的题并添加出题人姓名和时间、以及安排了之后每周报告会的内容和人员。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":93,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":93,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271637590114244.jpg\",\"name\":\"1.jpg\",\"type\":\"IMAGE\",\"width\":827,\"height\":516,\"meta\":{\"id\":374,\"title\":\"2020108040271637590114244.jpg\",\"alt\":\"2020108040271637590114244.jpg\",\"loop\":true,\"autoPlay\":true,\"controls\":true,\"poster\":\"http://img.pzhuweb.cn/04.jpg\"}}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271637590114295.jpg\",\"type\":\"IMAGE\",\"width\":812,\"height\":525}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\">攀枝花学院WEB应用专业团队于2021年11月21日19:40在产教融合大楼1110开展了本学期的第六次学术报告会。本次学术报告会由指导老师兰全祥主持，20级团队队长王凯琪主讲，报告会内容为git的使用和协同开发、学术论文写作。团队全体成员参加本次会议。</span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img id=\"374\" title=\"2020108040271637590114244.jpg\" alt=\"2020108040271637590114244.jpg\" loop=\"\" autoplay=\"\" controls=\"\" poster=\"http://img.pzhuweb.cn/04.jpg\" src=\"http://img.pzhuweb.cn/2020108040271637590114244.jpg\" width=\"827\" height=\"516\" style=\"width:827px;height:516px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"letter-spacing:1px\"><span style=\"line-height:1.5\">会议伊始，王凯琪进行了点到。之后他开始讲解第一个内容利用git开发项目，如创建项目、将项目导入到eclipse中、以及使用eclipse提交代码到远程仓库。紧接着王凯琪使用两个账号演示了gitee协同开发：管理员创建项目、开发人员协同开发，并结合团队新建的仓库leetCode来给团队一年级演示如何拉取、提交、Forked、Pull Requests完成每周的作业。此后开始讲解学术论文的写作，兰全祥首先提出论文的选题要新颖、避免重复和雷同，王凯琪详细解释了论文的摘要、关键字、中国分类号、正文的撰写包括（引言、正文部分、总结）、参考文献。让一、二年级的同学对以后论文的撰写有了清晰的认识。</span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271637590114295.jpg\" width=\"812\" height=\"525\" style=\"width:812px;height:525px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议最后，兰全祥总结了本次报告会的主要内容，提醒一年级同学要按时提交每周作业，二年级成员要更正在团队仓库LeetCode的题并添加出题人姓名和时间、以及安排了之后每周报告会的内容和人员。</span></span></p>', 26, 1, 0, '2021-11-22 00:00:00', NULL);
INSERT INTO `article` VALUES (277, '202010804027', 'WEB应用专业团队2021-2022-1学期第七次学术报告会', 5, 13, '攀枝花学院WEB应用专业团队于2021年11月27日19:40在产教融合大楼1110开展了本学期的第七次学术报告会。本次学术报告会由指导老师兰全祥主持，20级团队成员周子斌主讲，报告会内容为23种设计模式之一的工厂模式。团队全体成员参加本次', '报告会', 'http://img.pzhuweb.cn/1638528443888.jpg', '{\"blocks\":[{\"key\":\"a2u40\",\"text\":\"攀枝花学院WEB应用专业团队于2021年11月27日19:40在产教融合大楼1110开展了本学期的第七次学术报告会。本次学术报告会由指导老师兰全祥主持，20级团队成员周子斌主讲，报告会内容为23种设计模式之一的工厂模式。团队全体成员参加本次会议。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":123,\"style\":\"FONTSIZE-12pt\"},{\"offset\":0,\"length\":123,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":123,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"9llnv\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"2jg28\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":0}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"ai4kn\",\"text\":\"会议伊始，团队队长王凯琪进行了点到。周子斌首先讲解了工厂模式的5种创建方法，分别是new关键字、Class.newInstance、Constructor.newInstance、Clone、反序列化，并提出关于两种newInstance方法的区别。接着开始讲解工厂模式中工厂的含义，通过例举两个应用例子让大家了解工厂模式，并总结出其局限性和实用性。最后提出了抽象工厂模式对其目的、优点、缺点、应用做了详细阐述。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":206,\"style\":\"FONTSIZE-10.5pt\"},{\"offset\":0,\"length\":206,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":206,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}},{\"key\":\"ei8o6\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"e3gct\",\"text\":\" \",\"type\":\"atomic\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[{\"offset\":0,\"length\":1,\"key\":1}],\"data\":{\"alignment\":\"center\"}},{\"key\":\"97j4f\",\"text\":\"会议结束，指导老师兰全祥归纳总结了工厂模式，并对本次报告会做了点评。本次报告会让同学们深刻了解了通过工厂模式创建对象的原理以及实际应用。\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":68,\"style\":\"FONTSIZE-10.5pt\"},{\"offset\":0,\"length\":68,\"style\":\"LINEHEIGHT-1.5\"},{\"offset\":0,\"length\":68,\"style\":\"LETTERSPACING-1\"}],\"entityRanges\":[],\"data\":{\"nodeAttributes\":{\"class\":\"MsoNormal\"},\"textIndent\":1}}],\"entityMap\":{\"0\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271638528181216.jpg\",\"type\":\"IMAGE\",\"width\":786,\"height\":456}},\"1\":{\"type\":\"IMAGE\",\"mutability\":\"IMMUTABLE\",\"data\":{\"url\":\"http://img.pzhuweb.cn/2020108040271638528181166.jpg\",\"type\":\"IMAGE\",\"width\":737,\"height\":401}}}}', '<p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:12ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">攀枝花学院WEB应用专业团队于2021年11月27日19:40在产教融合大楼1110开展了本学期的第七次学术报告会。本次学术报告会由指导老师兰全祥主持，20级团队成员周子斌主讲，报告会内容为23种设计模式之一的工厂模式。团队全体成员参加本次会议。</span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271638528181216.jpg\" width=\"786\" height=\"456\" style=\"width:786px;height:456px\"/></div><p style=\"text-indent:2em;\" class=\"MsoNormal\"><span style=\"font-size:10.5ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议伊始，团队队长王凯琪进行了点到。周子斌首先讲解了工厂模式的5种创建方法，分别是new关键字、Class.newInstance、Constructor.newInstance、Clone、反序列化，并提出关于两种newInstance方法的区别。接着开始讲解工厂模式中工厂的含义，通过例举两个应用例子让大家了解工厂模式，并总结出其局限性和实用性。最后提出了抽象工厂模式对其目的、优点、缺点、应用做了详细阐述。</span></span></span></p><p></p><div class=\"media-wrap image-wrap align-center\" style=\"text-align:center\"><img src=\"http://img.pzhuweb.cn/2020108040271638528181166.jpg\" width=\"737\" height=\"401\" style=\"width:737px;height:401px\"/></div><p style=\"text-indent:2em;\" size=\"1\" _root=\"[object Object]\" __ownerID=\"undefined\" __hash=\"undefined\" __altered=\"false\"><span style=\"font-size:10.5ptpx\"><span style=\"line-height:1.5\"><span style=\"letter-spacing:1px\">会议结束，指导老师兰全祥归纳总结了工厂模式，并对本次报告会做了点评。本次报告会让同学们深刻了解了通过工厂模式创建对象的原理以及实际应用。</span></span></span></p>', 31, 1, 0, '2021-12-01 00:00:00', NULL);
INSERT INTO `article` VALUES (278, '202010804027', 'WEB应用专业团队2021-2022-1学期第八次学术报告会', 1, 1, '攀枝花学院WEB应用专业团队于2021年12月12日20：00在产教融合大楼CJ1110开展了本学期第八次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员李黄骏主讲，主讲内容为23种设计模式之一的代理模式，团队全体成员参加本次', '报告会', 'http://img.pzhuweb.cn/2020108040271639403069364.jpg', '2020108040271639402608902.jpg,', '<p style=\"text-indent: 2em;\"><span style=\"color: rgb(51, 51, 51);\">攀枝花学院WEB应用专业团队于2021年12月12日20：00在产教融合大楼CJ1110开展了本学期第八次学术报告会。本次学术报告会由指导老师兰全祥主持，2020级成员李黄骏主讲，主讲内容为23种设计模式之一的代理模式，团队全体成员参加本次会议。</span></p><p><img src=\"http://img.pzhuweb.cn/2020108040271639402608902.jpg\" alt=\"2020108040271639402608902.jpg\" data-href=\"\" style=\"width: 100%;\"/></p><p style=\"text-indent: 2em;\"><span style=\"color: rgb(51, 51, 51);\">会议伊始，队长王凯琪进行了点到，李黄骏首先引出了结构型模式的概念。接着讲述本次报告会的主题--代理模式，代理模式分为静态代理和动态代理，他例举了火车站卖票的场景来演示静态代理的设计思想。之后用两种动态代理实现上述案例--JDK动态代理和CGLIB动态代理，过程中详细讲述了动态代理的执行流程。他又对jdk代理和CGLIB代理、动态代理和静态代理两两进行了对比，并总结了各自的优缺点。</span></p><p><img src=\"http://img.pzhuweb.cn/2020108040271639402698674.png\" alt=\"\" data-href=\"\" style=\"width: 100%;\"/></p><p style=\"text-indent: 2em;\"><span style=\"color: rgb(51, 51, 51);\">会议结束，兰全祥让大家积极提问和对不明白的地方自由讨论，并提出有了静态代理为什么还需要动态代理等问题，最后他又带大家回顾两种代理模式总结了实现该模式的步骤以及思路。</span></p>', 67, 1, 0, '2021-12-13 00:00:00', NULL);
INSERT INTO `article` VALUES (279, '201710804172', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 1, 2, 0, NULL, NULL);
INSERT INTO `article` VALUES (280, '202010804027', 'WEB应用专业团队2021-2022-2学期第一次全体会议', 1, 1, '攀枝花学院WEB应用专业团队于2022年2月25日20:00在砺志楼四楼数学与计算机学院会议室进行了本学期的第一次会议。本次会议由指导老师兰全祥主持，主要讨论本学期团队任务。会议伊始,进行了点到，团队全体人员出席本次会议。紧接着团队成员总结', '报告会', 'http://img.pzhuweb.cn/2020108040271646056864407.jpg', '2020108040271646056489590.jpg,', '<p style=\"text-indent: 2em;\"><span style=\"color: rgb(51, 51, 51);\">WEB应用专业团队于2022年2月25日20:00在砺志楼四楼数学与计算机学院会议室进行了本学期的</span><img src=\"http://img.pzhuweb.cn/2020108040271646056489590.jpg\" alt=\"2020108040271646056489590.jpg\" data-href=\"\" style=\"width: 100%;\"><span style=\"color: rgb(51, 51, 51);\"> &nbsp; &nbsp; </span><a href=\"http://www.baidu.com\" target=\"_blank\"><span style=\"color: rgb(51, 51, 51);\"> 会议伊始,进行了点到，团队全体人员出席本次会议。紧接着团队成员总结上学期的学习工作，讲述本学期学习计划。在总结过程中，兰全祥详细询问了在学习中用所学的技术、完成的项目以及计划和预期成果。希望2020级成员能够先学习所选方向的技术栈，然后跟着网上的资料做一些练手项目，最后完成一个具有一定特色和应用价值的项目；希望2021级成员能够夯实基础，多交流、多提问，努力将本学期的面向对象程序设计学扎实、学牢固。</span></a></p><p style=\"text-indent: 2em;\"><span style=\"color: rgb(51, 51, 51);\">之后，团队对前期以及目前正在进行的部分项目进行了分析和总结，讨论了2022年中国大学生计算机设计大赛、大学生创新创业训练计划和全国大学生挑战杯训练计划赛相关事项，希望2020级成员能够多参与比赛，积累成果；希望2021级成员在有能力的情况下可以做一些Java练手项目。</span><img src=\"http://img.pzhuweb.cn/2020108040271646056489571.jpg\" alt=\"\" data-href=\"\" style=\"width: 100%;\"></p><p style=\"text-indent: 2em;\"><span style=\"color: rgb(51, 51, 51);\">会议最后，兰全祥对全体成员的课程学习成绩做了点评，希望2021级成员在专业成绩上多下功夫，希望全体成员积极主动的在实验室交流学习、分享和交流经验。</span></p>', 34, 0, 0, '2022-02-27 00:00:00', NULL);
INSERT INTO `article` VALUES (310, '202010804027', 'werwer线程V型从V型从V型从v', 1, 1, NULL, 'werwer', 'http://img.pzhuweb.cn/test/2020108040271673780160385.png', 'http://img.pzhuweb.cn/test/admin1673784119887.png', '<p>werwerwer国风大典多多多多多多多多多多多多大风刮过过过过过过过过过过过过过</p><p>过过过过过过过过过过过大风刮过过过过过过过过过过过过过过过过过过过过过过1232123123</p><p style=\"text-align: center;\"><img src=\"http://img.pzhuweb.cn/test/admin1673784119887.png\" alt=\"http://img.pzhuweb.cn/test/admin1673784119887.png\" data-href=\"\" style=\"width: 50%;\"></p><p><br></p><p><br></p><p><br></p><p><br></p>', 55, 1, NULL, '2023-01-12 16:00:00', NULL);

-- ----------------------------
-- Table structure for domain
-- ----------------------------
DROP TABLE IF EXISTS `domain`;
CREATE TABLE `domain`  (
  `id` int(0) NOT NULL,
  `name` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of domain
-- ----------------------------
INSERT INTO `domain` VALUES (1, '前端', NULL, NULL);
INSERT INTO `domain` VALUES (2, '后台', NULL, NULL);
INSERT INTO `domain` VALUES (3, '算法', NULL, NULL);
INSERT INTO `domain` VALUES (4, '全栈', NULL, NULL);

-- ----------------------------
-- Table structure for favorite
-- ----------------------------
DROP TABLE IF EXISTS `favorite`;
CREATE TABLE `favorite`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `userid` varchar(16) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `articleid` int(0) NOT NULL,
  `created_at` date NULL DEFAULT NULL,
  `updated_at` date NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `favorite_articleid`(`articleid`) USING BTREE,
  INDEX `favorite_userid`(`userid`) USING BTREE,
  CONSTRAINT `favorite_ibfk_1` FOREIGN KEY (`articleid`) REFERENCES `article` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 1002 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of favorite
-- ----------------------------
INSERT INTO `favorite` VALUES (89, '201610804032', 105, '2019-06-26', '2019-06-26');
INSERT INTO `favorite` VALUES (90, '0002250', 106, '2019-06-26', '2019-06-26');
INSERT INTO `favorite` VALUES (91, '201710804035', 108, '2019-06-29', '2019-06-29');
INSERT INTO `favorite` VALUES (92, '0002250', 120, NULL, NULL);
INSERT INTO `favorite` VALUES (94, '201810801070', 176, '2019-07-18', '2019-07-18');
INSERT INTO `favorite` VALUES (97, '201610804032', 109, '2019-10-26', '2019-10-26');
INSERT INTO `favorite` VALUES (100, '0002250', 108, NULL, NULL);
INSERT INTO `favorite` VALUES (101, '202010804027', 176, '2022-12-28', '2022-12-28');
INSERT INTO `favorite` VALUES (1001, '0002250', 176, NULL, NULL);

-- ----------------------------
-- Table structure for home
-- ----------------------------
DROP TABLE IF EXISTS `home`;
CREATE TABLE `home`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `title` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `desc` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `order` int(0) NULL DEFAULT NULL,
  `cover` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `status` int(0) NULL DEFAULT NULL,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 7 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of home
-- ----------------------------
INSERT INTO `home` VALUES (1, '你的梦想，从这里开始123', 'WEB应用专业团队，欢迎你的加入！', 1, 'http://img.pzhuweb.cn/1664507883343banner.jpg', 1, '2021-04-04 00:00:00', '2023-01-11 14:44:47');
INSERT INTO `home` VALUES (2, NULL, NULL, 1, 'http://img.pzhuweb.cn/00022501561799857381.jpg', 1, '2021-04-04 00:00:00', '2021-06-09 00:00:00');
INSERT INTO `home` VALUES (3, NULL, NULL, 1, 'http://img.pzhuweb.cn/admin1621223304808_MG_5221.jpg', 1, '2021-04-04 00:00:00', '2023-01-12 02:42:50');
INSERT INTO `home` VALUES (4, '团队介绍123', '基础知识和算法研究，WEB 前端开发，JavaEE后台开发三个方向。平时主要以小组为单位开展以任务为驱动的社团活动，另外定期或不定期开展学习研究讨论会。 团队还以学院教师的科研项目、教研教改项目、大学生创新创业项目等作为基础。开展一些综合性项目开发和实践锻炼。', 2, 'http://img.pzhuweb.cn/1623250486143SHU_2267.jpg', 1, '2021-04-04 00:00:00', '2023-01-12 02:19:04');
INSERT INTO `home` VALUES (5, '前端开发技术123', '掌握HTML，CSS，JavaScript三大基础知识， 学习Node.js搭建后台服务，学习框架Vue或者React，以及它们的全家桶， 能够进行单页面应用开发。最后学会webpack打包协议，能够独立构建项目。', 3, 'http://img.pzhuweb.cn/test/admin1673447811338.png', 1, '2021-04-04 00:00:00', '2023-01-11 14:36:53');
INSERT INTO `home` VALUES (6, '后台开发技术', '掌握Java的基本知识，学习mysql数据库，能够通过Java提供的API访问数据库，并对数据库进行操作, 学习JSP、Servlet，能够通过JSP和Servlet完成一个简单的小demo, 学习基本框架：Spring、Mybatis、SpringMVC等。', 4, 'http://img.pzhuweb.cn/1623252993980cb_副本.jpg', 1, '2021-04-04 00:00:00', '2021-06-09 00:00:00');

-- ----------------------------
-- Table structure for major
-- ----------------------------
DROP TABLE IF EXISTS `major`;
CREATE TABLE `major`  (
  `id` int(0) NOT NULL,
  `name` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `school` int(0) NULL DEFAULT NULL,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `school`(`school`) USING BTREE,
  CONSTRAINT `major_ibfk_1` FOREIGN KEY (`school`) REFERENCES `school` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of major
-- ----------------------------
INSERT INTO `major` VALUES (1, '软件工程', 1, NULL, NULL);
INSERT INTO `major` VALUES (2, '计算机科学与技术', 1, NULL, NULL);
INSERT INTO `major` VALUES (3, '信息科学与技术', 1, NULL, NULL);
INSERT INTO `major` VALUES (4, '网络工程', 1, NULL, NULL);
INSERT INTO `major` VALUES (5, '数据科学与大数据技术', 1, NULL, NULL);

-- ----------------------------
-- Table structure for media
-- ----------------------------
DROP TABLE IF EXISTS `media`;
CREATE TABLE `media`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `userid` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `articleid` int(0) NULL DEFAULT NULL,
  `link` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `key` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `status` int(0) NULL DEFAULT 1,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `userid`(`userid`) USING BTREE,
  INDEX `articleid`(`articleid`) USING BTREE,
  CONSTRAINT `media_ibfk_1` FOREIGN KEY (`userid`) REFERENCES `user_info` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `media_ibfk_2` FOREIGN KEY (`articleid`) REFERENCES `article` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 385 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of media
-- ----------------------------
INSERT INTO `media` VALUES (86, '201610804032', 107, 'http://img.pzhuweb.cn/2016108040321561553839070.jpg', '2016108040321561553839070.jpg', 1);
INSERT INTO `media` VALUES (87, '201710803017', 114, 'http://img.pzhuweb.cn/2017108030171561794318870.jpg', '2017108030171561794318870.jpg', 0);
INSERT INTO `media` VALUES (88, '201710804105', 124, 'http://img.pzhuweb.cn/2017108041051561794352302.jpg', '2017108041051561794352302.jpg', 0);
INSERT INTO `media` VALUES (89, '201710804105', 124, 'http://img.pzhuweb.cn/2017108041051561794417779.jpg', '2017108041051561794417779.jpg', 0);
INSERT INTO `media` VALUES (90, '201710804105', 124, 'http://img.pzhuweb.cn/2017108041051561794422635.jpg', '2017108041051561794422635.jpg', 0);
INSERT INTO `media` VALUES (91, '201710804105', 124, 'http://img.pzhuweb.cn/2017108041051561794431250.jpg', '2017108041051561794431250.jpg', 0);
INSERT INTO `media` VALUES (92, '201710804169', 116, 'http://img.pzhuweb.cn/2017108041691561794440464.jpg', '2017108041691561794440464.jpg', 0);
INSERT INTO `media` VALUES (93, '201710804105', 112, 'http://img.pzhuweb.cn/2017108041051561794480129.jpg', '2017108041051561794480129.jpg', 0);
INSERT INTO `media` VALUES (94, '201710804172', 118, 'http://img.pzhuweb.cn/2017108041721561794508160.png', '2017108041721561794508160.png', 0);
INSERT INTO `media` VALUES (95, '201710804172', 118, 'http://img.pzhuweb.cn/2017108041721561794518269.png', '2017108041721561794518269.png', 0);
INSERT INTO `media` VALUES (96, '201710804105', 112, 'http://img.pzhuweb.cn/2017108041051561794518479.jpg', '2017108041051561794518479.jpg', 0);
INSERT INTO `media` VALUES (97, '201710804172', 118, 'http://img.pzhuweb.cn/2017108041721561794523645.png', '2017108041721561794523645.png', 0);
INSERT INTO `media` VALUES (98, '201710804172', 123, 'http://img.pzhuweb.cn/2017108041721561794591167.jpg', '2017108041721561794591167.jpg', 0);
INSERT INTO `media` VALUES (99, '201710804172', 111, 'http://img.pzhuweb.cn/2017108041721561794635849.jpg', '2017108041721561794635849.jpg', 0);
INSERT INTO `media` VALUES (100, '201710803075', 117, 'http://img.pzhuweb.cn/2017108030751561794659813.jpg', '2017108030751561794659813.jpg', 1);
INSERT INTO `media` VALUES (101, '201710804172', 130, 'http://img.pzhuweb.cn/2017108041721561794801166.png', '2017108041721561794801166.png', 0);
INSERT INTO `media` VALUES (102, '201710804169', 135, 'http://img.pzhuweb.cn/2017108041691561794919465.jpg', '2017108041691561794919465.jpg', 0);
INSERT INTO `media` VALUES (103, '201710803075', 136, 'http://img.pzhuweb.cn/2017108030751561794931260.jpg', '2017108030751561794931260.jpg', 1);
INSERT INTO `media` VALUES (104, '201710803017', 140, 'http://img.pzhuweb.cn/2017108030171561794966166.jpg', '2017108030171561794966166.jpg', 0);
INSERT INTO `media` VALUES (105, '201710804105', 142, 'http://img.pzhuweb.cn/2017108041051561795032229.jpg', '2017108041051561795032229.jpg', 0);
INSERT INTO `media` VALUES (106, '201710804172', 141, 'http://img.pzhuweb.cn/2017108041721561795131649.png', '2017108041721561795131649.png', 0);
INSERT INTO `media` VALUES (107, '201710804105', 146, 'http://img.pzhuweb.cn/2017108041051561795215529.jpg', '2017108041051561795215529.jpg', 0);
INSERT INTO `media` VALUES (108, '201710803017', 145, 'http://img.pzhuweb.cn/2017108030171561795253030.jpg', '2017108030171561795253030.jpg', 0);
INSERT INTO `media` VALUES (109, '201710803075', 147, 'http://img.pzhuweb.cn/2017108030751561795375462.jpg', '2017108030751561795375462.jpg', 1);
INSERT INTO `media` VALUES (110, '201710804172', 149, 'http://img.pzhuweb.cn/2017108041721561795399241.jpg', '2017108041721561795399241.jpg', 0);
INSERT INTO `media` VALUES (111, '201710803017', 150, 'http://img.pzhuweb.cn/2017108030171561795492736.jpg', '2017108030171561795492736.jpg', 0);
INSERT INTO `media` VALUES (112, '201710804169', 143, 'http://img.pzhuweb.cn/2017108041691561795539369.jpg', '2017108041691561795539369.jpg', 1);
INSERT INTO `media` VALUES (113, '201710804172', 155, 'http://img.pzhuweb.cn/2017108041721561796471666.jpg', '2017108041721561796471666.jpg', 0);
INSERT INTO `media` VALUES (114, '201710804172', 155, 'http://img.pzhuweb.cn/2017108041721561796477327.jpg', '2017108041721561796477327.jpg', 0);
INSERT INTO `media` VALUES (115, '201710804172', 155, 'http://img.pzhuweb.cn/2017108041721561796484789.jpg', '2017108041721561796484789.jpg', 0);
INSERT INTO `media` VALUES (116, '201710804169', 157, 'http://img.pzhuweb.cn/2017108041691561797586287.jpg', '2017108041691561797586287.jpg', 1);
INSERT INTO `media` VALUES (117, '201710804169', 158, 'http://img.pzhuweb.cn/2017108041691561798136985.jpg', '2017108041691561798136985.jpg', 1);
INSERT INTO `media` VALUES (118, '201710803075', 147, 'http://img.pzhuweb.cn/2017108030751561800591473.png', '2017108030751561800591473.png', 1);
INSERT INTO `media` VALUES (119, '201710803075', 151, 'http://img.pzhuweb.cn/2017108030751561800697769.jpg', '2017108030751561800697769.jpg', 1);
INSERT INTO `media` VALUES (120, '201710804172', 159, 'http://img.pzhuweb.cn/2017108041721561801299762.jpg', '2017108041721561801299762.jpg', 0);
INSERT INTO `media` VALUES (121, '201710804169', 160, 'http://img.pzhuweb.cn/2017108041691561802927770.jpg', '2017108041691561802927770.jpg', 1);
INSERT INTO `media` VALUES (122, '201710804169', 160, 'http://img.pzhuweb.cn/2017108041691561802936677.jpg', '2017108041691561802936677.jpg', 1);
INSERT INTO `media` VALUES (123, '201710804172', 165, 'http://img.pzhuweb.cn/2017108041721562031820518.jpg', '2017108041721562031820518.jpg', 0);
INSERT INTO `media` VALUES (124, '201710804172', 165, 'http://img.pzhuweb.cn/2017108041721562031862224.png', '2017108041721562031862224.png', 0);
INSERT INTO `media` VALUES (125, '201710804172', 165, 'http://img.pzhuweb.cn/2017108041721562032760240.png', '2017108041721562032760240.png', 0);
INSERT INTO `media` VALUES (126, '201810804091', 164, 'http://img.pzhuweb.cn/2018108040911562041483760.jpg', '2018108040911562041483760.jpg', 1);
INSERT INTO `media` VALUES (127, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229027563.png', '2017108041051562229027563.png', 0);
INSERT INTO `media` VALUES (128, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229061827.png', '2017108041051562229061827.png', 0);
INSERT INTO `media` VALUES (129, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229077298.png', '2017108041051562229077298.png', 0);
INSERT INTO `media` VALUES (130, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229105954.png', '2017108041051562229105954.png', 0);
INSERT INTO `media` VALUES (131, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229143302.png', '2017108041051562229143302.png', 0);
INSERT INTO `media` VALUES (132, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229143352.png', '2017108041051562229143352.png', 0);
INSERT INTO `media` VALUES (133, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229143402.png', '2017108041051562229143402.png', 0);
INSERT INTO `media` VALUES (134, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229208403.png', '2017108041051562229208403.png', 0);
INSERT INTO `media` VALUES (135, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229208446.png', '2017108041051562229208446.png', 0);
INSERT INTO `media` VALUES (136, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229242449.png', '2017108041051562229242449.png', 0);
INSERT INTO `media` VALUES (137, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229242495.png', '2017108041051562229242495.png', 0);
INSERT INTO `media` VALUES (138, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229310042.png', '2017108041051562229310042.png', 0);
INSERT INTO `media` VALUES (139, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229370240.png', '2017108041051562229370240.png', 0);
INSERT INTO `media` VALUES (140, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229370286.png', '2017108041051562229370286.png', 0);
INSERT INTO `media` VALUES (141, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229370331.png', '2017108041051562229370331.png', 0);
INSERT INTO `media` VALUES (142, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229408402.png', '2017108041051562229408402.png', 0);
INSERT INTO `media` VALUES (143, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229408448.png', '2017108041051562229408448.png', 0);
INSERT INTO `media` VALUES (144, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229448388.png', '2017108041051562229448388.png', 0);
INSERT INTO `media` VALUES (145, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229518767.png', '2017108041051562229518767.png', 0);
INSERT INTO `media` VALUES (146, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229518819.png', '2017108041051562229518819.png', 0);
INSERT INTO `media` VALUES (147, '201710804105', 148, 'http://img.pzhuweb.cn/2017108041051562229518871.png', '2017108041051562229518871.png', 0);
INSERT INTO `media` VALUES (148, '201710804172', 166, 'http://img.pzhuweb.cn/2017108041721562232241765.jpg', '2017108041721562232241765.jpg', 0);
INSERT INTO `media` VALUES (149, '201710804172', 166, 'http://img.pzhuweb.cn/2017108041721562232244869.jpg', '2017108041721562232244869.jpg', 0);
INSERT INTO `media` VALUES (150, '201810804085', 173, 'http://img.pzhuweb.cn/2018108040851562319935146.jpg', '2018108040851562319935146.jpg', 0);
INSERT INTO `media` VALUES (151, '201810804085', 173, 'http://img.pzhuweb.cn/2018108040851562319956667.jpg', '2018108040851562319956667.jpg', 0);
INSERT INTO `media` VALUES (152, '201810804085', 173, 'http://img.pzhuweb.cn/2018108040851562319967333.jpg', '2018108040851562319967333.jpg', 0);
INSERT INTO `media` VALUES (153, '201810804085', 173, 'http://img.pzhuweb.cn/2018108040851562319972242.jpg', '2018108040851562319972242.jpg', 0);
INSERT INTO `media` VALUES (154, '201810801070', 175, 'http://img.pzhuweb.cn/2018108010701562484722270.jpg', '2018108010701562484722270.jpg', 1);
INSERT INTO `media` VALUES (155, '201810801070', 175, 'http://img.pzhuweb.cn/2018108010701562484726869.jpg', '2018108010701562484726869.jpg', 1);
INSERT INTO `media` VALUES (156, '201810804121', 177, 'http://img.pzhuweb.cn/2018108041211562514549526.jpg', '2018108041211562514549526.jpg', 0);
INSERT INTO `media` VALUES (157, '201810804121', 177, 'http://img.pzhuweb.cn/2018108041211562514549580.jpg', '2018108041211562514549580.jpg', 0);
INSERT INTO `media` VALUES (158, '201810801026', 181, 'http://img.pzhuweb.cn/2018108010261562720560298.jpg', '2018108010261562720560298.jpg', 1);
INSERT INTO `media` VALUES (159, '201710803072', 184, 'http://img.pzhuweb.cn/2017108030721562744202178.png', '2017108030721562744202178.png', 0);
INSERT INTO `media` VALUES (160, '201710803072', 184, 'http://img.pzhuweb.cn/2017108030721562744205511.png', '2017108030721562744205511.png', 0);
INSERT INTO `media` VALUES (161, '201710804172', 169, 'http://img.pzhuweb.cn/2017108041721562747935303.jpg', '2017108041721562747935303.jpg', 1);
INSERT INTO `media` VALUES (162, '201710804172', 169, 'http://img.pzhuweb.cn/2017108041721562747938807.jpg', '2017108041721562747938807.jpg', 1);
INSERT INTO `media` VALUES (163, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563019573245.png', '2018108010701563019573245.png', 1);
INSERT INTO `media` VALUES (164, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563019600321.png', '2018108010701563019600321.png', 1);
INSERT INTO `media` VALUES (165, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563019642257.png', '2018108010701563019642257.png', 0);
INSERT INTO `media` VALUES (166, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563019653407.png', '2018108010701563019653407.png', 0);
INSERT INTO `media` VALUES (167, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563019675955.png', '2018108010701563019675955.png', 0);
INSERT INTO `media` VALUES (168, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563019691660.png', '2018108010701563019691660.png', 0);
INSERT INTO `media` VALUES (169, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563019702710.png', '2018108010701563019702710.png', 0);
INSERT INTO `media` VALUES (170, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563019771898.png', '2018108010701563019771898.png', 0);
INSERT INTO `media` VALUES (171, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563019788615.png', '2018108010701563019788615.png', 0);
INSERT INTO `media` VALUES (172, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563020317695.gif', '2018108010701563020317695.gif', 0);
INSERT INTO `media` VALUES (173, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563020515521.gif', '2018108010701563020515521.gif', 0);
INSERT INTO `media` VALUES (174, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563020551655.png', '2018108010701563020551655.png', 0);
INSERT INTO `media` VALUES (175, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563020660204.gif', '2018108010701563020660204.gif', 0);
INSERT INTO `media` VALUES (176, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563021156512.gif', '2018108010701563021156512.gif', 0);
INSERT INTO `media` VALUES (177, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563021224902.gif', '2018108010701563021224902.gif', 0);
INSERT INTO `media` VALUES (178, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563022234336.png', '2018108010701563022234336.png', 0);
INSERT INTO `media` VALUES (179, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563022270570.png', '2018108010701563022270570.png', 0);
INSERT INTO `media` VALUES (180, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563022486334.png', '2018108010701563022486334.png', 0);
INSERT INTO `media` VALUES (181, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563022578392.png', '2018108010701563022578392.png', 0);
INSERT INTO `media` VALUES (182, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563022771691.png', '2018108010701563022771691.png', 0);
INSERT INTO `media` VALUES (183, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563022888980.png', '2018108010701563022888980.png', 0);
INSERT INTO `media` VALUES (184, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563022985300.png', '2018108010701563022985300.png', 0);
INSERT INTO `media` VALUES (185, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563023392022.png', '2018108010701563023392022.png', 0);
INSERT INTO `media` VALUES (186, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563023461423.png', '2018108010701563023461423.png', 0);
INSERT INTO `media` VALUES (187, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563023790605.png', '2018108010701563023790605.png', 0);
INSERT INTO `media` VALUES (188, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563023834464.jpg', '2018108010701563023834464.jpg', 0);
INSERT INTO `media` VALUES (189, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563023968986.png', '2018108010701563023968986.png', 0);
INSERT INTO `media` VALUES (190, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563024127935.png', '2018108010701563024127935.png', 0);
INSERT INTO `media` VALUES (191, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563024166319.png', '2018108010701563024166319.png', 0);
INSERT INTO `media` VALUES (192, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563024343378.png', '2018108010701563024343378.png', 0);
INSERT INTO `media` VALUES (193, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563025953360.gif', '2018108010701563025953360.gif', 0);
INSERT INTO `media` VALUES (194, '201810801070', 176, 'http://img.pzhuweb.cn/2018108010701563026026639.jpg', '2018108010701563026026639.jpg', 0);
INSERT INTO `media` VALUES (195, '201710803075', 192, 'http://img.pzhuweb.cn/2017108030751567762286048.jpg', '2017108030751567762286048.jpg', 1);
INSERT INTO `media` VALUES (196, '201710803075', 192, 'http://img.pzhuweb.cn/2017108030751567762288566.jpg', '2017108030751567762288566.jpg', 1);
INSERT INTO `media` VALUES (197, '201710804172', 193, 'http://img.pzhuweb.cn/2017108041721568639532507.jpg', '2017108041721568639532507.jpg', 1);
INSERT INTO `media` VALUES (198, '201710804172', 193, 'http://img.pzhuweb.cn/2017108041721568639571714.jpg', '2017108041721568639571714.jpg', 1);
INSERT INTO `media` VALUES (199, '201710804035', 167, 'http://img.pzhuweb.cn/140848948.3055042931660726000.1565325523345.35421570527101306.jpg', '140848948.3055042931660726000.1565325523345.35421570527101306.jpg', 1);
INSERT INTO `media` VALUES (200, '201710803072', 196, 'http://img.pzhuweb.cn/2017108030721571058488437.jpg', '2017108030721571058488437.jpg', 1);
INSERT INTO `media` VALUES (201, '201710803072', 196, 'http://img.pzhuweb.cn/2017108030721571058488489.jpg', '2017108030721571058488489.jpg', 1);
INSERT INTO `media` VALUES (202, '201810804059', 198, 'http://img.pzhuweb.cn/2018108040591571227656290.jpg', '2018108040591571227656290.jpg', 1);
INSERT INTO `media` VALUES (203, '201710803072', 197, 'http://img.pzhuweb.cn/2017108030721571714101645.jpg', '2017108030721571714101645.jpg', 1);
INSERT INTO `media` VALUES (204, '201710804105', 168, 'http://img.pzhuweb.cn/2017108041051572168048017.jpg', '2017108041051572168048017.jpg', 0);
INSERT INTO `media` VALUES (205, '201710804105', 168, 'http://img.pzhuweb.cn/2017108041051572168048066.jpg', '2017108041051572168048066.jpg', 0);
INSERT INTO `media` VALUES (206, '201710803017', 191, 'http://img.pzhuweb.cn/2017108030171573959134174.jpg', '2017108030171573959134174.jpg', 0);
INSERT INTO `media` VALUES (207, '201810801070', 187, 'http://img.pzhuweb.cn/2018108010701574138506324.jpg', '2018108010701574138506324.jpg', 1);
INSERT INTO `media` VALUES (208, '201810801070', 187, 'http://img.pzhuweb.cn/2018108010701574138522359.jpg', '2018108010701574138522359.jpg', 1);
INSERT INTO `media` VALUES (209, '201810801070', 187, 'http://img.pzhuweb.cn/2018108010701574138546953.jpg', '2018108010701574138546953.jpg', 1);
INSERT INTO `media` VALUES (210, '201810801070', 204, 'http://img.pzhuweb.cn/2018108010701575193810984.jpg', '2018108010701575193810984.jpg', 1);
INSERT INTO `media` VALUES (211, '201810801070', 204, 'http://img.pzhuweb.cn/2018108010701575193814882.jpg', '2018108010701575193814882.jpg', 1);
INSERT INTO `media` VALUES (212, '201710804172', 203, 'http://img.pzhuweb.cn/2017108041721575385359090.png', '2017108041721575385359090.png', 1);
INSERT INTO `media` VALUES (213, '201710804172', 203, 'http://img.pzhuweb.cn/2017108041721575385362906.png', '2017108041721575385362906.png', 1);
INSERT INTO `media` VALUES (214, '201710804172', 203, 'http://img.pzhuweb.cn/2017108041721575385370741.png', '2017108041721575385370741.png', 1);
INSERT INTO `media` VALUES (215, '201710804172', 203, 'http://img.pzhuweb.cn/2017108041721575385373950.png', '2017108041721575385373950.png', 1);
INSERT INTO `media` VALUES (216, '201810804121', 188, 'http://img.pzhuweb.cn/2018108041211576569494431.jpg', '2018108041211576569494431.jpg', 1);
INSERT INTO `media` VALUES (217, '201810804121', 188, 'http://img.pzhuweb.cn/2018108041211576569502213.jpg', '2018108041211576569502213.jpg', 0);
INSERT INTO `media` VALUES (218, '201810804121', 188, 'http://img.pzhuweb.cn/2018108041211576569514003.jpg', '2018108041211576569514003.jpg', 0);
INSERT INTO `media` VALUES (219, '201810804121', 188, 'http://img.pzhuweb.cn/2018108041211576569519398.jpg', '2018108041211576569519398.jpg', 1);
INSERT INTO `media` VALUES (220, '201810804085', 182, 'http://img.pzhuweb.cn/2018108040851578384186723.jpg', '2018108040851578384186723.jpg', 1);
INSERT INTO `media` VALUES (221, '201810804085', 182, 'http://img.pzhuweb.cn/2018108040851578384186678.jpg', '2018108040851578384186678.jpg', 1);
INSERT INTO `media` VALUES (222, '201810804085', 182, 'http://img.pzhuweb.cn/2018108040851578384186628.jpg', '2018108040851578384186628.jpg', 1);
INSERT INTO `media` VALUES (223, '201810801026', 183, 'http://img.pzhuweb.cn/2018108010261578410265765.jpg', '2018108010261578410265765.jpg', 1);
INSERT INTO `media` VALUES (224, '201810804072', 211, 'http://img.pzhuweb.cn/2018108040721578886582552.JPG', '2018108040721578886582552.JPG', 1);
INSERT INTO `media` VALUES (225, '201810804072', 211, 'http://img.pzhuweb.cn/2018108040721578886582511.JPG', '2018108040721578886582511.JPG', 1);
INSERT INTO `media` VALUES (226, '201810804088', 215, 'http://img.pzhuweb.cn/2018108040881582277030277.jpg', '2018108040881582277030277.jpg', 1);
INSERT INTO `media` VALUES (227, '201810804088', 215, 'http://img.pzhuweb.cn/2018108040881582277035629.jpg', '2018108040881582277035629.jpg', 1);
INSERT INTO `media` VALUES (228, '201810804115', 214, 'http://img.pzhuweb.cn/2018108041151582278220039.jpg', '2018108041151582278220039.jpg', 0);
INSERT INTO `media` VALUES (229, '201810804115', 214, 'http://img.pzhuweb.cn/2018108041151582278222451.jpg', '2018108041151582278222451.jpg', 0);
INSERT INTO `media` VALUES (230, '201810804115', 214, 'http://img.pzhuweb.cn/2018108041151582278228279.jpg', '2018108041151582278228279.jpg', 0);
INSERT INTO `media` VALUES (231, '201810804115', 214, 'http://img.pzhuweb.cn/2018108041151582279869926.png', '2018108041151582279869926.png', 1);
INSERT INTO `media` VALUES (232, '201710803075', 216, 'http://img.pzhuweb.cn/2017108030751587434753326.jpg', '2017108030751587434753326.jpg', 1);
INSERT INTO `media` VALUES (233, '201710804172', 205, 'http://img.pzhuweb.cn/2017108041721588907120733.jpg', '2017108041721588907120733.jpg', 1);
INSERT INTO `media` VALUES (234, '201710803072', 218, 'http://img.pzhuweb.cn/2017108030721589760728518.png', '2017108030721589760728518.png', 1);
INSERT INTO `media` VALUES (235, '201710803072', 218, 'http://img.pzhuweb.cn/2017108030721589760768889.png', '2017108030721589760768889.png', 1);
INSERT INTO `media` VALUES (236, '201710803072', 218, 'http://img.pzhuweb.cn/2017108030721589760768942.png', '2017108030721589760768942.png', 1);
INSERT INTO `media` VALUES (237, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245406354.png', '2017108041051590245406354.png', 0);
INSERT INTO `media` VALUES (238, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245413786.png', '2017108041051590245413786.png', 0);
INSERT INTO `media` VALUES (239, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245427256.png', '2017108041051590245427256.png', 0);
INSERT INTO `media` VALUES (240, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245490939.png', '2017108041051590245490939.png', 0);
INSERT INTO `media` VALUES (241, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245490847.png', '2017108041051590245490847.png', 0);
INSERT INTO `media` VALUES (242, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245491068.png', '2017108041051590245491068.png', 0);
INSERT INTO `media` VALUES (243, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245492306.png', '2017108041051590245492306.png', 0);
INSERT INTO `media` VALUES (244, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245491149.png', '2017108041051590245491149.png', 0);
INSERT INTO `media` VALUES (245, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245492513.png', '2017108041051590245492513.png', 0);
INSERT INTO `media` VALUES (246, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245492610.png', '2017108041051590245492610.png', 0);
INSERT INTO `media` VALUES (247, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245493439.png', '2017108041051590245493439.png', 0);
INSERT INTO `media` VALUES (248, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245492383.png', '2017108041051590245492383.png', 0);
INSERT INTO `media` VALUES (249, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245493320.png', '2017108041051590245493320.png', 0);
INSERT INTO `media` VALUES (250, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245491250.png', '2017108041051590245491250.png', 0);
INSERT INTO `media` VALUES (251, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245536937.png', '2017108041051590245536937.png', 0);
INSERT INTO `media` VALUES (252, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245536764.png', '2017108041051590245536764.png', 0);
INSERT INTO `media` VALUES (253, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245536847.png', '2017108041051590245536847.png', 0);
INSERT INTO `media` VALUES (254, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245537042.png', '2017108041051590245537042.png', 0);
INSERT INTO `media` VALUES (255, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245537182.png', '2017108041051590245537182.png', 0);
INSERT INTO `media` VALUES (256, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245537283.png', '2017108041051590245537283.png', 0);
INSERT INTO `media` VALUES (257, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245536588.png', '2017108041051590245536588.png', 0);
INSERT INTO `media` VALUES (258, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245537983.png', '2017108041051590245537983.png', 0);
INSERT INTO `media` VALUES (259, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245538100.png', '2017108041051590245538100.png', 0);
INSERT INTO `media` VALUES (260, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245536678.png', '2017108041051590245536678.png', 0);
INSERT INTO `media` VALUES (261, '201710804105', 199, 'http://img.pzhuweb.cn/2017108041051590245538199.png', '2017108041051590245538199.png', 0);
INSERT INTO `media` VALUES (262, '201610804032', 190, 'http://img.pzhuweb.cn/2016108040321590310158854.jpeg', '2016108040321590310158854.jpeg', 0);
INSERT INTO `media` VALUES (263, '201610804032', 190, 'http://img.pzhuweb.cn/2016108040321590372224727.jpeg', '2016108040321590372224727.jpeg', 1);
INSERT INTO `media` VALUES (264, '201710803017', 213, 'http://img.pzhuweb.cn/2017108030171591357414853.png', '2017108030171591357414853.png', 1);
INSERT INTO `media` VALUES (265, '201810804034', 207, 'http://img.pzhuweb.cn/2018108040341591576926409.png', '2018108040341591576926409.png', 1);
INSERT INTO `media` VALUES (266, '201810804034', 207, 'http://img.pzhuweb.cn/2018108040341591576930505.png', '2018108040341591576930505.png', 1);
INSERT INTO `media` VALUES (267, '201810804034', 207, 'http://img.pzhuweb.cn/2018108040341591576934572.png', '2018108040341591576934572.png', 1);
INSERT INTO `media` VALUES (268, '201710804105', 219, 'http://img.pzhuweb.cn/2017108041051591717290272.png', '2017108041051591717290272.png', 1);
INSERT INTO `media` VALUES (269, '201710804105', 219, 'http://img.pzhuweb.cn/2017108041051591717290423.png', '2017108041051591717290423.png', 1);
INSERT INTO `media` VALUES (270, '201710804105', 219, 'http://img.pzhuweb.cn/2017108041051591717290180.png', '2017108041051591717290180.png', 1);
INSERT INTO `media` VALUES (271, '201710804105', 219, 'http://img.pzhuweb.cn/2017108041051591717294818.png', '2017108041051591717294818.png', 1);
INSERT INTO `media` VALUES (272, '201710804105', 219, 'http://img.pzhuweb.cn/2017108041051591717290015.png', '2017108041051591717290015.png', 1);
INSERT INTO `media` VALUES (273, '201710804105', 219, 'http://img.pzhuweb.cn/2017108041051591717291133.png', '2017108041051591717291133.png', 1);
INSERT INTO `media` VALUES (274, '201710804105', 219, 'http://img.pzhuweb.cn/2017108041051591717290104.png', '2017108041051591717290104.png', 1);
INSERT INTO `media` VALUES (275, '201710804105', 219, 'http://img.pzhuweb.cn/2017108041051591717582849.png', '2017108041051591717582849.png', 1);
INSERT INTO `media` VALUES (276, '201710804105', 219, 'http://img.pzhuweb.cn/2017108041051591717691730.png', '2017108041051591717691730.png', 1);
INSERT INTO `media` VALUES (277, '0002250', 161, 'http://img.pzhuweb.cn/00022501591840429836.png', '00022501591840429836.png', 1);
INSERT INTO `media` VALUES (278, '0002250', 161, 'http://img.pzhuweb.cn/00022501591840429884.png', '00022501591840429884.png', 1);
INSERT INTO `media` VALUES (279, '201810804093', 227, 'http://img.pzhuweb.cn/1595559492136.jpg', '1595559492136.jpg', 1);
INSERT INTO `media` VALUES (280, '201810804093', 228, 'http://img.pzhuweb.cn/1595559792152.jpg', '1595559792152.jpg', 1);
INSERT INTO `media` VALUES (281, '201810804093', 229, 'http://img.pzhuweb.cn/1595560121024.jpg', '1595560121024.jpg', 1);
INSERT INTO `media` VALUES (282, '201810804093', 229, 'http://img.pzhuweb.cn/1595560142505.jpg', '1595560142505.jpg', 1);
INSERT INTO `media` VALUES (283, '201810804093', 230, 'http://img.pzhuweb.cn/1595563510772.png', '1595563510772.png', 1);
INSERT INTO `media` VALUES (284, '201810804093', 231, 'http://img.pzhuweb.cn/1595563788265.jpg', '1595563788265.jpg', 1);
INSERT INTO `media` VALUES (285, '201810804093', 231, 'http://img.pzhuweb.cn/1595563876888.jpg', '1595563876888.jpg', 1);
INSERT INTO `media` VALUES (286, '201810804093', 231, 'http://img.pzhuweb.cn/1595563892890.jpg', '1595563892890.jpg', 1);
INSERT INTO `media` VALUES (287, '201810804093', 232, 'http://img.pzhuweb.cn/2018108040931602205648302.jpg', '2018108040931602205648302.jpg', 1);
INSERT INTO `media` VALUES (288, '201810804093', 232, 'http://img.pzhuweb.cn/2018108040931602205689324.jpg', '2018108040931602205689324.jpg', 1);
INSERT INTO `media` VALUES (289, '201810804093', 233, 'http://img.pzhuweb.cn/2018108040931602206212016.jpg', '2018108040931602206212016.jpg', 1);
INSERT INTO `media` VALUES (290, '201810804093', 233, 'http://img.pzhuweb.cn/2018108040931602206234486.jpg', '2018108040931602206234486.jpg', 1);
INSERT INTO `media` VALUES (291, '201810804093', 234, 'http://img.pzhuweb.cn/2018108040931602206549837.jpg', '2018108040931602206549837.jpg', 1);
INSERT INTO `media` VALUES (292, '201810804093', 234, 'http://img.pzhuweb.cn/2018108040931602206573050.jpg', '2018108040931602206573050.jpg', 1);
INSERT INTO `media` VALUES (293, '201810804093', 234, 'http://img.pzhuweb.cn/2018108040931602206601529.jpg', '2018108040931602206601529.jpg', 1);
INSERT INTO `media` VALUES (294, '201810804093', 234, 'http://img.pzhuweb.cn/2018108040931602206625159.jpg', '2018108040931602206625159.jpg', 1);
INSERT INTO `media` VALUES (295, '201810804093', 234, 'http://img.pzhuweb.cn/2018108040931602206637059.jpg', '2018108040931602206637059.jpg', 1);
INSERT INTO `media` VALUES (296, '201810804093', 235, 'http://img.pzhuweb.cn/2018108040931602207058947.jpg', '2018108040931602207058947.jpg', 1);
INSERT INTO `media` VALUES (297, '201810804093', 235, 'http://img.pzhuweb.cn/2018108040931602207073500.jpg', '2018108040931602207073500.jpg', 1);
INSERT INTO `media` VALUES (298, '201810804093', 235, 'http://img.pzhuweb.cn/2018108040931602207087311.jpg', '2018108040931602207087311.jpg', 1);
INSERT INTO `media` VALUES (299, '201810804093', 236, 'http://img.pzhuweb.cn/2018108040931603355650297.jpg', '2018108040931603355650297.jpg', 1);
INSERT INTO `media` VALUES (300, '201810804093', 236, 'http://img.pzhuweb.cn/2018108040931603355674776.jpg', '2018108040931603355674776.jpg', 1);
INSERT INTO `media` VALUES (301, '201810804093', 237, 'http://img.pzhuweb.cn/2018108040931603355887893.jpg', '2018108040931603355887893.jpg', 1);
INSERT INTO `media` VALUES (302, '201810804093', 237, 'http://img.pzhuweb.cn/2018108040931603355909096.jpg', '2018108040931603355909096.jpg', 1);
INSERT INTO `media` VALUES (303, '201810804093', 237, 'http://img.pzhuweb.cn/2018108040931603355930375.jpg', '2018108040931603355930375.jpg', 1);
INSERT INTO `media` VALUES (304, '201810804093', 238, 'http://img.pzhuweb.cn/2018108040931603356075617.jpg', '2018108040931603356075617.jpg', 1);
INSERT INTO `media` VALUES (305, '201810804093', 238, 'http://img.pzhuweb.cn/2018108040931603356102915.jpg', '2018108040931603356102915.jpg', 1);
INSERT INTO `media` VALUES (306, '201810804093', 238, 'http://img.pzhuweb.cn/2018108040931603356133505.jpg', '2018108040931603356133505.jpg', 1);
INSERT INTO `media` VALUES (307, '201810804093', 239, 'http://img.pzhuweb.cn/2018108040931605789986291.jpg', '2018108040931605789986291.jpg', 1);
INSERT INTO `media` VALUES (308, '201810804093', 239, 'http://img.pzhuweb.cn/2018108040931605790012424.jpg', '2018108040931605790012424.jpg', 1);
INSERT INTO `media` VALUES (309, '201810804093', 240, 'http://img.pzhuweb.cn/2018108040931605790109465.jpg', '2018108040931605790109465.jpg', 1);
INSERT INTO `media` VALUES (310, '201810804093', 240, 'http://img.pzhuweb.cn/2018108040931605790125497.jpg', '2018108040931605790125497.jpg', 1);
INSERT INTO `media` VALUES (311, '201810804093', 241, 'http://img.pzhuweb.cn/2018108040931606117182183.png', '2018108040931606117182183.png', 1);
INSERT INTO `media` VALUES (312, '201810804093', 241, 'http://img.pzhuweb.cn/2018108040931606117195728.jpg', '2018108040931606117195728.jpg', 1);
INSERT INTO `media` VALUES (313, '201810804093', 241, 'http://img.pzhuweb.cn/2018108040931606117207009.jpg', '2018108040931606117207009.jpg', 1);
INSERT INTO `media` VALUES (314, '201810804093', 242, 'http://img.pzhuweb.cn/2018108040931606828927689.jpg', '2018108040931606828927689.jpg', 1);
INSERT INTO `media` VALUES (315, '201810804093', 242, 'http://img.pzhuweb.cn/2018108040931606828941216.jpg', '2018108040931606828941216.jpg', 1);
INSERT INTO `media` VALUES (316, '201810804093', 242, 'http://img.pzhuweb.cn/2018108040931606828961632.jpg', '2018108040931606828961632.jpg', 1);
INSERT INTO `media` VALUES (317, '201810804093', 243, 'http://img.pzhuweb.cn/2018108040931608083288671.jpg', '2018108040931608083288671.jpg', 1);
INSERT INTO `media` VALUES (318, '201810804093', 243, 'http://img.pzhuweb.cn/2018108040931608083380351.jpg', '2018108040931608083380351.jpg', 1);
INSERT INTO `media` VALUES (319, '201810804093', 243, 'http://img.pzhuweb.cn/2018108040931608083391892.jpg', '2018108040931608083391892.jpg', 1);
INSERT INTO `media` VALUES (320, '201810804093', 244, 'http://img.pzhuweb.cn/2018108040931608254072853.jpg', '2018108040931608254072853.jpg', 1);
INSERT INTO `media` VALUES (321, '201810804093', 245, 'http://img.pzhuweb.cn/2018108040931608561051587.jpg', '2018108040931608561051587.jpg', 1);
INSERT INTO `media` VALUES (322, '201810804093', 245, 'http://img.pzhuweb.cn/2018108040931608561063047.jpg', '2018108040931608561063047.jpg', 1);
INSERT INTO `media` VALUES (323, '201810804093', 246, 'http://img.pzhuweb.cn/2018108040931608969548104.png', '2018108040931608969548104.png', 1);
INSERT INTO `media` VALUES (324, '201810804093', 246, 'http://img.pzhuweb.cn/2018108040931608969558075.png', '2018108040931608969558075.png', 1);
INSERT INTO `media` VALUES (325, '201810804093', 247, 'http://img.pzhuweb.cn/2018108040931609131540624.jpg', '2018108040931609131540624.jpg', 1);
INSERT INTO `media` VALUES (326, '201810804093', 247, 'http://img.pzhuweb.cn/2018108040931609131550240.jpg', '2018108040931609131550240.jpg', 1);
INSERT INTO `media` VALUES (327, '201810804093', 247, 'http://img.pzhuweb.cn/2018108040931609131566659.jpg', '2018108040931609131566659.jpg', 1);
INSERT INTO `media` VALUES (328, '201810804093', 247, 'http://img.pzhuweb.cn/2018108040931609131576956.jpg', '2018108040931609131576956.jpg', 1);
INSERT INTO `media` VALUES (329, '201810804093', 248, 'http://img.pzhuweb.cn/2018108040931614685536434.jpg', '2018108040931614685536434.jpg', 1);
INSERT INTO `media` VALUES (330, '201810804093', 248, 'http://img.pzhuweb.cn/2018108040931614685544931.jpg', '2018108040931614685544931.jpg', 1);
INSERT INTO `media` VALUES (331, '201810804093', 249, 'http://img.pzhuweb.cn/2018108040931615251080542.jpg', '2018108040931615251080542.jpg', 1);
INSERT INTO `media` VALUES (332, '201810804093', 249, 'http://img.pzhuweb.cn/2018108040931615251096744.jpg', '2018108040931615251096744.jpg', 1);
INSERT INTO `media` VALUES (333, '201810804093', 249, 'http://img.pzhuweb.cn/2018108040931615251106004.jpg', '2018108040931615251106004.jpg', 1);
INSERT INTO `media` VALUES (334, '201810804093', 250, 'http://img.pzhuweb.cn/2018108040931615776621999.jpg', '2018108040931615776621999.jpg', 1);
INSERT INTO `media` VALUES (335, '201810804093', 250, 'http://img.pzhuweb.cn/2018108040931615776631472.jpg', '2018108040931615776631472.jpg', 1);
INSERT INTO `media` VALUES (336, '202010804010', 252, 'http://img.pzhuweb.cn/2020108040101616820747689.jpg', '2020108040101616820747689.jpg', 1);
INSERT INTO `media` VALUES (337, '202010804010', 252, 'http://img.pzhuweb.cn/2020108040101616820751766.jpg', '2020108040101616820751766.jpg', 1);
INSERT INTO `media` VALUES (338, '202010804010', 253, 'http://img.pzhuweb.cn/2020108040101619267119540.jpg', '2020108040101619267119540.jpg', 1);
INSERT INTO `media` VALUES (339, '202010804010', 253, 'http://img.pzhuweb.cn/2020108040101619267124690.jpg', '2020108040101619267124690.jpg', 1);
INSERT INTO `media` VALUES (340, '202010804010', 253, 'http://img.pzhuweb.cn/2020108040101619267129045.jpg', '2020108040101619267129045.jpg', 1);
INSERT INTO `media` VALUES (341, '202010804027', 254, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623222060595.png', '140848948.4431736713546473000.1603686505885.0711623222060595.png', 0);
INSERT INTO `media` VALUES (342, '202010804027', 254, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623222122047.png', '140848948.4431736713546473000.1603686505885.0711623222122047.png', 0);
INSERT INTO `media` VALUES (343, '202010804027', 255, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623251601441.png', '140848948.4431736713546473000.1603686505885.0711623251601441.png', 0);
INSERT INTO `media` VALUES (344, '202010804027', 255, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623251601397.png', '140848948.4431736713546473000.1603686505885.0711623251601397.png', 0);
INSERT INTO `media` VALUES (345, '202010804027', 255, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623251601485.png', '140848948.4431736713546473000.1603686505885.0711623251601485.png', 0);
INSERT INTO `media` VALUES (346, '202010804027', 256, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252566362.png', '140848948.4431736713546473000.1603686505885.0711623252566362.png', 0);
INSERT INTO `media` VALUES (347, '202010804027', 256, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252566318.jpg', '140848948.4431736713546473000.1603686505885.0711623252566318.jpg', 0);
INSERT INTO `media` VALUES (348, '202010804027', 256, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252566406.png', '140848948.4431736713546473000.1603686505885.0711623252566406.png', 0);
INSERT INTO `media` VALUES (349, '202010804027', 257, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252962118.jpeg', '140848948.4431736713546473000.1603686505885.0711623252962118.jpeg', 0);
INSERT INTO `media` VALUES (350, '202010804027', 257, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252962202.jpeg', '140848948.4431736713546473000.1603686505885.0711623252962202.jpeg', 0);
INSERT INTO `media` VALUES (351, '202010804027', 257, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252962248.jpeg', '140848948.4431736713546473000.1603686505885.0711623252962248.jpeg', 0);
INSERT INTO `media` VALUES (352, '202010804027', 257, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623252962177.jpeg', '140848948.4431736713546473000.1603686505885.0711623252962177.jpeg', 0);
INSERT INTO `media` VALUES (353, '202010804027', 257, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623253104266.png', '140848948.4431736713546473000.1603686505885.0711623253104266.png', 0);
INSERT INTO `media` VALUES (354, '202010804027', 257, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623253250564.png', '140848948.4431736713546473000.1603686505885.0711623253250564.png', 0);
INSERT INTO `media` VALUES (355, '202010804027', 258, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623746806016.jpg', '140848948.4431736713546473000.1603686505885.0711623746806016.jpg', 1);
INSERT INTO `media` VALUES (356, '202010804027', 258, 'http://img.pzhuweb.cn/140848948.4431736713546473000.1603686505885.0711623746806069.jpg', '140848948.4431736713546473000.1603686505885.0711623746806069.jpg', 1);
INSERT INTO `media` VALUES (357, '202010804027', 259, 'http://img.pzhuweb.cn/2020108040271631066544550.jpg', '2020108040271631066544550.jpg', 0);
INSERT INTO `media` VALUES (358, '202010804027', 261, 'http://img.pzhuweb.cn/2020108040271631972988652.jpg', '2020108040271631972988652.jpg', 0);
INSERT INTO `media` VALUES (359, '202010804027', 261, 'http://img.pzhuweb.cn/2020108040271631972988604.jpg', '2020108040271631972988604.jpg', 0);
INSERT INTO `media` VALUES (360, '202010804027', 261, 'http://img.pzhuweb.cn/2020108040271631973111015.jpg', '2020108040271631973111015.jpg', 0);
INSERT INTO `media` VALUES (361, '202010804027', 261, 'http://img.pzhuweb.cn/2020108040271631973110966.jpg', '2020108040271631973110966.jpg', 0);
INSERT INTO `media` VALUES (362, '202010804027', 263, 'http://img.pzhuweb.cn/2020108040271632578538836.jpg', '2020108040271632578538836.jpg', 0);
INSERT INTO `media` VALUES (363, '202010804027', 263, 'http://img.pzhuweb.cn/2020108040271632578538878.jpg', '2020108040271632578538878.jpg', 0);
INSERT INTO `media` VALUES (364, '202010804027', 264, 'http://img.pzhuweb.cn/2020108040271634031849992.png', '2020108040271634031849992.png', 0);
INSERT INTO `media` VALUES (365, '202010804027', 264, 'http://img.pzhuweb.cn/2020108040271634031853003.png', '2020108040271634031853003.png', 0);
INSERT INTO `media` VALUES (366, '202010804027', 266, 'http://img.pzhuweb.cn/2020108040271635040406032.jpg', '2020108040271635040406032.jpg', 0);
INSERT INTO `media` VALUES (367, '202010804027', 266, 'http://img.pzhuweb.cn/2020108040271635040406038.jpg', '2020108040271635040406038.jpg', 0);
INSERT INTO `media` VALUES (368, '202010804027', 267, 'http://img.pzhuweb.cn/2020108040271635600831435.jpg', '2020108040271635600831435.jpg', 0);
INSERT INTO `media` VALUES (369, '202010804027', 267, 'http://img.pzhuweb.cn/2020108040271635600831385.jpg', '2020108040271635600831385.jpg', 0);
INSERT INTO `media` VALUES (370, '202010804027', 275, 'http://img.pzhuweb.cn/2020108040271637589389175.jpg', '2020108040271637589389175.jpg', 1);
INSERT INTO `media` VALUES (371, '202010804027', 275, 'http://img.pzhuweb.cn/2020108040271637589389228.png', '2020108040271637589389228.png', 1);
INSERT INTO `media` VALUES (372, '202010804027', 276, 'http://img.pzhuweb.cn/2020108040271637589982756.jpg', '2020108040271637589982756.jpg', 0);
INSERT INTO `media` VALUES (373, '202010804027', 276, 'http://img.pzhuweb.cn/2020108040271637590114295.jpg', '2020108040271637590114295.jpg', 0);
INSERT INTO `media` VALUES (374, '202010804027', 276, 'http://img.pzhuweb.cn/2020108040271637590114244.jpg', '2020108040271637590114244.jpg', 0);
INSERT INTO `media` VALUES (375, '202010804027', 277, 'http://img.pzhuweb.cn/2020108040271638528181166.jpg', '2020108040271638528181166.jpg', 1);
INSERT INTO `media` VALUES (376, '202010804027', 277, 'http://img.pzhuweb.cn/2020108040271638528181216.jpg', '2020108040271638528181216.jpg', 0);
INSERT INTO `media` VALUES (377, '202010804027', 278, 'http://img.pzhuweb.cn/2020108040271639402608902.jpg', '2020108040271639402608902.jpg', 1);
INSERT INTO `media` VALUES (378, '202010804027', 278, 'http://img.pzhuweb.cn/2020108040271639402698674.png', '2020108040271639402698674.png', 1);
INSERT INTO `media` VALUES (379, '0002250', 109, 'http://img.pzhuweb.cn/00022501640618299159.mp4', '00022501640618299159.mp4', 1);
INSERT INTO `media` VALUES (380, '202010804027', 280, 'http://img.pzhuweb.cn/2020108040271646056489590.jpg', '2020108040271646056489590.jpg', 1);

-- ----------------------------
-- Table structure for menu
-- ----------------------------
DROP TABLE IF EXISTS `menu`;
CREATE TABLE `menu`  (
  `id` int(0) NOT NULL,
  `name` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `status` int(0) NULL DEFAULT 1,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of menu
-- ----------------------------
INSERT INTO `menu` VALUES (1, '前端', 1, NULL, NULL);
INSERT INTO `menu` VALUES (2, '后台', 1, NULL, NULL);
INSERT INTO `menu` VALUES (3, '算法', 1, NULL, NULL);
INSERT INTO `menu` VALUES (4, '全栈', 1, NULL, NULL);
INSERT INTO `menu` VALUES (5, '动态', 1, NULL, NULL);

-- ----------------------------
-- Table structure for photo
-- ----------------------------
DROP TABLE IF EXISTS `photo`;
CREATE TABLE `photo`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `user_id` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `album_id` int(0) NULL DEFAULT NULL,
  `link` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `status` int(0) NULL DEFAULT 1,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 91 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of photo
-- ----------------------------
INSERT INTO `photo` VALUES (1, '201710803017', 9, 'http://img.pzhuweb.cn/2017108030171614668100569test.png', 'test.png', 1, '2021-03-02 00:00:00', '2021-03-02 00:00:00');
INSERT INTO `photo` VALUES (7, '201710803017', 1, 'http://img.pzhuweb.cn/2017108030171619359677977101.png', '101.png', 0, '2021-04-25 00:00:00', '2021-04-28 00:00:00');
INSERT INTO `photo` VALUES (8, '0002250', 1, 'http://img.pzhuweb.cn/00022501619587643246psb.jpg', 'psb.jpg', 1, '2021-04-28 00:00:00', '2021-04-28 00:00:00');
INSERT INTO `photo` VALUES (12, '0002250', 1, 'http://img.pzhuweb.cn/00022501621220688408_DSC9421.jpg', '_DSC9403.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (14, '0002250', 1, 'http://img.pzhuweb.cn/00022501621221219117_DSC9381.jpg', '_DSC9381.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (16, '0002250', 1, 'http://img.pzhuweb.cn/00022501621221245216_DSC9398.jpg', '_DSC9398.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (17, '0002250', 1, 'http://img.pzhuweb.cn/00022501621221327632_DSC9421.jpg', '_DSC9421.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (18, '0002250', 1, 'http://img.pzhuweb.cn/00022501621221488597cb.jpg', 'cb.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (19, '0002250', 1, 'http://img.pzhuweb.cn/00022501621221492333cmm.jpg', 'cmm.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (20, '0002250', 1, 'http://img.pzhuweb.cn/00022501621221495421wzd.jpg', 'wzd.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (21, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222291702_DSC9367.jpg', '_DSC9367.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (22, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222295822_DSC9362.jpg', '_DSC9362.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (23, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222300140_DSC9359.jpg', '_DSC9359.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (24, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222304112_DSC9358.jpg', '_DSC9358.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (25, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222307767_DSC9343.jpg', '_DSC9343.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (26, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222312740_DSC9342.jpg', '_DSC9342.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (27, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222321350_DSC9345.jpg', '_DSC9345.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (28, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222325563_DSC9347.jpg', '_DSC9347.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (29, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222329712_DSC9350.jpg', '_DSC9350.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (30, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222333003_DSC9355.jpg', '_DSC9355.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (31, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222336692_DSC9356.jpg', '_DSC9356.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (32, '0002250', 13, 'http://img.pzhuweb.cn/admin1621222339999_DSC9357.jpg', '_DSC9357.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (33, '0002250', 15, 'http://img.pzhuweb.cn/admin1621223304808_MG_5221.jpg', '_MG_5221.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (34, '0002250', 15, 'http://img.pzhuweb.cn/admin1621223311402_MG_5244.jpg', '_MG_5244.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (35, '0002250', 15, 'http://img.pzhuweb.cn/admin1621223315393_MG_5251.jpg', '_MG_5251.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (36, '0002250', 15, 'http://img.pzhuweb.cn/admin1621223322040_MG_5256.jpg', '_MG_5256.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (37, '0002250', 15, 'http://img.pzhuweb.cn/admin1621223333267_MG_5259.jpg', '_MG_5259.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (38, '0002250', 15, 'http://img.pzhuweb.cn/admin1621223337689_MG_5261.jpg', '_MG_5261.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (39, '0002250', 15, 'http://img.pzhuweb.cn/admin1621223343746_MG_5266.jpg', '_MG_5266.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (40, '0002250', 15, 'http://img.pzhuweb.cn/admin1621223347786_MG_5274.jpg', '_MG_5274.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (41, '0002250', 16, 'http://img.pzhuweb.cn/00022501621224813253z2.jpg', 'z2.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (42, '0002250', 16, 'http://img.pzhuweb.cn/00022501621224816996z1.jpg', 'z1.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (43, '0002250', 16, 'http://img.pzhuweb.cn/00022501621224820073z5.jpg', 'z5.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (44, '0002250', 16, 'http://img.pzhuweb.cn/00022501621224823269z10.jpg', 'z10.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (45, '0002250', 16, 'http://img.pzhuweb.cn/00022501621224826194z26.jpg', 'z26.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (46, '0002250', 16, 'http://img.pzhuweb.cn/0002250162122483015434.jpg', '34.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (47, '0002250', 16, 'http://img.pzhuweb.cn/0002250162122483305133.jpg', '33.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (48, '0002250', 16, 'http://img.pzhuweb.cn/000225016212248363199.jpg', '9.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (49, '0002250', 16, 'http://img.pzhuweb.cn/000225016212248390508.jpg', '8.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (50, '0002250', 16, 'http://img.pzhuweb.cn/000225016212248418217.jpg', '7.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (51, '0002250', 16, 'http://img.pzhuweb.cn/000225016212248448206.jpg', '6.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (52, '0002250', 16, 'http://img.pzhuweb.cn/000225016212248476715.jpg', '5.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (53, '0002250', 16, 'http://img.pzhuweb.cn/000225016212248505444.jpg', '4.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (54, '0002250', 16, 'http://img.pzhuweb.cn/000225016212248533843.jpg', '3.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (55, '0002250', 16, 'http://img.pzhuweb.cn/000225016212248570972.jpg', '2.jpg', 1, '2021-05-17 00:00:00', '2021-05-17 00:00:00');
INSERT INTO `photo` VALUES (56, '0002250', 17, 'http://img.pzhuweb.cn/0002250162161079010109.JPG', '09.JPG', 1, '2021-05-21 00:00:00', '2021-05-21 00:00:00');
INSERT INTO `photo` VALUES (57, '0002250', 17, 'http://img.pzhuweb.cn/0002250162161079270106.jpg', '06.jpg', 1, '2021-05-21 00:00:00', '2021-05-21 00:00:00');
INSERT INTO `photo` VALUES (58, '0002250', 17, 'http://img.pzhuweb.cn/0002250162161079518820.jpg', '20.jpg', 1, '2021-05-21 00:00:00', '2021-05-21 00:00:00');
INSERT INTO `photo` VALUES (59, '0002250', 17, 'http://img.pzhuweb.cn/0002250162161079937625.jpg', '25.jpg', 1, '2021-05-21 00:00:00', '2021-05-21 00:00:00');
INSERT INTO `photo` VALUES (60, '0002250', 17, 'http://img.pzhuweb.cn/00022501621610803226SHU2265.JPG', 'SHU2265.JPG', 1, '2021-05-21 00:00:00', '2021-05-21 00:00:00');
INSERT INTO `photo` VALUES (61, '0002250', 17, 'http://img.pzhuweb.cn/00022501621610808448SHU2108.JPG', 'SHU2108.JPG', 1, '2021-05-21 00:00:00', '2021-05-21 00:00:00');
INSERT INTO `photo` VALUES (62, '0002250', 17, 'http://img.pzhuweb.cn/00022501621610815997SHU2124.JPG', 'SHU2124.JPG', 1, '2021-05-21 00:00:00', '2021-05-21 00:00:00');
INSERT INTO `photo` VALUES (63, '0002250', 17, 'http://img.pzhuweb.cn/00022501621653669029SHU_229.jpg', 'SHU_229.jpg', 1, '2021-05-22 00:00:00', '2021-05-22 00:00:00');
INSERT INTO `photo` VALUES (64, '0002250', 17, 'http://img.pzhuweb.cn/00022501623249068587SHU_2267.jpg', 'SHU_2267.jpg', 1, '2021-06-09 00:00:00', '2021-06-09 00:00:00');
INSERT INTO `photo` VALUES (65, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1673961853881.png', '图片1.png', 1, '2023-01-17 13:24:14', '2023-01-18 07:37:05');
INSERT INTO `photo` VALUES (66, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1673961865551.png', '图片2.png', 1, '2023-01-17 13:24:26', '2023-01-17 14:31:15');
INSERT INTO `photo` VALUES (69, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1673963565884.png', '图片1.png', 1, '2023-01-17 13:52:47', '2023-01-18 04:55:51');
INSERT INTO `photo` VALUES (70, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1673963760695.png', '图片2.png', 1, '2023-01-17 13:56:02', '2023-01-18 04:55:53');
INSERT INTO `photo` VALUES (71, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1673963843952.png', '图片1.png', 1, '2023-01-17 13:57:25', '2023-01-18 04:55:54');
INSERT INTO `photo` VALUES (72, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1673963881057.png', '图片1.png', 1, '2023-01-17 13:58:02', '2023-01-18 07:39:10');
INSERT INTO `photo` VALUES (73, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1673964971503.png', '图片2.png', 1, '2023-01-17 14:16:13', '2023-01-18 10:10:01');
INSERT INTO `photo` VALUES (74, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1673965006682.png', '图片1.png', 1, '2023-01-17 14:16:48', '2023-01-18 10:15:05');
INSERT INTO `photo` VALUES (75, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1673965116207.png', '图片1.png', 1, '2023-01-17 14:18:38', '2023-01-18 09:55:32');
INSERT INTO `photo` VALUES (76, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1673965243334.png', '图片2.png', 1, '2023-01-17 14:20:45', '2023-01-18 08:04:11');
INSERT INTO `photo` VALUES (77, 'admin', 34, 'http://img.pzhuweb.cn/test/admin1673965326691.png', '图片2.png', 1, '2023-01-17 14:22:09', '2023-01-18 09:49:34');
INSERT INTO `photo` VALUES (78, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1673965364126.png', '图片1.png', 1, '2023-01-17 14:22:46', '2023-01-18 10:40:07');
INSERT INTO `photo` VALUES (79, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1674007534717.png', '图片1.png', 1, '2023-01-18 02:05:35', '2023-01-18 10:40:07');
INSERT INTO `photo` VALUES (80, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1674007547414.png', '图片1.png', 1, '2023-01-18 02:05:47', '2023-01-18 10:40:07');
INSERT INTO `photo` VALUES (81, 'admin', 33, 'http://img.pzhuweb.cn/test/admin1674017763600.png', '图片2.png', 1, '2023-01-18 04:56:05', '2023-01-18 10:10:29');
INSERT INTO `photo` VALUES (82, 'admin', 33, 'http://img.pzhuweb.cn/test/admin1674022343390.png', '图片2.png', 1, '2023-01-18 06:12:29', '2023-01-18 10:24:12');
INSERT INTO `photo` VALUES (83, 'admin', 33, 'http://img.pzhuweb.cn/test/admin1674022606222.png', '图片2.png', 1, '2023-01-18 06:16:49', '2023-01-18 07:33:05');
INSERT INTO `photo` VALUES (84, 'admin', 33, 'http://img.pzhuweb.cn/test/admin1674022646811.png', '图片2.png', 1, '2023-01-18 06:17:29', '2023-01-18 10:23:02');
INSERT INTO `photo` VALUES (85, 'admin', 33, 'http://img.pzhuweb.cn/test/admin1674022683840.png', '图片2.png', 1, '2023-01-18 06:18:06', '2023-01-18 07:53:55');
INSERT INTO `photo` VALUES (86, 'admin', 33, 'http://img.pzhuweb.cn/test/admin1674022736603.png', '图片2.png', 1, '2023-01-18 06:18:59', '2023-01-18 07:49:52');
INSERT INTO `photo` VALUES (87, 'admin', 33, 'http://img.pzhuweb.cn/test/admin1674022796724.png', '图片2.png', 1, '2023-01-18 06:19:59', '2023-01-18 10:20:37');
INSERT INTO `photo` VALUES (88, 'admin', 0, 'http://img.pzhuweb.cn/test/admin1674022809007.png', '图片1.png', 1, '2023-01-18 06:20:11', '2023-01-18 10:40:13');
INSERT INTO `photo` VALUES (89, 'admin', 33, 'http://img.pzhuweb.cn/test/admin1674022819150.png', '图片2.png', 1, '2023-01-18 06:20:22', '2023-01-18 10:16:19');
INSERT INTO `photo` VALUES (90, 'admin', 33, 'http://img.pzhuweb.cn/test/admin1674022896953.png', '图片2.png', 1, '2023-01-18 06:21:40', '2023-01-18 06:57:25');

-- ----------------------------
-- Table structure for resource
-- ----------------------------
DROP TABLE IF EXISTS `resource`;
CREATE TABLE `resource`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `userid` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `typeid` int(0) NULL DEFAULT NULL,
  `title` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `description` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `posterlink` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `link` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `attachment` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `status` tinyint(1) NULL DEFAULT 1,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `userid`(`userid`) USING BTREE,
  INDEX `resource_ibfk_2`(`typeid`) USING BTREE,
  CONSTRAINT `resource_ibfk_1` FOREIGN KEY (`userid`) REFERENCES `user_info` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `resource_ibfk_2` FOREIGN KEY (`typeid`) REFERENCES `resourcetype` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB AUTO_INCREMENT = 83 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of resource
-- ----------------------------
INSERT INTO `resource` VALUES (40, '201610804032', 1, '掘金网站', '一个国内最火的技术论坛网站，涵盖了互联网各个行业的技术文章。', 'http://img.pzhuweb.cn/2016108040321561520586074.png', 'https://juejin.im', '', 1, '2019-06-26 00:00:00', '2019-06-26 00:00:00');
INSERT INTO `resource` VALUES (41, '0002250', 4, '懒得勤快', '懒得勤快，互联网分享精神，勤于发现，乐于分享', 'http://img.pzhuweb.cn/00022501561560364419.png', 'https://masuit.com/', NULL, 1, '2019-06-26 00:00:00', '2019-06-26 00:00:00');
INSERT INTO `resource` VALUES (45, '201710803017', NULL, NULL, NULL, 'http://img.pzhuweb.cn/2017108030171561796571175.jpg', NULL, '', 2, NULL, NULL);
INSERT INTO `resource` VALUES (46, '201710803072', 3, 'Java Web 基础教程', '提取码：0558\n分享不易，点赞加收藏，谢谢！', 'http://img.pzhuweb.cn/2017108030721561820479792.jpg', 'https://pan.baidu.com/s/1bWpCWhZVLq1ZK4CWdY-nZA', NULL, 1, '2019-06-29 00:00:00', NULL);
INSERT INTO `resource` VALUES (47, '201710803072', 3, 'Java Web实战开发', 'W3C免费公开课，看完还不错，分享一波！\n分享不易，点赞收藏，谢谢！', 'http://img.pzhuweb.cn/2017108030721561820692243.png', 'https://www.w3cschool.cn/minicourse/play/bejif?', NULL, 1, '2019-06-29 00:00:00', NULL);
INSERT INTO `resource` VALUES (48, '201610804094', NULL, NULL, NULL, 'http://img.pzhuweb.cn/2016108040941561950571798.png', NULL, NULL, 2, NULL, NULL);
INSERT INTO `resource` VALUES (49, '0002250', 2, 'Android广告拦截器', '世界上最高级的广告拦截程序，支持去除国内%95应用的广告.', 'http://img.pzhuweb.cn/00022501561952348781.jpg', 'https://www.lanzous.com/i4s1d0b', NULL, 1, '2019-07-01 00:00:00', NULL);
INSERT INTO `resource` VALUES (50, '0002250', 5, 'MSDN JavaScript 指南', 'MSDN JavaScript 指南', 'http://img.pzhuweb.cn/00022501562147043079.png', 'https://developer.mozilla.org/en-US/docs/Web', NULL, 1, '2019-07-03 00:00:00', NULL);
INSERT INTO `resource` VALUES (51, '0002250', 5, 'ECMAScript最新标准文档', 'ECMAScript最新标准文档', 'http://img.pzhuweb.cn/00022501562147280367.png', 'https://tc39.github.io/ecma262/', NULL, 1, '2019-07-03 00:00:00', NULL);
INSERT INTO `resource` VALUES (52, '201610804032', 3, 'Node.js 学习视频', '链接: https://pan.baidu.com/s/1WuXP4VRHK69KEE2TBJRO2Q 提取码: 2j3s ', 'http://img.pzhuweb.cn/2016108040321562379938496.jpg', 'https://pan.baidu.com/s/1WuXP4VRHK69KEE2TBJRO2Q ', NULL, 1, '2019-07-06 00:00:00', NULL);
INSERT INTO `resource` VALUES (53, '201610804032', 1, 'WEB应用专业团队前端小组GitHub仓库', '记录了WEB应用专业团队前端小组学习分享内容，欢迎 Star。', 'http://img.pzhuweb.cn/2016108040321568188508991.png', 'https://pzhuwebteam.github.io/WEB-Front-Share/', NULL, 1, '2019-09-11 00:00:00', NULL);
INSERT INTO `resource` VALUES (55, '201610804032', 1, '益智游戏2048', '版权说明：Github开源项目dao-2048, 点击立即在线试玩 ', 'http://img.pzhuweb.cn/2016108040321570017744344.png', 'http://www.pzhuweb.cn/program/2048/', NULL, 1, '2019-10-02 00:00:00', NULL);
INSERT INTO `resource` VALUES (56, '0002250', 5, 'Java Web课程思维导图', 'processOn思维导图在线预览', 'http://img.pzhuweb.cn/00022501570333538879.png', 'https://www.processon.com/view/link/5d9961d0e4b0a95d9601fabc', NULL, 1, '2019-06-06 00:00:00', NULL);
INSERT INTO `resource` VALUES (57, '0002250', 4, '算法与数据结构微信文章目录', 'http://w.itcodemonkey.com/article/15.html', 'http://img.pzhuweb.cn/00022501590231957178.png', 'http://w.itcodemonkey.com/article/15.html', NULL, 1, '2019-10-05 00:00:00', NULL);
INSERT INTO `resource` VALUES (58, '201610804032', NULL, NULL, NULL, '', NULL, NULL, 2, NULL, NULL);
INSERT INTO `resource` VALUES (59, '0002250', 4, '前端开发文章', '前端开发文章', 'http://img.pzhuweb.cn/00022501590231211081.png', 'http://w.itcodemonkey.com/article/12.html?v=1', NULL, 1, '2020-05-23 00:00:00', NULL);
INSERT INTO `resource` VALUES (60, '0002250', 4, 'Java编程微信文章目录', 'Java编程微信文章目录', 'http://img.pzhuweb.cn/00022501590231374272.png', 'http://w.itcodemonkey.com/article/18.html?v=1&from=singlemessage', NULL, 1, '2020-05-23 00:00:00', NULL);
INSERT INTO `resource` VALUES (61, '0002250', 4, 'hollischuang', 'hollischuang', 'http://img.pzhuweb.cn/00022501590231713428.png', 'http://www.hollischuang.com/', NULL, 1, '2020-05-23 00:00:00', NULL);
INSERT INTO `resource` VALUES (62, '0002250', 4, 'Web开发微信文章目录', 'Web开发微信文章目录', 'http://img.pzhuweb.cn/00022501590232240182.png', 'http://w.itcodemonkey.com/article/20.html', NULL, 1, '2020-05-23 00:00:00', NULL);
INSERT INTO `resource` VALUES (63, '201810804099', 1, '”同心战疫，命运与共“网页', '', 'http://img.pzhuweb.cn/2018108040991590936201513.png', 'http://www.pzhuweb.cn/program/202001/', NULL, 0, '2020-05-31 00:00:00', NULL);
INSERT INTO `resource` VALUES (64, '0002250', 2, '18个素材网站分享', '1、图片\n2、视频\n3、音频\n4、字体', 'http://img.pzhuweb.cn/00022501604912400659.jpg', 'http://www.pzhuweb.cn/program/website.html', NULL, 1, '2020-11-09 00:00:00', NULL);
INSERT INTO `resource` VALUES (65, '0002250', 2, '熊猫破解', '互联网分享精神\n一直被模仿，从未被超越', 'http://img.pzhuweb.cn/00022501606406359043.jpg', 'https://www.xmpojie.com/', NULL, 1, '2020-11-26 00:00:00', NULL);
INSERT INTO `resource` VALUES (66, '0002250', 2, '免费素材网站', '十类免费素材', 'http://img.pzhuweb.cn/00022501623417704582.jpg', 'https://note.youdao.com/s/7JENgnAN', NULL, 1, '2021-06-11 00:00:00', NULL);
INSERT INTO `resource` VALUES (67, '0002250', 1, '数据结构算法演示系统', '陈治霖、胡森宇、张凡等人开发的系统，能够动态演示数据结构中的算法实现过程。', 'http://img.pzhuweb.cn/00022501634263828009.jpg', 'https://pzhuweb.gitee.io/dses', NULL, 1, '2021-10-15 00:00:00', NULL);
INSERT INTO `resource` VALUES (68, '201710804035', 1, '数据结构和算法的可视化', '该网站以可视化的交互模式介绍数据结构和算法。该网站由旧金山大学制作，国内可直接访问。', 'http://img.pzhuweb.cn/2017108040351634885548155.png', 'https://www.cs.usfca.edu/~galles/visualization/Algorithms.html', NULL, 1, '2020-10-22 00:00:00', NULL);
INSERT INTO `resource` VALUES (82, '202010804027', NULL, NULL, NULL, NULL, NULL, '', 2, NULL, NULL);

-- ----------------------------
-- Table structure for resourcetype
-- ----------------------------
DROP TABLE IF EXISTS `resourcetype`;
CREATE TABLE `resourcetype`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `name` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `status` int(0) NULL DEFAULT 1,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 9 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of resourcetype
-- ----------------------------
INSERT INTO `resourcetype` VALUES (0, '全部资源', 1, NULL, NULL);
INSERT INTO `resourcetype` VALUES (1, '开源项目', 1, NULL, NULL);
INSERT INTO `resourcetype` VALUES (2, '实用工具', 1, NULL, NULL);
INSERT INTO `resourcetype` VALUES (3, '视频教程', 1, NULL, NULL);
INSERT INTO `resourcetype` VALUES (4, '技术博文', 1, NULL, NULL);
INSERT INTO `resourcetype` VALUES (5, '开发文档', 1, NULL, NULL);
INSERT INTO `resourcetype` VALUES (7, 'hello', 0, NULL, NULL);
INSERT INTO `resourcetype` VALUES (8, 'okok', 0, NULL, NULL);

-- ----------------------------
-- Table structure for school
-- ----------------------------
DROP TABLE IF EXISTS `school`;
CREATE TABLE `school`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `name` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of school
-- ----------------------------
INSERT INTO `school` VALUES (1, '数学与计算机学院', NULL, NULL);

-- ----------------------------
-- Table structure for sequelizemeta
-- ----------------------------
DROP TABLE IF EXISTS `sequelizemeta`;
CREATE TABLE `sequelizemeta`  (
  `name` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`name`) USING BTREE,
  UNIQUE INDEX `name`(`name`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sequelizemeta
-- ----------------------------
INSERT INTO `sequelizemeta` VALUES ('20190311082033-init-userInfo.js');
INSERT INTO `sequelizemeta` VALUES ('20190329060225-init-school.js');
INSERT INTO `sequelizemeta` VALUES ('20190329060340-init-major.js');
INSERT INTO `sequelizemeta` VALUES ('20190425060732-init-domin.js');
INSERT INTO `sequelizemeta` VALUES ('20190430113212-init-achievement.js');
INSERT INTO `sequelizemeta` VALUES ('20190430113221-init-achievementtype.js');
INSERT INTO `sequelizemeta` VALUES ('20221222084215-status-users.js');
INSERT INTO `sequelizemeta` VALUES ('20221226080001-init-home.js');
INSERT INTO `sequelizemeta` VALUES ('20221226090943-init-achievement.js');
INSERT INTO `sequelizemeta` VALUES ('20221227085143-init-menu.js');
INSERT INTO `sequelizemeta` VALUES ('20221227085441-init-technology.js');
INSERT INTO `sequelizemeta` VALUES ('20221227090505-init-article.js');
INSERT INTO `sequelizemeta` VALUES ('20221228091051-init-favorite.js');
INSERT INTO `sequelizemeta` VALUES ('20221228091714-init-resourcetype.js');
INSERT INTO `sequelizemeta` VALUES ('20221228091825-init-resource.js');
INSERT INTO `sequelizemeta` VALUES ('20221228141904-init-albumtype.js');
INSERT INTO `sequelizemeta` VALUES ('20221228142759-init-album.js');
INSERT INTO `sequelizemeta` VALUES ('20221228143554-init-photo.js');
INSERT INTO `sequelizemeta` VALUES ('20230105090821-init-media.js');

-- ----------------------------
-- Table structure for status
-- ----------------------------
DROP TABLE IF EXISTS `status`;
CREATE TABLE `status`  (
  `id` int(0) NOT NULL,
  `roles` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `auth_btn` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `active` int(0) NULL DEFAULT 1,
  `role_name` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `describe` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of status
-- ----------------------------
INSERT INTO `status` VALUES (-1, NULL, NULL, 1, NULL, NULL, '2023-01-08 11:40:13', NULL);
INSERT INTO `status` VALUES (0, NULL, NULL, 1, NULL, NULL, '2023-01-10 11:27:07', NULL);
INSERT INTO `status` VALUES (1, 'team members', '', 1, '团队成员', '团队成员', '2023-01-08 11:40:18', NULL);
INSERT INTO `status` VALUES (2, 'admin', 'btn.add,btn.del,btn.edit,btn.link', 1, '超级管理员', '后台管理员', '2023-01-08 11:40:28', NULL);
INSERT INTO `status` VALUES (3, 'common', 'btn.add,btn.link', 1, '普通管理员', '后台管理员', '2023-01-08 11:40:31', NULL);

-- ----------------------------
-- Table structure for technology
-- ----------------------------
DROP TABLE IF EXISTS `technology`;
CREATE TABLE `technology`  (
  `id` int(0) NOT NULL AUTO_INCREMENT,
  `name` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `status` int(0) NULL DEFAULT 1,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 21 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of technology
-- ----------------------------
INSERT INTO `technology` VALUES (0, '全部标签', 1, NULL, NULL);
INSERT INTO `technology` VALUES (1, 'JavaScript', 1, NULL, NULL);
INSERT INTO `technology` VALUES (2, 'Java', 1, NULL, NULL);
INSERT INTO `technology` VALUES (8, 'JSP', 1, NULL, NULL);
INSERT INTO `technology` VALUES (11, '框架', 1, NULL, NULL);
INSERT INTO `technology` VALUES (12, 'CSS', 1, NULL, NULL);
INSERT INTO `technology` VALUES (13, '新闻', 1, NULL, NULL);
INSERT INTO `technology` VALUES (14, '学习心得', 1, NULL, NULL);
INSERT INTO `technology` VALUES (15, '算法分析', 1, NULL, NULL);
INSERT INTO `technology` VALUES (16, '数据结构', 1, NULL, NULL);

-- ----------------------------
-- Table structure for user_info
-- ----------------------------
DROP TABLE IF EXISTS `user_info`;
CREATE TABLE `user_info`  (
  `id` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `school` int(0) NULL DEFAULT NULL,
  `major` int(0) NULL DEFAULT NULL,
  `domain` int(0) NULL DEFAULT NULL,
  `avatar` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `phone` varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `description` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `job` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `good` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `resume` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `home_page` varchar(128) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `school`(`school`) USING BTREE,
  INDEX `major`(`major`) USING BTREE,
  INDEX `domin`(`domain`) USING BTREE,
  CONSTRAINT `user_info_ibfk_1` FOREIGN KEY (`id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE RESTRICT,
  CONSTRAINT `user_info_ibfk_2` FOREIGN KEY (`school`) REFERENCES `school` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `user_info_ibfk_3` FOREIGN KEY (`major`) REFERENCES `major` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT,
  CONSTRAINT `user_info_ibfk_4` FOREIGN KEY (`domain`) REFERENCES `domain` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user_info
-- ----------------------------
INSERT INTO `user_info` VALUES ('0002250', 1, 1, 4, 'http://img.pzhuweb.cn/1561811342677', '13092816377', '我是指导教师。O(∩_∩)O哈哈~ 主页：http://scholar.acagrid.com/121336', NULL, '0', NULL, NULL, '2016-06-26 00:00:00', '2021-06-08 00:00:00');
INSERT INTO `user_info` VALUES ('1201837', 1, 1, 3, 'http://img.pzhuweb.cn/1595730340683', '18080797812', '数学与计算机学院张俊老师', NULL, '0', NULL, NULL, '2020-07-26 00:00:00', '2020-07-26 00:00:00');
INSERT INTO `user_info` VALUES ('201510803023', 1, 4, 1, 'http://img.pzhuweb.cn/1568216531679', '13698137097', '拾年桃花兮', NULL, '0', NULL, NULL, '2019-07-01 00:00:00', '2019-09-11 00:00:00');
INSERT INTO `user_info` VALUES ('201510803075', 1, 4, 2, 'http://img.pzhuweb.cn/1562249708105', '18228118249', '我是弱鸡+菜鸟', NULL, '0', NULL, NULL, '2016-09-01 00:00:00', '2019-07-04 00:00:00');
INSERT INTO `user_info` VALUES ('201510804002', 1, 1, 1, 'http://img.pzhuweb.cn/20200921184500', '19982021161', '我爸不是夏东海', NULL, '0', NULL, NULL, '2017-03-29 00:00:00', '2019-06-29 00:00:00');
INSERT INTO `user_info` VALUES ('201510804013', 1, 1, 1, 'http://img.pzhuweb.cn/20200921184547', '15082383283', '温江夏洛克', NULL, '0', NULL, NULL, '2017-09-01 00:00:00', '2019-07-01 00:00:00');
INSERT INTO `user_info` VALUES ('201510804021', 1, 1, 1, 'http://img.pzhuweb.cn/1591457108647', '15321246339', '一个平平无奇小透明', NULL, '0', NULL, NULL, '2020-06-06 00:00:00', '2020-06-06 00:00:00');
INSERT INTO `user_info` VALUES ('201610801039', 1, 2, 2, 'http://img.pzhuweb.cn/1561971088415', '18881204812', '已入Java后台坑', NULL, '0', NULL, NULL, '2019-07-01 00:00:00', '2019-07-01 00:00:00');
INSERT INTO `user_info` VALUES ('201610803025', 1, 4, 1, 'http://img.pzhuweb.cn/1568638989663', '18982393404', '我 一无所有', NULL, '0', NULL, NULL, '2019-09-10 00:00:00', '2020-02-09 00:00:00');
INSERT INTO `user_info` VALUES ('201610804024', 1, 1, 2, 'http://img.pzhuweb.cn/1561945945811', '18180303132', '咸鱼', NULL, '0', NULL, NULL, '2019-07-01 00:00:00', '2019-07-01 00:00:00');
INSERT INTO `user_info` VALUES ('201610804025', 1, 1, 1, 'http://img.pzhuweb.cn/1561972206849', '18090412062', '大家好，叫我宏哥', NULL, '0', NULL, NULL, '2017-11-27 00:00:00', '2019-07-08 00:00:00');
INSERT INTO `user_info` VALUES ('201610804032', 1, 1, 1, 'http://img.pzhuweb.cn/1589793942452', '13118310939', '前端小白', NULL, '0', NULL, NULL, '2018-02-26 00:00:00', '2020-05-18 00:00:00');
INSERT INTO `user_info` VALUES ('201610804034', 1, 1, 2, 'http://img.pzhuweb.cn/1562509763934', '18089592247', '我很高冷！', NULL, '0', NULL, NULL, '2019-07-07 00:00:00', '2019-07-07 00:00:00');
INSERT INTO `user_info` VALUES ('201610804094', 1, 1, 3, 'http://img.pzhuweb.cn/1561971927297', '14708200175', '不舍爱与自由', NULL, '0', NULL, NULL, '2019-07-01 00:00:00', '2019-07-01 00:00:00');
INSERT INTO `user_info` VALUES ('201610804118', 1, 1, 2, 'http://img.pzhuweb.cn/1568218887635', '18881203238', '换个头像咋就这么难呢', NULL, '0', NULL, NULL, '2019-07-01 00:00:00', '2019-09-11 00:00:00');
INSERT INTO `user_info` VALUES ('201710803017', 1, 1, 1, 'http://img.pzhuweb.cn/1581153861381', '18383047136', '你刚才可不是这么说的！', NULL, '0', NULL, NULL, '2018-09-01 00:00:00', '2020-02-08 00:00:00');
INSERT INTO `user_info` VALUES ('201710803072', 1, 1, 2, 'http://img.pzhuweb.cn/1580634296342', '13982351069', '我是一条小青龙。。。小青龙。。', NULL, '0', NULL, NULL, '2018-09-01 00:00:00', '2020-02-02 00:00:00');
INSERT INTO `user_info` VALUES ('201710803075', 1, 1, 2, 'http://img.pzhuweb.cn/1561972872748', '18181361980', '学习使你快乐，我们来快乐的学习吧', NULL, '0', NULL, NULL, '2018-09-01 00:00:00', '2019-07-01 00:00:00');
INSERT INTO `user_info` VALUES ('201710804035', 1, 1, 3, 'http://img.pzhuweb.cn/1621523318039', '15208262206', '国家网上冲浪一级运动员', NULL, '0', NULL, NULL, '2018-09-01 00:00:00', '2021-10-22 00:00:00');
INSERT INTO `user_info` VALUES ('201710804099', 1, 1, 3, 'http://img.pzhuweb.cn/1561973403477', '13158562236', '懒惰', NULL, '0', NULL, NULL, '2018-09-01 00:00:00', '2019-07-01 00:00:00');
INSERT INTO `user_info` VALUES ('201710804105', 1, 1, 1, 'http://img.pzhuweb.cn/1610335236262', '13698219068', '就只有我，换了新头像哈哈哈哈哈哈哈', NULL, '0', NULL, NULL, '2018-04-01 00:00:00', '2021-01-11 00:00:00');
INSERT INTO `user_info` VALUES ('201710804169', 1, 1, 1, 'http://img.pzhuweb.cn/1562300300504', '13558988128', '...', NULL, '0', NULL, NULL, '2018-09-01 00:00:00', '2019-07-05 00:00:00');
INSERT INTO `user_info` VALUES ('201710804172', 1, 1, 1, 'http://img.pzhuweb.cn/1623395585977', '15182161727', '走上前端这一条不归路，不能回头了', NULL, '0', NULL, NULL, '2018-04-01 00:00:00', '2021-06-11 00:00:00');
INSERT INTO `user_info` VALUES ('201810801026', 1, 2, 3, 'http://img.pzhuweb.cn/1561972287676', '18380906906', '人生苦短,我用python', NULL, '0', NULL, NULL, '2019-07-01 00:00:00', '2019-07-01 00:00:00');
INSERT INTO `user_info` VALUES ('201810801070', 1, 2, 3, 'http://img.pzhuweb.cn/1568216182417', '13183718803', '本人很帅', NULL, '0', NULL, NULL, '2019-07-01 00:00:00', '2019-09-11 00:00:00');
INSERT INTO `user_info` VALUES ('201810804034', 1, 1, 2, 'http://img.pzhuweb.cn/1568215456812', '13198613237', '在最美的年龄，做最好的决定', NULL, '0', NULL, NULL, '2019-07-08 00:00:00', '2023-01-09 11:42:10');
INSERT INTO `user_info` VALUES ('201810804059', 1, 1, 3, 'http://img.pzhuweb.cn/1567854276272', '15281221091', '认真学习', NULL, '0', NULL, NULL, '2019-09-07 00:00:00', '2019-09-07 00:00:00');
INSERT INTO `user_info` VALUES ('201810804072', 1, 1, 2, 'http://img.pzhuweb.cn/1603718416545', '15281220975', '既然选择了远方，便只顾风雨兼程。', NULL, '0', NULL, NULL, '2019-09-08 00:00:00', '2020-10-26 00:00:00');
INSERT INTO `user_info` VALUES ('201810804079', 1, 1, 2, 'http://img.pzhuweb.cn/1568201103347', '18683240356', '喜欢各种有趣的代码', NULL, '0', NULL, NULL, '2019-09-11 00:00:00', '2019-09-11 00:00:00');
INSERT INTO `user_info` VALUES ('201810804085', 1, 1, 2, 'http://img.pzhuweb.cn/1603718137047', '13198619896', '热爱学习！！', NULL, '0', NULL, NULL, '2019-07-01 00:00:00', '2020-10-26 00:00:00');
INSERT INTO `user_info` VALUES ('201810804088', 1, 1, 3, 'http://img.pzhuweb.cn/1568554819048', '18040445156', 'if（）；', NULL, '0', NULL, NULL, '2019-09-15 00:00:00', '2020-12-26 00:00:00');
INSERT INTO `user_info` VALUES ('201810804091', 1, 1, 3, 'http://img.pzhuweb.cn/1561988489496', '17736877587', '勤奋刻苦，努力学习', NULL, '0', NULL, NULL, '2019-07-01 00:00:00', '2019-07-01 00:00:00');
INSERT INTO `user_info` VALUES ('201810804093', 1, 1, 2, 'http://img.pzhuweb.cn/1567908089946', '18224238266', '沉迷学习', NULL, '0', NULL, NULL, '2019-09-08 00:00:00', '2019-09-08 00:00:00');
INSERT INTO `user_info` VALUES ('201810804099', 1, 1, 1, 'http://img.pzhuweb.cn/1590677458482', '14708271243', '做不了天才就做个疯子吧！', NULL, '0', NULL, NULL, '2020-05-28 00:00:00', '2020-05-28 00:00:00');
INSERT INTO `user_info` VALUES ('201810804115', 1, 1, 3, 'http://img.pzhuweb.cn/1567853674696', '13171669902', '无法描述', NULL, '0', NULL, NULL, '2019-09-07 00:00:00', '2019-09-07 00:00:00');
INSERT INTO `user_info` VALUES ('201810804121', 1, 1, 3, 'http://img.pzhuweb.cn/1561972254836', '13219431913', '幸运', NULL, '0', NULL, NULL, '2019-07-01 00:00:00', '2019-07-01 00:00:00');
INSERT INTO `user_info` VALUES ('201910803046', 1, 1, 2, 'http://img.pzhuweb.cn/1606728729197', '18383885775', '.。。', NULL, '0', NULL, NULL, '2020-10-26 00:00:00', '2020-11-30 00:00:00');
INSERT INTO `user_info` VALUES ('201910804033', 1, 1, 1, 'http://img.pzhuweb.cn/1615689122526', '13487629877', '突突突', NULL, '0', NULL, NULL, '2021-03-09 00:00:00', '2021-03-14 00:00:00');
INSERT INTO `user_info` VALUES ('202010801064', 1, 2, 2, 'http://img.pzhuweb.cn/1634382430324', '17381148608', '进厂打螺丝', NULL, '0', NULL, NULL, '2021-10-16 00:00:00', '2021-10-16 00:00:00');
INSERT INTO `user_info` VALUES ('202010803120', 1, 1, 2, 'http://img.pzhuweb.cn/1622174650274', '18982330473', 'good good study', NULL, '0', NULL, NULL, '2021-05-28 00:00:00', '2021-05-28 00:00:00');
INSERT INTO `user_info` VALUES ('202010804010', 1, 1, 2, 'http://img.pzhuweb.cn/20210517115431', '13981916942', '2020级软件工程小菜鸡', NULL, '0', NULL, NULL, '2021-03-22 00:00:00', '2021-03-22 00:00:00');
INSERT INTO `user_info` VALUES ('202010804013', 1, 1, 2, 'http://img.pzhuweb.cn/1646732212250', '18582562556', '寄言燕雀莫相啅，自有云霄万里高。', NULL, '0', NULL, NULL, '2021-03-09 00:00:00', '2021-11-11 00:00:00');
INSERT INTO `user_info` VALUES ('202010804018', 1, 1, 1, 'http://img.pzhuweb.cn/avatar', '18030621401', '我是好人', NULL, '0', NULL, NULL, '2021-06-08 00:00:00', '2021-06-08 00:00:00');
INSERT INTO `user_info` VALUES ('202010804026', 1, 1, 2, 'http://img.pzhuweb.cn/1634570999090', '19980348597', '我想进厂', NULL, '0', NULL, NULL, '2021-10-18 00:00:00', '2021-10-18 00:00:00');
INSERT INTO `user_info` VALUES ('202010804027', 1, 1, 1, 'http://img.pzhuweb.cn/test/2020108040271673582749182.jpeg', '15328986407', '不要因为没有掌声就丢掉自信', NULL, '0', NULL, NULL, '2021-06-08 00:00:00', '2023-01-13 04:05:49');

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `id` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NOT NULL,
  `password` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `name` varchar(16) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `email` varchar(32) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL,
  `status` int(0) NULL DEFAULT 0,
  `active` int(0) NULL DEFAULT 1,
  `created_at` datetime(0) NULL DEFAULT NULL,
  `updated_at` datetime(0) NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  INDEX `users_ibfk_1`(`status`) USING BTREE,
  CONSTRAINT `users_ibfk_1` FOREIGN KEY (`status`) REFERENCES `status` (`id`) ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_0900_ai_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('0000000', 'c4ca4238a0b923820dcc509a6f75849b', 'test', '', 1, 0, '2021-09-30 00:00:00', '2023-01-10 14:34:22');
INSERT INTO `users` VALUES ('0002250', '73ebad78ce6cd8fff461c08f45ca3c56', '兰老师', 'lanquanxiang@gmail.com', 3, 1, '2019-06-26 00:00:00', '2023-01-10 14:34:22');
INSERT INTO `users` VALUES ('1201837', '8136919ba3513505552469a1c1267245', '张老师', '1964126366@qq.com', 3, 1, '2019-06-26 00:00:00', '2023-01-10 14:34:22');
INSERT INTO `users` VALUES ('201510803023', '21fc401754c89c24824b0f86fed89aec', '黄莎莎', '1219518482@qq.com', -1, 0, '2019-06-30 00:00:00', '2023-01-14 03:55:51');
INSERT INTO `users` VALUES ('201510803075', '8136919ba3513505552469a1c1267245', '陈波', '2293230160@qq.com', 1, 1, '2017-06-29 00:00:00', '2023-01-12 07:58:58');
INSERT INTO `users` VALUES ('201510804002', 'd158596cbea1e45c0dfee5c29b409557', '刘星', '723741779@qq.com', 1, 1, '2017-06-29 00:00:00', '2023-01-14 03:55:40');
INSERT INTO `users` VALUES ('201510804013', '6d1ce7aa0a1d988dc96a2abcd187b45a', '许伟', '1183927842@qq.com', 1, 1, '2018-06-26 00:00:00', '2023-01-12 07:58:52');
INSERT INTO `users` VALUES ('201510804021', '8321f3e5de040e0a5430c0168edacaf6', '于宸镔', '1013674928@qq.com', 1, 1, '2018-06-06 00:00:00', '2023-01-12 07:58:52');
INSERT INTO `users` VALUES ('201610801026', '74539a0f508386906f3d047639cb5ca8', '王珂', '1370972643@qq.com', 1, 1, '2019-10-05 00:00:00', '2023-01-12 07:58:44');
INSERT INTO `users` VALUES ('201610801039', '8f05383531e937d3d234c96770b281c8', '雷虹', '1291498269@qq.com', 1, 1, '2019-07-01 00:00:00', '2023-01-12 07:58:44');
INSERT INTO `users` VALUES ('201610803025', '573d3654645c1e040565142913c7f763', '朱贤鑫', '1141453778@qq.com', 1, 1, '2019-09-09 00:00:00', '2023-01-10 14:33:51');
INSERT INTO `users` VALUES ('201610804024', '7de4b6decb124f266328045d117b82f5', '杨廷发', 'impassive@aliyun.com', 1, 1, '2019-07-01 00:00:00', '2023-01-10 14:34:22');
INSERT INTO `users` VALUES ('201610804025', '03186e3dd30536e60a6df29150e6d360', '任云宏', 'MrRenyunhong@aliyun.com', 1, 1, '2019-06-27 00:00:00', '2023-01-10 14:34:22');
INSERT INTO `users` VALUES ('201610804032', '57d2bf59f0181e9c1dde780d391f8da0', '罗文', 'luowenclay@gmail.com', 1, 1, '2019-03-18 00:00:00', '2023-01-10 14:34:22');
INSERT INTO `users` VALUES ('201610804034', 'b8b41c35259f3482a433eb5b5dcaafb0', '寇国钊', '874792970@qq.com', 1, 1, '2019-07-07 00:00:00', '2023-01-10 14:34:22');
INSERT INTO `users` VALUES ('201610804094', '1909a2d1424f36ac4155652ec230b6f4', '丁川芸', '14708200175@qq.com', -1, 1, '2019-07-01 00:00:00', '2023-01-12 07:57:26');
INSERT INTO `users` VALUES ('201610804118', '2d02414b9656dba029f997944bcd41de', '姚添译 ', 'yaotianyi@aliyun.com', 1, 1, '2019-07-01 00:00:00', '2023-01-10 14:34:08');
INSERT INTO `users` VALUES ('201710803017', 'c3da24f1e12de2140d3d71cd84ef9fa4', '曹林', '1261332956@qq.com', -1, 1, '2018-09-01 00:00:00', '2023-01-12 07:57:31');
INSERT INTO `users` VALUES ('201710803072', '0cbc643a2f735b58034914a9e420b388', '赵泽忠', '2669918628@qq.com', 1, 1, '2019-06-29 00:00:00', '2023-01-10 14:34:15');
INSERT INTO `users` VALUES ('201710803075', 'c8e0af5780a565945bff75ff61dacd36', '赵修俊', '2641418358@qq.com', 1, 1, '2019-06-29 00:00:00', '2023-01-10 14:34:08');
INSERT INTO `users` VALUES ('201710804035', '49db1c619448222560a9f4d9dd5d2b66', '徐岸', '1165083811@qq.com', 1, 1, '2018-09-01 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201710804099', '8223c04c86e5c301232a57cf9e021f4c', '刘杰', '2284687263@qq.com', 1, 0, '2018-09-01 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201710804105', '61e8a13c2a58967b5ec7acabe28dbec0', '苟雨晴12', '3319948815@qq.com', 1, 1, '2018-04-01 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201710804169', '1789359e203568ff77f4268e328e8ffd', '黄金树', '865852326@qq.com', 1, 0, '2018-09-01 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201710804172', '1bed1b764b86b5c1201ec43999c76586', '伍涛', '570143006@qq.com', 1, 1, '2018-04-01 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201810801026', 'bc5a197cce50c3fc99ff469dab78d847', '范江林', '1061469935@qq.com', 1, 0, '2019-07-01 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201810801070', '3e7ab0f0ba6a2db6deecd2f444adae5e', '杨新宇', '1822501342@qq.com', 1, 1, '2019-07-01 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201810804034', 'a66efe2adc5a7e8049134a30235336ed', '朱守平', '1581876085@qq.com', 1, 1, '2019-07-02 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201810804059', '329b9c45dbdd09c3701d3b7d33da3853', '罗芯汭', '1498383423@qq.com', 1, 0, '2019-09-07 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201810804072', 'd64a7eb4f0ddbe5694f0169504a32d6c', '刘世雄', '985135888@qq.com', 1, 1, '2019-09-07 00:00:00', '2023-01-10 14:17:24');
INSERT INTO `users` VALUES ('201810804079', '9c8701a9051ab405be4590851f4bc54b', '林荣杭', '2636090492@qq.com', 1, 1, '2019-09-07 00:00:00', '2023-01-10 14:17:29');
INSERT INTO `users` VALUES ('201810804085', '3e6e39064886f15c4fa6e3d577fe8b1d', '吴涛', '1579587634@qq.com', 1, 1, '2019-07-01 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201810804088', '64e942809f076727510312f8cc20c4c9', '方顺', '1941376395@qq.com', 1, 1, '2019-09-07 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201810804091', 'd07fae06154162ccf9c870a26fda9c0f', '雷凌', '1939930068@qq.com', 1, 0, '2019-07-01 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201810804093', 'd64a7eb4f0ddbe5694f0169504a32d6c', '彭治皓', '248852792@qq.com', 1, 1, '2019-09-07 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201810804099', '93df647a3fd306088d92929767a4a4ff', '陈治霖', '2324133088@qq.com', 1, 1, '2020-05-28 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201810804115', 'd64a7eb4f0ddbe5694f0169504a32d6c', '苗海阳', 'mhysun@vip.qq.com', 1, 1, '2019-09-07 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201810804121', '8b415b669c865bc4daddb691caaecea1', '吴雪', 'improve_x@aliyun.com', 1, 1, '2019-07-01 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201910803046', '2a608b3600774b1385a4f54c6af5f1ba', '许佳', '2504368446@qq.com', 1, 1, '2020-10-26 00:00:00', '2023-01-10 14:17:32');
INSERT INTO `users` VALUES ('201910804033', 'a30be8b03eddb97beceb540aaf23d3db', '胡森宇', '1341962137@qq.com', 1, 1, '2020-11-29 00:00:00', '2023-01-10 14:17:29');
INSERT INTO `users` VALUES ('202010801006', '584e0ec25e672d5ffe4c1bb9d2f21ac7', '李思卓', '1404316408@qq.com', 1, 1, '2021-09-17 00:00:00', '2023-01-10 14:17:14');
INSERT INTO `users` VALUES ('202010801064', '6803c09c0458f5119a89bf083fe480a6', '何正清', '1829024937@qq.com', 1, 1, '2021-10-16 00:00:00', '2023-01-10 14:17:14');
INSERT INTO `users` VALUES ('202010803120', '20916f23003fdb5fefdff5cba7df5d35', '吉克伍且', '3360485329@qq.com', 1, 1, '2021-05-28 00:00:00', '2023-01-10 14:17:21');
INSERT INTO `users` VALUES ('202010804010', 'cd920d269595c95d7fac92cf570a1680', '覃子豪', '2323575557@qq.com', 1, 1, '2021-03-15 00:00:00', '2023-01-10 14:17:24');
INSERT INTO `users` VALUES ('202010804013', 'c5a37426f724c2c1c16baf49a53fd3bb', '王凯琪', '409592048@qq.com', 1, 1, '2021-03-09 00:00:00', '2022-03-05 00:00:00');
INSERT INTO `users` VALUES ('202010804018', 'db8533c04d67269027459826d6cd9c5f', '张武博', '1246394085@qq.com', 1, 1, '2021-06-08 00:00:00', '2021-06-08 00:00:00');
INSERT INTO `users` VALUES ('202010804026', '3d0d7bf7b0269c12666ed42794cb2c95', '覃茏伟', '2245961287@qq.com', 1, 1, '2021-09-23 00:00:00', '2021-10-16 00:00:00');
INSERT INTO `users` VALUES ('202010804027', '925ebf928f036da3cd683e1450af364e', '张凡', '468369392@qq.com', 1, 1, '2021-06-08 00:00:00', '2023-01-13 02:13:00');
INSERT INTO `users` VALUES ('admin', '8136919ba3513505552469a1c1267245', '兰全祥', '15123213773@qq.com', 2, 1, '2019-06-26 00:00:00', '2019-06-26 00:00:00');

SET FOREIGN_KEY_CHECKS = 1;
